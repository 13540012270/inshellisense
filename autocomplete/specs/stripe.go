// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.
//
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

package specs

import (
	"github.com/microsoft/clac/autocomplete/model"
)

func init() {
	Specs["stripe"] = model.Subcommand{
		Name:        []string{"stripe"},
		Description: `CLI interface for Stripe.com`,
		Options: []model.Option{{
			Name:        []string{"--api-key"},
			Description: `Sets your API key to use for the command`,
			Args: []model.Arg{{
				Name: "stripe api key",
			}},
		}, {
			Name:        []string{"--color"},
			Description: `Enables or disables color output`,
			Args: []model.Arg{{
				Name:        "setting",
				Suggestions: []model.Suggestion{{Name: []string{`on`}}, {Name: []string{`off`}}, {Name: []string{`auto`}}},
			}},
		}, {
			Name:        []string{"--config"},
			Description: `Sets your config file`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "config filepath",
			}},
		}, {
			Name:        []string{"--device-name"},
			Description: `Runs command on behlaf of another device`,
			Args: []model.Arg{{
				Name: "name",
			}},
		}, {
			Name:        []string{"-h", "--help"},
			Description: `Provides the help documentation for commands, flags, and arguments`,
		}, {
			Name:        []string{"--log-level"},
			Description: `Set the level of detail for log messages`,
			Args: []model.Arg{{
				Name:        "level",
				Suggestions: []model.Suggestion{{Name: []string{`info`}}, {Name: []string{`debug`}}, {Name: []string{`warn`}}, {Name: []string{`error`}}},
			}},
		}, {
			Name:        []string{"-v", "--version"},
			Description: `Prints the version of the Stripe CLI`,
		}},
		Subcommands: []model.Subcommand{{
			Name:        []string{"login"},
			Description: `Connects to your Stripe account`,
			Args: []model.Arg{{
				Name:       "tool | tool@version",
				IsVariadic: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-i", "--interactive"},
				Description: `Manually provide an API key if you can't access a browser`,
			}, {
				Name:        []string{"--api-key"},
				Description: `Sets your API key to use for the command`,
				Args: []model.Arg{{
					Name: "stripe api key",
				}},
			}, {
				Name:        []string{"--color"},
				Description: `Enables or disables color output`,
				Args: []model.Arg{{
					Name:        "setting",
					Suggestions: []model.Suggestion{{Name: []string{`on`}}, {Name: []string{`off`}}, {Name: []string{`auto`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Sets your config file`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "config filepath",
				}},
			}, {
				Name:        []string{"--device-name"},
				Description: `Runs command on behlaf of another device`,
				Args: []model.Arg{{
					Name: "name",
				}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Provides the help documentation for commands, flags, and arguments`,
			}, {
				Name:        []string{"--log-level"},
				Description: `Set the level of detail for log messages`,
				Args: []model.Arg{{
					Name:        "level",
					Suggestions: []model.Suggestion{{Name: []string{`info`}}, {Name: []string{`debug`}}, {Name: []string{`warn`}}, {Name: []string{`error`}}},
				}},
			}, {
				Name:        []string{"-v", "--version"},
				Description: `Prints the version of the Stripe CLI`,
			}},
		}, {
			Name:        []string{"config"},
			Description: `Installs a tool in your toolchain`,
			Options: []model.Option{{
				Name:        []string{"-e", "--edit"},
				Description: `Opens the configuration file in your default editor`,
			}, {
				Name:        []string{"--list"},
				Description: `List all configured options`,
			}, {
				Name:        []string{"--set"},
				Description: `Set a value for the specified configuration option`,
				Args: []model.Arg{{
					Name:        "option",
					Description: `Config option`,
				}, {
					Name:        "value",
					Description: `Value for config option`,
				}},
			}, {
				Name:        []string{"--unset"},
				Description: `Remove a key-value pair from the config file`,
				Args: []model.Arg{{
					Name:        "option",
					Description: `Config option`,
				}},
			}, {
				Name:        []string{"--api-key"},
				Description: `Sets your API key to use for the command`,
				Args: []model.Arg{{
					Name: "stripe api key",
				}},
			}, {
				Name:        []string{"--color"},
				Description: `Enables or disables color output`,
				Args: []model.Arg{{
					Name:        "setting",
					Suggestions: []model.Suggestion{{Name: []string{`on`}}, {Name: []string{`off`}}, {Name: []string{`auto`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Sets your config file`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "config filepath",
				}},
			}, {
				Name:        []string{"--device-name"},
				Description: `Runs command on behlaf of another device`,
				Args: []model.Arg{{
					Name: "name",
				}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Provides the help documentation for commands, flags, and arguments`,
			}, {
				Name:        []string{"--log-level"},
				Description: `Set the level of detail for log messages`,
				Args: []model.Arg{{
					Name:        "level",
					Suggestions: []model.Suggestion{{Name: []string{`info`}}, {Name: []string{`debug`}}, {Name: []string{`warn`}}, {Name: []string{`error`}}},
				}},
			}, {
				Name:        []string{"-v", "--version"},
				Description: `Prints the version of the Stripe CLI`,
			}},
		}, {
			Name:        []string{"completion"},
			Description: `Generates shell autocompletions`,
			Options: []model.Option{{
				Name:        []string{"--shell"},
				Description: `Opens the configuration file in your default editor`,
				Args: []model.Arg{{
					Name:        "platform",
					Description: `The shell to generate completion commands for`,
					Suggestions: []model.Suggestion{{Name: []string{`zsh`}}, {Name: []string{`bash`}}},
				}},
			}, {
				Name:        []string{"--api-key"},
				Description: `Sets your API key to use for the command`,
				Args: []model.Arg{{
					Name: "stripe api key",
				}},
			}, {
				Name:        []string{"--color"},
				Description: `Enables or disables color output`,
				Args: []model.Arg{{
					Name:        "setting",
					Suggestions: []model.Suggestion{{Name: []string{`on`}}, {Name: []string{`off`}}, {Name: []string{`auto`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Sets your config file`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "config filepath",
				}},
			}, {
				Name:        []string{"--device-name"},
				Description: `Runs command on behlaf of another device`,
				Args: []model.Arg{{
					Name: "name",
				}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Provides the help documentation for commands, flags, and arguments`,
			}, {
				Name:        []string{"--log-level"},
				Description: `Set the level of detail for log messages`,
				Args: []model.Arg{{
					Name:        "level",
					Suggestions: []model.Suggestion{{Name: []string{`info`}}, {Name: []string{`debug`}}, {Name: []string{`warn`}}, {Name: []string{`error`}}},
				}},
			}, {
				Name:        []string{"-v", "--version"},
				Description: `Prints the version of the Stripe CLI`,
			}},
		}, {
			Name:        []string{"logs tail"},
			Description: `Logs from your Stripe requests`,
			Options: []model.Option{{
				Name:        []string{"--filter-account"},
				Description: `Filters request logs by the source and destination account`,
				Args: []model.Arg{{
					Name: "values",
					Suggestions: []model.Suggestion{{
						Name:        []string{`connect_in`},
						Description: `Incoming Connect requests`,
					}, {
						Name:        []string{`connect_out`},
						Description: `Outgoing Connect requests`,
					}, {
						Name:        []string{`self`},
						Description: `Non-Connect requests`,
					}},
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"--filter-http-method"},
				Description: `Filters request logs by HTTP method`,
				Args: []model.Arg{{
					Name: "values",
					Suggestions: []model.Suggestion{{
						Name:        []string{`GET`},
						Description: `HTTP GET requests`,
					}, {
						Name:        []string{`POST`},
						Description: `HTTP POST requests`,
					}, {
						Name:        []string{`DELETE`},
						Description: `HTTP DELETE requests`,
					}},
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"--filter-ip-address"},
				Description: `Filters request logs by IP address`,
				Args: []model.Arg{{
					Name:       "values",
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"--filter-request-path"},
				Description: `Filters request logs that directly match any Stripe path`,
				Args: []model.Arg{{
					Name:       "values",
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"--filter-request-status"},
				Description: `Filters request logs by the response status`,
				Args: []model.Arg{{
					Name: "values",
					Suggestions: []model.Suggestion{{
						Name:        []string{`SUCCEEDED`},
						Description: `Requests that succeeded`,
					}, {
						Name:        []string{`FAILED`},
						Description: `Requests that failed`,
					}},
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"--filter-source"},
				Description: `Filters request logs by the source of each request`,
				Args: []model.Arg{{
					Name: "values",
					Suggestions: []model.Suggestion{{
						Name:        []string{`API`},
						Description: `Requests created with the Stripe API`,
					}, {
						Name:        []string{`DASHBOARD`},
						Description: `Requests created from the Dashboard`,
					}},
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"--filter-status-code"},
				Description: `Filters request logs by HTTP status code`,
				Args: []model.Arg{{
					Name:       "values",
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"--filter-status-code-type"},
				Description: `Filters request logs by the type of HTTP status code`,
				Args: []model.Arg{{
					Name: "values",
					Suggestions: []model.Suggestion{{
						Name:        []string{`2XX`},
						Description: `HTTP 2xx status codes`,
					}, {
						Name:        []string{`4XX`},
						Description: `HTTP 4xx status codes`,
					}, {
						Name:        []string{`5XX`},
						Description: `HTTP 5xx status codes`,
					}},
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"--format"},
				Description: `Specify the output format for request logs`,
				Args: []model.Arg{{
					Name: "value",
					Suggestions: []model.Suggestion{{
						Name:        []string{`JSON`},
						Description: `Output logs in JSON format`,
					}},
				}},
			}, {
				Name:        []string{"--api-key"},
				Description: `Sets your API key to use for the command`,
				Args: []model.Arg{{
					Name: "stripe api key",
				}},
			}, {
				Name:        []string{"--color"},
				Description: `Enables or disables color output`,
				Args: []model.Arg{{
					Name:        "setting",
					Suggestions: []model.Suggestion{{Name: []string{`on`}}, {Name: []string{`off`}}, {Name: []string{`auto`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Sets your config file`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "config filepath",
				}},
			}, {
				Name:        []string{"--device-name"},
				Description: `Runs command on behlaf of another device`,
				Args: []model.Arg{{
					Name: "name",
				}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Provides the help documentation for commands, flags, and arguments`,
			}, {
				Name:        []string{"--log-level"},
				Description: `Set the level of detail for log messages`,
				Args: []model.Arg{{
					Name:        "level",
					Suggestions: []model.Suggestion{{Name: []string{`info`}}, {Name: []string{`debug`}}, {Name: []string{`warn`}}, {Name: []string{`error`}}},
				}},
			}, {
				Name:        []string{"-v", "--version"},
				Description: `Prints the version of the Stripe CLI`,
			}},
		}, {
			Name:        []string{"status"},
			Description: `Displays Stripe's system status and service availability`,
			Options: []model.Option{{
				Name:        []string{"--format"},
				Description: `Formats used to display status`,
				Args: []model.Arg{{
					Name: "value",
					Suggestions: []model.Suggestion{{
						Name:        []string{`default`},
						Description: `Render the status using standard output`,
					}, {
						Name:        []string{`JSON`},
						Description: `Render status as JSON`,
					}},
				}},
			}, {
				Name:        []string{"--hide-spinner"},
				Description: `Hides the loading spinner when polling`,
			}, {
				Name:        []string{"--poll"},
				Description: `Keeps polling for status updates`,
			}, {
				Name:        []string{"--poll-rate"},
				Description: `The number of seconds (min 5) to wait between status updates`,
				Args: []model.Arg{{
					Name:        "seconds",
					Description: `Min: 5, default: 60`,
				}},
			}, {
				Name:        []string{"--verbose"},
				Description: `Shows the status of all Stripe systems`,
			}, {
				Name:        []string{"--api-key"},
				Description: `Sets your API key to use for the command`,
				Args: []model.Arg{{
					Name: "stripe api key",
				}},
			}, {
				Name:        []string{"--color"},
				Description: `Enables or disables color output`,
				Args: []model.Arg{{
					Name:        "setting",
					Suggestions: []model.Suggestion{{Name: []string{`on`}}, {Name: []string{`off`}}, {Name: []string{`auto`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Sets your config file`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "config filepath",
				}},
			}, {
				Name:        []string{"--device-name"},
				Description: `Runs command on behlaf of another device`,
				Args: []model.Arg{{
					Name: "name",
				}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Provides the help documentation for commands, flags, and arguments`,
			}, {
				Name:        []string{"--log-level"},
				Description: `Set the level of detail for log messages`,
				Args: []model.Arg{{
					Name:        "level",
					Suggestions: []model.Suggestion{{Name: []string{`info`}}, {Name: []string{`debug`}}, {Name: []string{`warn`}}, {Name: []string{`error`}}},
				}},
			}, {
				Name:        []string{"-v", "--version"},
				Description: `Prints the version of the Stripe CLI`,
			}},
		}, {
			Name:        []string{"open"},
			Description: `Displays Stripe's system status and service availability`,
			Args: []model.Arg{{
				Name:        "shortcut",
				Suggestions: []model.Suggestion{{Name: []string{`api`}}, {Name: []string{`apiref`}}, {Name: []string{`cliref`}}, {Name: []string{`dashboard`}}, {Name: []string{`dashboard/apikeys`}}, {Name: []string{`dashboard/atlas`}}, {Name: []string{`dashboard/balance`}}, {Name: []string{`dashboard/billing`}}, {Name: []string{`dashboard/connect`}}, {Name: []string{`dashboard/connect/accounts`}}, {Name: []string{`dashboard/connect/collected`}}, {Name: []string{`dashboard/connect/transfers`}}, {Name: []string{`dashboard/coupons`}}, {Name: []string{`dashboard/customers`}}, {Name: []string{`dashboard/developers`}}, {Name: []string{`dashboard/disputes`}}, {Name: []string{`dashboard/events`}}, {Name: []string{`dashboard/invoices`}}, {Name: []string{`dashboard/logs`}}, {Name: []string{`dashboard/orders`}}, {Name: []string{`dashboard/orders/products`}}, {Name: []string{`dashboard/payments`}}, {Name: []string{`dashboard/radar`}}, {Name: []string{`dashboard/radar/list`}}, {Name: []string{`dashboard/radar/reviews`}}, {Name: []string{`dashboard/radar/rules`}}, {Name: []string{`dashboard/settings`}}, {Name: []string{`dashboard/subscriptions`}}, {Name: []string{`dashboard/products`}}, {Name: []string{`dashboard/tax`}}, {Name: []string{`dashboard/terminal`}}, {Name: []string{`dashbaord/terminal/hardware/orders`}}, {Name: []string{`dashboard/terminal/locations`}}, {Name: []string{`dashboard/topups`}}, {Name: []string{`dashboard/transactions`}}, {Name: []string{`dashboard/webhooks`}}, {Name: []string{`docs`}}},
			}},
			Options: []model.Option{{
				Name:        []string{"--list"},
				Description: `Lists all supported shortcuts`,
			}, {
				Name:        []string{"--live"},
				Description: `Opens the Dashboard for your live integrations`,
			}, {
				Name:        []string{"--api-key"},
				Description: `Sets your API key to use for the command`,
				Args: []model.Arg{{
					Name: "stripe api key",
				}},
			}, {
				Name:        []string{"--color"},
				Description: `Enables or disables color output`,
				Args: []model.Arg{{
					Name:        "setting",
					Suggestions: []model.Suggestion{{Name: []string{`on`}}, {Name: []string{`off`}}, {Name: []string{`auto`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Sets your config file`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "config filepath",
				}},
			}, {
				Name:        []string{"--device-name"},
				Description: `Runs command on behlaf of another device`,
				Args: []model.Arg{{
					Name: "name",
				}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Provides the help documentation for commands, flags, and arguments`,
			}, {
				Name:        []string{"--log-level"},
				Description: `Set the level of detail for log messages`,
				Args: []model.Arg{{
					Name:        "level",
					Suggestions: []model.Suggestion{{Name: []string{`info`}}, {Name: []string{`debug`}}, {Name: []string{`warn`}}, {Name: []string{`error`}}},
				}},
			}, {
				Name:        []string{"-v", "--version"},
				Description: `Prints the version of the Stripe CLI`,
			}},
		}, {
			Name:        []string{"listen"},
			Description: `Receives webhook events from Stripe locally`,
			Options: []model.Option{{
				Name:        []string{"--connect-headers"},
				Description: `A comma-separated list of custom HTTP headers to any connected accounts`,
				Args: []model.Arg{{
					Name:        "values",
					Description: `Key1:Value1, Key2:Value2`,
					IsVariadic:  true,
				}},
			}, {
				Name:        []string{"-e", "--events"},
				Description: `A comma-separated list of which events to listen for`,
				Args: []model.Arg{{
					Name: "events types",
					Suggestions: []model.Suggestion{{
						Name:        []string{`account.updated`},
						Description: `Occurs whenever an account status or property has changed`,
					}, {
						Name:        []string{`account.application.authorized`},
						Description: `Occurs whenever a user authorizes an application. Sent to the related application only`,
					}, {
						Name:        []string{`account.application.deauthorized`},
						Description: `Occurs whenever a user deauthorizes an application. Sent to the related application only`,
					}, {
						Name:        []string{`account.external_account.created`},
						Description: `Occurs whenever an external account is created`,
					}, {
						Name:        []string{`account.external_account.deleted`},
						Description: `Occurs whenever an external account is deleted`,
					}, {
						Name:        []string{`account.external_account.updated`},
						Description: `Occurs whenever an external account is updated`,
					}, {
						Name:        []string{`application_fee.created`},
						Description: `Occurs whenever an application fee is created on a charge`,
					}, {
						Name:        []string{`application_fee.refunded`},
						Description: `Occurs whenever an application fee is refunded, whether from refunding a charge or from refunding the application fee directly. This includes partial refunds`,
					}, {
						Name:        []string{`application_fee.refund.updated`},
						Description: `Occurs whenever an application fee refund is updated`,
					}, {
						Name:        []string{`billing_portal.configuration.created`},
						Description: `Occurs whenever a portal configuration is created`,
					}, {
						Name:        []string{`billing_portal.configuration.updated`},
						Description: `Occurs whenever a portal configuration is updated`,
					}, {
						Name:        []string{`capability.updated`},
						Description: `Occurs whenever a capability has new requirements or a new status`,
					}, {
						Name:        []string{`charge.expired`},
						Description: `Occurs whenever an uncaptured charge expires`,
					}, {
						Name:        []string{`charge.pending`},
						Description: `Occurs whenever a pending charge is created`,
					}, {
						Name:        []string{`charge.updated`},
						Description: `Occurs whenever a charge description or metadata is updated`,
					}, {
						Name:        []string{`charge.dispute.closed`},
						Description: `Occurs when a dispute is closed and the dispute status changes to lost, warning_closed, or won`,
					}, {
						Name:        []string{`charge.dispute.funds_reinstated`},
						Description: `Occurs when funds are reinstated to your account after a dispute is closed. This includes partially refunded payments`,
					}, {
						Name:        []string{`charge.dispute.funds_withdrawn`},
						Description: `Occurs when funds are removed from your account due to a dispute`,
					}, {
						Name:        []string{`charge.dispute.updated`},
						Description: `Occurs when the dispute is updated (usually with evidence)`,
					}, {
						Name:        []string{`charge.refund.updated`},
						Description: `Occurs whenever a refund is updated, on selected payment methods`,
					}, {
						Name:        []string{`checkout.session.async_payment_failed`},
						Description: `Occurs when a payment intent using a delayed payment method fails`,
					}, {
						Name:        []string{`checkout.session.async_payment_succeeded`},
						Description: `Occurs when a payment intent using a delayed payment method finally succeeds`,
					}, {
						Name:        []string{`coupon.created`},
						Description: `Occurs whenever a coupon is created`,
					}, {
						Name:        []string{`coupon.deleted`},
						Description: `Occurs whenever a coupon is deleted`,
					}, {
						Name:        []string{`coupon.updated`},
						Description: `Occurs whenever a coupon is updated`,
					}, {
						Name:        []string{`credit_note.created`},
						Description: `Occurs whenever a credit note is created`,
					}, {
						Name:        []string{`credit_note.updated`},
						Description: `Occurs whenever a credit note is updated`,
					}, {
						Name:        []string{`credit_note.voided`},
						Description: `Occurs whenever a credit note is voided`,
					}, {
						Name:        []string{`customer.discount.created`},
						Description: `Occurs whenever a coupon is attached to a customer`,
					}, {
						Name:        []string{`customer.discount.deleted`},
						Description: `Occurs whenever a coupon is removed from a customer`,
					}, {
						Name:        []string{`customer.discount.updated`},
						Description: `Occurs whenever a customer is switched from one coupon to another`,
					}, {
						Name:        []string{`customer.source.deleted`},
						Description: `Occurs whenever a source is removed from a customer`,
					}, {
						Name:        []string{`customer.source.expiring`},
						Description: `Occurs whenever a card or source will expire at the end of the month`,
					}, {
						Name:        []string{`customer.subscription.pending_update_applied`},
						Description: `Occurs whenever a customer's subscription's pending update is applied, and the subscription is updated`,
					}, {
						Name:        []string{`customer.subscription.pending_update_expired`},
						Description: `Occurs whenever a customer's subscription's pending update expires before the related invoice is paid`,
					}, {
						Name:        []string{`customer.subscription.trial_will_end`},
						Description: `Occurs three days before a subscription's trial period is scheduled to end, or when a trial is ended immediately (using trial_end=now)`,
					}, {
						Name:        []string{`customer.tax_id.created`},
						Description: `Occurs whenever a tax ID is created for a customer`,
					}, {
						Name:        []string{`customer.tax_id.deleted`},
						Description: `Occurs whenever a tax ID is deleted from a customer`,
					}, {
						Name:        []string{`customer.tax_id.updated`},
						Description: `Occurs whenever a customer's tax ID is updated`,
					}, {
						Name:        []string{`file.created`},
						Description: `Occurs whenever a new Stripe-generated file is available for your account`,
					}, {
						Name:        []string{`identity.verification_session.canceled`},
						Description: `Occurs whenever a VerificationSession is canceled`,
					}, {
						Name:        []string{`identity.verification_session.created`},
						Description: `Occurs whenever a VerificationSession is created`,
					}, {
						Name:        []string{`identity.verification_session.processing`},
						Description: `Occurs whenever a VerificationSession transitions to processing`,
					}, {
						Name:        []string{`identity.verification_session.redacted`},
						Description: `Occurs whenever a VerificationSession is redacted. You must create a webhook endpoint which explicitly subscribes to this event type to access it. Webhook endpoints which subscribe to all events will not include this event type`,
					}, {
						Name:        []string{`identity.verification_session.requires_input`},
						Description: `Occurs whenever a VerificationSession transitions to require user input`,
					}, {
						Name:        []string{`identity.verification_session.verified`},
						Description: `Occurs whenever a VerificationSession transitions to verified`,
					}, {
						Name:        []string{`invoice.deleted`},
						Description: `Occurs whenever a draft invoice is deleted`,
					}, {
						Name:        []string{`invoice.finalization_failed`},
						Description: `Occurs whenever a draft invoice cannot be finalized. See the invoice’s last finalization error for details`,
					}, {
						Name:        []string{`invoice.marked_uncollectible`},
						Description: `Occurs whenever an invoice is marked uncollectible`,
					}, {
						Name:        []string{`invoice.paid`},
						Description: `Occurs whenever an invoice payment attempt succeeds or an invoice is marked as paid out-of-band`,
					}, {
						Name:        []string{`invoice.payment_action_required`},
						Description: `Occurs whenever an invoice payment attempt requires further user action to complete`,
					}, {
						Name:        []string{`invoice.sent`},
						Description: `Occurs whenever an invoice email is sent out`,
					}, {
						Name:        []string{`invoice.upcoming`},
						Description: `Occurs X number of days before a subscription is scheduled to create an invoice that is automatically charged—where X is determined by your subscriptions settings. Note: The received Invoice object will not have an invoice ID`,
					}, {
						Name:        []string{`invoice.voided`},
						Description: `Occurs whenever an invoice is voided`,
					}, {
						Name:        []string{`invoiceitem.created`},
						Description: `Occurs whenever an invoice item is created`,
					}, {
						Name:        []string{`invoiceitem.deleted`},
						Description: `Occurs whenever an invoice item is deleted`,
					}, {
						Name:        []string{`invoiceitem.updated`},
						Description: `Occurs whenever an invoice item is updated`,
					}, {
						Name:        []string{`issuing_authorization.created`},
						Description: `Occurs whenever an authorization is created`,
					}, {
						Name:        []string{`issuing_authorization.updated`},
						Description: `Occurs whenever an authorization is updated`,
					}, {
						Name:        []string{`issuing_card.updated`},
						Description: `Occurs whenever a card is updated`,
					}, {
						Name:        []string{`issuing_cardholder.updated`},
						Description: `Occurs whenever a cardholder is updated`,
					}, {
						Name:        []string{`issuing_dispute.closed`},
						Description: `Occurs whenever a dispute is won, lost or expired`,
					}, {
						Name:        []string{`issuing_dispute.created`},
						Description: `Occurs whenever a dispute is created`,
					}, {
						Name:        []string{`issuing_dispute.funds_reinstated`},
						Description: `Occurs whenever funds are reinstated to your account for an Issuing dispute`,
					}, {
						Name:        []string{`issuing_dispute.submitted`},
						Description: `Occurs whenever a dispute is submitted`,
					}, {
						Name:        []string{`issuing_dispute.updated`},
						Description: `Occurs whenever a dispute is updated`,
					}, {
						Name:        []string{`issuing_transaction.created`},
						Description: `Occurs whenever an issuing transaction is created`,
					}, {
						Name:        []string{`issuing_transaction.updated`},
						Description: `Occurs whenever an issuing transaction is updated`,
					}, {
						Name:        []string{`mandate.updated`},
						Description: `Occurs whenever a Mandate is updated`,
					}, {
						Name:        []string{`order.created`},
						Description: `Occurs whenever an order is created`,
					}, {
						Name:        []string{`order.payment_failed`},
						Description: `Occurs whenever an order payment attempt fails`,
					}, {
						Name:        []string{`order.payment_succeeded`},
						Description: `Occurs whenever an order payment attempt succeeds`,
					}, {
						Name:        []string{`order.updated`},
						Description: `Occurs whenever an order is updated`,
					}, {
						Name:        []string{`order_return.created`},
						Description: `Occurs whenever an order return is created`,
					}, {
						Name:        []string{`payment_intent.processing`},
						Description: `Occurs when a PaymentIntent has started processing`,
					}, {
						Name:        []string{`payment_intent.requires_action`},
						Description: `Occurs when a PaymentIntent transitions to requires_action state`,
					}, {
						Name:        []string{`payment_method.automatically_updated`},
						Description: `Occurs whenever a payment method's details are automatically updated by the network`,
					}, {
						Name:        []string{`payment_method.detached`},
						Description: `Occurs whenever a payment method is detached from a customer`,
					}, {
						Name:        []string{`payment_method.updated`},
						Description: `Occurs whenever a payment method is updated via the PaymentMethod update API`,
					}, {
						Name:        []string{`payout.canceled`},
						Description: `Occurs whenever a payout is canceled`,
					}, {
						Name:        []string{`payout.created`},
						Description: `Occurs whenever a payout is created`,
					}, {
						Name:        []string{`payout.failed`},
						Description: `Occurs whenever a payout attempt fails`,
					}, {
						Name:        []string{`payout.paid`},
						Description: `Occurs whenever a payout is expected to be available in the destination account. If the payout fails, a payout.failed notification is also sent, at a later time`,
					}, {
						Name:        []string{`payout.updated`},
						Description: `Occurs whenever a payout is updated`,
					}, {
						Name:        []string{`person.created`},
						Description: `Occurs whenever a person associated with an account is created`,
					}, {
						Name:        []string{`person.deleted`},
						Description: `Occurs whenever a person associated with an account is deleted`,
					}, {
						Name:        []string{`person.updated`},
						Description: `Occurs whenever a person associated with an account is updated`,
					}, {
						Name:        []string{`plan.created`},
						Description: `Occurs whenever a plan is created`,
					}, {
						Name:        []string{`plan.deleted`},
						Description: `Occurs whenever a plan is deleted`,
					}, {
						Name:        []string{`plan.updated`},
						Description: `Occurs whenever a plan is updated`,
					}, {
						Name:        []string{`price.created`},
						Description: `Occurs whenever a price is created`,
					}, {
						Name:        []string{`price.deleted`},
						Description: `Occurs whenever a price is deleted`,
					}, {
						Name:        []string{`price.updated`},
						Description: `Occurs whenever a price is updated`,
					}, {
						Name:        []string{`product.created`},
						Description: `Occurs whenever a product is created`,
					}, {
						Name:        []string{`product.deleted`},
						Description: `Occurs whenever a product is deleted`,
					}, {
						Name:        []string{`product.updated`},
						Description: `Occurs whenever a product is updated`,
					}, {
						Name:        []string{`promotion_code.created`},
						Description: `Occurs whenever a promotion code is created`,
					}, {
						Name:        []string{`promotion_code.updated`},
						Description: `Occurs whenever a promotion code is updated`,
					}, {
						Name:        []string{`radar.early_fraud_warning.created`},
						Description: `Occurs whenever an early fraud warning is created`,
					}, {
						Name:        []string{`radar.early_fraud_warning.updated`},
						Description: `Occurs whenever an early fraud warning is updated`,
					}, {
						Name:        []string{`recipient.created`},
						Description: `Occurs whenever a recipient is created`,
					}, {
						Name:        []string{`recipient.deleted`},
						Description: `Occurs whenever a recipient is deleted`,
					}, {
						Name:        []string{`recipient.updated`},
						Description: `Occurs whenever a recipient is updated`,
					}, {
						Name:        []string{`reporting.report_run.failed`},
						Description: `Occurs whenever a requested ReportRun failed to complete`,
					}, {
						Name:        []string{`reporting.report_run.succeeded`},
						Description: `Occurs whenever a requested ReportRun completed successfully`,
					}, {
						Name:        []string{`reporting.report_type.updated`},
						Description: `Occurs whenever a ReportType is updated (typically to indicate that a new day's data has come available). You must create a webhook endpoint which explicitly subscribes to this event type to access it. Webhook endpoints which subscribe to all events will not include this event type`,
					}, {
						Name:        []string{`review.closed`},
						Description: `Occurs whenever a review is closed. The review's reason field indicates why: approved, disputed, refunded, or refunded_as_fraud`,
					}, {
						Name:        []string{`review.opened`},
						Description: `Occurs whenever a review is opened`,
					}, {
						Name:        []string{`setup_intent.requires_action`},
						Description: `Occurs when a SetupIntent is in requires_action state`,
					}, {
						Name:        []string{`sigma.scheduled_query_run.created`},
						Description: `Occurs whenever a Sigma scheduled query run finishes`,
					}, {
						Name:        []string{`sku.created`},
						Description: `Occurs whenever a SKU is created`,
					}, {
						Name:        []string{`sku.deleted`},
						Description: `Occurs whenever a SKU is deleted`,
					}, {
						Name:        []string{`sku.updated`},
						Description: `Occurs whenever a SKU is updated`,
					}, {
						Name:        []string{`source.canceled`},
						Description: `Occurs whenever a source is canceled`,
					}, {
						Name:        []string{`source.chargeable`},
						Description: `Occurs whenever a source transitions to chargeable`,
					}, {
						Name:        []string{`source.failed`},
						Description: `Occurs whenever a source fails`,
					}, {
						Name:        []string{`source.mandate_notification`},
						Description: `Occurs whenever a source mandate notification method is set to manual`,
					}, {
						Name:        []string{`source.refund_attributes_required`},
						Description: `Occurs whenever the refund attributes are required on a receiver source to process a refund or a mispayment`,
					}, {
						Name:        []string{`source.transaction.created`},
						Description: `Occurs whenever a source transaction is created`,
					}, {
						Name:        []string{`source.transaction.updated`},
						Description: `Occurs whenever a source transaction is updated`,
					}, {
						Name:        []string{`subscription_schedule.aborted`},
						Description: `Occurs whenever a subscription schedule is canceled due to the underlying subscription being canceled because of delinquency`,
					}, {
						Name:        []string{`subscription_schedule.canceled`},
						Description: `Occurs whenever a subscription schedule is canceled`,
					}, {
						Name:        []string{`subscription_schedule.completed`},
						Description: `Occurs whenever a new subscription schedule is completed`,
					}, {
						Name:        []string{`subscription_schedule.created`},
						Description: `Occurs whenever a new subscription schedule is created`,
					}, {
						Name:        []string{`subscription_schedule.expiring`},
						Description: `Occurs 7 days before a subscription schedule will expire`,
					}, {
						Name:        []string{`subscription_schedule.released`},
						Description: `Occurs whenever a new subscription schedule is released`,
					}, {
						Name:        []string{`subscription_schedule.updated`},
						Description: `Occurs whenever a subscription schedule is updated`,
					}, {
						Name:        []string{`tax_rate.created`},
						Description: `Occurs whenever a new tax rate is created`,
					}, {
						Name:        []string{`tax_rate.updated`},
						Description: `Occurs whenever a tax rate is updated`,
					}, {
						Name:        []string{`topup.canceled`},
						Description: `Occurs whenever a top-up is canceled`,
					}, {
						Name:        []string{`topup.created`},
						Description: `Occurs whenever a top-up is created`,
					}, {
						Name:        []string{`topup.failed`},
						Description: `Occurs whenever a top-up fails`,
					}, {
						Name:        []string{`topup.reversed`},
						Description: `Occurs whenever a top-up is reversed`,
					}, {
						Name:        []string{`topup.succeeded`},
						Description: `Occurs whenever a top-up succeeds`,
					}, {
						Name:        []string{`transfer.created`},
						Description: `Occurs whenever a transfer is created`,
					}, {
						Name:        []string{`transfer.failed`},
						Description: `Occurs whenever a transfer failed`,
					}, {
						Name:        []string{`transfer.paid`},
						Description: `Occurs after a transfer is paid. For Instant Payouts, the event will typically be sent within 30 minutes`,
					}, {
						Name:        []string{`transfer.reversed`},
						Description: `Occurs whenever a transfer is reversed, including partial reversals`,
					}, {
						Name:        []string{`transfer.updated`},
						Description: `Occurs whenever a transfer's description or metadata is updated`,
					}, {
						Name:        []string{`balance.available`},
						Description: `Occurs whenever your Stripe balance has been updated (e.g., when a charge is available to be paid out). By default, Stripe automatically transfers funds in your balance to your bank account on a daily basis`,
					}, {
						Name:        []string{`charge.captured`},
						Description: `Occurs whenever a previously uncaptured charge is captured`,
					}, {
						Name:        []string{`charge.dispute.created`},
						Description: `Occurs whenever a customer disputes a charge with their bank`,
					}, {
						Name:        []string{`charge.failed`},
						Description: `Occurs whenever a failed charge attempt occurs`,
					}, {
						Name:        []string{`charge.refunded`},
						Description: `Occurs whenever a charge is refunded, including partial refunds`,
					}, {
						Name:        []string{`charge.succeeded`},
						Description: `Occurs whenever a new charge is created and is successful`,
					}, {
						Name:        []string{`checkout.session.completed`},
						Description: `Occurs when a Checkout Session has been successfully completed`,
					}, {
						Name:        []string{`customer.created`},
						Description: `Occurs whenever a new customer is created`,
					}, {
						Name:        []string{`customer.deleted`},
						Description: `Occurs whenever a customer is deleted`,
					}, {
						Name:        []string{`customer.source.created`},
						Description: `Occurs whenever a new source is created for a customer`,
					}, {
						Name:        []string{`customer.source.updated`},
						Description: `Occurs whenever a source's details are changed`,
					}, {
						Name:        []string{`customer.subscription.created`},
						Description: `Occurs whenever a customer is signed up for a new plan`,
					}, {
						Name:        []string{`customer.subscription.deleted`},
						Description: `Occurs whenever a customer's subscription ends`,
					}, {
						Name:        []string{`customer.subscription.updated`},
						Description: `Occurs whenever a subscription changes (e.g., switching from one plan to another, or changing the status from trial to active)`,
					}, {
						Name:        []string{`customer.updated`},
						Description: `Occurs whenever any property of a customer changes`,
					}, {
						Name:        []string{`invoice.created`},
						Description: `Occurs whenever a new invoice is created`,
					}, {
						Name:        []string{`invoice.finalized`},
						Description: `Occurs whenever a draft invoice is finalized and updated to be an open invoice`,
					}, {
						Name:        []string{`invoice.payment_failed`},
						Description: `Occurs whenever an invoice payment attempt fails, due either to a declined payment or to the lack of a stored payment method`,
					}, {
						Name:        []string{`invoice.payment_succeeded`},
						Description: `Occurs whenever an invoice payment attempt succeeds`,
					}, {
						Name:        []string{`invoice.updated`},
						Description: `Occurs whenever an invoice changes (e.g., the invoice amount)`,
					}, {
						Name:        []string{`issuing_authorization.request`},
						Description: `Represents a synchronous request for authorization`,
					}, {
						Name:        []string{`issuing_card.created`},
						Description: `Occurs whenever a card is created`,
					}, {
						Name:        []string{`issuing_cardholder.created`},
						Description: `Occurs whenever a cardholder is created`,
					}, {
						Name:        []string{`payment_intent.amount_capturable_updated`},
						Description: `Occurs when a PaymentIntent has funds to be captured`,
					}, {
						Name:        []string{`payment_intent.canceled`},
						Description: `Occurs when a PaymentIntent is canceled`,
					}, {
						Name:        []string{`payment_intent.created`},
						Description: `Occurs when a new PaymentIntent is created`,
					}, {
						Name:        []string{`payment_intent.payment_failed`},
						Description: `Occurs when a PaymentIntent has failed the attempt to create a payment method or a payment`,
					}, {
						Name:        []string{`payment_intent.succeeded`},
						Description: `Occurs when a PaymentIntent has successfully completed payment`,
					}, {
						Name:        []string{`payment_method.attached`},
						Description: `Occurs whenever a new payment method is attached to a customer`,
					}, {
						Name:        []string{`setup_intent.canceled`},
						Description: `Occurs when a SetupIntent is canceled`,
					}, {
						Name:        []string{`setup_intent.created`},
						Description: `Occurs when a new SetupIntent is created`,
					}, {
						Name:        []string{`setup_intent.setup_failed`},
						Description: `Occurs when a SetupIntent has failed the attempt to setup a payment method`,
					}, {
						Name:        []string{`setup_intent.succeeded`},
						Description: `Occurs when an SetupIntent has successfully setup a payment method`,
					}},
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"-c", "--forward-connect-to"},
				Description: `The URL that Connect webhook events will be forwarded to`,
				Args: []model.Arg{{
					Name: "url",
				}},
			}, {
				Name:        []string{"-f", "--forward-to"},
				Description: `The URL that webhook events will be forwarded to`,
				Args: []model.Arg{{
					Name: "url",
				}},
			}, {
				Name:        []string{"-H", "--headers"},
				Description: `A comma-separated list of custom HTTP headers to forward`,
				Args: []model.Arg{{
					Name:        "values",
					Description: `Key1:Value1, Key2:Value2`,
					IsVariadic:  true,
				}},
			}, {
				Name:        []string{"-l", "--latest"},
				Description: `Receive events used in the latest API version`,
			}, {
				Name:        []string{"--live"},
				Description: `Make a live request`,
			}, {
				Name:        []string{"-a", "--load-from-webhooks-api"},
				Description: `Listen for all webhook events based on existing webhook endpoints`,
			}, {
				Name:        []string{"-j", "--print-json"},
				Description: `Print JSON objects to stdout`,
			}, {
				Name:        []string{"--skip-verify"},
				Description: `Skip certificate verification when forwarding to HTTPS endpoints`,
			}, {
				Name:        []string{"--api-key"},
				Description: `Sets your API key to use for the command`,
				Args: []model.Arg{{
					Name: "stripe api key",
				}},
			}, {
				Name:        []string{"--color"},
				Description: `Enables or disables color output`,
				Args: []model.Arg{{
					Name:        "setting",
					Suggestions: []model.Suggestion{{Name: []string{`on`}}, {Name: []string{`off`}}, {Name: []string{`auto`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Sets your config file`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "config filepath",
				}},
			}, {
				Name:        []string{"--device-name"},
				Description: `Runs command on behlaf of another device`,
				Args: []model.Arg{{
					Name: "name",
				}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Provides the help documentation for commands, flags, and arguments`,
			}, {
				Name:        []string{"--log-level"},
				Description: `Set the level of detail for log messages`,
				Args: []model.Arg{{
					Name:        "level",
					Suggestions: []model.Suggestion{{Name: []string{`info`}}, {Name: []string{`debug`}}, {Name: []string{`warn`}}, {Name: []string{`error`}}},
				}},
			}, {
				Name:        []string{"-v", "--version"},
				Description: `Prints the version of the Stripe CLI`,
			}},
		}, {
			Name:        []string{"trigger"},
			Description: `Triggers webhook events to conduct local testing`,
			Args: []model.Arg{{
				Name:        "event",
				Description: `Webhook events`,
				Suggestions: []model.Suggestion{{
					Name:        []string{`balance.available`},
					Description: `Occurs whenever your Stripe balance has been updated (e.g., when a charge is available to be paid out). By default, Stripe automatically transfers funds in your balance to your bank account on a daily basis`,
				}, {
					Name:        []string{`charge.captured`},
					Description: `Occurs whenever a previously uncaptured charge is captured`,
				}, {
					Name:        []string{`charge.dispute.created`},
					Description: `Occurs whenever a customer disputes a charge with their bank`,
				}, {
					Name:        []string{`charge.failed`},
					Description: `Occurs whenever a failed charge attempt occurs`,
				}, {
					Name:        []string{`charge.refunded`},
					Description: `Occurs whenever a charge is refunded, including partial refunds`,
				}, {
					Name:        []string{`charge.succeeded`},
					Description: `Occurs whenever a new charge is created and is successful`,
				}, {
					Name:        []string{`checkout.session.completed`},
					Description: `Occurs when a Checkout Session has been successfully completed`,
				}, {
					Name:        []string{`customer.created`},
					Description: `Occurs whenever a new customer is created`,
				}, {
					Name:        []string{`customer.deleted`},
					Description: `Occurs whenever a customer is deleted`,
				}, {
					Name:        []string{`customer.source.created`},
					Description: `Occurs whenever a new source is created for a customer`,
				}, {
					Name:        []string{`customer.source.updated`},
					Description: `Occurs whenever a source's details are changed`,
				}, {
					Name:        []string{`customer.subscription.created`},
					Description: `Occurs whenever a customer is signed up for a new plan`,
				}, {
					Name:        []string{`customer.subscription.deleted`},
					Description: `Occurs whenever a customer's subscription ends`,
				}, {
					Name:        []string{`customer.subscription.updated`},
					Description: `Occurs whenever a subscription changes (e.g., switching from one plan to another, or changing the status from trial to active)`,
				}, {
					Name:        []string{`customer.updated`},
					Description: `Occurs whenever any property of a customer changes`,
				}, {
					Name:        []string{`invoice.created`},
					Description: `Occurs whenever a new invoice is created`,
				}, {
					Name:        []string{`invoice.finalized`},
					Description: `Occurs whenever a draft invoice is finalized and updated to be an open invoice`,
				}, {
					Name:        []string{`invoice.payment_failed`},
					Description: `Occurs whenever an invoice payment attempt fails, due either to a declined payment or to the lack of a stored payment method`,
				}, {
					Name:        []string{`invoice.payment_succeeded`},
					Description: `Occurs whenever an invoice payment attempt succeeds`,
				}, {
					Name:        []string{`invoice.updated`},
					Description: `Occurs whenever an invoice changes (e.g., the invoice amount)`,
				}, {
					Name:        []string{`issuing_authorization.request`},
					Description: `Represents a synchronous request for authorization`,
				}, {
					Name:        []string{`issuing_card.created`},
					Description: `Occurs whenever a card is created`,
				}, {
					Name:        []string{`issuing_cardholder.created`},
					Description: `Occurs whenever a cardholder is created`,
				}, {
					Name:        []string{`payment_intent.amount_capturable_updated`},
					Description: `Occurs when a PaymentIntent has funds to be captured`,
				}, {
					Name:        []string{`payment_intent.canceled`},
					Description: `Occurs when a PaymentIntent is canceled`,
				}, {
					Name:        []string{`payment_intent.created`},
					Description: `Occurs when a new PaymentIntent is created`,
				}, {
					Name:        []string{`payment_intent.payment_failed`},
					Description: `Occurs when a PaymentIntent has failed the attempt to create a payment method or a payment`,
				}, {
					Name:        []string{`payment_intent.succeeded`},
					Description: `Occurs when a PaymentIntent has successfully completed payment`,
				}, {
					Name:        []string{`payment_method.attached`},
					Description: `Occurs whenever a new payment method is attached to a customer`,
				}, {
					Name:        []string{`setup_intent.canceled`},
					Description: `Occurs when a SetupIntent is canceled`,
				}, {
					Name:        []string{`setup_intent.created`},
					Description: `Occurs when a new SetupIntent is created`,
				}, {
					Name:        []string{`setup_intent.setup_failed`},
					Description: `Occurs when a SetupIntent has failed the attempt to setup a payment method`,
				}, {
					Name:        []string{`setup_intent.succeeded`},
					Description: `Occurs when an SetupIntent has successfully setup a payment method`,
				}},
			}},
			Options: []model.Option{{
				Name:        []string{"--stripe-account"},
				Description: `Sets a header identifying the connected account`,
			}, {
				Name:        []string{"--api-key"},
				Description: `Sets your API key to use for the command`,
				Args: []model.Arg{{
					Name: "stripe api key",
				}},
			}, {
				Name:        []string{"--color"},
				Description: `Enables or disables color output`,
				Args: []model.Arg{{
					Name:        "setting",
					Suggestions: []model.Suggestion{{Name: []string{`on`}}, {Name: []string{`off`}}, {Name: []string{`auto`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Sets your config file`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "config filepath",
				}},
			}, {
				Name:        []string{"--device-name"},
				Description: `Runs command on behlaf of another device`,
				Args: []model.Arg{{
					Name: "name",
				}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Provides the help documentation for commands, flags, and arguments`,
			}, {
				Name:        []string{"--log-level"},
				Description: `Set the level of detail for log messages`,
				Args: []model.Arg{{
					Name:        "level",
					Suggestions: []model.Suggestion{{Name: []string{`info`}}, {Name: []string{`debug`}}, {Name: []string{`warn`}}, {Name: []string{`error`}}},
				}},
			}, {
				Name:        []string{"-v", "--version"},
				Description: `Prints the version of the Stripe CLI`,
			}},
		}, {
			Name:        []string{"events resend"},
			Description: `Resend an event to test a webhook endpoint`,
			Args: []model.Arg{{
				Name:        "event id",
				Description: `The ID of the event to resend`,
			}},
			Options: []model.Option{{
				Name:        []string{"--account"},
				Description: `Resend the event to the given Stripe account`,
				Args: []model.Arg{{
					Name: "account id",
				}},
			}, {
				Name:        []string{"--param"},
				Description: `Key-value data to send along with the API request`,
				Args: []model.Arg{{
					Name: "value",
				}},
			}, {
				Name:        []string{"-webhook-endpoint"},
				Description: `Resends the event to the given webhook endpoint ID`,
				Args: []model.Arg{{
					Name: "endpoint id",
				}},
			}, {
				Name:        []string{"-s", "--show-headers"},
				Description: `Shows response HTTP headers`,
			}, {
				Name:        []string{"-c", "--confirm"},
				Description: `Skips the warning prompt and automatically confirms the command being entered`,
			}, {
				Name:        []string{"--dark-style"},
				Description: `Uses a darker color scheme`,
			}, {
				Name:        []string{"-d", "--data"},
				Description: `Additional data to send with an API request`,
				Args: []model.Arg{{
					Name: "value",
				}},
			}, {
				Name:        []string{"-e", "--expand"},
				Description: `Response attributes to expand inline`,
				Args: []model.Arg{{
					Name: "value",
				}},
			}, {
				Name:        []string{"-i", "--idempotency"},
				Description: `Sets an idempotency key for the request, preventing the same request from replaying within 24 hours`,
				Args: []model.Arg{{
					Name: "key",
				}},
			}, {
				Name:        []string{"--live"},
				Description: `Makes a live request`,
			}, {
				Name:        []string{"--stripe-account"},
				Description: `Specify the Stripe account to use for this request`,
				Args: []model.Arg{{
					Name: "account id",
				}},
			}, {
				Name:        []string{"-v", "--stripe-version"},
				Description: `Specify the Stripe API version to use for this request`,
				Args: []model.Arg{{
					Name: "version",
				}},
			}, {
				Name:        []string{"--api-key"},
				Description: `Sets your API key to use for the command`,
				Args: []model.Arg{{
					Name: "stripe api key",
				}},
			}, {
				Name:        []string{"--color"},
				Description: `Enables or disables color output`,
				Args: []model.Arg{{
					Name:        "setting",
					Suggestions: []model.Suggestion{{Name: []string{`on`}}, {Name: []string{`off`}}, {Name: []string{`auto`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Sets your config file`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "config filepath",
				}},
			}, {
				Name:        []string{"--device-name"},
				Description: `Runs command on behlaf of another device`,
				Args: []model.Arg{{
					Name: "name",
				}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Provides the help documentation for commands, flags, and arguments`,
			}, {
				Name:        []string{"--log-level"},
				Description: `Set the level of detail for log messages`,
				Args: []model.Arg{{
					Name:        "level",
					Suggestions: []model.Suggestion{{Name: []string{`info`}}, {Name: []string{`debug`}}, {Name: []string{`warn`}}, {Name: []string{`error`}}},
				}},
			}, {
				Name:        []string{"-v", "--version"},
				Description: `Prints the version of the Stripe CLI`,
			}},
		}, {
			Name:        []string{"get"},
			Description: `Makes GET HTTP requests to retrieve an individual API object`,
			Args: []model.Arg{{
				Name:        "id or path",
				Description: `ID or URL path of the API object to retrieve`,
			}},
			Options: []model.Option{{
				Name:        []string{"-b", "--ending-before"},
				Description: `Retrieves the previous page in the list`,
				Args: []model.Arg{{
					Name: "object id",
				}},
			}, {
				Name:        []string{"-l", "--limit"},
				Description: `Number of objects to return`,
				Args: []model.Arg{{
					Name:        "number",
					Description: `Number between 1 - 100 (default)`,
				}},
			}, {
				Name:        []string{"-a", "--starting-after"},
				Description: `Retrieves the next page in the list`,
				Args: []model.Arg{{
					Name: "object id",
				}},
			}, {
				Name:        []string{"-s", "--show-headers"},
				Description: `Shows response HTTP headers`,
			}, {
				Name:        []string{"-c", "--confirm"},
				Description: `Skips the warning prompt and automatically confirms the command being entered`,
			}, {
				Name:        []string{"--dark-style"},
				Description: `Uses a darker color scheme`,
			}, {
				Name:        []string{"-d", "--data"},
				Description: `Additional data to send with an API request`,
				Args: []model.Arg{{
					Name: "value",
				}},
			}, {
				Name:        []string{"-e", "--expand"},
				Description: `Response attributes to expand inline`,
				Args: []model.Arg{{
					Name: "value",
				}},
			}, {
				Name:        []string{"-i", "--idempotency"},
				Description: `Sets an idempotency key for the request, preventing the same request from replaying within 24 hours`,
				Args: []model.Arg{{
					Name: "key",
				}},
			}, {
				Name:        []string{"--live"},
				Description: `Makes a live request`,
			}, {
				Name:        []string{"--stripe-account"},
				Description: `Specify the Stripe account to use for this request`,
				Args: []model.Arg{{
					Name: "account id",
				}},
			}, {
				Name:        []string{"-v", "--stripe-version"},
				Description: `Specify the Stripe API version to use for this request`,
				Args: []model.Arg{{
					Name: "version",
				}},
			}, {
				Name:        []string{"--api-key"},
				Description: `Sets your API key to use for the command`,
				Args: []model.Arg{{
					Name: "stripe api key",
				}},
			}, {
				Name:        []string{"--color"},
				Description: `Enables or disables color output`,
				Args: []model.Arg{{
					Name:        "setting",
					Suggestions: []model.Suggestion{{Name: []string{`on`}}, {Name: []string{`off`}}, {Name: []string{`auto`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Sets your config file`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "config filepath",
				}},
			}, {
				Name:        []string{"--device-name"},
				Description: `Runs command on behlaf of another device`,
				Args: []model.Arg{{
					Name: "name",
				}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Provides the help documentation for commands, flags, and arguments`,
			}, {
				Name:        []string{"--log-level"},
				Description: `Set the level of detail for log messages`,
				Args: []model.Arg{{
					Name:        "level",
					Suggestions: []model.Suggestion{{Name: []string{`info`}}, {Name: []string{`debug`}}, {Name: []string{`warn`}}, {Name: []string{`error`}}},
				}},
			}, {
				Name:        []string{"-v", "--version"},
				Description: `Prints the version of the Stripe CLI`,
			}},
		}, {
			Name:        []string{"post"},
			Description: `Makes POST HTTP requests to the Stripe API`,
			Args: []model.Arg{{
				Name:        "path",
				Description: `URL path of the API object to create or update`,
			}},
			Options: []model.Option{{
				Name:        []string{"-s", "--show-headers"},
				Description: `Shows response HTTP headers`,
			}, {
				Name:        []string{"-c", "--confirm"},
				Description: `Skips the warning prompt and automatically confirms the command being entered`,
			}, {
				Name:        []string{"--dark-style"},
				Description: `Uses a darker color scheme`,
			}, {
				Name:        []string{"-d", "--data"},
				Description: `Additional data to send with an API request`,
				Args: []model.Arg{{
					Name: "value",
				}},
			}, {
				Name:        []string{"-e", "--expand"},
				Description: `Response attributes to expand inline`,
				Args: []model.Arg{{
					Name: "value",
				}},
			}, {
				Name:        []string{"-i", "--idempotency"},
				Description: `Sets an idempotency key for the request, preventing the same request from replaying within 24 hours`,
				Args: []model.Arg{{
					Name: "key",
				}},
			}, {
				Name:        []string{"--live"},
				Description: `Makes a live request`,
			}, {
				Name:        []string{"--stripe-account"},
				Description: `Specify the Stripe account to use for this request`,
				Args: []model.Arg{{
					Name: "account id",
				}},
			}, {
				Name:        []string{"-v", "--stripe-version"},
				Description: `Specify the Stripe API version to use for this request`,
				Args: []model.Arg{{
					Name: "version",
				}},
			}, {
				Name:        []string{"--api-key"},
				Description: `Sets your API key to use for the command`,
				Args: []model.Arg{{
					Name: "stripe api key",
				}},
			}, {
				Name:        []string{"--color"},
				Description: `Enables or disables color output`,
				Args: []model.Arg{{
					Name:        "setting",
					Suggestions: []model.Suggestion{{Name: []string{`on`}}, {Name: []string{`off`}}, {Name: []string{`auto`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Sets your config file`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "config filepath",
				}},
			}, {
				Name:        []string{"--device-name"},
				Description: `Runs command on behlaf of another device`,
				Args: []model.Arg{{
					Name: "name",
				}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Provides the help documentation for commands, flags, and arguments`,
			}, {
				Name:        []string{"--log-level"},
				Description: `Set the level of detail for log messages`,
				Args: []model.Arg{{
					Name:        "level",
					Suggestions: []model.Suggestion{{Name: []string{`info`}}, {Name: []string{`debug`}}, {Name: []string{`warn`}}, {Name: []string{`error`}}},
				}},
			}, {
				Name:        []string{"-v", "--version"},
				Description: `Prints the version of the Stripe CLI`,
			}},
		}, {
			Name:        []string{"delete"},
			Description: `Makes DELETE HTTP requests to the Stripe API`,
			Args: []model.Arg{{
				Name:        "path",
				Description: `URL path of the API object to delete`,
			}},
			Options: []model.Option{{
				Name:        []string{"-s", "--show-headers"},
				Description: `Shows response HTTP headers`,
			}, {
				Name:        []string{"-c", "--confirm"},
				Description: `Skips the warning prompt and automatically confirms the command being entered`,
			}, {
				Name:        []string{"--dark-style"},
				Description: `Uses a darker color scheme`,
			}, {
				Name:        []string{"-d", "--data"},
				Description: `Additional data to send with an API request`,
				Args: []model.Arg{{
					Name: "value",
				}},
			}, {
				Name:        []string{"-e", "--expand"},
				Description: `Response attributes to expand inline`,
				Args: []model.Arg{{
					Name: "value",
				}},
			}, {
				Name:        []string{"-i", "--idempotency"},
				Description: `Sets an idempotency key for the request, preventing the same request from replaying within 24 hours`,
				Args: []model.Arg{{
					Name: "key",
				}},
			}, {
				Name:        []string{"--live"},
				Description: `Makes a live request`,
			}, {
				Name:        []string{"--stripe-account"},
				Description: `Specify the Stripe account to use for this request`,
				Args: []model.Arg{{
					Name: "account id",
				}},
			}, {
				Name:        []string{"-v", "--stripe-version"},
				Description: `Specify the Stripe API version to use for this request`,
				Args: []model.Arg{{
					Name: "version",
				}},
			}, {
				Name:        []string{"--api-key"},
				Description: `Sets your API key to use for the command`,
				Args: []model.Arg{{
					Name: "stripe api key",
				}},
			}, {
				Name:        []string{"--color"},
				Description: `Enables or disables color output`,
				Args: []model.Arg{{
					Name:        "setting",
					Suggestions: []model.Suggestion{{Name: []string{`on`}}, {Name: []string{`off`}}, {Name: []string{`auto`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Sets your config file`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "config filepath",
				}},
			}, {
				Name:        []string{"--device-name"},
				Description: `Runs command on behlaf of another device`,
				Args: []model.Arg{{
					Name: "name",
				}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Provides the help documentation for commands, flags, and arguments`,
			}, {
				Name:        []string{"--log-level"},
				Description: `Set the level of detail for log messages`,
				Args: []model.Arg{{
					Name:        "level",
					Suggestions: []model.Suggestion{{Name: []string{`info`}}, {Name: []string{`debug`}}, {Name: []string{`warn`}}, {Name: []string{`error`}}},
				}},
			}, {
				Name:        []string{"-v", "--version"},
				Description: `Prints the version of the Stripe CLI`,
			}},
		}, {
			Name:        []string{"samples"},
			Description: `Creates a local copy of a sample`,
			Options: []model.Option{{
				Name:        []string{"--api-key"},
				Description: `Sets your API key to use for the command`,
				Args: []model.Arg{{
					Name: "stripe api key",
				}},
			}, {
				Name:        []string{"--color"},
				Description: `Enables or disables color output`,
				Args: []model.Arg{{
					Name:        "setting",
					Suggestions: []model.Suggestion{{Name: []string{`on`}}, {Name: []string{`off`}}, {Name: []string{`auto`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Sets your config file`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "config filepath",
				}},
			}, {
				Name:        []string{"--device-name"},
				Description: `Runs command on behlaf of another device`,
				Args: []model.Arg{{
					Name: "name",
				}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Provides the help documentation for commands, flags, and arguments`,
			}, {
				Name:        []string{"--log-level"},
				Description: `Set the level of detail for log messages`,
				Args: []model.Arg{{
					Name:        "level",
					Suggestions: []model.Suggestion{{Name: []string{`info`}}, {Name: []string{`debug`}}, {Name: []string{`warn`}}, {Name: []string{`error`}}},
				}},
			}, {
				Name:        []string{"-v", "--version"},
				Description: `Prints the version of the Stripe CLI`,
			}},
			Subcommands: []model.Subcommand{{
				Name: []string{"create"},
				Args: []model.Arg{{
					Name:        "sample",
					Description: `Name of the sample used to create a local copy`,
				}, {
					Name:        "path",
					Description: `Destination path for the created sample`,
					IsOptional:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"--force-refresh"},
					Description: `Force a refresh of the chaced list of Stripe Samples`,
				}, {
					Name:        []string{"--api-key"},
					Description: `Sets your API key to use for the command`,
					Args: []model.Arg{{
						Name: "stripe api key",
					}},
				}, {
					Name:        []string{"--color"},
					Description: `Enables or disables color output`,
					Args: []model.Arg{{
						Name:        "setting",
						Suggestions: []model.Suggestion{{Name: []string{`on`}}, {Name: []string{`off`}}, {Name: []string{`auto`}}},
					}},
				}, {
					Name:        []string{"--config"},
					Description: `Sets your config file`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "config filepath",
					}},
				}, {
					Name:        []string{"--device-name"},
					Description: `Runs command on behlaf of another device`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"-h", "--help"},
					Description: `Provides the help documentation for commands, flags, and arguments`,
				}, {
					Name:        []string{"--log-level"},
					Description: `Set the level of detail for log messages`,
					Args: []model.Arg{{
						Name:        "level",
						Suggestions: []model.Suggestion{{Name: []string{`info`}}, {Name: []string{`debug`}}, {Name: []string{`warn`}}, {Name: []string{`error`}}},
					}},
				}, {
					Name:        []string{"-v", "--version"},
					Description: `Prints the version of the Stripe CLI`,
				}},
			}, {
				Name:        []string{"list"},
				Description: `Lists available Stripe Samples`,
				Options: []model.Option{{
					Name:        []string{"--force-refresh"},
					Description: `Force a refresh of the chaced list of Stripe Samples`,
				}, {
					Name:        []string{"--api-key"},
					Description: `Sets your API key to use for the command`,
					Args: []model.Arg{{
						Name: "stripe api key",
					}},
				}, {
					Name:        []string{"--color"},
					Description: `Enables or disables color output`,
					Args: []model.Arg{{
						Name:        "setting",
						Suggestions: []model.Suggestion{{Name: []string{`on`}}, {Name: []string{`off`}}, {Name: []string{`auto`}}},
					}},
				}, {
					Name:        []string{"--config"},
					Description: `Sets your config file`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "config filepath",
					}},
				}, {
					Name:        []string{"--device-name"},
					Description: `Runs command on behlaf of another device`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"-h", "--help"},
					Description: `Provides the help documentation for commands, flags, and arguments`,
				}, {
					Name:        []string{"--log-level"},
					Description: `Set the level of detail for log messages`,
					Args: []model.Arg{{
						Name:        "level",
						Suggestions: []model.Suggestion{{Name: []string{`info`}}, {Name: []string{`debug`}}, {Name: []string{`warn`}}, {Name: []string{`error`}}},
					}},
				}, {
					Name:        []string{"-v", "--version"},
					Description: `Prints the version of the Stripe CLI`,
				}},
			}},
		}, {
			Name:        []string{"serve"},
			Description: `Starts an HTTP server to serve static files`,
			Args: []model.Arg{{
				Name:        "base path",
				Description: `Path of the directory to serve files from`,
			}},
			Options: []model.Option{{
				Name:        []string{"--port"},
				Description: `Port the HTTP server should use`,
				Args: []model.Arg{{
					Name: "port number",
				}},
			}, {
				Name:        []string{"--api-key"},
				Description: `Sets your API key to use for the command`,
				Args: []model.Arg{{
					Name: "stripe api key",
				}},
			}, {
				Name:        []string{"--color"},
				Description: `Enables or disables color output`,
				Args: []model.Arg{{
					Name:        "setting",
					Suggestions: []model.Suggestion{{Name: []string{`on`}}, {Name: []string{`off`}}, {Name: []string{`auto`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Sets your config file`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "config filepath",
				}},
			}, {
				Name:        []string{"--device-name"},
				Description: `Runs command on behlaf of another device`,
				Args: []model.Arg{{
					Name: "name",
				}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Provides the help documentation for commands, flags, and arguments`,
			}, {
				Name:        []string{"--log-level"},
				Description: `Set the level of detail for log messages`,
				Args: []model.Arg{{
					Name:        "level",
					Suggestions: []model.Suggestion{{Name: []string{`info`}}, {Name: []string{`debug`}}, {Name: []string{`warn`}}, {Name: []string{`error`}}},
				}},
			}, {
				Name:        []string{"-v", "--version"},
				Description: `Prints the version of the Stripe CLI`,
			}},
		}, {
			Name:        []string{"terminal quickstart"},
			Description: `Starts up Stripe Terminal`,
			Options: []model.Option{{
				Name: []string{"--api-key"},
				Args: []model.Arg{{
					Name: "api key",
				}},
			}},
		}, {
			Name:        []string{"logout"},
			Description: `Removes all credentials`,
			Options: []model.Option{{
				Name:        []string{"-a", "--all"},
				Description: `Removes credentials for all projects listed in your config`,
			}, {
				Name:        []string{"--api-key"},
				Description: `Sets your API key to use for the command`,
				Args: []model.Arg{{
					Name: "stripe api key",
				}},
			}, {
				Name:        []string{"--color"},
				Description: `Enables or disables color output`,
				Args: []model.Arg{{
					Name:        "setting",
					Suggestions: []model.Suggestion{{Name: []string{`on`}}, {Name: []string{`off`}}, {Name: []string{`auto`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Sets your config file`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "config filepath",
				}},
			}, {
				Name:        []string{"--device-name"},
				Description: `Runs command on behlaf of another device`,
				Args: []model.Arg{{
					Name: "name",
				}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Provides the help documentation for commands, flags, and arguments`,
			}, {
				Name:        []string{"--log-level"},
				Description: `Set the level of detail for log messages`,
				Args: []model.Arg{{
					Name:        "level",
					Suggestions: []model.Suggestion{{Name: []string{`info`}}, {Name: []string{`debug`}}, {Name: []string{`warn`}}, {Name: []string{`error`}}},
				}},
			}, {
				Name:        []string{"-v", "--version"},
				Description: `Prints the version of the Stripe CLI`,
			}},
		}, {
			Name:        []string{"feedback"},
			Description: `Prints info about how to provide feedback`,
			Options: []model.Option{{
				Name:        []string{"--api-key"},
				Description: `Sets your API key to use for the command`,
				Args: []model.Arg{{
					Name: "stripe api key",
				}},
			}, {
				Name:        []string{"--color"},
				Description: `Enables or disables color output`,
				Args: []model.Arg{{
					Name:        "setting",
					Suggestions: []model.Suggestion{{Name: []string{`on`}}, {Name: []string{`off`}}, {Name: []string{`auto`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Sets your config file`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "config filepath",
				}},
			}, {
				Name:        []string{"--device-name"},
				Description: `Runs command on behlaf of another device`,
				Args: []model.Arg{{
					Name: "name",
				}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Provides the help documentation for commands, flags, and arguments`,
			}, {
				Name:        []string{"--log-level"},
				Description: `Set the level of detail for log messages`,
				Args: []model.Arg{{
					Name:        "level",
					Suggestions: []model.Suggestion{{Name: []string{`info`}}, {Name: []string{`debug`}}, {Name: []string{`warn`}}, {Name: []string{`error`}}},
				}},
			}, {
				Name:        []string{"-v", "--version"},
				Description: `Prints the version of the Stripe CLI`,
			}},
		}, {
			Name:        []string{"help"},
			Description: `Gets help for any command`,
			Args: []model.Arg{{
				Name:       "command",
				IsOptional: true,
			}},
		}, {
			Name:        []string{"version"},
			Description: `Gets the version and checks or updates`,
			Args: []model.Arg{{
				Name:       "command",
				IsOptional: true,
			}},
		}},
	}
}
