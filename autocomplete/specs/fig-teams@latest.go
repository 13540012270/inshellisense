// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["fig-teams@latest"] = model.Subcommand{
		Name:        []string{"fig-teams"},
		Description: `Fig for teams`,
		Subcommands: []model.Subcommand{{
			Name: []string{"teams"},
			Subcommands: []model.Subcommand{{
				Name:        []string{"ls"},
				Description: `Get all available teams for the current user`,
				Options: []model.Option{{
					Name:        []string{"--json"},
					Description: `Output as JSON`,
				}},
			}, {
				Name:        []string{"create"},
				Description: `Create a new team`,
				Args: []model.Arg{{
					Name: "team_name",
				}},
			}, {
				Name:        []string{"ls:user"},
				Description: `Get all users for a given team`,
				Options: []model.Option{{
					Name:        []string{"-t", "--team"},
					Description: `Team to use`,
					Args: []model.Arg{{
						Name:      "teamname",
						Generator: nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"--json"},
					Description: `Output as JSON`,
				}},
			}, {
				Name:        []string{"add:user"},
				Description: `Add a new user to a team`,
				Args: []model.Arg{{
					Name:      "email",
					Generator: nil, // TODO: port over generator
				}},
				Options: []model.Option{{
					Name:        []string{"-t", "--team"},
					Description: `Team to use`,
					Args: []model.Arg{{
						Name:      "teamname",
						Generator: nil, // TODO: port over generator
					}},
				}},
			}, {
				Name:        []string{"remove:user"},
				Description: `Remove a user from a team`,
				Args: []model.Arg{{
					Name:      "email",
					Generator: nil, // TODO: port over generator
				}},
				Options: []model.Option{{
					Name:        []string{"-t", "--team"},
					Description: `Team to use`,
					Args: []model.Arg{{
						Name:      "teamname",
						Generator: nil, // TODO: port over generator
					}},
				}},
			}},
		}, {
			Name:        []string{"deploy"},
			Description: `Push your locally compiled completion specs to Fig's server based on the mapping defined in the .fig/manifest file`,
		}, {
			Name:        []string{"manifest"},
			Description: `Create or update the .fig/manifest file. Use this command to link your locally created completion specs to your team`,
		}, {
			Name:        []string{"whoami"},
			Description: `Get information about the current user and their associated teams`,
		}},
	}
}
