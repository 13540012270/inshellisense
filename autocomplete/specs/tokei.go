// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.
//
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

package specs

import (
	"github.com/microsoft/clac/autocomplete/model"
)

func init() {
	Specs["tokei"] = model.Subcommand{
		Name:        []string{"tokei"},
		Description: `Count your code, quickly`,
		Options: []model.Option{{
			Name:        []string{"-f", "--files"},
			Description: `Will print out statistics on individual files`,
		}, {
			Name:        []string{"-h", "--help"},
			Description: `Prints help information`,
		}, {
			Name:        []string{"--hidden"},
			Description: `Count hidden files`,
		}, {
			Name:        []string{"-l", "--languages"},
			Description: `Prints out supported languages and their extensions`,
		}, {
			Name:        []string{"--no-ignore"},
			Description: `Don't respect ignore files (.gitignore, .ignore, etc.)`,
		}, {
			Name:        []string{"--no-ignore-dot"},
			Description: `Don't respect .ignore and .tokeignore files, including those in parent directories`,
		}, {
			Name:        []string{"--no-ignore-parent"},
			Description: `Don't respect ignore files (.gitignore, .ignore, etc.) in parent directories`,
		}, {
			Name:        []string{"--no-ignore-vcs"},
			Description: `Don't respect VCS ignore files (.gitignore, .hgignore, etc.), including those in parent directories`,
		}, {
			Name:        []string{"-V", "--version"},
			Description: `Prints version information`,
		}, {
			Name:        []string{"-v", "--verbose"},
			Description: `Set log output level:`,
		}, {
			Name:        []string{"-c", "--columns"},
			Description: `Sets a strict column width of the output, only available for terminal output`,
			Args: []model.Arg{{
				Name: "columns",
			}},
		}, {
			Name:        []string{"-e", "--exclude"},
			Description: `Ignore all files & directories matching the pattern`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "exclude",
			}},
		}, {
			Name:        []string{"-i", "--input"},
			Description: `Gives statistics from a previous tokei run. Can be given a file path, or "stdin" to read from stdin`,
			Args: []model.Arg{{
				Templates:   []model.Template{model.TemplateFilepaths},
				Name:        "input",
				Suggestions: []model.Suggestion{{Name: []string{`stdin`}}},
			}},
		}, {
			Name:        []string{"-o", "--output"},
			Description: `Outputs Tokei in a specific format`,
			Args: []model.Arg{{
				Name:        "output",
				Suggestions: []model.Suggestion{{Name: []string{`cbor`}}, {Name: []string{`json`}}, {Name: []string{`yaml`}}},
			}},
		}, {
			Name:        []string{"-s", "--sort"},
			Description: `Sort languages based on column`,
			Args: []model.Arg{{
				Name:        "sort",
				Suggestions: []model.Suggestion{{Name: []string{`files`}}, {Name: []string{`lines`}}, {Name: []string{`blanks`}}, {Name: []string{`code`}}, {Name: []string{`comments`}}},
			}},
		}, {
			Name:        []string{"-t", "--type"},
			Description: `Filters output by language type, seperated by a comma. i.e. -t=Rust,Markdown`,
			Args: []model.Arg{{
				Name:      "type",
				Generator: nil, // TODO: port over generator
			}},
		}},
	}
}
