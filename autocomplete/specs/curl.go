// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["curl"] = model.Subcommand{
		Name:        []string{"curl"},
		Description: `Transfer a URL`,
		Args: []model.Arg{{
			Templates: []model.Template{model.TemplateHistory},
			Name:      "URL",
		}},
		Options: []model.Option{{
			Name:        []string{"-a", "--append"},
			Description: `Append to target file when uploading`,
		}, {
			Name:        []string{"-E", "--cert"},
			Description: `Client certificate file and password`,
			Args: []model.Arg{{
				Name:      "certificate[:password]",
				Generator: nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"-K", "--config"},
			Description: `Read config from a file`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "file",
			}},
		}, {
			Name:        []string{"-C", "--continue-at"},
			Description: `Resumed transfer offset`,
			Args: []model.Arg{{
				Name: "offset",
			}},
		}, {
			Name:        []string{"-b", "--cookie"},
			Description: `Send cookies from string/file`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "data or filename",
			}},
		}, {
			Name:        []string{"-c", "--cookie-jar"},
			Description: `Write cookies to <filename> after operation`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "filename",
			}},
		}, {
			Name:        []string{"-d", "--data"},
			Description: `HTTP POST data`,
			Args: []model.Arg{{
				Name: "data",
			}},
		}, {
			Name:        []string{"-q", "--disable"},
			Description: `Disable .curlrc`,
		}, {
			Name:        []string{"-D", "--dump-header"},
			Description: `Write the received headers to <filename>`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "filename",
			}},
		}, {
			Name:        []string{"-f", "--fail"},
			Description: `Fail silently (no output at all) on HTTP errors`,
		}, {
			Name:        []string{"-F", "--form"},
			Description: `Specify multipart MIME data`,
			Args: []model.Arg{{
				Name: "content",
			}},
		}, {
			Name:        []string{"-P", "--ftp-port"},
			Description: `Use PORT instead of PASV`,
			Args: []model.Arg{{
				Name: "address",
			}},
		}, {
			Name:        []string{"-G", "--get"},
			Description: `Put the post data in the URL and use GET`,
		}, {
			Name:        []string{"-g", "--globoff"},
			Description: `Disable URL sequences and ranges using {} and []`,
		}, {
			Name:        []string{"-I", "--head"},
			Description: `Show document info only`,
		}, {
			Name:        []string{"-H", "--header"},
			Description: `Pass custom header(s) to server`,
			Args: []model.Arg{{
				Name: "header/file",
				Suggestions: []model.Suggestion{{
					Name: []string{`Content-Type: application/json`},
				}, {
					Name: []string{`Content-Type: application/x-www-form-urlencoded`},
				}},
			}},
		}, {
			Name:        []string{"-h", "--help"},
			Description: `This help text`,
		}, {
			Name:        []string{"-0", "--http1.0"},
			Description: `Use HTTP 1.0`,
		}, {
			Name:        []string{"-i", "--include"},
			Description: `Include protocol response headers in the output`,
		}, {
			Name:        []string{"-k", "--insecure"},
			Description: `Allow insecure server connections when using SSL`,
		}, {
			Name:        []string{"-4", "--ipv4"},
			Description: `Resolve names to IPv4 addresses`,
		}, {
			Name:        []string{"-6", "--ipv6"},
			Description: `Resolve names to IPv6 addresses`,
		}, {
			Name:        []string{"-j", "--junk-session-cookies"},
			Description: `Ignore session cookies read from file`,
		}, {
			Name:        []string{"-l", "--list-only"},
			Description: `List only mode`,
		}, {
			Name:        []string{"-L", "--location"},
			Description: `Follow redirects`,
		}, {
			Name:        []string{"-M", "--manual"},
			Description: `Display the full manual`,
		}, {
			Name:        []string{"-m", "--max-time"},
			Description: `Maximum time allowed for the transfer`,
			Args: []model.Arg{{
				Name: "seconds",
			}},
		}, {
			Name:        []string{"-n", "--netrc"},
			Description: `Must read .netrc for user name and password`,
		}, {
			Name:        []string{"-:", "--next"},
			Description: `Make next URL use its separate set of options`,
		}, {
			Name:        []string{"-N", "--no-buffer"},
			Description: `Disable buffering of the output stream`,
		}, {
			Name:        []string{"-o", "--output"},
			Description: `Write to file instead of stdout`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "file",
			}},
		}, {
			Name:        []string{"-#", "--progress-bar"},
			Description: `Display transfer progress as a bar`,
		}, {
			Name:        []string{"-x", "--proxy"},
			Description: `[protocol://]host[:port] Use this proxy`,
		}, {
			Name:        []string{"-U", "--proxy-user"},
			Description: `Proxy user and password`,
			Args: []model.Arg{{
				Name: "user:password",
			}},
		}, {
			Name:        []string{"-p", "--proxytunnel"},
			Description: `Operate through an HTTP proxy tunnel (using CONNECT)`,
		}, {
			Name:        []string{"-Q", "--quote"},
			Description: `Send command(s) to server before transfer`,
		}, {
			Name:        []string{"-r", "--range"},
			Description: `Retrieve only the bytes within RANGE`,
			Args: []model.Arg{{
				Name: "range",
			}},
		}, {
			Name:        []string{"-e", "--referer"},
			Description: `Referrer URL`,
			Args: []model.Arg{{
				Name: "URL",
			}},
		}, {
			Name:        []string{"-J", "--remote-header-name"},
			Description: `Use the header-provided filename`,
		}, {
			Name:        []string{"-O", "--remote-name"},
			Description: `Write output to a file named as the remote file`,
		}, {
			Name:        []string{"-R", "--remote-time"},
			Description: `Set the remote file's time on the local output`,
		}, {
			Name:        []string{"-X", "--request"},
			Description: `Specify request command to use`,
			Args: []model.Arg{{
				Name: "command",
				Suggestions: []model.Suggestion{{
					Name: []string{`GET`},
				}, {
					Name: []string{`HEAD`},
				}, {
					Name: []string{`POST`},
				}, {
					Name: []string{`PUT`},
				}, {
					Name: []string{`DELETE`},
				}, {
					Name: []string{`CONNECT`},
				}, {
					Name: []string{`OPTIONS`},
				}, {
					Name: []string{`TRACE`},
				}, {
					Name: []string{`PATCH`},
				}},
			}},
		}, {
			Name:        []string{"-S", "--show-error"},
			Description: `Show error even when -s is used`,
		}, {
			Name:        []string{"-s", "--silent"},
			Description: `Silent mode`,
		}, {
			Name:        []string{"-Y", "--speed-limit"},
			Description: `Stop transfers slower than this`,
			Args: []model.Arg{{
				Name: "speed",
			}},
		}, {
			Name:        []string{"-y", "--speed-time"},
			Description: `Trigger 'speed-limit' abort after this time`,
			Args: []model.Arg{{
				Name: "seconds",
			}},
		}, {
			Name:        []string{"-2", "--sslv2"},
			Description: `Use SSLv2`,
		}, {
			Name:        []string{"-3", "--sslv3"},
			Description: `Use SSLv3`,
		}, {
			Name:        []string{"-t", "--telnet-option"},
			Description: `Set telnet option`,
			Args: []model.Arg{{
				Name: "val",
			}},
		}, {
			Name:        []string{"-z", "--time-cond"},
			Description: `Transfer based on a time condition`,
			Args: []model.Arg{{
				Name: "time",
			}},
		}, {
			Name:        []string{"-1", "--tlsv1"},
			Description: `Use TLSv1.0 or greater`,
		}, {
			Name:        []string{"-T", "--upload-file"},
			Description: `Transfer local FILE to destination`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "file",
			}},
		}, {
			Name:        []string{"-B", "--use-ascii"},
			Description: `Use ASCII/text transfer`,
		}, {
			Name:        []string{"-u", "--user"},
			Description: `Server user and password`,
			Args: []model.Arg{{
				Name: "user:password",
			}},
		}, {
			Name:        []string{"-A", "--user-agent"},
			Description: `Send User-Agent <name> to server`,
			Args: []model.Arg{{
				Name: "name",
			}},
		}, {
			Name:        []string{"-v", "--verbose"},
			Description: `Make the operation more talkative`,
		}, {
			Name:        []string{"-V", "--version"},
			Description: `Show version number and quit`,
		}, {
			Name:        []string{"-w", "--write-out"},
			Description: `Use output FORMAT after completion`,
			Args: []model.Arg{{
				Name: "format",
			}},
		}, {
			Name:        []string{"--abstract-unix-socket"},
			Description: `Connect via abstract Unix domain socket`,
			Args: []model.Arg{{
				Name: "path",
			}},
		}, {
			Name:        []string{"--alt-svc"},
			Description: `Name> Enable alt-svc with this cache file`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "file",
			}},
		}, {
			Name:        []string{"--anyauth"},
			Description: `Pick any authentication method`,
		}, {
			Name:        []string{"--basic"},
			Description: `Use HTTP Basic Authentication`,
		}, {
			Name:        []string{"--cacert"},
			Description: `CA certificate to verify peer against`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "file",
			}},
		}, {
			Name:        []string{"--capath"},
			Description: `CA directory to verify peer against`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFolders},
				Name:      "dir",
			}},
		}, {
			Name:        []string{"--cert-status"},
			Description: `Verify the status of the server certificate`,
		}, {
			Name:        []string{"--cert-type"},
			Description: `Certificate file type`,
			Args: []model.Arg{{
				Name: "type",
				Suggestions: []model.Suggestion{{
					Name: []string{`DER`},
				}, {
					Name: []string{`PEM`},
				}, {
					Name: []string{`ENG`},
				}},
			}},
		}, {
			Name:        []string{"--ciphers"},
			Description: `Of ciphers> SSL ciphers to use`,
			Args: []model.Arg{{
				Name: "list",
			}},
		}, {
			Name:        []string{"--compressed"},
			Description: `Request compressed response`,
		}, {
			Name:        []string{"--compressed-ssh"},
			Description: `Enable SSH compression`,
		}, {
			Name:        []string{"--connect-timeout"},
			Description: `Maximum time allowed for connection`,
			Args: []model.Arg{{
				Name: "seconds",
			}},
		}, {
			Name:        []string{"--connect-to"},
			Description: `Connect to host`,
			Args: []model.Arg{{
				Name: "HOST1:PORT1:HOST2:PORT2",
			}},
		}, {
			Name:        []string{"--create-dirs"},
			Description: `Create necessary local directory hierarchy`,
		}, {
			Name:        []string{"--crlf"},
			Description: `Convert LF to CRLF in upload`,
		}, {
			Name:        []string{"--crlfile"},
			Description: `Get a CRL list in PEM format from the given file`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "file",
			}},
		}, {
			Name:        []string{"--data-ascii"},
			Description: `HTTP POST ASCII data`,
			Args: []model.Arg{{
				Name: "data",
			}},
		}, {
			Name:        []string{"--data-binary"},
			Description: `HTTP POST binary data`,
			Args: []model.Arg{{
				Name: "data",
			}},
		}, {
			Name:        []string{"--data-raw"},
			Description: `HTTP POST data, '@' allowed`,
			Args: []model.Arg{{
				Name: "data",
			}},
		}, {
			Name:        []string{"--data-urlencode"},
			Description: `HTTP POST data url encoded`,
			Args: []model.Arg{{
				Name: "data",
			}},
		}, {
			Name:        []string{"--delegation"},
			Description: `GSS-API delegation permission`,
			Args: []model.Arg{{
				Name: "LEVEL",
			}},
		}, {
			Name:        []string{"--digest"},
			Description: `Use HTTP Digest Authentication`,
		}, {
			Name:        []string{"--disable-eprt"},
			Description: `Inhibit using EPRT or LPRT`,
		}, {
			Name:        []string{"--disable-epsv"},
			Description: `Inhibit using EPSV`,
		}, {
			Name:        []string{"--disallow-username-in-url"},
			Description: `Disallow username in url`,
		}, {
			Name:        []string{"--dns-interface"},
			Description: `Interface to use for DNS requests`,
			Args: []model.Arg{{
				Name: "interface",
			}},
		}, {
			Name:        []string{"--dns-ipv4-addr"},
			Description: `IPv4 address to use for DNS requests`,
			Args: []model.Arg{{
				Name: "address",
			}},
		}, {
			Name:        []string{"--dns-ipv6-addr"},
			Description: `IPv6 address to use for DNS requests`,
			Args: []model.Arg{{
				Name: "address",
			}},
		}, {
			Name:        []string{"--dns-servers"},
			Description: `DNS server addrs to use`,
			Args: []model.Arg{{
				Name: "addresses",
			}},
		}, {
			Name:        []string{"--doh-url"},
			Description: `Resolve host names over DOH`,
			Args: []model.Arg{{
				Name: "URL",
			}},
		}, {
			Name:        []string{"--egd-file"},
			Description: `EGD socket path for random data`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "file",
			}},
		}, {
			Name:        []string{"--engine"},
			Description: `Crypto engine to use`,
			Args: []model.Arg{{
				Name: "name",
			}},
		}, {
			Name:        []string{"--etag-compare"},
			Description: `Make a conditional HTTP request for the ETag read from the given file`,
			Args: []model.Arg{{
				Name: "file",
			}},
		}, {
			Name:        []string{"--etag-save"},
			Description: `Save an HTTP ETag to the specified file`,
			Args: []model.Arg{{
				Name: "file",
			}},
		}, {
			Name:        []string{"--expect100-timeout"},
			Description: `How long to wait for 100-continue`,
			Args: []model.Arg{{
				Name: "seconds",
			}},
		}, {
			Name:        []string{"--fail-early"},
			Description: `Fail on first transfer error, do not continue`,
		}, {
			Name:        []string{"--fail-with-body"},
			Description: `On HTTP errors, return an error and also output any HTML response`,
		}, {
			Name:        []string{"--false-start"},
			Description: `Enable TLS False Start`,
		}, {
			Name:        []string{"--form-string"},
			Description: `Specify multipart MIME data`,
			Args: []model.Arg{{
				Name: "string",
			}},
		}, {
			Name:        []string{"--ftp-account"},
			Description: `Account data string`,
			Args: []model.Arg{{
				Name: "data",
			}},
		}, {
			Name:        []string{"--ftp-alternative-to-user"},
			Description: `String to replace USER [name]`,
			Args: []model.Arg{{
				Name: "command",
			}},
		}, {
			Name:        []string{"--ftp-create-dirs"},
			Description: `Create the remote dirs if not present`,
		}, {
			Name:        []string{"--ftp-method"},
			Description: `Control CWD usage`,
			Args: []model.Arg{{
				Name: "method",
			}},
		}, {
			Name:        []string{"--ftp-pasv"},
			Description: `Use PASV/EPSV instead of PORT`,
		}, {
			Name:        []string{"--ftp-pret"},
			Description: `Send PRET before PASV`,
		}, {
			Name:        []string{"--ftp-skip-pasv-ip"},
			Description: `Skip the IP address for PASV`,
		}, {
			Name:        []string{"--ftp-ssl-ccc"},
			Description: `Send CCC after authenticating`,
		}, {
			Name:        []string{"--ftp-ssl-ccc-mode"},
			Description: `Set CCC mode`,
			Args: []model.Arg{{
				Name: "mode",
				Suggestions: []model.Suggestion{{
					Name: []string{`active`},
				}, {
					Name: []string{`passive`},
				}},
			}},
		}, {
			Name:        []string{"--ftp-ssl-control"},
			Description: `Require SSL/TLS for FTP login, clear for transfer`,
		}, {
			Name:        []string{"--happy-eyeballs-timeout-ms"},
			Description: `How long to wait in milliseconds for IPv6 before trying IPv4`,
			Args: []model.Arg{{
				Name: "milliseconds",
			}},
		}, {
			Name:        []string{"--haproxy-protocol"},
			Description: `Send HAProxy PROXY protocol v1 header`,
		}, {
			Name:        []string{"--hostpubmd5"},
			Description: `Acceptable MD5 hash of the host public key`,
			Args: []model.Arg{{
				Name: "md5",
			}},
		}, {
			Name:        []string{"--http0.9"},
			Description: `Allow HTTP 0.9 responses`,
		}, {
			Name:        []string{"--http1.1"},
			Description: `Use HTTP 1.1`,
		}, {
			Name:        []string{"--http2"},
			Description: `Use HTTP 2`,
		}, {
			Name:        []string{"--http2-prior-knowledge"},
			Description: `Use HTTP 2 without HTTP/1.1 Upgrade`,
		}, {
			Name:        []string{"--ignore-content-length"},
			Description: `Ignore the size of the remote resource`,
		}, {
			Name:        []string{"--interface"},
			Description: `Use network INTERFACE (or address)`,
			Args: []model.Arg{{
				Name: "name",
			}},
		}, {
			Name:        []string{"--keepalive-time"},
			Description: `Interval time for keepalive probes`,
			Args: []model.Arg{{
				Name: "seconds",
			}},
		}, {
			Name:        []string{"--key"},
			Description: `Private key file name`,
			Args: []model.Arg{{
				Name: "key",
			}},
		}, {
			Name:        []string{"--key-type"},
			Description: `Private key file type`,
			Args: []model.Arg{{
				Name: "type",
				Suggestions: []model.Suggestion{{
					Name: []string{`DER`},
				}, {
					Name: []string{`PEM`},
				}, {
					Name: []string{`ENG`},
				}},
			}},
		}, {
			Name:        []string{"--krb"},
			Description: `Enable Kerberos with security <level>`,
			Args: []model.Arg{{
				Name: "level",
			}},
		}, {
			Name:        []string{"--libcurl"},
			Description: `Dump libcurl equivalent code of this command line`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "file",
			}},
		}, {
			Name:        []string{"--limit-rate"},
			Description: `Limit transfer speed to RATE`,
			Args: []model.Arg{{
				Name: "speed",
			}},
		}, {
			Name:        []string{"--local-port"},
			Description: `Force use of RANGE for local port numbers`,
			Args: []model.Arg{{
				Name: "num/range",
			}},
		}, {
			Name:        []string{"--location-trusted"},
			Description: `Like --location, and send auth to other hosts`,
		}, {
			Name:        []string{"--login-options"},
			Description: `Server login options`,
			Args: []model.Arg{{
				Name: "options",
			}},
		}, {
			Name:        []string{"--mail-auth"},
			Description: `Originator address of the original email`,
			Args: []model.Arg{{
				Name: "address",
			}},
		}, {
			Name:        []string{"--mail-from"},
			Description: `Mail from this address`,
			Args: []model.Arg{{
				Name: "address",
			}},
		}, {
			Name:        []string{"--mail-rcpt"},
			Description: `Mail to this address`,
			Args: []model.Arg{{
				Name: "address",
			}},
		}, {
			Name:        []string{"--max-filesize"},
			Description: `Maximum file size to download`,
			Args: []model.Arg{{
				Name: "bytes",
			}},
		}, {
			Name:        []string{"--max-redirs"},
			Description: `Maximum number of redirects allowed`,
			Args: []model.Arg{{
				Name: "num",
			}},
		}, {
			Name:        []string{"--metalink"},
			Description: `Process given URLs as metalink XML file`,
		}, {
			Name:        []string{"--negotiate"},
			Description: `Use HTTP Negotiate (SPNEGO) authentication`,
		}, {
			Name:        []string{"--netrc-file"},
			Description: `Specify FILE for netrc`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "filename",
			}},
		}, {
			Name:        []string{"--netrc-optional"},
			Description: `Use either .netrc or URL`,
		}, {
			Name:        []string{"--no-alpn"},
			Description: `Disable the ALPN TLS extension`,
		}, {
			Name:        []string{"--no-keepalive"},
			Description: `Disable TCP keepalive on the connection`,
		}, {
			Name:        []string{"--no-npn"},
			Description: `Disable the NPN TLS extension`,
		}, {
			Name:        []string{"--no-sessionid"},
			Description: `Disable SSL session-ID reusing`,
		}, {
			Name:        []string{"--noproxy"},
			Description: `List of hosts which do not use proxy`,
			Args: []model.Arg{{
				Name: "no-proxy-list",
			}},
		}, {
			Name:        []string{"--ntlm"},
			Description: `Use HTTP NTLM authentication`,
		}, {
			Name:        []string{"--ntlm-wb"},
			Description: `Use HTTP NTLM authentication with winbind`,
		}, {
			Name:        []string{"--oauth2-bearer"},
			Description: `OAuth 2 Bearer Token`,
			Args: []model.Arg{{
				Name: "token",
			}},
		}, {
			Name:        []string{"--pass"},
			Description: `Pass phrase for the private key`,
			Args: []model.Arg{{
				Name: "phrase",
			}},
		}, {
			Name:        []string{"--path-as-is"},
			Description: `Do not squash .. sequences in URL path`,
		}, {
			Name:        []string{"--pinnedpubkey"},
			Description: `FILE/HASHES Public key to verify peer against`,
			Args: []model.Arg{{
				Name: "hashes",
			}},
		}, {
			Name:        []string{"--post301"},
			Description: `Do not switch to GET after following a 301`,
		}, {
			Name:        []string{"--post302"},
			Description: `Do not switch to GET after following a 302`,
		}, {
			Name:        []string{"--post303"},
			Description: `Do not switch to GET after following a 303`,
		}, {
			Name:        []string{"--preproxy"},
			Description: `[protocol://]host[:port] Use this proxy first`,
		}, {
			Name:        []string{"--proto"},
			Description: `Enable/disable PROTOCOLS`,
			Args: []model.Arg{{
				Name: "protocols",
			}},
		}, {
			Name:        []string{"--proto-default"},
			Description: `Use PROTOCOL for any URL missing a scheme`,
			Args: []model.Arg{{
				Name: "protocol",
			}},
		}, {
			Name:        []string{"--proto-redir"},
			Description: `Enable/disable PROTOCOLS on redirect`,
			Args: []model.Arg{{
				Name: "protocols",
			}},
		}, {
			Name:        []string{"--proxy-anyauth"},
			Description: `Pick any proxy authentication method`,
		}, {
			Name:        []string{"--proxy-basic"},
			Description: `Use Basic authentication on the proxy`,
		}, {
			Name:        []string{"--proxy-cacert"},
			Description: `CA certificate to verify peer against for proxy`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "file",
			}},
		}, {
			Name:        []string{"--proxy-capath"},
			Description: `CA directory to verify peer against for proxy`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFolders},
				Name:      "dir",
			}},
		}, {
			Name:        []string{"--proxy-cert"},
			Description: `Set client certificate for proxy`,
			Args: []model.Arg{{
				Name: "cert[:passwd]",
			}},
		}, {
			Name:        []string{"--proxy-cert-type"},
			Description: `Client certificate type for HTTPS proxy`,
			Args: []model.Arg{{
				Name: "type",
			}},
		}, {
			Name:        []string{"--proxy-ciphers"},
			Description: `SSL ciphers to use for proxy`,
			Args: []model.Arg{{
				Name: "list",
			}},
		}, {
			Name:        []string{"--proxy-crlfile"},
			Description: `Set a CRL list for proxy`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "file",
			}},
		}, {
			Name:        []string{"--proxy-digest"},
			Description: `Use Digest authentication on the proxy`,
		}, {
			Name:        []string{"--proxy-header"},
			Description: `Pass custom header(s) to proxy`,
			Args: []model.Arg{{
				Name: "header/file",
				Suggestions: []model.Suggestion{{
					Name: []string{`Content-Type: application/json`},
				}, {
					Name: []string{`Content-Type: application/x-www-form-urlencoded`},
				}},
			}},
		}, {
			Name:        []string{"--proxy-insecure"},
			Description: `Do HTTPS proxy connections without verifying the proxy`,
		}, {
			Name:        []string{"--proxy-key"},
			Description: `Private key for HTTPS proxy`,
			Args: []model.Arg{{
				Name: "key",
			}},
		}, {
			Name:        []string{"--proxy-key-type"},
			Description: `Private key file type for proxy`,
			Args: []model.Arg{{
				Name: "type",
			}},
		}, {
			Name:        []string{"--proxy-negotiate"},
			Description: `Use HTTP Negotiate (SPNEGO) authentication on the proxy`,
		}, {
			Name:        []string{"--proxy-ntlm"},
			Description: `Use NTLM authentication on the proxy`,
		}, {
			Name:        []string{"--proxy-pass"},
			Description: `Pass phrase for the private key for HTTPS proxy`,
			Args: []model.Arg{{
				Name: "phrase",
			}},
		}, {
			Name:        []string{"--proxy-pinnedpubkey"},
			Description: `FILE/HASHES public key to verify proxy with`,
			Args: []model.Arg{{
				Name: "hashes",
			}},
		}, {
			Name:        []string{"--proxy-service-name"},
			Description: `SPNEGO proxy service name`,
			Args: []model.Arg{{
				Name: "name",
			}},
		}, {
			Name:        []string{"--proxy-ssl-allow-beast"},
			Description: `Allow security flaw for interop for HTTPS proxy`,
		}, {
			Name:        []string{"--proxy-tls13-ciphers"},
			Description: `List> TLS 1.3 proxy cipher suites`,
			Args: []model.Arg{{
				Name: "ciphersuite",
			}},
		}, {
			Name:        []string{"--proxy-tlsauthtype"},
			Description: `TLS authentication type for HTTPS proxy`,
			Args: []model.Arg{{
				Name: "type",
			}},
		}, {
			Name:        []string{"--proxy-tlspassword"},
			Description: `TLS password for HTTPS proxy`,
			Args: []model.Arg{{
				Name: "string",
			}},
		}, {
			Name:        []string{"--proxy-tlsuser"},
			Description: `TLS username for HTTPS proxy`,
			Args: []model.Arg{{
				Name: "name",
			}},
		}, {
			Name:        []string{"--proxy-tlsv1"},
			Description: `Use TLSv1 for HTTPS proxy`,
		}, {
			Name:        []string{"--proxy1.0"},
			Description: `Use HTTP/1.0 proxy on given port`,
			Args: []model.Arg{{
				Name: "host[:port]",
			}},
		}, {
			Name:        []string{"--pubkey"},
			Description: `SSH Public key file name`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "key",
			}},
		}, {
			Name:        []string{"--random-file"},
			Description: `File for reading random data from`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "file",
			}},
		}, {
			Name:        []string{"--raw"},
			Description: `Do HTTP "raw"; no transfer decoding`,
		}, {
			Name:        []string{"--remote-name-all"},
			Description: `Use the remote file name for all URLs`,
		}, {
			Name:        []string{"--request-target"},
			Description: `Specify the target for this request`,
		}, {
			Name:        []string{"--resolve"},
			Description: `Resolve the host+port to this address`,
			Args: []model.Arg{{
				Name: "host:port:address[,address]...",
			}},
		}, {
			Name:        []string{"--retry"},
			Description: `Retry request if transient problems occur`,
			Args: []model.Arg{{
				Name: "num",
			}},
		}, {
			Name:        []string{"--retry-connrefused"},
			Description: `Retry on connection refused (use with --retry)`,
		}, {
			Name:        []string{"--retry-delay"},
			Description: `Wait time between retries`,
			Args: []model.Arg{{
				Name: "seconds",
			}},
		}, {
			Name:        []string{"--retry-max-time"},
			Description: `Retry only within this period`,
			Args: []model.Arg{{
				Name: "seconds",
			}},
		}, {
			Name:        []string{"--sasl-ir"},
			Description: `Enable initial response in SASL authentication`,
		}, {
			Name:        []string{"--service-name"},
			Description: `SPNEGO service name`,
			Args: []model.Arg{{
				Name: "name",
			}},
		}, {
			Name:        []string{"--socks4"},
			Description: `SOCKS4 proxy on given host + port`,
			Args: []model.Arg{{
				Name: "host[:port]",
			}},
		}, {
			Name:        []string{"--socks4a"},
			Description: `SOCKS4a proxy on given host + port`,
			Args: []model.Arg{{
				Name: "host[:port]",
			}},
		}, {
			Name:        []string{"--socks5"},
			Description: `SOCKS5 proxy on given host + port`,
			Args: []model.Arg{{
				Name: "host[:port]",
			}},
		}, {
			Name:        []string{"--socks5-basic"},
			Description: `Enable username/password auth for SOCKS5 proxies`,
		}, {
			Name:        []string{"--socks5-gssapi"},
			Description: `Enable GSS-API auth for SOCKS5 proxies`,
		}, {
			Name:        []string{"--socks5-gssapi-nec"},
			Description: `Compatibility with NEC SOCKS5 server`,
		}, {
			Name:        []string{"--socks5-gssapi-service"},
			Description: `SOCKS5 proxy service name for GSS-API`,
			Args: []model.Arg{{
				Name: "name",
			}},
		}, {
			Name:        []string{"--socks5-hostname"},
			Description: `SOCKS5 proxy, pass host name to proxy`,
			Args: []model.Arg{{
				Name: "host[:port]",
			}},
		}, {
			Name:        []string{"--ssl"},
			Description: `Try SSL/TLS`,
		}, {
			Name:        []string{"--ssl-auto-client-cert"},
			Description: `Obtain and use a client certificate automatically`,
		}, {
			Name:        []string{"--ssl-allow-beast"},
			Description: `Allow security flaw to improve interop`,
		}, {
			Name:        []string{"--ssl-no-revoke"},
			Description: `Disable cert revocation checks (Schannel)`,
		}, {
			Name:        []string{"--ssl-reqd"},
			Description: `Require SSL/TLS`,
		}, {
			Name:        []string{"--stderr"},
			Description: `Where to redirect stderr`,
		}, {
			Name:        []string{"--styled-output"},
			Description: `Enable styled output for HTTP headers`,
		}, {
			Name:        []string{"--suppress-connect-headers"},
			Description: `Suppress proxy CONNECT response headers`,
		}, {
			Name:        []string{"--tcp-fastopen"},
			Description: `Use TCP Fast Open`,
		}, {
			Name:        []string{"--tcp-nodelay"},
			Description: `Use the TCP_NODELAY option`,
		}, {
			Name:        []string{"--tftp-blksize"},
			Description: `Set TFTP BLKSIZE option`,
			Args: []model.Arg{{
				Name: "value",
			}},
		}, {
			Name:        []string{"--tftp-no-options"},
			Description: `Do not send any TFTP options`,
		}, {
			Name:        []string{"--tls-max"},
			Description: `Set maximum allowed TLS version`,
			Args: []model.Arg{{
				Name: "VERSION",
			}},
		}, {
			Name:        []string{"--tls13-ciphers"},
			Description: `Of TLS 1.3 ciphersuites> TLS 1.3 cipher suites to use`,
			Args: []model.Arg{{
				Name: "list",
			}},
		}, {
			Name:        []string{"--tlsauthtype"},
			Description: `TLS authentication type`,
			Args: []model.Arg{{
				Name: "type",
			}},
		}, {
			Name:        []string{"--tlspassword"},
			Description: `TLS password`,
		}, {
			Name:        []string{"--tlsuser"},
			Description: `TLS user name`,
			Args: []model.Arg{{
				Name: "name",
			}},
		}, {
			Name:        []string{"--tlsv1.0"},
			Description: `Use TLSv1.0 or greater`,
		}, {
			Name:        []string{"--tlsv1.1"},
			Description: `Use TLSv1.1 or greater`,
		}, {
			Name:        []string{"--tlsv1.2"},
			Description: `Use TLSv1.2 or greater`,
		}, {
			Name:        []string{"--tlsv1.3"},
			Description: `Use TLSv1.3 or greater`,
		}, {
			Name:        []string{"--tr-encoding"},
			Description: `Request compressed transfer encoding`,
		}, {
			Name:        []string{"--trace"},
			Description: `Write a debug trace to FILE`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "file",
			}},
		}, {
			Name:        []string{"--trace-ascii"},
			Description: `Like --trace, but without hex output`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "file",
			}},
		}, {
			Name:        []string{"--trace-time"},
			Description: `Add time stamps to trace/verbose output`,
		}, {
			Name:        []string{"--unix-socket"},
			Description: `Connect through this Unix domain socket`,
			Args: []model.Arg{{
				Name: "path",
			}},
		}, {
			Name:        []string{"--url"},
			Description: `URL to work with`,
			Args: []model.Arg{{
				Name: "url",
			}},
		}, {
			Name:        []string{"--xattr"},
			Description: `Store metadata in extended file attributes`,
		}},
	}
}
