// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.
//
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

package specs

import (
	"github.com/microsoft/clac/autocomplete/model"
)

func init() {
	Specs["k9s"] = model.Subcommand{
		Name:        []string{"k9s"},
		Description: `K9s is a terminal based UI to interact with your Kubernetes clusters`,
		Options: []model.Option{{
			Name:        []string{"-A", "--all-namespaces"},
			Description: `Launch K9s in all namespaces`,
		}, {
			Name:        []string{"--as"},
			Description: `Username to impersonate for the operation`,
			Args: []model.Arg{{
				Name:        "string",
				Description: `The username you want to impersonate`,
			}},
		}, {
			Name:        []string{"--as-group"},
			Description: `Group to impersonate for the operation`,
			Args: []model.Arg{{
				Name:        "stringArray",
				Description: `The group you want to impersonate`,
			}},
		}, {
			Name:        []string{"--certificate-authority"},
			Description: `Path to a cert file for the certificate authority`,
			Args: []model.Arg{{
				Templates:   []model.Template{model.TemplateFilepaths},
				Name:        "string",
				Description: `The path to a cert file`,
			}},
		}, {
			Name:        []string{"--client-key"},
			Description: `Path to a client key file for TLS`,
			Args: []model.Arg{{
				Templates:   []model.Template{model.TemplateFilepaths},
				Name:        "string",
				Description: `The path to a client key file`,
			}},
		}, {
			Name:        []string{"-c", "--command"},
			Description: `Overrides the default resource to load when the application launches`,
			Args: []model.Arg{{
				Name:        "string",
				Description: `The command you want to execute`,
			}},
		}, {
			Name:        []string{"--context"},
			Description: `The name of the kubeconfig context to use`,
			Args: []model.Arg{{
				Name:        "string",
				Description: `The name of the kubeconfig context`,
			}},
		}, {
			Name:        []string{"--crumbsless"},
			Description: `Turn K9s crumbs off`,
		}, {
			Name:        []string{"--headless"},
			Description: `Turn K9s header off`,
		}, {
			Name:        []string{"-h", "--help"},
			Description: `Show help for k9s`,
		}, {
			Name:        []string{"--insecure-skip-tls-verify"},
			Description: `If true, the server's caCertFile will not be checked for validity`,
		}, {
			Name:        []string{"--kubeconfig"},
			Description: `Path to the kubeconfig file to use for CLI requests`,
			Args: []model.Arg{{
				Templates:   []model.Template{model.TemplateFilepaths},
				Name:        "string",
				Description: `The path to the kubeconfig file`,
			}},
		}, {
			Name:        []string{"--logFile"},
			Description: `Specify the log file`,
			Args: []model.Arg{{
				Templates:   []model.Template{model.TemplateFilepaths},
				Name:        "string",
				Description: `The path of the log file`,
			}},
		}, {
			Name:        []string{"-l", "--logLevel"},
			Description: `Specify a log level (info, warn, debug, trace, error) (default 'info')`,
			Args: []model.Arg{{
				Name:        "string",
				Description: `The log level`,
				Suggestions: []model.Suggestion{{Name: []string{`info`}}, {Name: []string{`warn`}}, {Name: []string{`debug`}}, {Name: []string{`trace`}}, {Name: []string{`error`}}},
			}},
		}, {
			Name:        []string{"--logoless"},
			Description: `Turn K9s logo off`,
		}, {
			Name:        []string{"-n", "--namespace"},
			Description: `If present, the namespace scope for this CLI request`,
			Args: []model.Arg{{
				Name:        "string",
				Description: `The namespace`,
				Generator:   nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"--readonly"},
			Description: `Sets readOnly mode by overriding readOnly configuration setting`,
		}, {
			Name:        []string{"-r", "--refresh"},
			Description: `Specify the default refresh rate as an integer (sec) (default 2)`,
			Args: []model.Arg{{
				Name:        "int",
				Description: `The refresh rate (sec)`,
			}},
		}, {
			Name:        []string{"--request-timeout"},
			Description: `The length of time to wait before giving up on a single server request`,
			Args: []model.Arg{{
				Name:        "string",
				Description: `The length of time to wait`,
			}},
		}, {
			Name:        []string{"--screen-dump-dir"},
			Description: `Sets a path to a dir for a screen dumps`,
			Args: []model.Arg{{
				Name:        "string",
				Description: `The path to a dir for a screen dumps`,
			}},
		}, {
			Name:        []string{"--token"},
			Description: `Bearer token for authentication to the API server`,
			Args: []model.Arg{{
				Name:        "string",
				Description: `The Bearer token`,
			}},
		}, {
			Name:        []string{"--user"},
			Description: `The name of the kubeconfig user to use`,
			Args: []model.Arg{{
				Name:        "string",
				Description: `The name of the kubeconfig user`,
			}},
		}, {
			Name:        []string{"--write"},
			Description: `Sets write mode by overriding the readOnly configuration setting`,
		}},
		Subcommands: []model.Subcommand{{
			Name:        []string{"help"},
			Description: `Help about any command`,
			Args: []model.Arg{{
				Templates:  []model.Template{model.TemplateHelp},
				Name:       "command",
				IsOptional: true,
			}},
		}, {
			Name:        []string{"info"},
			Description: `Print configuration info`,
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Help for info`,
			}},
		}, {
			Name:        []string{"version"},
			Description: `Print version/build info`,
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Help for version`,
			}, {
				Name:        []string{"-s", "--short"},
				Description: `Prints K9s version info in short format`,
			}},
		}},
	}
}
