// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.
//
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

package specs

import (
	"github.com/microsoft/clac/autocomplete/model"
)

func init() {
	Specs["maigret"] = model.Subcommand{
		Name:        []string{"maigret"},
		Description: `Maigret is an easy-to-use and powerful OSINT tool for collecting a dossier on a person by username only`,
		Args: []model.Arg{{
			Name:        "user",
			Description: `The username for which you want to search sites`,
			IsVariadic:  true,
		}},
		Options: []model.Option{{
			Name:        []string{"-a", "--all-sites"},
			Description: `Use all sites for scan`,
		}, {
			Name:        []string{"--version"},
			Description: `Display version information and dependencies`,
		}, {
			Name:        []string{"--timeout"},
			Description: `Time in seconds to wait for response to requests (default {settings.timeout}s). A longer timeout will be more likely to get results from slow sites. On the other hand, this may cause a long delay to gather all results`,
			Args: []model.Arg{{
				Name:        "Timeout",
				Description: `Timeout in seconds`,
			}},
		}, {
			Name:        []string{"--retries"},
			Description: `Attempts to restart temporarily failed requests`,
			Args: []model.Arg{{
				Name:        "Retries",
				Description: `Number of attempts`,
			}},
		}, {
			Name:        []string{"-n", "--max-connections"},
			Description: `Allowed number of concurrent connections (default {settings.max_connections})`,
			Args: []model.Arg{{
				Name:        "Connections",
				Description: `Number connections`,
			}},
		}, {
			Name:        []string{"--no-recursion"},
			Description: `Disable recursive search by additional data extracted from pages`,
		}, {
			Name:        []string{"--no-extracting"},
			Description: `Disable parsing pages for additional data and other usernames`,
		}, {
			Name:        []string{"--id-type"},
			Description: `Specify identifier(s) type (default: username)`,
			Args: []model.Arg{{
				Name:        "Type",
				Description: `Type of identifier`,
				Suggestions: []model.Suggestion{{Name: []string{`username`}}, {Name: []string{`yandex_public_id`}}, {Name: []string{`gaia_id`}}, {Name: []string{`vk_id`}}, {Name: []string{`ok_id`}}, {Name: []string{`wikimapia_uid`}}, {Name: []string{`steam_id`}}, {Name: []string{`uidme_uguid`}}, {Name: []string{`yelp_userid`}}},
			}},
		}, {
			Name:        []string{"--db"},
			Description: `Load Maigret database from a JSON file or HTTP web resource`,
			Args: []model.Arg{{
				Templates:   []model.Template{model.TemplateFilepaths},
				Name:        "DB path",
				Description: `DB path`,
			}},
		}, {
			Name:        []string{"--cookies-jar-file"},
			Description: `File with cookies`,
			Args: []model.Arg{{
				Templates:   []model.Template{model.TemplateFilepaths},
				Name:        "Cookie file",
				Description: `Cookie file`,
			}},
		}, {
			Name:        []string{"--ignore-ids"},
			Description: `Do not make search by the specified username or other ids`,
			Args: []model.Arg{{
				Name:        "Ignored ids",
				Description: `Ignored ids`,
				IsVariadic:  true,
			}},
		}, {
			Name:        []string{"-fo", "--folderoutput"},
			Description: `If using multiple usernames, the output of the results will be saved to this folder`,
			Args: []model.Arg{{
				Templates:   []model.Template{model.TemplateFolders},
				Name:        "Reports path",
				Description: `Reports path`,
			}},
		}, {
			Name:        []string{"-p", "--proxy"},
			Description: `Make requests over a proxy. e.g. socks5://127.0.0.1:1080`,
			Args: []model.Arg{{
				Name:        "Proxy URL",
				Description: `Proxy URL`,
			}},
		}, {
			Name:        []string{"--tor-proxy"},
			Description: `Specify URL of your Tor gateway. Default is socks5://127.0.0.1:9050`,
			Args: []model.Arg{{
				Name:        "Tor Proxy URL",
				Description: `Tor Proxy URL`,
			}},
		}, {
			Name:        []string{"--i2p-proxy"},
			Description: `Specify URL of your I2P gateway. Default is http://127.0.0.1:4444`,
			Args: []model.Arg{{
				Name:        "I2P URL",
				Description: `I2P URL`,
			}},
		}, {
			Name:        []string{"--with-domains"},
			Description: `Enable (experimental) feature of checking domains on usernames`,
		}, {
			Name:        []string{"--tags"},
			Description: `Specify tags of sites (see "--stats")`,
			Args: []model.Arg{{
				Name:       "Tags",
				IsVariadic: true,
			}},
		}, {
			Name:        []string{"--site"},
			Description: `Limit analysis to just the specified sites (multiple option)`,
			Args: []model.Arg{{
				Name:       "Site name",
				IsVariadic: true,
			}},
		}, {
			Name:        []string{"--use-disabled-sites"},
			Description: `Use disabled sites to search (may cause many false positives)`,
		}, {
			Name:        []string{"--parse"},
			Description: `Parse page by URL and extract username and IDs to use for search`,
			Args: []model.Arg{{
				Name: "Parse URL",
			}},
		}, {
			Name:        []string{"--submit"},
			Description: `URL of existing profile in new site to submit`,
			Args: []model.Arg{{
				Name: "Site URL",
			}},
		}, {
			Name:        []string{"--self-check"},
			Description: `Do self check for sites and database and disable non-working ones`,
		}, {
			Name:        []string{"--stats"},
			Description: `Show database statistics (most frequent sites engines and tags)`,
		}, {
			Name:        []string{"--print-not-found"},
			Description: `Print sites where the username was not found`,
		}, {
			Name:        []string{"--print-errors"},
			Description: `Print errors messages: connection, captcha, site country ban, etc`,
		}, {
			Name:        []string{"-v", "--verbose"},
			Description: `Display extra information and metrics`,
		}, {
			Name:        []string{"-info", "--vv"},
			Description: `Display extra/service information and metrics`,
		}, {
			Name:        []string{"--debug", "-vvv", "-d"},
			Description: `Display extra/service/debug information and metrics, save responses in debug.log`,
		}, {
			Name:        []string{"--no-color"},
			Description: `Don't color terminal output`,
		}, {
			Name:        []string{"--no-progressbar"},
			Description: `Don't show progressbar`,
		}, {
			Name:        []string{"-T", "--txt"},
			Description: `Create a TXT report (one report per username)`,
		}, {
			Name:        []string{"-C", "--csv"},
			Description: `Create a CSV report (one report per username)`,
		}, {
			Name:        []string{"-H", "--html"},
			Description: `Create an HTML report (one report per username)`,
		}, {
			Name:        []string{"-X", "--xmind"},
			Description: `Create a XMind 8 mindmap report (one report per username)`,
		}, {
			Name:        []string{"-P", "--pdf"},
			Description: `Create a PDF report (one report per username)`,
		}, {
			Name:        []string{"-G", "--graph"},
			Description: `Create a graph report (one report per username)`,
		}, {
			Name:        []string{"-J", "--json"},
			Description: `Generate a JSON report of specific type: simple, ndjson (one report per username)`,
			Args: []model.Arg{{
				Name:        "Type",
				Suggestions: []model.Suggestion{{Name: []string{`simple`}}, {Name: []string{`ndjson`}}},
			}},
		}, {
			Name:        []string{"--reports-sorting"},
			Description: `Method of results sorting in reports (default: in order of getting the result)`,
			Args: []model.Arg{{
				Name:        "Type",
				Suggestions: []model.Suggestion{{Name: []string{`default`}}, {Name: []string{`data`}}},
			}},
		}},
	}
}
