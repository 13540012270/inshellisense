// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["tmux"] = model.Subcommand{
		Name:        []string{"tmux"},
		Description: `A terminal multiplexer`,
		Subcommands: []model.Subcommand{{
			Name:        []string{"a", "at", "attach", "attach-session"},
			Description: `Attach to last session`,
			Options: []model.Option{{
				Name:        []string{"-d"},
				Description: `Detach all others clients to the session`,
			}, {
				Name:        []string{"-x"},
				Description: `Send SIGHUP to the parent process and detach the client`,
			}, {
				Name:        []string{"-f"},
				Description: `Set client flags`,
				Args: []model.Arg{{
					Name:        "flags",
					Description: `Comma-separated list of flags`,
					Suggestions: []model.Suggestion{{Name: []string{`active-pane`}}, {Name: []string{`ignore-size`}}, {Name: []string{`no-output`}}, {Name: []string{`pause-after`}}, {Name: []string{`read-only`}}, {Name: []string{`wait-exit`}}},
				}},
			}, {
				Name:        []string{"-c"},
				Description: `Set the session's working directory`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFolders},
					Name:        "working-directory",
					Description: `The session's working directory`,
				}},
			}, {
				Name:        []string{"-E"},
				Description: `Don't use update-environment option`,
			}, {
				Name:        []string{"-t"},
				Description: `Attach to a session with the given name`,
				Args: []model.Arg{{
					Name:      "target-session",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"bind", "bind-key"},
			Description: `Bind a key to a command`,
			Args: []model.Arg{{
				Name:        "key",
				Description: `The key to bind`,
			}, {
				Name:        "command",
				Description: `The command to bind to the key`,
			}, {
				Name:        "arguments",
				Description: `Arguments for the command`,
				IsOptional:  true,
				IsVariadic:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"-n"},
				Description: `Alias for -T root`,
			}, {
				Name:        []string{"-r"},
				Description: `Indicate that this key may repeat`,
			}, {
				Name:        []string{"-N"},
				Description: `Attach a note to the key`,
				Args: []model.Arg{{
					Name: "note",
				}},
			}, {
				Name:        []string{"-T"},
				Description: `The key table to use`,
				Args: []model.Arg{{
					Name: "key-table",
				}},
			}},
		}, {
			Name:        []string{"breakp", "break-pane"},
			Description: `Break a pane from an exiting into a new window`,
			Options: []model.Option{{
				Name:        []string{"-a"},
				Description: `Move the window to the next index after`,
			}, {
				Name:        []string{"-b"},
				Description: `Move the window to the next index before`,
			}, {
				Name:        []string{"-d"},
				Description: `The new windows does not become the current window`,
			}, {
				Name:        []string{"-P"},
				Description: `Print information about the new window`,
			}, {
				Name:        []string{"-F"},
				Description: `Format output`,
				Args: []model.Arg{{
					Name:        "format",
					Description: `The format for the output of this command`,
				}},
			}, {
				Name:        []string{"-n"},
				Description: `The target window`,
				Args: []model.Arg{{
					Name:      "window-name",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-s"},
				Description: `The source pane`,
				Args: []model.Arg{{
					Name:      "src-pane",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-t"},
				Description: `The destination window`,
				Args: []model.Arg{{
					Name:      "window-name",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"capturep", "capture-pane"},
			Description: `Capture the contents of a pane to a buffer`,
			Options: []model.Option{{
				Name:        []string{"-a"},
				Description: `Use the alternate screen and history is not accessible`,
			}, {
				Name:        []string{"-e"},
				Description: `Include escape sequences for text and background attributes`,
			}, {
				Name:        []string{"-p"},
				Description: `Redirect output to stdout`,
			}, {
				Name:        []string{"-P"},
				Description: `Capture only outputs that is the beginning of an as-yet incomplete escape sequence`,
			}, {
				Name:        []string{"-q"},
				Description: `Do not throw an error if not alternate screen is found`,
			}, {
				Name:        []string{"-C"},
				Description: `Escape non-printable characters as octal`,
			}, {
				Name:        []string{"-J"},
				Description: `Preserve trailing spaces and join any wrapped lines`,
			}, {
				Name:        []string{"-N"},
				Description: `Preserve trailing spaces at each line's end`,
			}, {
				Name:        []string{"-b"},
				Description: `The buffer name`,
				Args: []model.Arg{{
					Name:      "buffer-name",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-E"},
				Description: `Ending line number`,
				Args: []model.Arg{{
					Name: "end-line",
				}},
			}, {
				Name:        []string{"-S"},
				Description: `Starting line number`,
				Args: []model.Arg{{
					Name: "start-line",
				}},
			}, {
				Name:        []string{"-t"},
				Description: `The target pane`,
				Args: []model.Arg{{
					Name:      "src-pane",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"choose-buffer"},
			Description: `Put a pane into buffer choice mode`,
			Args: []model.Arg{{
				Name:       "template",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-N"},
				Description: `Start without the preview`,
			}, {
				Name:        []string{"-Z"},
				Description: `Zoom the pane`,
			}, {
				Name:        []string{"-r"},
				Description: `Reverse the sort order`,
			}, {
				Name:        []string{"-F"},
				Description: `Format output`,
				Args: []model.Arg{{
					Name:        "format",
					Description: `The format for the output of this command`,
				}},
			}, {
				Name:        []string{"-f"},
				Description: `Specify an initial filter`,
				Args: []model.Arg{{
					Name: "filter",
				}},
			}, {
				Name:        []string{"-O"},
				Description: `Specify the sort order`,
				Args: []model.Arg{{
					Name:        "sort-order",
					Suggestions: []model.Suggestion{{Name: []string{`time`}}, {Name: []string{`name`}}, {Name: []string{`size`}}},
				}},
			}, {
				Name:        []string{"-t"},
				Description: `The target pane`,
				Args: []model.Arg{{
					Name:      "src-pane",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"choose-client"},
			Description: `Put a pane into buffer client mode`,
			Args: []model.Arg{{
				Name:       "template",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-N"},
				Description: `Start without the preview`,
			}, {
				Name:        []string{"-r"},
				Description: `Reserve the sort order`,
			}, {
				Name:        []string{"-Z"},
				Description: `Zoom the pane`,
			}, {
				Name:        []string{"-F"},
				Description: `Format output`,
				Args: []model.Arg{{
					Name:        "format",
					Description: `The format for the output of this command`,
				}},
			}, {
				Name:        []string{"-f"},
				Description: `Specify an initial filter`,
				Args: []model.Arg{{
					Name: "filter",
				}},
			}, {
				Name:        []string{"-O"},
				Description: `Specify the initial sort field`,
				Args: []model.Arg{{
					Name:        "sort",
					Suggestions: []model.Suggestion{{Name: []string{`name`}}, {Name: []string{`size`}}, {Name: []string{`creation`}}, {Name: []string{`activity`}}},
				}},
			}, {
				Name:        []string{"-t"},
				Description: `The target pane`,
				Args: []model.Arg{{
					Name:      "src-pane",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"choose-tree"},
			Description: `Put a pane into buffer tree mode`,
			Args: []model.Arg{{
				Name:       "template",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-G"},
				Description: `Include all sessions in any session group in the tree`,
			}, {
				Name:        []string{"-N"},
				Description: `Start without the preview`,
			}, {
				Name:        []string{"-r"},
				Description: `Reserve the sort order`,
			}, {
				Name:        []string{"-s"},
				Description: `Start with sessions collapsed`,
			}, {
				Name:        []string{"-w"},
				Description: `Start with windows collapsed`,
			}, {
				Name:        []string{"-Z"},
				Description: `Zoom the pane`,
			}, {
				Name:        []string{"-F"},
				Description: `Format output`,
				Args: []model.Arg{{
					Name:        "format",
					Description: `The format for the output of this command`,
				}},
			}, {
				Name:        []string{"-f"},
				Description: `Specify an initial filter`,
				Args: []model.Arg{{
					Name: "filter",
				}},
			}, {
				Name:        []string{"-O"},
				Description: `Specify the initial sort field`,
				Args: []model.Arg{{
					Name:        "sort",
					Suggestions: []model.Suggestion{{Name: []string{`name`}}, {Name: []string{`size`}}, {Name: []string{`creation`}}, {Name: []string{`activity`}}},
				}},
			}, {
				Name:        []string{"-t"},
				Description: `The target pane`,
				Args: []model.Arg{{
					Name:      "src-pane",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"clearhist", "clear-history"},
			Description: `Remove and clear history for a pane`,
		}, {
			Name:        []string{"clock-mode"},
			Description: `Enter clock mode`,
		}, {
			Name:        []string{"command-prompt"},
			Description: `Open the tmux command prompt in a client`,
			Args: []model.Arg{{
				Name:        "template",
				Description: `If specified, used as a command`,
				IsOptional:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"-l"},
				Description: `The prompt only accept one key press`,
			}, {
				Name:        []string{"-i"},
				Description: `Execute the command every time the prompt input changes`,
			}, {
				Name:        []string{"-k"},
				Description: `Like -l but the key press is translated to a key name`,
			}, {
				Name:        []string{"-N"},
				Description: `The prompt only accept numeric key press`,
			}, {
				Name:        []string{"-T"},
				Description: `Tell that the prompt is for a target`,
			}, {
				Name:        []string{"-W"},
				Description: `Tell that the prompt is for a window`,
			}, {
				Name:        []string{"-I"},
				Description: `Comma-separated list of the initial text for each prompt`,
				Args: []model.Arg{{
					Name: "inputs",
				}},
			}, {
				Name:        []string{"-p"},
				Description: `Comma-separated list of prompts which are displayed in order`,
				Args: []model.Arg{{
					Name: "prompts",
				}},
			}, {
				Name:        []string{"-t"},
				Description: `The target client`,
				Args: []model.Arg{{
					Name:      "target-client",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"confirm", "confirm-before"},
			Description: `Run a command but ask for confirmation before`,
			Args: []model.Arg{{
				Name:        "command",
				Description: `The command to run`,
				IsVariadic:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"-p"},
				Description: `A prompt to display for confirmation`,
				Args: []model.Arg{{
					Name: "prompt",
				}},
			}, {
				Name:        []string{"-t"},
				Description: `The target client`,
				Args: []model.Arg{{
					Name:      "target-client",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"copy-mode"},
			Description: `Enter copy mode`,
			Options: []model.Option{{
				Name:        []string{"-e"},
				Description: `Scrolling to the bottom should exit copy mode`,
			}, {
				Name:        []string{"-H"},
				Description: `Hide the position indicator`,
			}, {
				Name:        []string{"-M"},
				Description: `Begin a mouse drag`,
			}, {
				Name:        []string{"-q"},
				Description: `Cancel copy mode and any other modes`,
			}, {
				Name:        []string{"-u"},
				Description: `Scroll one page up`,
			}, {
				Name:        []string{"-s"},
				Description: `The source pane`,
				Args: []model.Arg{{
					Name:      "src-pane",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-t"},
				Description: `The target pane`,
				Args: []model.Arg{{
					Name:      "src-pane",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"deleteb", "delete-buffer"},
			Description: `Delete a paste buffer`,
			Options: []model.Option{{
				Name:        []string{"-b"},
				Description: `The target buffer`,
				Args: []model.Arg{{
					Name:      "buffer-name",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"detach", "detach-client"},
			Description: `Detach a client from the server`,
			Options: []model.Option{{
				Name:        []string{"-a"},
				Description: `Kills all but the client given with -t`,
			}, {
				Name:        []string{"-P"},
				Description: `Send SIGHUP to the parent process`,
			}, {
				Name:        []string{"-E"},
				Description: `Run the given shell-command to replace the client`,
				Args: []model.Arg{{
					Name:        "shell-command",
					Description: `The shell-command to run`,
				}},
			}, {
				Name:        []string{"-t"},
				Description: `The target client`,
				Args: []model.Arg{{
					Name:      "target-client",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-s"},
				Description: `Detach all clients attached to the specified session`,
				Args: []model.Arg{{
					Name:      "target-session",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"menu", "display-menu"},
			Description: `Display menu on target-client`,
			Args: []model.Arg{{
				Name:        "name",
				Description: `The name of the menu`,
			}, {
				Name:        "key",
				Description: `The key to press to open the menu`,
			}, {
				Name:        "command",
				Description: `Commands to execute`,
				IsVariadic:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"-O"},
				Description: `Do not close the menu when the mouse button is released`,
			}, {
				Name:        []string{"-c"},
				Description: `The target client`,
				Args: []model.Arg{{
					Name:      "target-client",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-t"},
				Description: `The target pane`,
				Args: []model.Arg{{
					Name:      "src-pane",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-T"},
				Description: `Specify a title`,
				Args: []model.Arg{{
					Name: "title",
				}},
			}, {
				Name:        []string{"-x"},
				Description: `Give the x position of the menu`,
				Args: []model.Arg{{
					Name: "position",
				}},
			}, {
				Name:        []string{"-y"},
				Description: `Give the y position of the menu`,
				Args: []model.Arg{{
					Name: "position",
				}},
			}},
		}, {
			Name:        []string{"display", "display-message"},
			Description: `Display a message in the status line`,
			Args: []model.Arg{{
				Name:        "message",
				Description: `The message to display`,
				IsOptional:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"-a"},
				Description: `List the format variables and their values`,
			}, {
				Name:        []string{"-I"},
				Description: `Forward any input read from stdin to the empty pane target-pane`,
			}, {
				Name:        []string{"-p"},
				Description: `Print output to stdout`,
			}, {
				Name:        []string{"-v"},
				Description: `Print verbose logging as the format is parsed`,
				Args: []model.Arg{{
					Name:      "target-client",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-d"},
				Description: `A delay for the message`,
				Args: []model.Arg{{
					Name: "delay",
				}},
			}, {
				Name:        []string{"-t"},
				Description: `The target pane`,
				Args: []model.Arg{{
					Name:      "src-pane",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"displayp", "display-panes"},
			Description: `Display an indicator for each visible pane`,
			Args: []model.Arg{{
				Name:       "template",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-b"},
				Description: `Do not block other commands from running until the indicator is closed`,
			}, {
				Name:        []string{"-N"},
				Description: `Do not close the indicator when a key is pressed`,
			}, {
				Name:        []string{"-d"},
				Description: `Specify the duration`,
				Args: []model.Arg{{
					Name:        "duration",
					Description: `The duration to close the indicator after in milliseconds`,
				}},
			}, {
				Name:        []string{"-t"},
				Description: `The target client`,
				Args: []model.Arg{{
					Name:      "target-client",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"findw", "find-window"},
			Description: `Search for a pattern in windows`,
			Args: []model.Arg{{
				Name:        "match-string",
				Description: `A string to search for`,
			}},
			Options: []model.Option{{
				Name:        []string{"-i"},
				Description: `Make the search ignore cases`,
			}, {
				Name:        []string{"-C"},
				Description: `Match only visible window contents`,
			}, {
				Name:        []string{"-N"},
				Description: `Match only the window name`,
			}, {
				Name:        []string{"-r"},
				Description: `Search a regular expression`,
			}, {
				Name:        []string{"-T"},
				Description: `Match only the window's title`,
			}, {
				Name:        []string{"-Z"},
				Description: `Zoom the pane`,
			}, {
				Name:        []string{"-t"},
				Description: `The target pane`,
				Args: []model.Arg{{
					Name:      "src-pane",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"has", "has-session"},
			Description: `Check and report if a session exists on the server`,
			Options: []model.Option{{
				Name:        []string{"-t"},
				Description: `Specify the target session`,
				Args: []model.Arg{{
					Name:      "target-session",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"if", "if-shell"},
			Description: `Execute a tmux command if a shell-command succeeded`,
		}, {
			Name:        []string{"joinp", "join-pane", "movep", "move-pane"},
			Description: `Split a pane and move an existing one into the new space`,
			Options: []model.Option{{
				Name:        []string{"-b"},
				Description: `Src-pane will be joined to left of or above dst-pane`,
				Args: []model.Arg{{
					Name:      "src-pane",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-l"},
				Description: `Set the size of the new space`,
				Args: []model.Arg{{
					Name:        "size",
					Description: `The size of the new space`,
				}},
			}, {
				Name:        []string{"-s"},
				Description: `The source pane`,
				Args: []model.Arg{{
					Name:      "src-pane",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-t"},
				Description: `The destination pane`,
				Args: []model.Arg{{
					Name:      "src-pane",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"killp", "kill-pane"},
			Description: `Destroy a given pane`,
			Options: []model.Option{{
				Name:        []string{"-a"},
				Description: `Kill all but the target-pane`,
			}, {
				Name:        []string{"-t"},
				Description: `The target pane`,
				Args: []model.Arg{{
					Name:      "src-pane",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"kill-server"},
			Description: `Kill clients, session and server`,
		}, {
			Name:        []string{"kill-ses", "kill-session"},
			Description: `Kill/delete sessions`,
			Options: []model.Option{{
				Name:        []string{"-t"},
				Description: `Kill/delete session with the given name`,
				Args: []model.Arg{{
					Name:      "target-session",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-a"},
				Description: `Kill/delete all session but the current`,
			}, {
				Name:        []string{"-C"},
				Description: `Clear alerts (bell, activity, or silence) in all windows linked to the session`,
			}},
		}, {
			Name:        []string{"killw", "kill-window"},
			Description: `Destroy a given window`,
			Options: []model.Option{{
				Name:        []string{"-a"},
				Description: `Kill all but the target-window`,
			}, {
				Name:        []string{"-t"},
				Description: `The target window`,
				Args: []model.Arg{{
					Name:      "window-name",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"lastp", "last-pane"},
			Description: `Select the previously selected pane`,
			Options: []model.Option{{
				Name:        []string{"-d"},
				Description: `Disable input to the pane`,
			}, {
				Name:        []string{"-e"},
				Description: `Enable input to the pane`,
			}, {
				Name:        []string{"-Z"},
				Description: `Keep the window zoomed if it was zoomed`,
			}, {
				Name:        []string{"-t"},
				Description: `The target window`,
				Args: []model.Arg{{
					Name:      "window-name",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"last", "last-window"},
			Description: `Select the previously selected window`,
			Options: []model.Option{{
				Name:        []string{"-t"},
				Description: `Select the previously select window of the target-session`,
				Args: []model.Arg{{
					Name:      "target-session",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"linkw", "link-window"},
			Description: `Link a window to another`,
			Options: []model.Option{{
				Name:        []string{"-a"},
				Description: `Move the window to the next index after dst-window`,
			}, {
				Name:        []string{"-b"},
				Description: `Move the window to the next index before dst-window`,
			}, {
				Name:        []string{"-d"},
				Description: `Do not select the newly linked window`,
			}, {
				Name:        []string{"-k"},
				Description: `Kill dst-window if exist`,
			}, {
				Name:        []string{"-s"},
				Description: `The source window`,
				Args: []model.Arg{{
					Name:      "window-name",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-t"},
				Description: `The destination window`,
				Args: []model.Arg{{
					Name:      "window-name",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"lsb", "list-buffers"},
			Description: `List paste buffers of a session`,
		}, {
			Name:        []string{"lsc", "list-clients"},
			Description: `List clients attached to a server`,
			Options: []model.Option{{
				Name:        []string{"-F"},
				Description: `Format output`,
				Args: []model.Arg{{
					Name:        "format",
					Description: `The format for the output of this command`,
				}},
			}, {
				Name:        []string{"-t"},
				Description: `List only clients connected to that session`,
				Args: []model.Arg{{
					Name:      "target-session",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"lscm", "list-commands"},
			Description: `List supported sub-commands`,
			Args: []model.Arg{{
				Name:        "command",
				Description: `The command to list syntax of`,
				IsOptional:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"-F"},
				Description: `Format output`,
				Args: []model.Arg{{
					Name:        "format",
					Description: `The format for the output of this command`,
				}},
			}},
		}, {
			Name:        []string{"lsk", "list-keys"},
			Description: `List all key-bindings`,
		}, {
			Name:        []string{"lsp", "list-panes"},
			Description: `List panes of a window`,
			Options: []model.Option{{
				Name:        []string{"-a"},
				Description: `Ignore target-window and list all panes`,
			}, {
				Name:        []string{"-s"},
				Description: `Target-window becomes a session`,
			}, {
				Name:        []string{"-F"},
				Description: `Format output`,
				Args: []model.Arg{{
					Name:        "format",
					Description: `The format for the output of this command`,
				}},
			}, {
				Name:        []string{"-f"},
				Description: `Specify a filter`,
				Args: []model.Arg{{
					Name: "filter",
				}},
			}, {
				Name:        []string{"-t"},
				Description: `The target window`,
				Args: []model.Arg{{
					Name:      "window-name",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"ls", "list-sessions"},
			Description: `List sessions managed by a server`,
			Options: []model.Option{{
				Name:        []string{"-F"},
				Description: `Format output`,
				Args: []model.Arg{{
					Name:        "format",
					Description: `The format for the output of this command`,
				}},
			}, {
				Name:        []string{"-f"},
				Description: `Filter the sessions`,
				Args: []model.Arg{{
					Name: "filter",
				}},
			}},
		}, {
			Name:        []string{"lsw", "list-windows"},
			Description: `List windows of a session`,
			Options: []model.Option{{
				Name:        []string{"-a"},
				Description: `Ignore target-session and list all windows`,
			}, {
				Name:        []string{"-F"},
				Description: `Format output`,
				Args: []model.Arg{{
					Name:        "format",
					Description: `The format for the output of this command`,
				}},
			}, {
				Name:        []string{"-f"},
				Description: `Specify a filter`,
				Args: []model.Arg{{
					Name: "filter",
				}},
			}, {
				Name:        []string{"-t"},
				Description: `The target session`,
				Args: []model.Arg{{
					Name:      "target-session",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"loadb", "load-buffer"},
			Description: `Load a file into a paste buffer`,
			Args: []model.Arg{{
				Name:        "path",
				Description: `Load from this path`,
			}},
			Options: []model.Option{{
				Name:        []string{"-w"},
				Description: `Send the buffer to the clipboard`,
			}, {
				Name:        []string{"-b"},
				Description: `The target buffer`,
				Args: []model.Arg{{
					Name:      "buffer-name",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-t"},
				Description: `The target client`,
				Args: []model.Arg{{
					Name:      "target-client",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"lockc", "lock-client"},
			Description: `Lock a client`,
			Options: []model.Option{{
				Name:        []string{"-t"},
				Description: `The target client`,
				Args: []model.Arg{{
					Name:      "target-client",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"lock", "lock-server"},
			Description: `Lock all clients attached to the server`,
		}, {
			Name:        []string{"locks", "lock-session"},
			Description: `Lock all clients attached to a session`,
			Options: []model.Option{{
				Name:        []string{"-t"},
				Description: `Lock all clients attached to target-session`,
				Args: []model.Arg{{
					Name:      "target-session",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"movew", "move-window"},
			Description: `Move a window to another`,
			Options: []model.Option{{
				Name:        []string{"-a"},
				Description: `Move the window to the next index after dst-window`,
			}, {
				Name:        []string{"-b"},
				Description: `Move the window to the next index before dst-window`,
			}, {
				Name:        []string{"-r"},
				Description: `Renumber all windows in the session in sequential order`,
			}, {
				Name:        []string{"-d"},
				Description: `Do not select the newly linked window`,
			}, {
				Name:        []string{"-k"},
				Description: `Kill dst-window if exist`,
			}, {
				Name:        []string{"-s"},
				Description: `The source window`,
				Args: []model.Arg{{
					Name:      "window-name",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-t"},
				Description: `The destination window`,
				Args: []model.Arg{{
					Name:      "window-name",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"new", "new-session"},
			Description: `Create a new session`,
			Args: []model.Arg{{
				Name:        "shell-command",
				Description: `A shell command to run when creating the session`,
			}},
			Options: []model.Option{{
				Name:        []string{"-A"},
				Description: `Behave like attach-session if session-name already exist`,
			}, {
				Name:        []string{"-d"},
				Description: `Use the initial size from default-size`,
			}, {
				Name:        []string{"-D"},
				Description: `Behave like -d if -A is set`,
			}, {
				Name:        []string{"-E"},
				Description: `Do not use update-environment option`,
			}, {
				Name:        []string{"-P"},
				Description: `Print information about the new session`,
			}, {
				Name:        []string{"-X"},
				Description: `Behave like -x if -A is set`,
			}, {
				Name:        []string{"-c"},
				Description: `Specify a start directory for the session`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFolders},
					Name:        "start-directory",
					Description: `The start directory`,
				}},
			}, {
				Name:        []string{"-e"},
				Description: `Set environment variables`,
				Args: []model.Arg{{
					Name:        "environment",
					Description: `Environment variables with the form VARIABLE=VALUE`,
				}},
			}, {
				Name:        []string{"-f"},
				Description: `Set client flags`,
				Args: []model.Arg{{
					Name:        "flags",
					Description: `Comma-separated list of flags`,
					Suggestions: []model.Suggestion{{Name: []string{`active-pane`}}, {Name: []string{`ignore-size`}}, {Name: []string{`no-output`}}, {Name: []string{`pause-after`}}, {Name: []string{`read-only`}}, {Name: []string{`wait-exit`}}},
				}},
			}, {
				Name:        []string{"-F"},
				Description: `Format output`,
				Args: []model.Arg{{
					Name:        "format",
					Description: `The format for the output of this command`,
				}},
			}, {
				Name:        []string{"-n"},
				Description: `Start a new session with the given name`,
				Args: []model.Arg{{
					Name: "window-name",
				}},
			}, {
				Name:        []string{"-s"},
				Description: `Start a new session with the given name`,
				Args: []model.Arg{{
					Name: "session-name",
				}},
			}, {
				Name:        []string{"-t"},
				Description: `The name of the group`,
				Args: []model.Arg{{
					Name: "group-name",
				}},
			}, {
				Name:        []string{"-x"},
				Description: `The width of the session`,
				Args: []model.Arg{{
					Name: "width",
				}},
			}, {
				Name:        []string{"-y"},
				Description: `The height of the session`,
				Args: []model.Arg{{
					Name: "height",
				}},
			}},
		}, {
			Name:        []string{"neww", "new-window"},
			Description: `Create a new window`,
			Args: []model.Arg{{
				Name:        "shell-command",
				Description: `A shell command to run when creating the window`,
			}},
			Options: []model.Option{{
				Name:        []string{"-a"},
				Description: `Insert the new window at the next index after target-window`,
			}, {
				Name:        []string{"-b"},
				Description: `Insert the new window at the next index before target-window`,
			}, {
				Name:        []string{"-d"},
				Description: `The session does not make the new window the current window`,
			}, {
				Name:        []string{"-k"},
				Description: `Kill the target-window if exist`,
			}, {
				Name:        []string{"-P"},
				Description: `Print information about the new window`,
			}, {
				Name:        []string{"-S"},
				Description: `Select window-name if exist`,
			}, {
				Name:        []string{"-c"},
				Description: `Specify a start directory for the window`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFolders},
					Name:        "start-directory",
					Description: `The start directory`,
				}},
			}, {
				Name:        []string{"-e"},
				Description: `Set environment variables`,
				Args: []model.Arg{{
					Name:        "environment",
					Description: `Environment variables with the form VARIABLE=VALUE`,
				}},
			}, {
				Name:        []string{"-F"},
				Description: `Format output`,
				Args: []model.Arg{{
					Name:        "format",
					Description: `The format for the output of this command`,
				}},
			}, {
				Name:        []string{"-n"},
				Description: `Start a new window with the given name`,
				Args: []model.Arg{{
					Name: "window-name",
				}},
			}, {
				Name:        []string{"-t"},
				Description: `The target window`,
				Args: []model.Arg{{
					Name:      "window-name",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"nextl", "next-layout"},
			Description: `Move a window to the next layout`,
			Options: []model.Option{{
				Name:        []string{"-t"},
				Description: `The target pane`,
				Args: []model.Arg{{
					Name:      "src-pane",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"next", "next-window"},
			Description: `Move to the next window in a session`,
			Options: []model.Option{{
				Name:        []string{"-a"},
				Description: `Move to the next window with an alert`,
			}, {
				Name:        []string{"-t"},
				Description: `Move to the next window of the target-session`,
				Args: []model.Arg{{
					Name:      "target-session",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"pasteb", "paste-buffer"},
			Description: `Insert a paste buffer into the window`,
		}, {
			Name:        []string{"pipep", "pipe-pane"},
			Description: `Pipe output from a pane to a shell command`,
			Args: []model.Arg{{
				Name:        "shell-command",
				Description: `The shell-command to run`,
				IsOptional:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"-I"},
				Description: `Connect stdout to shell-command`,
			}, {
				Name:        []string{"-O"},
				Description: `Connect stdin to shell-command`,
			}, {
				Name:        []string{"-o"},
				Description: `Only open a new pipe if no previous pipe exists`,
			}, {
				Name:        []string{"-t"},
				Description: `The target pane`,
				Args: []model.Arg{{
					Name:      "src-pane",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"prevl", "previous-layout"},
			Description: `Move a window to the previous layout`,
			Options: []model.Option{{
				Name:        []string{"-t"},
				Description: `The target window`,
				Args: []model.Arg{{
					Name:      "window-name",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"prev", "previous-window"},
			Description: `Move to the previous window in a session`,
			Options: []model.Option{{
				Name:        []string{"-a"},
				Description: `Move with an alert`,
			}, {
				Name:        []string{"-t"},
				Description: `Move to the previous window of the target-session`,
				Args: []model.Arg{{
					Name:      "target-session",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"refresh", "refresh-client"},
			Description: `Refresh a client`,
			Args: []model.Arg{{
				Name:        "adjustment",
				Description: `An adjustment value to use`,
				IsOptional:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"-c"},
				Description: `Return the tracking cursor`,
			}, {
				Name:        []string{"-D"},
				Description: `Allow the visible portion of a window to be changed`,
			}, {
				Name:        []string{"-l"},
				Description: `Request the clipboard from the client`,
			}, {
				Name:        []string{"-L"},
				Description: `Allow the visible portion of a window to be changed`,
			}, {
				Name:        []string{"-R"},
				Description: `Allow the visible portion of a window to be changed`,
			}, {
				Name:        []string{"-S"},
				Description: `Only update the client's status line`,
			}, {
				Name:        []string{"-U"},
				Description: `Allow the visible portion of a window to be changed`,
			}, {
				Name:        []string{"-A"},
				Description: `The target pane`,
				Args: []model.Arg{{
					Name:      "src-pane",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-B"},
				Description: `A subscription to a format for a control mode`,
				Args: []model.Arg{{
					Name: "subscription",
				}},
			}, {
				Name:        []string{"-C"},
				Description: `Set the width and height`,
				Args: []model.Arg{{
					Name: "XxY",
				}},
			}, {
				Name:        []string{"-f"},
				Description: `Set client flags`,
				Args: []model.Arg{{
					Name:        "flags",
					Description: `Comma-separated list of flags`,
					Suggestions: []model.Suggestion{{Name: []string{`active-pane`}}, {Name: []string{`ignore-size`}}, {Name: []string{`no-output`}}, {Name: []string{`pause-after`}}, {Name: []string{`read-only`}}, {Name: []string{`wait-exit`}}},
				}},
			}, {
				Name:        []string{"-t"},
				Description: `The target client`,
				Args: []model.Arg{{
					Name:      "target-client",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"rename", "rename-session"},
			Description: `Rename a session`,
			Args: []model.Arg{{
				Name:        "new-name",
				Description: `The new name of the session`,
			}},
			Options: []model.Option{{
				Name:        []string{"-t"},
				Description: `Rename the target-session`,
				Args: []model.Arg{{
					Name:      "target-session",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"renamew", "rename-window"},
			Description: `Rename a window`,
			Args: []model.Arg{{
				Name:        "new-name",
				Description: `The new name of the window`,
			}},
			Options: []model.Option{{
				Name:        []string{"-t"},
				Description: `The target window`,
				Args: []model.Arg{{
					Name:      "window-name",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"resizep", "resize-pane"},
			Description: `Resize a pane`,
			Args: []model.Arg{{
				Name:        "adjustment",
				Description: `Adjustment used with -ULDR`,
			}},
			Options: []model.Option{{
				Name:        []string{"-D"},
				Description: `Resize down by adjustment`,
			}, {
				Name:        []string{"-L"},
				Description: `Resize left by adjustment`,
			}, {
				Name:        []string{"-M"},
				Description: `Begin mouse resizing`,
			}, {
				Name:        []string{"-R"},
				Description: `Resize right by adjustment`,
			}, {
				Name:        []string{"-T"},
				Description: `Trim all lines below the current cursor position`,
			}, {
				Name:        []string{"-U"},
				Description: `Resize up by adjustment`,
			}, {
				Name:        []string{"-Z"},
				Description: `Toggle the active pane between zoomed and unzoomed`,
			}, {
				Name:        []string{"-t"},
				Description: `The target pane`,
				Args: []model.Arg{{
					Name:      "src-pane",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-x"},
				Description: `The width of the pane`,
				Args: []model.Arg{{
					Name: "width",
				}},
			}, {
				Name:        []string{"-y"},
				Description: `The height of the pane`,
				Args: []model.Arg{{
					Name: "height",
				}},
			}},
		}, {
			Name:        []string{"resizew", "resize-window"},
			Description: `Resize a window`,
			Args: []model.Arg{{
				Name:        "adjustment",
				Description: `Adjustment used with -ULDR`,
			}},
			Options: []model.Option{{
				Name:        []string{"-a"},
				Description: `Set the size of the smallest session containing the window`,
			}, {
				Name:        []string{"-A"},
				Description: `Set the size of the largest session containing the window`,
			}, {
				Name:        []string{"-D"},
				Description: `Resize down by adjustment`,
			}, {
				Name:        []string{"-L"},
				Description: `Resize left by adjustment`,
			}, {
				Name:        []string{"-R"},
				Description: `Resize right by adjustment`,
			}, {
				Name:        []string{"-U"},
				Description: `Resize up by adjustment`,
			}, {
				Name:        []string{"-t"},
				Description: `The target window`,
				Args: []model.Arg{{
					Name:      "window-name",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-x"},
				Description: `The width of the pane`,
				Args: []model.Arg{{
					Name: "width",
				}},
			}, {
				Name:        []string{"-y"},
				Description: `The height of the pane`,
				Args: []model.Arg{{
					Name: "height",
				}},
			}},
		}, {
			Name:        []string{"respawnp", "respawn-pane"},
			Description: `Reactivate a pane in which a command has exited`,
			Args: []model.Arg{{
				Name:        "shell-command",
				Description: `A shell command to run when creating the pane`,
				IsOptional:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"-k"},
				Description: `Kill the target-pane if exist`,
			}, {
				Name:        []string{"-c"},
				Description: `Specify a start directory for the pane`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFolders},
					Name:        "start-directory",
					Description: `The start directory`,
				}},
			}, {
				Name:        []string{"-e"},
				Description: `Set environment variables`,
				Args: []model.Arg{{
					Name:        "environment",
					Description: `Environment variables with the form VARIABLE=VALUE`,
				}},
			}, {
				Name:        []string{"-t"},
				Description: `The target pane`,
				Args: []model.Arg{{
					Name:      "src-pane",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"respawnw", "respawn-window"},
			Description: `Reactivate a window in which a command has exited`,
			Args: []model.Arg{{
				Name:        "shell-command",
				Description: `A shell command to run when creating the window`,
				IsOptional:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"-k"},
				Description: `Kill the target-window if exist`,
			}, {
				Name:        []string{"-c"},
				Description: `Specify a start directory for the window`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFolders},
					Name:        "start-directory",
					Description: `The start directory`,
				}},
			}, {
				Name:        []string{"-e"},
				Description: `Set environment variables`,
				Args: []model.Arg{{
					Name:        "environment",
					Description: `Environment variables with the form VARIABLE=VALUE`,
				}},
			}, {
				Name:        []string{"-t"},
				Description: `The target window`,
				Args: []model.Arg{{
					Name:      "window-name",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"rotatew", "rotate-window"},
			Description: `Rotate positions of panes in a window`,
			Options: []model.Option{{
				Name:        []string{"-D"},
				Description: `Rotate upward`,
			}, {
				Name:        []string{"-U"},
				Description: `Rotate downward`,
			}, {
				Name:        []string{"-Z"},
				Description: `Keep the window zoomed if it was zoomed`,
			}, {
				Name:        []string{"-t"},
				Description: `The target window`,
				Args: []model.Arg{{
					Name:      "window-name",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"run", "run-shell"},
			Description: `Execute a command without create a new window`,
		}, {
			Name:        []string{"saveb", "save-buffer"},
			Description: `Save a paste buffer to a file`,
		}, {
			Name:        []string{"selectl", "select-layout"},
			Description: `Choose a layout for a pane`,
			Args: []model.Arg{{
				Name:        "layout-name",
				Description: `Use the last preset layout used if not specified`,
				IsOptional:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"-E"},
				Description: `Spread the current pane and any panes next to it evenly`,
			}, {
				Name:        []string{"-n"},
				Description: `Equivalent to next-layout`,
			}, {
				Name:        []string{"-o"},
				Description: `Apply the last set layout if possible`,
			}, {
				Name:        []string{"-p"},
				Description: `Equivalent to previous-layout`,
			}, {
				Name:        []string{"-t"},
				Description: `The target pane`,
				Args: []model.Arg{{
					Name:      "src-pane",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"selectp", "select-pane"},
			Description: `Make a pane the active one in the window`,
			Options: []model.Option{{
				Name:        []string{"-D"},
				Description: `Use the down pane`,
			}, {
				Name:        []string{"-d"},
				Description: `Disable input to the pane`,
			}, {
				Name:        []string{"-e"},
				Description: `Enable input to the pane`,
			}, {
				Name:        []string{"-L"},
				Description: `Use the left pane`,
			}, {
				Name:        []string{"-l"},
				Description: `Same as last-pane command`,
			}, {
				Name:        []string{"-M"},
				Description: `Clear the marked pane`,
			}, {
				Name:        []string{"-m"},
				Description: `Set the market pane`,
			}, {
				Name:        []string{"-R"},
				Description: `Use the right pane`,
			}, {
				Name:        []string{"-U"},
				Description: `Use the up pane`,
			}, {
				Name:        []string{"-Z"},
				Description: `Set the pane's title`,
			}, {
				Name:        []string{"-T"},
				Description: `Set the pane title`,
				Args: []model.Arg{{
					Name: "title",
				}},
			}, {
				Name:        []string{"-t"},
				Description: `The target pane`,
				Args: []model.Arg{{
					Name:      "src-pane",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"selectw", "select-window"},
			Description: `Select a window`,
			Options: []model.Option{{
				Name:        []string{"-l"},
				Description: `Same as last-window`,
			}, {
				Name:        []string{"-n"},
				Description: `Same as next-window`,
			}, {
				Name:        []string{"-p"},
				Description: `Same as previous-window`,
			}, {
				Name:        []string{"-T"},
				Description: `Same as last-window if the selected window is already the current window`,
			}, {
				Name:        []string{"-t"},
				Description: `The target window`,
				Args: []model.Arg{{
					Name:      "window-name",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"send", "send-keys"},
			Description: `Send key(s) to a window`,
		}, {
			Name:        []string{"send-prefix"},
			Description: `Send the prefix key to a window`,
		}, {
			Name:        []string{"info", "server-info"},
			Description: `Show every session, window, pane, etc`,
		}, {
			Name:        []string{"setb", "set-buffer"},
			Description: `Set content of a paste buffer`,
			Args: []model.Arg{{
				Name:        "data",
				Description: `The data to set in the buffer`,
			}},
			Options: []model.Option{{
				Name:        []string{"-a"},
				Description: `Append to rather than overwriting the buffer`,
			}, {
				Name:        []string{"-w"},
				Description: `Send the buffer to the clipboard`,
			}, {
				Name:        []string{"-b"},
				Description: `The name of the buffer`,
				Args: []model.Arg{{
					Name:      "buffer-name",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-t"},
				Description: `The target client`,
				Args: []model.Arg{{
					Name:      "target-client",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-n"},
				Description: `The new name of the buffer`,
				Args: []model.Arg{{
					Name: "new-buffer-name",
				}},
			}},
		}, {
			Name:        []string{"setenv", "set-environment"},
			Description: `(Un)set an environment variable`,
		}, {
			Name:        []string{"set-hook"},
			Description: `Set a hook to a command`,
		}, {
			Name:        []string{"set", "set-option"},
			Description: `Set a session option`,
		}, {
			Name:        []string{"setw", "set-window-option"},
			Description: `Set a window option`,
		}, {
			Name:        []string{"showb", "show-buffer"},
			Description: `Display the contents of a paste buffer`,
		}, {
			Name:        []string{"showenv", "show-environment"},
			Description: `Display the environment`,
			Options: []model.Option{{
				Name:        []string{"-t"},
				Description: `Display the environment of the target-session`,
				Args: []model.Arg{{
					Name:      "target-session",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"show-hooks"},
			Description: `Show the global list of hooks`,
		}, {
			Name:        []string{"showmsgs", "show-messages"},
			Description: `Show client's message log`,
			Options: []model.Option{{
				Name:        []string{"-T"},
				Description: `Show debugging information about terminals`,
			}, {
				Name:        []string{"-J"},
				Description: `Show debugging information about jobs`,
			}, {
				Name:        []string{"-t"},
				Description: `The target client`,
				Args: []model.Arg{{
					Name:      "target-client",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"show", "show-options"},
			Description: `Show session options`,
		}, {
			Name:        []string{"showw", "show-winsow-options"},
			Description: `Show window options`,
		}, {
			Name:        []string{"source", "source-file"},
			Description: `Execute tmux commands from a file`,
			Args: []model.Arg{{
				Name:       "path",
				IsVariadic: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-F"},
				Description: `Expand path as a format`,
			}, {
				Name:        []string{"-n"},
				Description: `Parse the file but don't run commands`,
			}, {
				Name:        []string{"-q"},
				Description: `Don't return any error if path does not exist`,
			}, {
				Name:        []string{"-v"},
				Description: `Show the parsed command and line numbers if possible`,
			}},
		}, {
			Name:        []string{"splitw", "split-window"},
			Description: `Splits a pane into two`,
			Args: []model.Arg{{
				Name:        "shell-command",
				Description: `A shell command to run when creating the pane`,
				IsOptional:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"-b"},
				Description: `Create the new pane to the left of or above target-pane`,
			}, {
				Name:        []string{"-f"},
				Description: `Create a new pane spanning the full window height with -h or width with -v`,
			}, {
				Name:        []string{"-h"},
				Description: `Set the pane take full height`,
			}, {
				Name:        []string{"-I"},
				Description: `Create an empty pane and forward stdin to it`,
			}, {
				Name:        []string{"-v"},
				Description: `Set the pane take full width`,
			}, {
				Name:        []string{"-Z"},
				Description: `Zoom if the window is not zoomed`,
			}, {
				Name:        []string{"-c"},
				Description: `Specify a start directory for the pane`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFolders},
					Name:        "start-directory",
					Description: `The start directory`,
				}},
			}, {
				Name:        []string{"-e"},
				Description: `Set environment variables`,
				Args: []model.Arg{{
					Name:        "environment",
					Description: `Environment variables with the form VARIABLE=VALUE`,
				}},
			}, {
				Name:        []string{"-l"},
				Description: `Set the size in columns (horizontal split) or rows (vertical split)`,
				Args: []model.Arg{{
					Name: "size",
				}},
			}, {
				Name:        []string{"-t"},
				Description: `The target pane`,
				Args: []model.Arg{{
					Name:      "src-pane",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-F"},
				Description: `Format output`,
				Args: []model.Arg{{
					Name:        "format",
					Description: `The format for the output of this command`,
				}},
			}},
		}, {
			Name:        []string{"start", "start-server"},
			Description: `Start a tmux server`,
		}, {
			Name:        []string{"suspendc", "suspend-client"},
			Description: `Suspend a client`,
			Options: []model.Option{{
				Name:        []string{"-t"},
				Description: `The target client`,
				Args: []model.Arg{{
					Name:      "target-client",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"swapp", "swap-pane"},
			Description: `Swap two panes`,
			Options: []model.Option{{
				Name:        []string{"-d"},
				Description: `Do not change the active pane`,
			}, {
				Name:        []string{"-D"},
				Description: `Swap with the next pane`,
			}, {
				Name:        []string{"-U"},
				Description: `Swap dst-pane with the previous pane`,
			}, {
				Name:        []string{"-Z"},
				Description: `Keep the window zoomed if it was zoomed`,
			}, {
				Name:        []string{"-s"},
				Description: `The source pane`,
				Args: []model.Arg{{
					Name:      "src-pane",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-t"},
				Description: `The destination pane`,
				Args: []model.Arg{{
					Name:      "src-pane",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"swapw", "swap-window"},
			Description: `Swap two windows`,
			Options: []model.Option{{
				Name:        []string{"-d"},
				Description: `The new window does not become the current window`,
			}, {
				Name:        []string{"-s"},
				Description: `The source window`,
				Args: []model.Arg{{
					Name:      "window-name",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-t"},
				Description: `The destination window`,
				Args: []model.Arg{{
					Name:      "window-name",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"switchc", "switch-client"},
			Description: `Switch the client to another session`,
			Options: []model.Option{{
				Name:        []string{"-E"},
				Description: `Do not use update-environment option`,
			}, {
				Name:        []string{"-l"},
				Description: `Move the client to the last session`,
			}, {
				Name:        []string{"-n"},
				Description: `Move the client to the next session`,
			}, {
				Name:        []string{"-p"},
				Description: `Move the client to the previous session`,
			}, {
				Name:        []string{"-r"},
				Description: `Toggle the client read-only and ignore-size flags`,
			}, {
				Name:        []string{"-Z"},
				Description: `Keep the window zoomed if it was zoomed`,
			}, {
				Name:        []string{"-c"},
				Description: `The target client`,
				Args: []model.Arg{{
					Name:      "target-client",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-t"},
				Description: `Switch the client to the target-session`,
				Args: []model.Arg{{
					Name:      "target-session",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-T"},
				Description: `Set the client's key table`,
				Args: []model.Arg{{
					Name: "key-table",
				}},
			}},
		}, {
			Name:        []string{"unbind", "unbind-key"},
			Description: `Unbind a key`,
			Args: []model.Arg{{
				Name:        "key",
				Description: `The key to unbind`,
			}},
			Options: []model.Option{{
				Name:        []string{"-a"},
				Description: `Remove all key-bindings`,
			}, {
				Name:        []string{"-n"},
				Description: `Alias for -T root`,
			}, {
				Name:        []string{"-q"},
				Description: `Prevent errors being returned`,
			}, {
				Name:        []string{"-T"},
				Description: `The key table to use`,
				Args: []model.Arg{{
					Name: "key-table",
				}},
			}},
		}, {
			Name:        []string{"unlinkw", "unlink-window"},
			Description: `Unlink a window`,
			Options: []model.Option{{
				Name:        []string{"-k"},
				Description: `Destroy the window`,
			}, {
				Name:        []string{"-t"},
				Description: `The target window`,
				Args: []model.Arg{{
					Name:      "window-name",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"wait", "wait-for"},
			Description: `Wait for an event or trigger it`,
			Args: []model.Arg{{
				Name:        "channel",
				Description: `Wait for this channel`,
			}},
			Options: []model.Option{{
				Name:        []string{"-L"},
				Description: `Lock the channel`,
				ExclusiveOn: []string{"-U"},
			}, {
				Name:        []string{"-U"},
				Description: `Unlock the channel`,
				ExclusiveOn: []string{"-L"},
			}},
		}},
	}
}
