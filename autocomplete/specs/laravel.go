// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["laravel"] = model.Subcommand{
		Name:        []string{"laravel"},
		Description: `Laravel Installer`,
		Options: []model.Option{{
			Name:        []string{"-h", "--help"},
			Description: `Display the help message`,
		}, {
			Name:        []string{"-q", "--quiet"},
			Description: `Do not output any message`,
		}, {
			Name:        []string{"-V", "--version"},
			Description: `Display this application version`,
		}, {
			Name:        []string{"--ansi"},
			Description: `Force ANSI output`,
		}, {
			Name:        []string{"--no-ansi"},
			Description: `Disable ANSI output`,
		}, {
			Name:        []string{"-n", "--no-interaction"},
			Description: `Do not ask any interactive question`,
		}, {
			Name:        []string{"-v", "--verbose"},
			Description: `Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug`,
		}},
		Subcommands: []model.Subcommand{{
			Name: []string{"help"},
			Options: []model.Option{{
				Name:        []string{"--format"},
				Description: `The output format (txt, xml, json, or md)`,
				Args: []model.Arg{{
					Suggestions: []model.Suggestion{{Name: []string{`txt`}}, {Name: []string{`xml`}}, {Name: []string{`json`}}, {Name: []string{`md`}}},
				}},
			}, {
				Name:        []string{"--raw"},
				Description: `To output raw command list`,
			}},
		}, {
			Name: []string{"list"},
			Options: []model.Option{{
				Name:        []string{"--format"},
				Description: `The output format (txt, xml, json, or md)`,
				Args: []model.Arg{{
					Suggestions: []model.Suggestion{{Name: []string{`txt`}}, {Name: []string{`xml`}}, {Name: []string{`json`}}, {Name: []string{`md`}}},
				}},
			}, {
				Name:        []string{"--raw"},
				Description: `To output raw command list`,
			}},
		}, {
			Name:        []string{"new"},
			Description: `Create a new Laravel application`,
			Args: []model.Arg{{
				Name: "name",
			}},
			Options: []model.Option{{
				Name:        []string{"--dev"},
				Description: `Installs the latest "development" release`,
			}, {
				Name:        []string{"--git"},
				Description: `Initialize a Git repository`,
			}, {
				Name:        []string{"--branch"},
				Description: `The branch that should be created for a new repository`,
				Args: []model.Arg{{
					Name: "BRANCH",
				}},
			}, {
				Name:        []string{"--github"},
				Description: `Create a new repository on GitHub`,
				Args: []model.Arg{{
					Name:       "GITHUB",
					IsOptional: true,
				}},
			}, {
				Name:        []string{"--jet"},
				Description: `Installs the Laravel Jetstream scaffolding`,
			}, {
				Name:        []string{"--stack"},
				Description: `The Jetstream stack that should be installed`,
				Args: []model.Arg{{
					Name:        "STACK",
					Suggestions: []model.Suggestion{{Name: []string{`livewire`}}, {Name: []string{`inertia`}}},
				}},
			}, {
				Name:        []string{"--teams"},
				Description: `Indicates whether Jetstream should be scaffolded with team support`,
			}, {
				Name:        []string{"--prompt-jetstream"},
				Description: `Issues a prompt to determine if Jetstream should be installed`,
			}, {
				Name:        []string{"-f", "--force"},
				Description: `Forces install even if the directory already exists`,
			}},
		}},
	}
}
