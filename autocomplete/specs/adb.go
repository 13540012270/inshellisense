// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.
//
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

package specs

import (
	"github.com/microsoft/clac/autocomplete/model"
)

func init() {
	Specs["adb"] = model.Subcommand{
		Name:        []string{"adb"},
		Description: `Android Debug Bridge`,
		Options: []model.Option{{
			Name:        []string{"-a"},
			Description: `Listen on all network interfaces, not just localhost`,
		}, {
			Name:        []string{"-d"},
			Description: `Use USB device (error if multiple devices connected)`,
		}, {
			Name:        []string{"-e"},
			Description: `Use TCP/IP device (error if multiple TCP/IP devices available)`,
		}, {
			Name:        []string{"-s"},
			Description: `Use device with given serial (overrides $ANDROID_SERIAL)`,
			Args: []model.Arg{{
				Name: "SERIAL",
			}},
		}, {
			Name:        []string{"-t"},
			Description: `Use device with given transport id`,
			Args: []model.Arg{{
				Name: "ID",
			}},
		}, {
			Name:        []string{"-H"},
			Description: `Name of adb server host [default=localhost]`,
			Args: []model.Arg{{
				Name: "host name",
			}},
		}, {
			Name:        []string{"-P"},
			Description: `Port of adb server [default=5037]`,
			Args: []model.Arg{{
				Name: "port",
			}},
		}, {
			Name:        []string{"-L"},
			Description: `Listen on given socket for adb server [default=tcp:localhost:5037]`,
			Args: []model.Arg{{
				Name: "socket",
			}},
		}},
		Subcommands: []model.Subcommand{{
			Name:        []string{"devices"},
			Description: `List connected devices`,
			Options: []model.Option{{
				Name:        []string{"-l"},
				Description: `Long output`,
			}},
		}, {
			Name:        []string{"help"},
			Description: `Show this help message`,
		}, {
			Name:        []string{"get-state"},
			Description: `Print offline | bootloader | device`,
		}, {
			Name:        []string{"get-serialno"},
			Description: `Print <serial-number>`,
		}, {
			Name:        []string{"get-devpath"},
			Description: `Print <device-path>`,
		}, {
			Name:        []string{"remount"},
			Description: `Remount partitions read-write. if a reboot is required, -R will automatically reboot the device`,
			Options: []model.Option{{
				Name:        []string{"-R"},
				Description: `Reboot device`,
			}},
		}, {
			Name:        []string{"jdwp"},
			Description: `List pids of processes hosting a JDWP transport`,
		}, {
			Name:        []string{"root"},
			Description: `Restart adbd with root permissions`,
		}, {
			Name:        []string{"unroot"},
			Description: `Restart adbd without root permissions`,
		}, {
			Name:        []string{"usb"},
			Description: `Restart adbd listening on USB`,
		}, {
			Name:        []string{"sideload"},
			Description: `Sideload the given full OTA package`,
			Args: []model.Arg{{
				Name: "OTAPACKAGE",
			}},
		}, {
			Name:        []string{"start-server"},
			Description: `Ensure that there is a server running`,
		}, {
			Name:        []string{"kill-server"},
			Description: `Kill the server if it is running`,
		}, {
			Name:        []string{"reconnect"},
			Description: `Kick connection from host side to force reconnect`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"device"},
				Description: `Kick connection from device side to force reconnect`,
			}, {
				Name:        []string{"offline"},
				Description: `Reset offline/unauthorized devices to force reconnect"`,
			}},
		}, {
			Name:        []string{"tcpip"},
			Description: `Restart adbd listening on TCP on PORT`,
			Args: []model.Arg{{
				Name: "PORT",
			}},
		}, {
			Name:        []string{"reboot"},
			Description: `Reboot the device; defaults to booting system image but supports bootloader and recovery too. sideload reboots into recovery and automatically starts sideload mode, sideload-auto-reboot is the same but reboots after sideloading`,
			Args: []model.Arg{{
				Name: "type",
				Suggestions: []model.Suggestion{{
					Name: []string{`bootloader`},
				}, {
					Name: []string{`recovery`},
				}, {
					Name: []string{`sideload`},
				}, {
					Name: []string{`sideload-auto-reboot`},
				}},
				IsOptional: true,
			}},
		}, {
			Name:        []string{"disable-verity"},
			Description: `Disable dm-verity checking on userdebug builds`,
		}, {
			Name:        []string{"enable-verity"},
			Description: `Re-enable dm-verity checking on userdebug builds`,
		}, {
			Name:        []string{"wait-for-device"},
			Description: `Wait for state=device`,
		}, {
			Name:        []string{"wait-for-recovery"},
			Description: `Wait for state=recovery`,
		}, {
			Name:        []string{"wait-for-rescue"},
			Description: `Wait for state=rescue`,
		}, {
			Name:        []string{"wait-for-sideload"},
			Description: `Wait for state=sideload`,
		}, {
			Name:        []string{"wait-for-bootloader"},
			Description: `Wait for state=bootloader`,
		}, {
			Name:        []string{"wait-for-disconnect"},
			Description: `Wait for state=disconnect`,
		}, {
			Name:        []string{"wait-for-usb-device"},
			Description: `Wait for usb in state=device`,
		}, {
			Name:        []string{"wait-for-usb-recovery"},
			Description: `Wait for usb in state=recovery`,
		}, {
			Name:        []string{"wait-for-usb-rescue"},
			Description: `Wait for usb in state=rescue`,
		}, {
			Name:        []string{"wait-for-usb-sideload"},
			Description: `Wait for usb in state=sideload`,
		}, {
			Name:        []string{"wait-for-usb-bootloader"},
			Description: `Wait for usb in state=bootloader`,
		}, {
			Name:        []string{"wait-for-usb-disconnect"},
			Description: `Wait for usb in state=disconnect`,
		}, {
			Name:        []string{"wait-for-local-device"},
			Description: `Wait for local in state=device`,
		}, {
			Name:        []string{"wait-for-local-recovery"},
			Description: `Wait for local in state=recovery`,
		}, {
			Name:        []string{"wait-for-local-rescue"},
			Description: `Wait for local in state=rescue`,
		}, {
			Name:        []string{"wait-for-local-sideload"},
			Description: `Wait for local in state=sideload`,
		}, {
			Name:        []string{"wait-for-local-bootloader"},
			Description: `Wait for local in state=bootloader`,
		}, {
			Name:        []string{"wait-for-local-disconnect"},
			Description: `Wait for local in state=disconnect`,
		}, {
			Name:        []string{"wait-for-any-device"},
			Description: `Wait for any in state=device`,
		}, {
			Name:        []string{"wait-for-any-recovery"},
			Description: `Wait for any in state=recovery`,
		}, {
			Name:        []string{"wait-for-any-rescue"},
			Description: `Wait for any in state=rescue`,
		}, {
			Name:        []string{"wait-for-any-sideload"},
			Description: `Wait for any in state=sideload`,
		}, {
			Name:        []string{"wait-for-any-bootloader"},
			Description: `Wait for any in state=bootloader`,
		}, {
			Name:        []string{"wait-for-any-disconnect"},
			Description: `Wait for any in state=disconnect`,
		}, {
			Name:        []string{"keygen"},
			Description: `Generate adb public/private key; private key stored in FILE`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "FILE",
			}},
		}, {
			Name:        []string{"logcat"},
			Description: `Show device log (logcat --help for more)`,
		}, {
			Name:        []string{"version"},
			Description: `Show version num`,
		}, {
			Name:        []string{"connect"},
			Description: `Connect to a device via TCP/IP [default port=5555]`,
			Args: []model.Arg{{
				Name: "HOST[:PORT]",
			}},
		}, {
			Name:        []string{"disconnect"},
			Description: `Disconnect from given TCP/IP device [default port=5555], or all`,
			Args: []model.Arg{{
				Name:       "HOST[:PORT]",
				IsOptional: true,
			}},
		}, {
			Name:        []string{"uninstall"},
			Description: `Remove this app package from the device`,
			Options: []model.Option{{
				Name:        []string{"-k"},
				Description: `Keep the data and cache directories`,
			}},
		}, {
			Name:        []string{"bugreport"},
			Description: `Write bugreport to given PATH [default=bugreport.zip];`,
			Args: []model.Arg{{
				Name:       "PATH",
				IsOptional: true,
			}},
		}, {
			Name:        []string{"pair"},
			Description: `Pair with a device for secure TCP/IP communication`,
			Args: []model.Arg{{
				Name: "HOST[:PORT]",
			}, {
				Name:       "[PAIRING CODE]",
				IsOptional: true,
			}},
		}, {
			Name:        []string{"ppp"},
			Description: `Run PPP over USB`,
			Args: []model.Arg{{
				Name: "TTY",
			}, {
				Name:       "[PARAMETER...]",
				IsOptional: true,
				IsVariadic: true,
			}},
		}, {
			Name:        []string{"emu"},
			Description: `Run emulator console command`,
			Args: []model.Arg{{
				Name: "COMMAND",
			}},
		}, {
			Name:        []string{"install"},
			Description: `Push a single package to the device and install it`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "PACKAGE",
			}},
			Options: []model.Option{{
				Name:        []string{"-l"},
				Description: `Forward-lock the app`,
			}, {
				Name:        []string{"-r"},
				Description: `Replace existing application`,
			}, {
				Name:        []string{"-t"},
				Description: `Allow test packages`,
			}, {
				Name:        []string{"-d"},
				Description: `Allow version code downgrade (debuggable packages only)`,
			}, {
				Name:        []string{"-s"},
				Description: `Install on SD card instead of internal storage`,
			}, {
				Name:        []string{"-g"},
				Description: `Grant all runtime permissions`,
			}, {
				Name:        []string{"--abi"},
				Description: `Override platform's default ABI`,
				Args: []model.Arg{{
					Name: "ABI",
				}},
			}, {
				Name:        []string{"--instant"},
				Description: `Cause the app to be installed as an ephemeral install app`,
			}, {
				Name:        []string{"--no-streaming"},
				Description: `Always push APK to device and invoke Package Manager as separate steps`,
			}, {
				Name:        []string{"--streaming"},
				Description: `Force streaming APK directly into Package Manager`,
			}, {
				Name:        []string{"--fastdeploy"},
				Description: `Use fast deploy`,
			}, {
				Name:        []string{"--no-fastdeploy"},
				Description: `Prevent use of fast deploy`,
			}, {
				Name:        []string{"--force-agent"},
				Description: `Force update of deployment agent when using fast deploy`,
			}, {
				Name:        []string{"--date-check-agent"},
				Description: `Update deployment agent when local version is newer and using fast deploy`,
			}, {
				Name:        []string{"--version-check-agent"},
				Description: `Update deployment agent when local version has different version code and using fast deploy`,
			}, {
				Name:        []string{"--local-agent"},
				Description: `Locate agent files from local source build (instead of SDK location)`,
			}},
		}, {
			Name:        []string{"install-multiple"},
			Description: `Push multiple APKs to the device for a single package and install them`,
			Args: []model.Arg{{
				Templates:  []model.Template{model.TemplateFilepaths},
				Name:       "PACKAGE",
				IsVariadic: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-p"},
				Description: `Partial application install (install-multiple only)`,
			}, {
				Name:        []string{"-l"},
				Description: `Forward-lock the app`,
			}, {
				Name:        []string{"-r"},
				Description: `Replace existing application`,
			}, {
				Name:        []string{"-t"},
				Description: `Allow test packages`,
			}, {
				Name:        []string{"-d"},
				Description: `Allow version code downgrade (debuggable packages only)`,
			}, {
				Name:        []string{"-s"},
				Description: `Install on SD card instead of internal storage`,
			}, {
				Name:        []string{"-g"},
				Description: `Grant all runtime permissions`,
			}, {
				Name:        []string{"--abi"},
				Description: `Override platform's default ABI`,
				Args: []model.Arg{{
					Name: "ABI",
				}},
			}, {
				Name:        []string{"--instant"},
				Description: `Cause the app to be installed as an ephemeral install app`,
			}, {
				Name:        []string{"--no-streaming"},
				Description: `Always push APK to device and invoke Package Manager as separate steps`,
			}, {
				Name:        []string{"--streaming"},
				Description: `Force streaming APK directly into Package Manager`,
			}, {
				Name:        []string{"--fastdeploy"},
				Description: `Use fast deploy`,
			}, {
				Name:        []string{"--no-fastdeploy"},
				Description: `Prevent use of fast deploy`,
			}, {
				Name:        []string{"--force-agent"},
				Description: `Force update of deployment agent when using fast deploy`,
			}, {
				Name:        []string{"--date-check-agent"},
				Description: `Update deployment agent when local version is newer and using fast deploy`,
			}, {
				Name:        []string{"--version-check-agent"},
				Description: `Update deployment agent when local version has different version code and using fast deploy`,
			}, {
				Name:        []string{"--local-agent"},
				Description: `Locate agent files from local source build (instead of SDK location)`,
			}},
		}, {
			Name:        []string{"install-multi-package"},
			Description: `Push one or more packages to the device and install them atomically`,
			Args: []model.Arg{{
				Templates:  []model.Template{model.TemplateFilepaths},
				Name:       "PACKAGE",
				IsVariadic: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-p"},
				Description: `Partial application install (install-multiple only)`,
			}, {
				Name:        []string{"-l"},
				Description: `Forward-lock the app`,
			}, {
				Name:        []string{"-r"},
				Description: `Replace existing application`,
			}, {
				Name:        []string{"-t"},
				Description: `Allow test packages`,
			}, {
				Name:        []string{"-d"},
				Description: `Allow version code downgrade (debuggable packages only)`,
			}, {
				Name:        []string{"-s"},
				Description: `Install on SD card instead of internal storage`,
			}, {
				Name:        []string{"-g"},
				Description: `Grant all runtime permissions`,
			}, {
				Name:        []string{"--abi"},
				Description: `Override platform's default ABI`,
				Args: []model.Arg{{
					Name: "ABI",
				}},
			}, {
				Name:        []string{"--instant"},
				Description: `Cause the app to be installed as an ephemeral install app`,
			}, {
				Name:        []string{"--no-streaming"},
				Description: `Always push APK to device and invoke Package Manager as separate steps`,
			}, {
				Name:        []string{"--streaming"},
				Description: `Force streaming APK directly into Package Manager`,
			}, {
				Name:        []string{"--fastdeploy"},
				Description: `Use fast deploy`,
			}, {
				Name:        []string{"--no-fastdeploy"},
				Description: `Prevent use of fast deploy`,
			}, {
				Name:        []string{"--force-agent"},
				Description: `Force update of deployment agent when using fast deploy`,
			}, {
				Name:        []string{"--date-check-agent"},
				Description: `Update deployment agent when local version is newer and using fast deploy`,
			}, {
				Name:        []string{"--version-check-agent"},
				Description: `Update deployment agent when local version has different version code and using fast deploy`,
			}, {
				Name:        []string{"--local-agent"},
				Description: `Locate agent files from local source build (instead of SDK location)`,
			}},
		}, {
			Name:        []string{"shell"},
			Description: `Run remote shell command (interactive shell if no command given)`,
			Args: []model.Arg{{
				Name:       "COMMANDS ...",
				IsOptional: true,
				IsVariadic: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-e"},
				Description: `Choose escape character, or "none" default '~'`,
			}, {
				Name:        []string{"-n"},
				Description: `Don't read from stdin`,
			}, {
				Name:        []string{"-T"},
				Description: `Disable pty allocation`,
			}, {
				Name:        []string{"-t"},
				Description: `Allocate a pty if on a tty`,
			}, {
				Name:        []string{"-tt"},
				Description: `-tt: force pty allocation`,
			}, {
				Name:        []string{"-x"},
				Description: `Disable remote exit codes and stdout/stderr separation`,
			}},
		}, {
			Name:        []string{"mdns"},
			Description: `Mdns utils`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"check"},
				Description: `Check if mdns discovery is available`,
			}, {
				Name:        []string{"services"},
				Description: `List all discovered services`,
			}},
		}, {
			Name:        []string{"push"},
			Description: `Copy local files/directories to device`,
			Args: []model.Arg{{
				Templates:  []model.Template{model.TemplateFilepaths},
				Name:       "LOCAL",
				IsVariadic: true,
			}, {
				Name: "REMOTE",
			}},
			Options: []model.Option{{
				Name:        []string{"--sync"},
				Description: `Only push files that are newer on the host than the device`,
			}, {
				Name:        []string{"-n"},
				Description: `Dry run: push files to device without storing to the filesystem`,
			}, {
				Name:        []string{"-z"},
				Description: `Enable compression with a specified algorithm (any, none, brotli)`,
				Args: []model.Arg{{
					Name: "ALGORITHM",
					Suggestions: []model.Suggestion{{
						Name: []string{`any`},
					}, {
						Name: []string{`none`},
					}, {
						Name: []string{`brotli`},
					}},
				}},
			}, {
				Name:        []string{"-Z"},
				Description: `Disable compression`,
			}},
		}, {
			Name:        []string{"sync"},
			Description: `Sync a local build from $ANDROID_PRODUCT_OUT to the device (default all)`,
			Args: []model.Arg{{
				Suggestions: []model.Suggestion{{
					Name: []string{`all`},
				}, {
					Name: []string{`data`},
				}, {
					Name: []string{`odm`},
				}, {
					Name: []string{`oem`},
				}, {
					Name: []string{`product`},
				}, {
					Name: []string{`system`},
				}, {
					Name: []string{`system_ext`},
				}, {
					Name: []string{`vendor`},
				}},
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-n"},
				Description: `Dry run: push files to device without storing to the filesystem`,
			}, {
				Name:        []string{"-l"},
				Description: `List files that would be copied, but don't copy them`,
			}, {
				Name:        []string{"-z"},
				Description: `Enable compression with a specified algorithm (any, none, brotli)`,
				Args: []model.Arg{{
					Name: "ALGORITHM",
					Suggestions: []model.Suggestion{{
						Name: []string{`any`},
					}, {
						Name: []string{`none`},
					}, {
						Name: []string{`brotli`},
					}},
				}},
			}, {
				Name:        []string{"-Z"},
				Description: `Disable compression`,
			}},
		}, {
			Name:        []string{"pull"},
			Description: `Copy files/dirs from device`,
			Args: []model.Arg{{
				Templates:  []model.Template{model.TemplateFilepaths},
				Name:       "REMOTE",
				IsVariadic: true,
			}, {
				Name: "LOCAL",
			}},
			Options: []model.Option{{
				Name:        []string{"-a"},
				Description: `Preserve file timestamp and mode`,
			}, {
				Name:        []string{"-z"},
				Description: `Enable compression with a specified algorithm (any, none, brotli)`,
				Args: []model.Arg{{
					Name: "ALGORITHM",
					Suggestions: []model.Suggestion{{
						Name: []string{`any`},
					}, {
						Name: []string{`none`},
					}, {
						Name: []string{`brotli`},
					}},
				}},
			}, {
				Name:        []string{"-Z"},
				Description: `Disable compression`,
			}},
		}, {
			Name:        []string{"forward"},
			Description: `Forward connection`,
			Args: []model.Arg{{
				Name: "LOCAL -> port|domain|device|pid",
				Suggestions: []model.Suggestion{{
					Name: []string{`tcp`},
				}, {
					Name: []string{`localabstract`},
				}, {
					Name: []string{`localreserved`},
				}, {
					Name: []string{`localfilesystem`},
				}, {
					Name: []string{`dev`},
				}, {
					Name: []string{`jdwp`},
				}, {
					Name: []string{`acceptfd`},
				}},
			}, {
				Name: "REMOTE -> port|domain|device|pid",
				Suggestions: []model.Suggestion{{
					Name: []string{`tcp`},
				}, {
					Name: []string{`localabstract`},
				}, {
					Name: []string{`localreserved`},
				}, {
					Name: []string{`localfilesystem`},
				}, {
					Name: []string{`dev`},
				}, {
					Name: []string{`jdwp`},
				}, {
					Name: []string{`acceptfd`},
				}},
			}},
			Options: []model.Option{{
				Name:        []string{"--list"},
				Description: `List all forward socket connections`,
			}, {
				Name:        []string{"--remove"},
				Description: `Remove specific forward socket connection`,
				Args: []model.Arg{{
					Name: "LOCAL",
				}},
			}, {
				Name:        []string{"--remove-all"},
				Description: `Remove all forward socket connections`,
			}, {
				Name:        []string{"--no-rebind"},
				Description: `Reversal fails if the specified socket is already bound through a previous reverse command`,
			}},
		}, {
			Name:        []string{"reverse"},
			Description: `Reverse connection`,
			Args: []model.Arg{{
				Name: "REMOTE -> port|domain|device|pid",
				Suggestions: []model.Suggestion{{
					Name: []string{`tcp`},
				}, {
					Name: []string{`localabstract`},
				}, {
					Name: []string{`localreserved`},
				}, {
					Name: []string{`localfilesystem`},
				}},
			}, {
				Name: "LOCAL -> port|domain|device|pid",
				Suggestions: []model.Suggestion{{
					Name: []string{`tcp`},
				}, {
					Name: []string{`localabstract`},
				}, {
					Name: []string{`localreserved`},
				}, {
					Name: []string{`localfilesystem`},
				}},
			}},
			Options: []model.Option{{
				Name:        []string{"--list"},
				Description: `List all reverse socket connections from device`,
			}, {
				Name:        []string{"--remove"},
				Description: `Remove specific reverse socket connection`,
				Args: []model.Arg{{
					Name: "REMOTE",
				}},
			}, {
				Name:        []string{"--remove-all"},
				Description: `Remove all reverse socket connections from device`,
			}, {
				Name:        []string{"--no-rebind"},
				Description: `Reversal fails if the specified socket is already bound through a previous reverse command`,
			}},
		}},
	}
}
