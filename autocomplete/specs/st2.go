// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["st2"] = model.Subcommand{
		Name:        []string{"st2"},
		Description: `CLI for StackStorm event-driven automation platform`,
		Options: []model.Option{{
			Name:        []string{"--help", "-h"},
			Description: `Show this help message and exit`,
		}, {
			Name:        []string{"--version"},
			Description: `Show program's version number and exit`,
		}, {
			Name:        []string{"--url"},
			Description: `Base URL for the API servers. Assumes all servers use the same base URL and default ports are used. Get ST2_BASE_URL from the environment variables by default`,
			Args: []model.Arg{{
				Name: "BASE_URL",
			}},
		}, {
			Name:        []string{"--auth-url"},
			Description: `URL for the authentication service. Get ST2_AUTH_URL from the environment variables by default`,
			Args: []model.Arg{{
				Name: "AUTH_URL",
			}},
		}, {
			Name:        []string{"--api-url"},
			Description: `URL for the API server. Get ST2_API_URL from the environment variables by default`,
			Args: []model.Arg{{
				Name: "API_URL",
			}},
		}, {
			Name:        []string{"--stream-url"},
			Description: `URL for the stream endpoint. Get ST2_STREAM_URLfrom the environment variables by default`,
			Args: []model.Arg{{
				Name: "ST2_STREAM_URL",
			}},
		}, {
			Name:        []string{"--api-version"},
			Description: `API version to use. Get ST2_API_VERSION from the environment variables by default`,
			Args: []model.Arg{{
				Name: "API_VERSION",
			}},
		}, {
			Name:        []string{"--cacert"},
			Description: `Path to the CA cert bundle for the SSL endpoints. Get ST2_CACERT from the environment variables by default. If this is not provided, then SSL cert will not be verified`,
			Args: []model.Arg{{
				Name: "CACERT",
			}},
		}, {
			Name:        []string{"--config-file"},
			Description: `Path to the CLI config file`,
			Args: []model.Arg{{
				Name: "CONFIG_FILE",
			}},
		}, {
			Name:        []string{"--print-config"},
			Description: `Parse the config file and print the values`,
		}, {
			Name:        []string{"--skip-config"},
			Description: `Don't parse and use the CLI config file`,
		}, {
			Name:        []string{"--debug"},
			Description: `Enable debug mode`,
		}},
		Subcommands: []model.Subcommand{{
			Name:        []string{"run"},
			Description: `Invoke an action manually`,
			Args: []model.Arg{{
				Name:        "ref-or-id",
				Description: `Reference or ID`,
			}, {
				Name:        "parameters",
				Description: `List of keyword args, positional args, and optional args for the action`,
				IsVariadic:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"-t", "--token"},
				Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
				Args: []model.Arg{{
					Name: "TOKEN",
				}},
			}, {
				Name:        []string{"--api-key"},
				Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
				Args: []model.Arg{{
					Name: "API_KEY",
				}},
			}, {
				Name:        []string{"-j", "--json"},
				Description: `Print output in JSON format`,
			}, {
				Name:        []string{"-y", "--yaml"},
				Description: `Print output in YAML format`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Show this help and exit`,
			}, {
				Name:        []string{"--attr"},
				Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
				Args: []model.Arg{{
					Name:       "ATTR",
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"-d", "--detail"},
				Description: `Display full detail of the execution in table format`,
			}, {
				Name:        []string{"-k", "--key"},
				Description: `If result is type of JSON, then print specific key-value pair; dot notation for nested JSON is supported`,
				Args: []model.Arg{{
					Name: "KEY",
				}},
			}, {
				Name:        []string{"--delay"},
				Description: `How long (in milliseconds) to delay the execution before scheduling`,
				Args: []model.Arg{{
					Name: "DELAY",
				}},
			}, {
				Name:        []string{"--tail"},
				Description: `Automatically start tailing new execution`,
			}, {
				Name:        []string{"--auto-dict"},
				Description: `Automatically convert list items to dictionaries when colons are detected. (NOTE - this parameter and its functionality will be deprecated in the next release in favor of a more robust conversion method)`,
			}, {
				Name:        []string{"--trace-tag", "--trace_tag"},
				Description: `A trace tag string to track execution later`,
				Args: []model.Arg{{
					Name: "TRACE_TAG",
				}},
			}, {
				Name:        []string{"--trace-id"},
				Description: `Existing trace id for this execution`,
				Args: []model.Arg{{
					Name: "TRACE_ID",
				}},
			}, {
				Name:        []string{"-a", "--async"},
				Description: `Do not wait for action to finish`,
			}, {
				Name:        []string{"-e", "--inherit-env"},
				Description: `Pass all the environment variables which are accessible to the CLI as 'env' parameter to the action. Note: Only works with python, local and remote runners`,
			}, {
				Name:        []string{"-u", "--user"},
				Description: `User under which to run the action (admins only)`,
				Args: []model.Arg{{
					Name:      "USER",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"action"},
			Description: `An activity that happens as a response to the external event`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"list"},
				Description: `Get the list of actions`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"--attr"},
					Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
					Args: []model.Arg{{
						Name:       "ATTR",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"-w", "--width"},
					Description: `Set the width of the columns in output`,
					Args: []model.Arg{{
						Name:       "WIDTH",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"-p", "--pack"},
					Description: `Only return resources belonging to the provided pack`,
					Args: []model.Arg{{
						Name: "PACK",
					}},
				}},
			}, {
				Name:        []string{"get"},
				Description: `Get individual action`,
				Args: []model.Arg{{
					Name:        "ref-or-id",
					Description: `Reference or ID`,
					IsVariadic:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"--attr"},
					Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
					Args: []model.Arg{{
						Name:       "ATTR",
						IsVariadic: true,
					}},
				}},
			}, {
				Name:        []string{"create"},
				Description: `Create a new action`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFilepaths},
					Name:        "file",
					Description: `JSON/YAML file`,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}},
			}, {
				Name:        []string{"update"},
				Description: `Update an existing action`,
				Args: []model.Arg{{
					Name:        "ref-or-id",
					Description: `Reference or ID`,
				}, {
					Templates:   []model.Template{model.TemplateFilepaths},
					Name:        "file",
					Description: `JSON/YAML file`,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}},
			}, {
				Name:        []string{"delete"},
				Description: `Delete an existing action`,
				Args: []model.Arg{{
					Name:        "ref-or-id",
					Description: `Reference or ID`,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"-r", "--remove-files"},
					Description: `Remove action files from disk`,
				}},
			}, {
				Name:        []string{"enable"},
				Description: `Enable an existing action`,
				Args: []model.Arg{{
					Name:        "ref-or-id",
					Description: `Reference or ID`,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}},
			}, {
				Name:        []string{"disable"},
				Description: `Disable an existing action`,
				Args: []model.Arg{{
					Name:        "ref-or-id",
					Description: `Reference or ID`,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}},
			}, {
				Name:        []string{"execute"},
				Description: `Invoke an action manually`,
				Args: []model.Arg{{
					Name:        "ref-or-id",
					Description: `Reference or ID`,
				}, {
					Name:        "parameters",
					Description: `List of keyword args, positional args, and optional args for the action`,
					IsVariadic:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"--attr"},
					Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
					Args: []model.Arg{{
						Name:       "ATTR",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"-k", "--key"},
					Description: `If result is type of JSON, then print specific key-value pair; dot notation for nested JSON is supported`,
					Args: []model.Arg{{
						Name: "KEY",
					}},
				}, {
					Name:        []string{"--delay"},
					Description: `How long (in milliseconds) to delay the execution before scheduling`,
					Args: []model.Arg{{
						Name: "DELAY",
					}},
				}, {
					Name:        []string{"--tail"},
					Description: `Automatically start tailing new execution`,
				}, {
					Name:        []string{"--auto-dict"},
					Description: `Automatically convert list items to dictionaries when colons are detected. (NOTE - this parameter and its functionality will be deprecated in the next release in favor of a more robust conversion method)`,
				}, {
					Name:        []string{"--trace-tag", "--trace_tag"},
					Description: `A trace tag string to track execution later`,
					Args: []model.Arg{{
						Name: "TRACE_TAG",
					}},
				}, {
					Name:        []string{"--trace-id"},
					Description: `Existing trace id for this execution`,
					Args: []model.Arg{{
						Name: "TRACE_ID",
					}},
				}, {
					Name:        []string{"-a", "--async"},
					Description: `Do not wait for action to finish`,
				}, {
					Name:        []string{"-e", "--inherit-env"},
					Description: `Pass all the environment variables which are accessible to the CLI as 'env' parameter to the action. Note: Only works with python, local and remote runners`,
				}, {
					Name:        []string{"-u", "--user"},
					Description: `User under which to run the action (admins only)`,
					Args: []model.Arg{{
						Name:      "USER",
						Generator: nil, // TODO: port over generator
					}},
				}},
			}},
		}, {
			Name:        []string{"action-alias"},
			Description: `Action aliases`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"list"},
				Description: `Get the list of action aliases`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"--attr"},
					Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
					Args: []model.Arg{{
						Name:       "ATTR",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"-w", "--width"},
					Description: `Set the width of the columns in output`,
					Args: []model.Arg{{
						Name:       "WIDTH",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"-p", "--pack"},
					Description: `Only return resources belonging to the provided pack`,
					Args: []model.Arg{{
						Name: "PACK",
					}},
				}},
			}, {
				Name:        []string{"get"},
				Description: `Get the individual action aliases`,
				Args: []model.Arg{{
					Name:        "ref-or-id",
					Description: `Reference or ID`,
					IsVariadic:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"--attr"},
					Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
					Args: []model.Arg{{
						Name:       "ATTR",
						IsVariadic: true,
					}},
				}},
			}, {
				Name:        []string{"create"},
				Description: `Create a new action alias`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFilepaths},
					Name:        "file",
					Description: `JSON/YAML file`,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}},
			}, {
				Name:        []string{"update"},
				Description: `Update an existing action alias`,
				Args: []model.Arg{{
					Name:        "name-or-id",
					Description: `Name or ID`,
				}, {
					Templates:   []model.Template{model.TemplateFilepaths},
					Name:        "file",
					Description: `JSON/YAML file`,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}},
			}, {
				Name:        []string{"delete"},
				Description: `Delete an existing action alias`,
				Args: []model.Arg{{
					Name:        "name-or-id",
					Description: `Name or ID`,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}},
			}, {
				Name:        []string{"match"},
				Description: `Get the action alias that match the command text`,
				Args: []model.Arg{{
					Name:        "comamnd",
					Description: `Command text`,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"--attr"},
					Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
					Args: []model.Arg{{
						Name:       "ATTR",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"-w", "--width"},
					Description: `Set the width of the columns in output`,
					Args: []model.Arg{{
						Name:       "WIDTH",
						IsVariadic: true,
					}},
				}},
			}, {
				Name:        []string{"execute"},
				Description: `Execute the command text by finding a matching action alias`,
				Args: []model.Arg{{
					Name:        "comamnd",
					Description: `Command text`,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"-u", "--user"},
					Description: `User under which to run the action (admins only)`,
					Args: []model.Arg{{
						Name:      "USER",
						Generator: nil, // TODO: port over generator
					}},
				}},
			}},
		}, {
			Name:        []string{"auth"},
			Description: `Authenticate user and acquire access token`,
			Args: []model.Arg{{
				Name:        "username",
				Description: `Name of the user`,
			}},
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Show this help and exit`,
			}, {
				Name:        []string{"-j", "--json"},
				Description: `Print output in JSON format`,
			}, {
				Name:        []string{"-y", "--yaml"},
				Description: `Print output in YAML format`,
			}, {
				Name:        []string{"-p"},
				Description: `Password`,
				Args: []model.Arg{{
					Name: "PASSWORD",
				}},
			}, {
				Name:        []string{"-l", "--ttl"},
				Description: `The life span of the token in seconds. Max TTL configured by the admin supersedes this`,
				Args: []model.Arg{{
					Name: "TTL",
				}},
			}, {
				Name:        []string{"-t", "--only-token"},
				Description: `On successful authentication, print only token to the console`,
			}},
		}, {
			Name:        []string{"login"},
			Description: `Authenticate user, acquire access token, and update CLI config directory`,
			Args: []model.Arg{{
				Name:        "username",
				Description: `Name of the user`,
			}},
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Show this help and exit`,
			}, {
				Name:        []string{"-j", "--json"},
				Description: `Print output in JSON format`,
			}, {
				Name:        []string{"-y", "--yaml"},
				Description: `Print output in YAML format`,
			}, {
				Name:        []string{"-p"},
				Description: `Password`,
				Args: []model.Arg{{
					Name: "PASSWORD",
				}},
			}, {
				Name:        []string{"-l", "--ttl"},
				Description: `The life span of the token in seconds. Max TTL configured by the admin supersedes this`,
				Args: []model.Arg{{
					Name: "TTL",
				}},
			}, {
				Name:        []string{"-w", "--write-password"},
				Description: `Write the password in plain text to the config file (default is to omit it)`,
			}},
		}, {
			Name:        []string{"whoami"},
			Description: `Display the currently authenticated user`,
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Show this help and exit`,
			}, {
				Name:        []string{"-j", "--json"},
				Description: `Print output in JSON format`,
			}, {
				Name:        []string{"-y", "--yaml"},
				Description: `Print output in YAML format`,
			}},
		}, {
			Name:        []string{"apikey"},
			Description: `API Keys`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"list"},
				Description: `Get the list of api keys`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"--attr"},
					Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
					Args: []model.Arg{{
						Name:       "ATTR",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"-w", "--width"},
					Description: `Set the width of the columns in output`,
					Args: []model.Arg{{
						Name:       "WIDTH",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"-u", "--user"},
					Description: `User under which to run the action (admins only)`,
					Args: []model.Arg{{
						Name:      "USER",
						Generator: nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"-d", "--detail"},
					Description: `Display full detail of the execution in table format`,
				}, {
					Name:        []string{"--show-secrets"},
					Description: `Full list of attributes`,
				}},
			}, {
				Name:        []string{"get"},
				Description: `Get individual api key`,
				Args: []model.Arg{{
					Name:        "key-or-id",
					Description: `Key or ID`,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"--attr"},
					Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
					Args: []model.Arg{{
						Name:       "ATTR",
						IsVariadic: true,
					}},
				}},
			}, {
				Name:        []string{"create"},
				Description: `Create a new api key`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"-u", "--user"},
					Description: `User under which to run the action (admins only)`,
					Args: []model.Arg{{
						Name:      "USER",
						Generator: nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"-m", "--metadata"},
					Description: `Optional metadata to associate with the API Keys`,
					Args: []model.Arg{{
						Name: "METADATA",
					}},
				}, {
					Name:        []string{"-k", "--only-key"},
					Description: `Only print API Key to the console on creation`,
				}},
			}, {
				Name:        []string{"delete"},
				Description: `Delete an existing api key`,
				Args: []model.Arg{{
					Name:        "key-or-id",
					Description: `Key or ID`,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}},
			}, {
				Name:        []string{"enable"},
				Description: `Enable an existing api key`,
				Args: []model.Arg{{
					Name:        "key-or-id",
					Description: `Key or ID`,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}},
			}, {
				Name:        []string{"disable"},
				Description: `Disable an existing api key`,
				Args: []model.Arg{{
					Name:        "key-or-id",
					Description: `Key or ID`,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"-k", "--key"},
					Description: `If result is type of JSON, then print specific key-value pair; dot notation for nested JSON is supported`,
					Args: []model.Arg{{
						Name: "KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}},
			}, {
				Name:        []string{"load"},
				Description: `Load api key from a file`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFilepaths},
					Name:        "file",
					Description: `JSON/YAML file`,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}},
			}},
		}, {
			Name:        []string{"execution"},
			Description: `An invocation of an action`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"list"},
				Description: `Get the list of the 50 most recent action executions`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"-n", "--last"},
					Description: `List N most recent; use -n -1 to fetch the full result set`,
					Args: []model.Arg{{
						Name:        "LAST",
						Suggestions: []model.Suggestion{{Name: []string{`10`}}, {Name: []string{`5`}}, {Name: []string{`1`}}, {Name: []string{`-1`}}},
					}},
				}, {
					Name:        []string{"-s", "--sort"},
					Description: `Sort action executions by start timestamp, asc|ascending (earliest first) or desc|descending (latest first)`,
					Args: []model.Arg{{
						Name:        "SORT_ORDER",
						Suggestions: []model.Suggestion{{Name: []string{`desc`}}, {Name: []string{`descending`}}, {Name: []string{`asc`}}, {Name: []string{`ascending`}}},
					}},
				}, {
					Name:        []string{"-tg", "timestamp-gt"},
					Description: `Only return executions with timestamp greater than the one provided. Use time in the format '2000-01-01T12:00:00.000Z'`,
					Args: []model.Arg{{
						Name: "TIMESTAMP_GT",
					}},
				}, {
					Name:        []string{"-tl", "timestamp-lt"},
					Description: `Only return executions with timestamp lower than the one provided. Use time in the format '2000-01-01T12:00:00.000Z'`,
					Args: []model.Arg{{
						Name: "TIMESTAMP_LT",
					}},
				}, {
					Name:        []string{"-l", "--showall"},
					Description: `Show all attributes`,
				}, {
					Name:        []string{"--attr"},
					Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
					Args: []model.Arg{{
						Name:       "ATTR",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"-w", "--width"},
					Description: `Set the width of the columns in output`,
					Args: []model.Arg{{
						Name:       "WIDTH",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"--action"},
					Description: `Action reference to filter the list`,
					Args: []model.Arg{{
						Name: "ACTION",
					}},
				}, {
					Name:        []string{"--status"},
					Description: `Only return executions with the provided status. Possible values are 'succeeded', 'running', 'scheduled', 'paused', 'failed', 'canceling' or 'canceled'`,
					Args: []model.Arg{{
						Name:        "STATUS",
						Suggestions: []model.Suggestion{{Name: []string{`succeeded`}}, {Name: []string{`running`}}, {Name: []string{`scheduled`}}, {Name: []string{`paused`}}, {Name: []string{`failed`}}, {Name: []string{`canceling`}}, {Name: []string{`canceled`}}},
					}},
				}, {
					Name:        []string{"-u", "--user"},
					Description: `User under which to run the action (admins only)`,
					Args: []model.Arg{{
						Name:      "USER",
						Generator: nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"--trigger_instance"},
					Description: `Trigger instance id to filter the list`,
					Args: []model.Arg{{
						Name: "TRIGGER_INSTANCE",
					}},
				}},
			}, {
				Name:        []string{"get"},
				Description: `Get individual action execution`,
				Args: []model.Arg{{
					Name:        "id",
					Description: `ID`,
					IsVariadic:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"-x", "--exclude-result"},
					Description: `Don't retrieve and display the result field`,
				}, {
					Name:        []string{"--attr"},
					Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
					Args: []model.Arg{{
						Name:       "ATTR",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"-d", "--detail"},
					Description: `Display full detail of the execution in table format`,
				}, {
					Name:        []string{"-k", "--key"},
					Description: `If result is type of JSON, then print specific key-value pair; dot notation for nested JSON is supported`,
					Args: []model.Arg{{
						Name: "KEY",
					}},
				}, {
					Name:        []string{"--delay"},
					Description: `How long (in milliseconds) to delay the execution before scheduling`,
					Args: []model.Arg{{
						Name: "DELAY",
					}},
				}, {
					Name:        []string{"--tail"},
					Description: `Automatically start tailing new execution`,
				}, {
					Name:        []string{"--auto-dict"},
					Description: `Automatically convert list items to dictionaries when colons are detected. (NOTE - this parameter and its functionality will be deprecated in the next release in favor of a more robust conversion method)`,
				}},
			}, {
				Name:        []string{"re-run"},
				Description: `Re-run a particular action`,
				Args: []model.Arg{{
					Name:        "id",
					Description: `ID`,
				}, {
					Name:        "parameters",
					Description: `List of keyword args, positional args, and optional args for the action`,
					IsVariadic:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"--tasks"},
					Description: `Name of the workflow tasks to re-run`,
					Args: []model.Arg{{
						Name:       "TASKS",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"--no-reset"},
					Description: `Name of the with-items tasks to not reset. This only applies to Orquesta workflows. By default, all iterations for with- items tasks is rerun. If no reset, only failed iterations are rerun`,
					Args: []model.Arg{{
						Name: "NO_RESET",
					}},
				}, {
					Name:        []string{"-a", "--async"},
					Description: `Do not wait for action to finish`,
				}, {
					Name:        []string{"-e", "--inherit-env"},
					Description: `Pass all the environment variables which are accessible to the CLI as 'env' parameter to the action. Note: Only works with python, local and remote runners`,
				}, {
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"--attr"},
					Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
					Args: []model.Arg{{
						Name:       "ATTR",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"-d", "--detail"},
					Description: `Display full detail of the execution in table format`,
				}, {
					Name:        []string{"-k", "--key"},
					Description: `If result is type of JSON, then print specific key-value pair; dot notation for nested JSON is supported`,
					Args: []model.Arg{{
						Name: "KEY",
					}},
				}, {
					Name:        []string{"--delay"},
					Description: `How long (in milliseconds) to delay the execution before scheduling`,
					Args: []model.Arg{{
						Name: "DELAY",
					}},
				}, {
					Name:        []string{"--tail"},
					Description: `Automatically start tailing new execution`,
				}, {
					Name:        []string{"--auto-dict"},
					Description: `Automatically convert list items to dictionaries when colons are detected. (NOTE - this parameter and its functionality will be deprecated in the next release in favor of a more robust conversion method)`,
				}},
			}, {
				Name:        []string{"cancel"},
				Description: `Cancel action executions`,
				Args: []model.Arg{{
					Name:        "id",
					Description: `ID`,
					IsVariadic:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}},
			}, {
				Name:        []string{"pause"},
				Description: `Pause action executions (workflow executions only)`,
				Args: []model.Arg{{
					Name:        "id",
					Description: `ID`,
					IsVariadic:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"--attr"},
					Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
					Args: []model.Arg{{
						Name:       "ATTR",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"-d", "--detail"},
					Description: `Display full detail of the execution in table format`,
				}, {
					Name:        []string{"-k", "--key"},
					Description: `If result is type of JSON, then print specific key-value pair; dot notation for nested JSON is supported`,
					Args: []model.Arg{{
						Name: "KEY",
					}},
				}, {
					Name:        []string{"--delay"},
					Description: `How long (in milliseconds) to delay the execution before scheduling`,
					Args: []model.Arg{{
						Name: "DELAY",
					}},
				}, {
					Name:        []string{"--tail"},
					Description: `Automatically start tailing new execution`,
				}, {
					Name:        []string{"--auto-dict"},
					Description: `Automatically convert list items to dictionaries when colons are detected. (NOTE - this parameter and its functionality will be deprecated in the next release in favor of a more robust conversion method)`,
				}},
			}, {
				Name:        []string{"resume"},
				Description: `Resume action executions (workflow executions only)`,
				Args: []model.Arg{{
					Name:        "id",
					Description: `ID`,
					IsVariadic:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"--attr"},
					Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
					Args: []model.Arg{{
						Name:       "ATTR",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"-d", "--detail"},
					Description: `Display full detail of the execution in table format`,
				}, {
					Name:        []string{"-k", "--key"},
					Description: `If result is type of JSON, then print specific key-value pair; dot notation for nested JSON is supported`,
					Args: []model.Arg{{
						Name: "KEY",
					}},
				}, {
					Name:        []string{"--delay"},
					Description: `How long (in milliseconds) to delay the execution before scheduling`,
					Args: []model.Arg{{
						Name: "DELAY",
					}},
				}, {
					Name:        []string{"--tail"},
					Description: `Automatically start tailing new execution`,
				}, {
					Name:        []string{"--auto-dict"},
					Description: `Automatically convert list items to dictionaries when colons are detected. (NOTE - this parameter and its functionality will be deprecated in the next release in favor of a more robust conversion method)`,
				}},
			}, {
				Name:        []string{"tail"},
				Description: `Tail output of a particular execution`,
				Args: []model.Arg{{
					Name:        "id",
					Description: `ID`,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"--type"},
					Description: `Type of output to tail for. If not provided, defaults to all`,
					Args: []model.Arg{{
						Name: "OUTPUT_TYPE",
					}},
				}, {
					Name:        []string{"--include-metadata"},
					Description: `Include metadata (timestamp, output type) with the output`,
				}},
			}},
		}, {
			Name:        []string{"inquiry"},
			Description: `Inquiries provide an opportunity to ask a question and wait for a response in a workflow`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"list"},
				Description: `Get the list of the 50 most recent inquiries`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"-n", "--last"},
					Description: `List N most recent; use -n -1 to fetch the full result set`,
					Args: []model.Arg{{
						Name:        "LAST",
						Suggestions: []model.Suggestion{{Name: []string{`10`}}, {Name: []string{`5`}}, {Name: []string{`1`}}, {Name: []string{`-1`}}},
					}},
				}, {
					Name:        []string{"--attr"},
					Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
					Args: []model.Arg{{
						Name:       "ATTR",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"-w", "--width"},
					Description: `Set the width of the columns in output`,
					Args: []model.Arg{{
						Name:       "WIDTH",
						IsVariadic: true,
					}},
				}},
			}, {
				Name:        []string{"get"},
				Description: `Get individual inquiry`,
				Args: []model.Arg{{
					Name:        "id",
					Description: `ID`,
					IsVariadic:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"--attr"},
					Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
					Args: []model.Arg{{
						Name:       "ATTR",
						IsVariadic: true,
					}},
				}},
			}, {
				Name:        []string{"respond"},
				Description: `Respond to an inquiry`,
				Args: []model.Arg{{
					Name:        "id",
					Description: `ID`,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"-r", "--response"},
					Description: `Entire response payload as JSON string (bypass interactive mode)`,
					Args: []model.Arg{{
						Name: "RESPONSE",
					}},
				}},
			}},
		}, {
			Name:        []string{"key"},
			Description: `Key value pair is used to store commonly used configuration for reuse in sensors, actions, and rules`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"list"},
				Description: `Get the list of the 50 most recent key value pairs`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"--attr"},
					Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
					Args: []model.Arg{{
						Name:       "ATTR",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"-w", "--width"},
					Description: `Set the width of the columns in output`,
					Args: []model.Arg{{
						Name:       "WIDTH",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"--prefix"},
					Description: `Only return values with names starting with the provided prefix`,
					Args: []model.Arg{{
						Name: "PREFIX",
					}},
				}, {
					Name:        []string{"-d", "--decrypt"},
					Description: `Decrypt secrets and displays plain text`,
				}, {
					Name:        []string{"-s", "--scope"},
					Description: `Scope item is under. Example: 'user'`,
				}, {
					Name:        []string{"-u", "--user"},
					Description: `User under which to run the action (admins only)`,
					Args: []model.Arg{{
						Name:      "USER",
						Generator: nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"-n", "--last"},
					Description: `List N most recent; use -n -1 to fetch the full result set`,
					Args: []model.Arg{{
						Name:        "LAST",
						Suggestions: []model.Suggestion{{Name: []string{`10`}}, {Name: []string{`5`}}, {Name: []string{`1`}}, {Name: []string{`-1`}}},
					}},
				}},
			}, {
				Name:        []string{"get"},
				Description: `Get individual key value pair`,
				Args: []model.Arg{{
					Name:        "name",
					Description: `Name`,
					IsVariadic:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"--attr"},
					Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
					Args: []model.Arg{{
						Name:       "ATTR",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"-d", "--decrypt"},
					Description: `Decrypt secrets and displays plain text`,
				}, {
					Name:        []string{"-s", "--scope"},
					Description: `Scope item is under. Example: 'user'`,
				}},
			}, {
				Name:        []string{"delete"},
				Description: `Delete an existing key value pair`,
				Args: []model.Arg{{
					Name:        "name",
					Description: `Name`,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"-s", "--scope"},
					Description: `Scope item is under. Example: 'user'`,
				}, {
					Name:        []string{"-u", "--user"},
					Description: `User under which to run the action (admins only)`,
					Args: []model.Arg{{
						Name:      "USER",
						Generator: nil, // TODO: port over generator
					}},
				}},
			}, {
				Name:        []string{"set"},
				Description: `Set an existing key value pair`,
				Args: []model.Arg{{
					Name:        "name",
					Description: `Name`,
				}, {
					Name:        "value",
					Description: `Value`,
					IsOptional:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"-e", "--enrypt"},
					Description: `Encrypt values before saving`,
				}, {
					Name:        []string{"--enrypted"},
					Description: `Value provided is already encrypted with the instance crypto key and should be stored as-is`,
				}, {
					Name:        []string{"-l", "--ttl"},
					Description: `The life span of the token in seconds. Max TTL configured by the admin supersedes this`,
					Args: []model.Arg{{
						Name: "TTL",
					}},
				}, {
					Name:        []string{"-s", "--scope"},
					Description: `Scope item is under. Example: 'user'`,
				}, {
					Name:        []string{"-u", "--user"},
					Description: `User under which to run the action (admins only)`,
					Args: []model.Arg{{
						Name:      "USER",
						Generator: nil, // TODO: port over generator
					}},
				}},
			}, {
				Name:        []string{"load"},
				Description: `Load a list of key value pairs from file`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFilepaths},
					Name:        "file",
					Description: `JSON/YAML file`,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"-c", "--convert"},
					Description: `Convert non-string types (hash, array, boolean, int, float) to a JSON string before loading it into the datastore`,
				}},
			}, {
				Name:        []string{"delete_by_prefix"},
				Description: `Delete KeyValue pairs which match the provided prefix`,
				Args: []model.Arg{{
					Name:        "prefix",
					Description: `Prefix`,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"--prefix"},
					Description: `Only return values with names starting with the provided prefix`,
					Args: []model.Arg{{
						Name: "PREFIX",
					}},
				}},
			}},
		}, {
			Name:        []string{"pack"},
			Description: `A group of related integration resources: actions, rules, and sensors`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"list"},
				Description: `Get the list of packs`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"--attr"},
					Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
					Args: []model.Arg{{
						Name:       "ATTR",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"-w", "--width"},
					Description: `Set the width of the columns in output`,
					Args: []model.Arg{{
						Name:       "WIDTH",
						IsVariadic: true,
					}},
				}},
			}, {
				Name:        []string{"get"},
				Description: `Get information about an installed pack`,
				Args: []model.Arg{{
					Name:        "ref",
					Description: `Reference`,
					IsVariadic:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"--attr"},
					Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
					Args: []model.Arg{{
						Name:       "ATTR",
						IsVariadic: true,
					}},
				}},
			}, {
				Name:        []string{"show"},
				Description: `Get information about an available pack from the index`,
				Args: []model.Arg{{
					Name:        "pack",
					Description: `Pack`,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}},
			}, {
				Name:        []string{"search"},
				Description: `Search the index for a pack with any attribute matching the query`,
				Args: []model.Arg{{
					Name:        "query",
					Description: `Query`,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"--attr"},
					Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
					Args: []model.Arg{{
						Name:       "ATTR",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"-w", "--width"},
					Description: `Set the width of the columns in output`,
					Args: []model.Arg{{
						Name:       "WIDTH",
						IsVariadic: true,
					}},
				}},
			}, {
				Name:        []string{"install"},
				Description: `Install new packs`,
				Args: []model.Arg{{
					Name:        "pack",
					Description: `Pack`,
					IsVariadic:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"-w", "--width"},
					Description: `Set the width of the columns in output`,
					Args: []model.Arg{{
						Name:       "WIDTH",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"--attr"},
					Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
					Args: []model.Arg{{
						Name:       "ATTR",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"-d", "--detail"},
					Description: `Display full detail of the execution in table format`,
				}, {
					Name:        []string{"force"},
					Description: `Force`,
				}, {
					Name:        []string{"--skip-dependencies"},
					Description: `Skip dependencies`,
				}},
			}, {
				Name:        []string{"remove"},
				Description: `Remove packs`,
				Args: []model.Arg{{
					Name:        "pack",
					Description: `Pack`,
					IsVariadic:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"-w", "--width"},
					Description: `Set the width of the columns in output`,
					Args: []model.Arg{{
						Name:       "WIDTH",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"--attr"},
					Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
					Args: []model.Arg{{
						Name:       "ATTR",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"-d", "--detail"},
					Description: `Display full detail of the execution in table format`,
				}},
			}, {
				Name:        []string{"register"},
				Description: `Register pack(s): sync all file changes with DB`,
				Args: []model.Arg{{
					Name:        "pack",
					Description: `Pack`,
					IsVariadic:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"--types"},
					Description: `Types of content to register`,
					Args: []model.Arg{{
						Name:       "TYPES",
						IsVariadic: true,
					}},
				}},
			}, {
				Name:        []string{"config"},
				Description: `Configure a pack based on config schema`,
				Args: []model.Arg{{
					Name:        "name",
					Description: `Name`,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}},
			}},
		}, {
			Name:        []string{"policy"},
			Description: `Policy that is enforced on a resource`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"list"},
				Description: `Get the list of policies`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"--attr"},
					Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
					Args: []model.Arg{{
						Name:       "ATTR",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"-w", "--width"},
					Description: `Set the width of the columns in output`,
					Args: []model.Arg{{
						Name:       "WIDTH",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"-p", "--pack"},
					Description: `Only return resources belonging to the provided pack`,
					Args: []model.Arg{{
						Name: "PACK",
					}},
				}, {
					Name:        []string{"-r", "--resource-ref"},
					Description: `Return policies for the resource ref`,
					Args: []model.Arg{{
						Name: "RESOURCE_REF",
					}},
				}, {
					Name:        []string{"-pt", "--policy-type"},
					Description: `Return policies of the policy type`,
					Args: []model.Arg{{
						Name: "POLICY_TYPE",
					}},
				}},
			}, {
				Name:        []string{"get"},
				Description: `Get individual policy`,
				Args: []model.Arg{{
					Name:        "ref-or-id",
					Description: `Reference or ID`,
					IsVariadic:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"--attr"},
					Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
					Args: []model.Arg{{
						Name:       "ATTR",
						IsVariadic: true,
					}},
				}},
			}, {
				Name:        []string{"create"},
				Description: `Create a new policy`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFilepaths},
					Name:        "file",
					Description: `JSON/YAML file`,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}},
			}, {
				Name:        []string{"update"},
				Description: `Updating an existing policy`,
				Args: []model.Arg{{
					Name:        "ref-or-id",
					Description: `Reference or ID`,
				}, {
					Templates:   []model.Template{model.TemplateFilepaths},
					Name:        "file",
					Description: `JSON/YAML file`,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}},
			}, {
				Name:        []string{"delete"},
				Description: `Delete an existing policy`,
				Args: []model.Arg{{
					Name:        "ref-or-id",
					Description: `Reference or ID`,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}},
			}},
		}, {
			Name:        []string{"policy-type"},
			Description: `Type of policy that can be applied to the resources`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"list"},
				Description: `Get the list of policy types`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"--attr"},
					Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
					Args: []model.Arg{{
						Name:       "ATTR",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"-w", "--width"},
					Description: `Set the width of the columns in output`,
					Args: []model.Arg{{
						Name:       "WIDTH",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"-r", "--resource-type"},
					Description: `Return policy types for the resource type`,
					Args: []model.Arg{{
						Name: "RESOURCE_TYPE",
					}},
				}},
			}, {
				Name:        []string{"get"},
				Description: `Get individual policy type`,
				Args: []model.Arg{{
					Name:        "ref-or-id",
					Description: `Reference or ID`,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"--attr"},
					Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
					Args: []model.Arg{{
						Name:       "ATTR",
						IsVariadic: true,
					}},
				}},
			}},
		}, {
			Name:        []string{"rule"},
			Description: `A specification to invoke an 'action' on a 'trigger' selectively based on some criteria'`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"list"},
				Description: `Get the list of the 50 most recent rules`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"--attr"},
					Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
					Args: []model.Arg{{
						Name:       "ATTR",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"-w", "--width"},
					Description: `Set the width of the columns in output`,
					Args: []model.Arg{{
						Name:       "WIDTH",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"-n", "--last"},
					Description: `List N most recent; use -n -1 to fetch the full result set`,
					Args: []model.Arg{{
						Name:        "LAST",
						Suggestions: []model.Suggestion{{Name: []string{`10`}}, {Name: []string{`5`}}, {Name: []string{`1`}}, {Name: []string{`-1`}}},
					}},
				}, {
					Name:        []string{"--iftt"},
					Description: `Show trigger and action in display list`,
				}, {
					Name:        []string{"-p", "--pack"},
					Description: `Only return resources belonging to the provided pack`,
					Args: []model.Arg{{
						Name: "PACK",
					}},
				}, {
					Name:        []string{"--enabled"},
					Description: `Show enabled`,
				}, {
					Name:        []string{"--disabled"},
					Description: `Show disabled`,
				}, {
					Name:        []string{"--action"},
					Description: `Action reference to filter the list`,
					Args: []model.Arg{{
						Name: "ACTION",
					}},
				}, {
					Name:        []string{"-g", "--trigger"},
					Description: `Trigger type reference to filter the list`,
					Args: []model.Arg{{
						Name: "TRIGGER",
					}},
				}},
			}, {
				Name:        []string{"get"},
				Description: `Get individual rule`,
				Args: []model.Arg{{
					Name:        "ref-or-id",
					Description: `Reference or ID`,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"--attr"},
					Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
					Args: []model.Arg{{
						Name:       "ATTR",
						IsVariadic: true,
					}},
				}},
			}, {
				Name:        []string{"create"},
				Description: `Create a new rule`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFilepaths},
					Name:        "file",
					Description: `JSON/YAML file`,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}},
			}, {
				Name:        []string{"update"},
				Description: `Update an existing rule`,
				Args: []model.Arg{{
					Name:        "ref-or-id",
					Description: `Reference or ID`,
				}, {
					Templates:   []model.Template{model.TemplateFilepaths},
					Name:        "file",
					Description: `JSON/YAML file`,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}},
			}, {
				Name:        []string{"delete"},
				Description: `Delete an existing rule`,
				Args: []model.Arg{{
					Name:        "ref-or-id",
					Description: `Reference or ID`,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}},
			}, {
				Name:        []string{"enable"},
				Description: `Enable an existing rule`,
				Args: []model.Arg{{
					Name:        "ref-or-id",
					Description: `Reference or ID`,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}},
			}, {
				Name:        []string{"disable"},
				Description: `Disable an existing rule`,
				Args: []model.Arg{{
					Name:        "ref-or-id",
					Description: `Reference or ID`,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}},
			}},
		}, {
			Name:        []string{"webhook"},
			Description: `Webhooks`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"list"},
				Description: `Get the list of webhooks`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"--attr"},
					Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
					Args: []model.Arg{{
						Name:       "ATTR",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"-w", "--width"},
					Description: `Set the width of the columns in output`,
					Args: []model.Arg{{
						Name:       "WIDTH",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"-p", "--pack"},
					Description: `Only return resources belonging to the provided pack`,
					Args: []model.Arg{{
						Name: "PACK",
					}},
				}},
			}, {
				Name:        []string{"get"},
				Description: `Get individual webhooks`,
				Args: []model.Arg{{
					Name:        "url",
					Description: `URL`,
					IsVariadic:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"--attr"},
					Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
					Args: []model.Arg{{
						Name:       "ATTR",
						IsVariadic: true,
					}},
				}},
			}},
		}, {
			Name:        []string{"timer"},
			Description: `Timers`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"list"},
				Description: `Get the list of timers`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"--attr"},
					Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
					Args: []model.Arg{{
						Name:       "ATTR",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"-w", "--width"},
					Description: `Set the width of the columns in output`,
					Args: []model.Arg{{
						Name:       "WIDTH",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"-ty", "--timer-type"},
					Description: `List timers type, example: 'core.st2.IntervalTimer', 'core.st2.DateTimer', 'core.st2.CronTimer'`,
					Args: []model.Arg{{
						Name:        "TIMER_TYPE",
						Suggestions: []model.Suggestion{{Name: []string{`core.st2.IntervalTimer`}}, {Name: []string{`core.st2.DateTimer`}}, {Name: []string{`core.st2.CronTimer`}}},
					}},
				}},
			}, {
				Name:        []string{"get"},
				Description: `Get individual timer`,
				Args: []model.Arg{{
					Name:        "name-or-id",
					Description: `Name or ID`,
					IsVariadic:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"--attr"},
					Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
					Args: []model.Arg{{
						Name:       "ATTR",
						IsVariadic: true,
					}},
				}},
			}},
		}, {
			Name:        []string{"runner"},
			Description: `Runner is a type of handler for a specific class of actions`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"list"},
				Description: `List of commands for managing runners`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"--attr"},
					Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
					Args: []model.Arg{{
						Name:       "ATTR",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"-w", "--width"},
					Description: `Set the width of the columns in output`,
					Args: []model.Arg{{
						Name:       "WIDTH",
						IsVariadic: true,
					}},
				}},
			}, {
				Name:        []string{"get"},
				Description: `Get individual runner`,
				Args: []model.Arg{{
					Name:        "name-or-id",
					Description: `Name or ID`,
					IsVariadic:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"--attr"},
					Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
					Args: []model.Arg{{
						Name:       "ATTR",
						IsVariadic: true,
					}},
				}},
			}, {
				Name:        []string{"enable"},
				Description: `Enable an existing runner`,
				Args: []model.Arg{{
					Name:        "name-or-id",
					Description: `Name or ID`,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}},
			}, {
				Name:        []string{"disable"},
				Description: `Disable an existing runner`,
				Args: []model.Arg{{
					Name:        "name-or-id",
					Description: `Name or ID`,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}},
			}},
		}, {
			Name:        []string{"sensor"},
			Description: `An adapter which allows you to integrate StackStorm with external system`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"list"},
				Description: `Get the list of sensortypes`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"--attr"},
					Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
					Args: []model.Arg{{
						Name:       "ATTR",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"-w", "--width"},
					Description: `Set the width of the columns in output`,
					Args: []model.Arg{{
						Name:       "WIDTH",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"-p", "--pack"},
					Description: `Only return resources belonging to the provided pack`,
					Args: []model.Arg{{
						Name: "PACK",
					}},
				}},
			}, {
				Name:        []string{"get"},
				Description: `Get individual sensor`,
				Args: []model.Arg{{
					Name:        "ref-or-id",
					Description: `Reference or ID`,
					IsVariadic:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"--attr"},
					Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
					Args: []model.Arg{{
						Name:       "ATTR",
						IsVariadic: true,
					}},
				}},
			}, {
				Name:        []string{"enable"},
				Description: `Enable an existing sensor`,
				Args: []model.Arg{{
					Name:        "ref-or-id",
					Description: `Reference or ID`,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}},
			}, {
				Name:        []string{"disable"},
				Description: `Disalbe an existing sensor`,
				Args: []model.Arg{{
					Name:        "ref-or-id",
					Description: `Reference or ID`,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}},
			}},
		}, {
			Name:        []string{"trace"},
			Description: `A group of executions, rules and triggerinstances that are related`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"list"},
				Description: `Get the list of the 50 most recent traces`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"-n", "--last"},
					Description: `List N most recent; use -n -1 to fetch the full result set`,
					Args: []model.Arg{{
						Name:        "LAST",
						Suggestions: []model.Suggestion{{Name: []string{`10`}}, {Name: []string{`5`}}, {Name: []string{`1`}}, {Name: []string{`-1`}}},
					}},
				}, {
					Name:        []string{"-s", "--sort"},
					Description: `Sort action executions by start timestamp, asc|ascending (earliest first) or desc|descending (latest first)`,
					Args: []model.Arg{{
						Name:        "SORT_ORDER",
						Suggestions: []model.Suggestion{{Name: []string{`desc`}}, {Name: []string{`descending`}}, {Name: []string{`asc`}}, {Name: []string{`ascending`}}},
					}},
				}, {
					Name:        []string{"--trace-tag", "--trace_tag"},
					Description: `A trace tag string to track execution later`,
					Args: []model.Arg{{
						Name: "TRACE_TAG",
					}},
				}, {
					Name:        []string{"-e", "--execution"},
					Description: `Execution to filter the list`,
					Args: []model.Arg{{
						Name: "EXECUTION",
					}},
				}, {
					Name:        []string{"-r", "--rule"},
					Description: `Rule to filter the list`,
					Args: []model.Arg{{
						Name: "RULE",
					}},
				}, {
					Name:        []string{"--trigger_instance"},
					Description: `Trigger instance id to filter the list`,
					Args: []model.Arg{{
						Name: "TRIGGER_INSTANCE",
					}},
				}, {
					Name:        []string{"--attr"},
					Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
					Args: []model.Arg{{
						Name:       "ATTR",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"-w", "--width"},
					Description: `Set the width of the columns in output`,
					Args: []model.Arg{{
						Name:       "WIDTH",
						IsVariadic: true,
					}},
				}},
			}, {
				Name:        []string{"get"},
				Description: `Get individual trace`,
				Args: []model.Arg{{
					Name:        "id",
					Description: `ID`,
					IsVariadic:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"-e", "--execution"},
					Description: `Execution to filter the list`,
					Args: []model.Arg{{
						Name: "EXECUTION",
					}},
				}, {
					Name:        []string{"-r", "--rule"},
					Description: `Rule to filter the list`,
					Args: []model.Arg{{
						Name: "RULE",
					}},
				}, {
					Name:        []string{"--trigger_instance"},
					Description: `Trigger instance id to filter the list`,
					Args: []model.Arg{{
						Name: "TRIGGER_INSTANCE",
					}},
				}, {
					Name:        []string{"--show-executions"},
					Description: `Only show executions`,
				}, {
					Name:        []string{"--show-rules"},
					Description: `Only show rules`,
				}, {
					Name:        []string{"-n", "--hide-noop-triggers"},
					Description: `Hide noop trigger instances`,
				}},
			}},
		}, {
			Name:        []string{"trigger"},
			Description: `An external event that is mapped to a st2 input. It is the st2 invocation point`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"list"},
				Description: `Get the list of triggers`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"--attr"},
					Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
					Args: []model.Arg{{
						Name:       "ATTR",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"-w", "--width"},
					Description: `Set the width of the columns in output`,
					Args: []model.Arg{{
						Name:       "WIDTH",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"-p", "--pack"},
					Description: `Only return resources belonging to the provided pack`,
					Args: []model.Arg{{
						Name: "PACK",
					}},
				}},
			}, {
				Name:        []string{"get"},
				Description: `Get individual trigger`,
				Args: []model.Arg{{
					Name:        "ref-or-id",
					Description: `Reference or ID`,
					IsVariadic:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"--attr"},
					Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
					Args: []model.Arg{{
						Name:       "ATTR",
						IsVariadic: true,
					}},
				}},
			}, {
				Name:        []string{"create"},
				Description: `Create a new trigger`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFilepaths},
					Name:        "file",
					Description: `JSON/YAML file`,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}},
			}, {
				Name:        []string{"update"},
				Description: `Updating an existing trigger`,
				Args: []model.Arg{{
					Name:        "ref-or-id",
					Description: `Reference or ID`,
				}, {
					Templates:   []model.Template{model.TemplateFilepaths},
					Name:        "file",
					Description: `JSON/YAML file`,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}},
			}, {
				Name:        []string{"delete"},
				Description: `Delete an existing trigger`,
				Args: []model.Arg{{
					Name:        "ref-or-id",
					Description: `Reference or ID`,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}},
			}, {
				Name:        []string{"getspecs"},
				Description: `Return Trigger Specifications of a Trigger`,
				Args: []model.Arg{{
					Name:        "ref",
					Description: `Reference`,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}},
			}},
		}, {
			Name:        []string{"trigger-instance"},
			Description: `Actual instances of triggers received by st2`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"list"},
				Description: `Get the list of the 50 most recent triggerinstances`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"-n", "--last"},
					Description: `List N most recent; use -n -1 to fetch the full result set`,
					Args: []model.Arg{{
						Name:        "LAST",
						Suggestions: []model.Suggestion{{Name: []string{`10`}}, {Name: []string{`5`}}, {Name: []string{`1`}}, {Name: []string{`-1`}}},
					}},
				}, {
					Name:        []string{"-tg", "timestamp-gt"},
					Description: `Only return executions with timestamp greater than the one provided. Use time in the format '2000-01-01T12:00:00.000Z'`,
					Args: []model.Arg{{
						Name: "TIMESTAMP_GT",
					}},
				}, {
					Name:        []string{"-tl", "timestamp-lt"},
					Description: `Only return executions with timestamp lower than the one provided. Use time in the format '2000-01-01T12:00:00.000Z'`,
					Args: []model.Arg{{
						Name: "TIMESTAMP_LT",
					}},
				}, {
					Name:        []string{"--attr"},
					Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
					Args: []model.Arg{{
						Name:       "ATTR",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"-w", "--width"},
					Description: `Set the width of the columns in output`,
					Args: []model.Arg{{
						Name:       "WIDTH",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"-g", "--trigger"},
					Description: `Trigger type reference to filter the list`,
					Args: []model.Arg{{
						Name: "TRIGGER",
					}},
				}, {
					Name:        []string{"--status"},
					Description: `Only return executions with the provided status. Possible values are 'succeeded', 'running', 'scheduled', 'paused', 'failed', 'canceling' or 'canceled'`,
					Args: []model.Arg{{
						Name:        "STATUS",
						Suggestions: []model.Suggestion{{Name: []string{`succeeded`}}, {Name: []string{`running`}}, {Name: []string{`scheduled`}}, {Name: []string{`paused`}}, {Name: []string{`failed`}}, {Name: []string{`canceling`}}, {Name: []string{`canceled`}}},
					}},
				}},
			}, {
				Name:        []string{"get"},
				Description: `Get individual trigger instance`,
				Args: []model.Arg{{
					Name:        "id",
					Description: `ID`,
					IsVariadic:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"--attr"},
					Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
					Args: []model.Arg{{
						Name:       "ATTR",
						IsVariadic: true,
					}},
				}},
			}, {
				Name:        []string{"re-emit"},
				Description: `Re-emit a particular trigger instance`,
				Args: []model.Arg{{
					Name:        "id",
					Description: `ID`,
					IsVariadic:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"--attr"},
					Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
					Args: []model.Arg{{
						Name:       "ATTR",
						IsVariadic: true,
					}},
				}},
			}},
		}, {
			Name:        []string{"rule-enforcement"},
			Description: `Models that represent enforcement of rules`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"list"},
				Description: `Get the list of the 50 most recent rule enforcements`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"-tg", "timestamp-gt"},
					Description: `Only return executions with timestamp greater than the one provided. Use time in the format '2000-01-01T12:00:00.000Z'`,
					Args: []model.Arg{{
						Name: "TIMESTAMP_GT",
					}},
				}, {
					Name:        []string{"-tl", "timestamp-lt"},
					Description: `Only return executions with timestamp lower than the one provided. Use time in the format '2000-01-01T12:00:00.000Z'`,
					Args: []model.Arg{{
						Name: "TIMESTAMP_LT",
					}},
				}, {
					Name:        []string{"--attr"},
					Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
					Args: []model.Arg{{
						Name:       "ATTR",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"-w", "--width"},
					Description: `Set the width of the columns in output`,
					Args: []model.Arg{{
						Name:       "WIDTH",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"--trigger_instance"},
					Description: `Trigger instance id to filter the list`,
					Args: []model.Arg{{
						Name: "TRIGGER_INSTANCE",
					}},
				}, {
					Name:        []string{"-e", "--execution"},
					Description: `Execution to filter the list`,
					Args: []model.Arg{{
						Name: "EXECUTION",
					}},
				}, {
					Name:        []string{"-r", "--rule"},
					Description: `Rule to filter the list`,
					Args: []model.Arg{{
						Name: "RULE",
					}},
				}},
			}, {
				Name:        []string{"get"},
				Description: `Get individual rule enforcement`,
				Args: []model.Arg{{
					Name:        "id",
					Description: `ID`,
					IsVariadic:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"--attr"},
					Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
					Args: []model.Arg{{
						Name:       "ATTR",
						IsVariadic: true,
					}},
				}},
			}, {
				Name:        []string{"create"},
				Description: `Create a new rule enforcement`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFilepaths},
					Name:        "file",
					Description: `JSON/YAML file`,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}},
			}, {
				Name:        []string{"update"},
				Description: `Update an existing rule enforcement`,
				Args: []model.Arg{{
					Name:        "name-or-id",
					Description: `Name or ID`,
				}, {
					Templates:   []model.Template{model.TemplateFilepaths},
					Name:        "file",
					Description: `JSON/YAML file`,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}},
			}, {
				Name:        []string{"delete"},
				Description: `Delete an existing rule enforcement`,
				Args: []model.Arg{{
					Name:        "name-or-id",
					Description: `Name or ID`,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}},
			}},
		}, {
			Name:        []string{"workflow"},
			Description: `An adapter which allows you to integrate StackStorm with external system`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"inspect"},
				Description: `Inspect workflow definition and return the list of errors if any`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"--file"},
					Description: `Local file path to the workflow definition`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "FILE",
					}},
				}, {
					Name:        []string{"--action"},
					Description: `Action reference to filter the list`,
					Args: []model.Arg{{
						Name: "ACTION",
					}},
				}},
			}},
		}, {
			Name:        []string{"service-registry"},
			Description: `Service registry group and membership related commands`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"group"},
				Description: `Manage service registry groups`,
				Subcommands: []model.Subcommand{{
					Name:        []string{"list"},
					Description: `Get list of groups`,
					Options: []model.Option{{
						Name:        []string{"-h", "--help"},
						Description: `Show this help and exit`,
					}, {
						Name:        []string{"-t", "--token"},
						Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
						Args: []model.Arg{{
							Name: "TOKEN",
						}},
					}, {
						Name:        []string{"--api-key"},
						Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
						Args: []model.Arg{{
							Name: "API_KEY",
						}},
					}, {
						Name:        []string{"-j", "--json"},
						Description: `Print output in JSON format`,
					}, {
						Name:        []string{"-y", "--yaml"},
						Description: `Print output in YAML format`,
					}, {
						Name:        []string{"--attr"},
						Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
						Args: []model.Arg{{
							Name:       "ATTR",
							IsVariadic: true,
						}},
					}, {
						Name:        []string{"-w", "--width"},
						Description: `Set the width of the columns in output`,
						Args: []model.Arg{{
							Name:       "WIDTH",
							IsVariadic: true,
						}},
					}},
				}},
			}, {
				Name:        []string{"member"},
				Description: `Manage service registry members`,
				Subcommands: []model.Subcommand{{
					Name:        []string{"list"},
					Description: `Get list of group members`,
					Options: []model.Option{{
						Name:        []string{"-h", "--help"},
						Description: `Show this help and exit`,
					}, {
						Name:        []string{"-t", "--token"},
						Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
						Args: []model.Arg{{
							Name: "TOKEN",
						}},
					}, {
						Name:        []string{"--api-key"},
						Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
						Args: []model.Arg{{
							Name: "API_KEY",
						}},
					}, {
						Name:        []string{"-j", "--json"},
						Description: `Print output in JSON format`,
					}, {
						Name:        []string{"-y", "--yaml"},
						Description: `Print output in YAML format`,
					}, {
						Name:        []string{"--attr"},
						Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
						Args: []model.Arg{{
							Name:       "ATTR",
							IsVariadic: true,
						}},
					}, {
						Name:        []string{"-w", "--width"},
						Description: `Set the width of the columns in output`,
						Args: []model.Arg{{
							Name:       "WIDTH",
							IsVariadic: true,
						}},
					}, {
						Name:        []string{"--group-id"},
						Description: `Group ID`,
						Args: []model.Arg{{
							Name: "GROUP_ID",
						}},
					}},
				}},
			}},
		}, {
			Name:        []string{"role"},
			Description: `RBAC roles`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"list"},
				Description: `Get the list of the roles`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"-s", "--system"},
					Description: `Only display system roles`,
				}, {
					Name:        []string{"--attr"},
					Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
					Args: []model.Arg{{
						Name:       "ATTR",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"-w", "--width"},
					Description: `Set the width of the columns in output`,
					Args: []model.Arg{{
						Name:       "WIDTH",
						IsVariadic: true,
					}},
				}},
			}, {
				Name:        []string{"get"},
				Description: `Get individual role`,
				Args: []model.Arg{{
					Name:        "id",
					Description: `ID`,
					IsVariadic:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"--attr"},
					Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
					Args: []model.Arg{{
						Name:       "ATTR",
						IsVariadic: true,
					}},
				}},
			}},
		}, {
			Name:        []string{"role-assignment"},
			Description: `RBAC role assignments`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"list"},
				Description: `Get the list of role assignments`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}},
			}, {
				Name:        []string{"get"},
				Description: `Get individual assignment`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Show this help and exit`,
				}, {
					Name:        []string{"-t", "--token"},
					Description: `Access token for user authentication. Get ST2_AUTH_TOKEN from the environment variables by default`,
					Args: []model.Arg{{
						Name: "TOKEN",
					}},
				}, {
					Name:        []string{"--api-key"},
					Description: `Api Key for user authentication. Get ST2_API_KEY from the environment variables by default`,
					Args: []model.Arg{{
						Name: "API_KEY",
					}},
				}, {
					Name:        []string{"-j", "--json"},
					Description: `Print output in JSON format`,
				}, {
					Name:        []string{"-y", "--yaml"},
					Description: `Print output in YAML format`,
				}, {
					Name:        []string{"-r", "--role"},
					Description: `Role to filter on`,
					Args: []model.Arg{{
						Name: "ROLE",
					}},
				}, {
					Name:        []string{"-u", "--user"},
					Description: `User under which to run the action (admins only)`,
					Args: []model.Arg{{
						Name:      "USER",
						Generator: nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"-s", "--source"},
					Description: `Source to filter on`,
					Args: []model.Arg{{
						Name: "SOURCE",
					}},
				}, {
					Name:        []string{"--remote"},
					Description: `Only display remote role assignments`,
				}, {
					Name:        []string{"--attr"},
					Description: `List of attributes to include in the output. 'all' or unspecified will return all attributes`,
					Args: []model.Arg{{
						Name:       "ATTR",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"-w", "--width"},
					Description: `Set the width of the columns in output`,
					Args: []model.Arg{{
						Name:       "WIDTH",
						IsVariadic: true,
					}},
				}},
			}},
		}},
	}
}
