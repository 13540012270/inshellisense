// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["pod"] = model.Subcommand{
		Name:        []string{"pod"},
		Description: `CocoaPods, the Cocoa library package manager`,
		Options: []model.Option{{
			Name:        []string{"--silent"},
			Description: `Show nothing`,
		}, {
			Name:        []string{"--verbose"},
			Description: `Show more debugging information`,
		}, {
			Name:        []string{"--no-ansi"},
			Description: `Show output without ANSI codes`,
		}, {
			Name:        []string{"--help"},
			Description: `Show help banner of specified command`,
		}},
		Subcommands: []model.Subcommand{{
			Name:        []string{"deintegrate"},
			Description: `Deintegrate CocoaPods from your project`,
			Args: []model.Arg{{
				Name:       "XCODE_PROJECT",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"--project-directory"},
				Description: `The path to the root of the project directory`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "/project/dir/",
				}},
			}, {
				Name:        []string{"--allow-root"},
				Description: `Allows CocoaPods to run as root`,
			}},
		}, {
			Name:        []string{"cache"},
			Description: `Manipulate the CocoaPods cache`,
			Options: []model.Option{{
				Name:        []string{"--allow-root"},
				Description: `Allows CocoaPods to run as root`,
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"clean"},
				Description: `Remove the cache for pods`,
				Args: []model.Arg{{
					Name:       "NAME",
					IsOptional: true,
				}},
				Options: []model.Option{{
					Name:        []string{"--all"},
					Description: `Remove all the cached pods without asking`,
				}, {
					Name:        []string{"--allow-root"},
					Description: `Allows CocoaPods to run as root`,
				}},
			}, {
				Name:        []string{"list"},
				Description: `List the paths of pod caches for each known pod`,
				Args: []model.Arg{{
					Name:       "NAME",
					IsOptional: true,
				}},
				Options: []model.Option{{
					Name:        []string{"--short"},
					Description: `Only print the path relative to the cache root`,
				}, {
					Name:        []string{"--allow-root"},
					Description: `Allows CocoaPods to run as root`,
				}},
			}},
		}, {
			Name:        []string{"list"},
			Description: `List pods`,
			Options: []model.Option{{
				Name:        []string{"--update"},
				Description: `Run "pod repo update" before listing`,
			}, {
				Name:        []string{"--stats"},
				Description: `Show additional stats (like GitHub watchers and forks)`,
			}, {
				Name:        []string{"--allow-root"},
				Description: `Allows CocoaPods to run as root`,
			}},
		}, {
			Name:        []string{"setup"},
			Description: `Setup the CocoaPods environment`,
			Options: []model.Option{{
				Name:        []string{"--allow-root"},
				Description: `Allows CocoaPods to run as root`,
			}},
		}, {
			Name:        []string{"spec"},
			Description: `Manage pod specs`,
			Options: []model.Option{{
				Name:        []string{"--allow-root"},
				Description: `Allows CocoaPods to run as root`,
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"edit"},
				Description: `Edit a spec file`,
				Args: []model.Arg{{
					Name:       "QUERY",
					IsOptional: true,
				}},
				Options: []model.Option{{
					Name:        []string{"--regex"},
					Description: `Interpret the "QUERY" as a regular expression`,
				}, {
					Name:        []string{"--show-all"},
					Description: `Pick from all versions of the given podspec`,
				}, {
					Name:        []string{"--allow-root"},
					Description: `Allows CocoaPods to run as root`,
				}},
			}, {
				Name:        []string{"create"},
				Description: `Create spec file stub`,
				Args: []model.Arg{{
					Name:       "NAME|https://github.com/USER/REPO",
					IsOptional: true,
				}},
				Options: []model.Option{{
					Name:        []string{"--allow-root"},
					Description: `Allows CocoaPods to run as root`,
				}},
			}, {
				Name:        []string{"cat"},
				Description: `Prints a spec file`,
				Args: []model.Arg{{
					Name:       "QUERY",
					IsOptional: true,
				}},
				Options: []model.Option{{
					Name:        []string{"--regex"},
					Description: `Interpret the "QUERY" as a regular expression`,
				}, {
					Name:        []string{"--show-all"},
					Description: `Pick from all versions of the given podspec`,
				}, {
					Name:        []string{"--allow-root"},
					Description: `Allows CocoaPods to run as root`,
				}},
			}, {
				Name:        []string{"which"},
				Description: `Prints the path of the given spec`,
				Args: []model.Arg{{
					Name:       "QUERY",
					IsOptional: true,
				}},
				Options: []model.Option{{
					Name:        []string{"--regex"},
					Description: `Interpret the "QUERY" as a regular expression`,
				}, {
					Name:        []string{"--show-all"},
					Description: `Print all versions of the given podspec`,
				}, {
					Name:        []string{"--allow-root"},
					Description: `Allows CocoaPods to run as root`,
				}},
			}, {
				Name:        []string{"lint"},
				Description: `Validates a spec file`,
				Args: []model.Arg{{
					Name:       "NAME.podspec|DIRECTORY|http://PATH/NAME.podspec",
					Generator:  nil, // TODO: port over generator
					IsOptional: true,
				}},
				Options: []model.Option{{
					Name:        []string{"--quick"},
					Description: `Lint skips checks that would require to download and build the spec`,
				}, {
					Name:        []string{"--allow-warnings"},
					Description: `Lint validates even if warnings are present`,
				}, {
					Name:        []string{"--subspec"},
					Description: `Lint validates only the given subspec`,
					Args: []model.Arg{{
						Name: "NAME",
					}},
				}, {
					Name:        []string{"--no-subspecs"},
					Description: `Lint skips validation of subspecs`,
				}, {
					Name:        []string{"--no-clean"},
					Description: `Lint leaves the build directory intact for inspection`,
				}, {
					Name:        []string{"--fail-fast"},
					Description: `Lint stops on the first failing platform or subspec`,
				}, {
					Name:        []string{"--use-libraries"},
					Description: `Lint uses static libraries to install the spec`,
				}, {
					Name:        []string{"--use-modular-headers"},
					Description: `Lint uses modular headers during installation`,
				}, {
					Name:        []string{"--use-static-frameworks"},
					Description: `Lint uses static frameworks during installation`,
				}, {
					Name:        []string{"--sources"},
					Description: `The sources from which to pull dependent pods (defaults to https://cdn.cocoapods.org/). Multiple sources must be comma-delimited`,
					Args: []model.Arg{{
						Name: "source",
						Suggestions: []model.Suggestion{{
							Name: []string{`https://cdn.cocoapods.org/`},
						}},
					}},
				}, {
					Name:        []string{"--platforms"},
					Description: `Lint against specific platforms (defaults to all platforms supported by the podspec). Multiple platforms must be comma-delimited`,
					Args: []model.Arg{{
						Name: "platform",
						Suggestions: []model.Suggestion{{
							Name: []string{`ios`},
						}, {
							Name: []string{`macos`},
						}, {
							Name: []string{`ios,macos`},
						}},
					}},
				}, {
					Name:        []string{"--private"},
					Description: `Lint skips checks that apply only to public specs`,
				}, {
					Name:        []string{"--swift-version"},
					Description: `The "SWIFT_VERSION" that should be used to lint the spec. This takes precedence over the Swift versions specified by the spec or a ".swift-version" file`,
					Args: []model.Arg{{
						Name: "VERSION",
					}},
				}, {
					Name:        []string{"--skip-import-validation"},
					Description: `Lint skips validating that the pod can be imported`,
				}, {
					Name:        []string{"--skip-tests"},
					Description: `Lint skips building and running tests during validation`,
				}, {
					Name:        []string{"--test-specs"},
					Description: `List of test specs to run`,
					Args: []model.Arg{{
						Name: "test-spec",
					}},
				}, {
					Name:        []string{"--analyze"},
					Description: `Validate with the Xcode Static Analysis tool`,
				}, {
					Name:        []string{"--configuration"},
					Description: `Build using the given configuration (defaults to Release)`,
					Args: []model.Arg{{
						Name: "CONFIGURATION",
					}},
				}, {
					Name:        []string{"--allow-root"},
					Description: `Allows CocoaPods to run as root`,
				}},
			}},
		}, {
			Name:        []string{"install"},
			Description: `Install project dependencies according to versions from a Podfile.lock`,
			Options: []model.Option{{
				Name:        []string{"--repo-update"},
				Description: `Force running "pod repo update" before install`,
			}, {
				Name:        []string{"--deployment"},
				Description: `Disallow any changes to the Podfile or the Podfile.lock during installation`,
			}, {
				Name:        []string{"--clean-install"},
				Description: `Ignore the contents of the project cache and force a full pod installation. This only applies to projects that have enabled incremental installation`,
			}, {
				Name:        []string{"--project-directory"},
				Description: `The path to the root of the project directory`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "/project/dir/",
				}},
			}, {
				Name:        []string{"--allow-root"},
				Description: `Allows CocoaPods to run as root`,
			}},
		}, {
			Name:        []string{"env"},
			Description: `Display pod environment`,
			Options: []model.Option{{
				Name:        []string{"--allow-root"},
				Description: `Allows CocoaPods to run as root`,
			}},
		}, {
			Name:        []string{"outdated"},
			Description: `Show outdated project dependencies`,
			Options: []model.Option{{
				Name:        []string{"--project-directory"},
				Description: `The path to the root of the project directory`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "/project/dir/",
				}},
			}, {
				Name:        []string{"--no-repo-update"},
				Description: `Skip running "pod repo update" before install`,
			}, {
				Name:        []string{"--allow-root"},
				Description: `Allows CocoaPods to run as root`,
			}},
		}, {
			Name:        []string{"init"},
			Description: `Generate a Podfile for the current directory`,
			Args: []model.Arg{{
				Name: "XCODEPROJ",
			}},
			Options: []model.Option{{
				Name:        []string{"--allow-root"},
				Description: `Allows CocoaPods to run as root`,
			}},
		}, {
			Name:        []string{"ipc"},
			Description: `Inter-process communication`,
			Options: []model.Option{{
				Name:        []string{"--allow-root"},
				Description: `Allows CocoaPods to run as root`,
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"list"},
				Description: `Lists the specifications known to CocoaPods`,
				Options: []model.Option{{
					Name:        []string{"--allow-root"},
					Description: `Allows CocoaPods to run as root`,
				}},
			}, {
				Name:        []string{"update-search-index"},
				Description: `Updates the search index`,
				Options: []model.Option{{
					Name:        []string{"--allow-root"},
					Description: `Allows CocoaPods to run as root`,
				}},
			}, {
				Name:        []string{"podfile-json"},
				Description: `Converts a Podfile to JSON`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "PATH",
				}},
				Options: []model.Option{{
					Name:        []string{"--project-directory"},
					Description: `The path to the root of the project directory`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFolders},
						Name:      "/project/dir/",
					}},
				}, {
					Name:        []string{"--allow-root"},
					Description: `Allows CocoaPods to run as root`,
				}},
			}, {
				Name:        []string{"spec"},
				Description: `Converts a podspec to JSON`,
				Args: []model.Arg{{
					Name: "PATH",
				}},
				Options: []model.Option{{
					Name:        []string{"--allow-root"},
					Description: `Allows CocoaPods to run as root`,
				}},
			}, {
				Name:        []string{"podfile"},
				Description: `Converts a Podfile to YAML`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "PATH",
				}},
				Options: []model.Option{{
					Name:        []string{"--project-directory"},
					Description: `The path to the root of the project directory`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFolders},
						Name:      "/project/dir/",
					}},
				}, {
					Name:        []string{"--allow-root"},
					Description: `Allows CocoaPods to run as root`,
				}},
			}, {
				Name:        []string{"repl"},
				Description: `The repl listens to commands on standard input`,
				Options: []model.Option{{
					Name:        []string{"--project-directory"},
					Description: `The path to the root of the project directory`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFolders},
						Name:      "/project/dir/",
					}},
				}, {
					Name:        []string{"--allow-root"},
					Description: `Allows CocoaPods to run as root`,
				}},
			}},
		}, {
			Name:        []string{"plugins"},
			Description: `Show available CocoaPods plugins`,
			Options: []model.Option{{
				Name:        []string{"--allow-root"},
				Description: `Allows CocoaPods to run as root`,
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"search"},
				Description: `Search for known plugins`,
				Args: []model.Arg{{
					Name: "QUERY",
				}},
				Options: []model.Option{{
					Name:        []string{"--full"},
					Description: `Search by name  author, and description`,
				}, {
					Name:        []string{"--allow-root"},
					Description: `Allows CocoaPods to run as root`,
				}},
			}, {
				Name:        []string{"installed"},
				Description: `List plugins installed on your machine`,
				Options: []model.Option{{
					Name:        []string{"--allow-root"},
					Description: `Allows CocoaPods to run as root`,
				}},
			}, {
				Name:        []string{"create"},
				Description: `Creates a new plugin`,
				Args: []model.Arg{{
					Name: "NAME",
				}, {
					Name:       "TEMPLATE_URL",
					IsOptional: true,
				}},
				Options: []model.Option{{
					Name:        []string{"--allow-root"},
					Description: `Allows CocoaPods to run as root`,
				}},
			}, {
				Name:        []string{"publish"},
				Description: `Request to add the plugin to the official plugins list`,
				Options: []model.Option{{
					Name:        []string{"--allow-root"},
					Description: `Allows CocoaPods to run as root`,
				}},
			}},
		}, {
			Name:        []string{"lib"},
			Description: `Develop pods`,
			Options: []model.Option{{
				Name:        []string{"--allow-root"},
				Description: `Allows CocoaPods to run as root`,
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"create"},
				Description: `Creates a new Pod`,
				Args: []model.Arg{{
					Name: "NAME",
				}},
				Options: []model.Option{{
					Name:        []string{"--template-url"},
					Description: `The URL of the git repo containing a compatible template`,
					Args: []model.Arg{{
						Name: "URL",
					}},
				}, {
					Name:        []string{"--allow-root"},
					Description: `Allows CocoaPods to run as root`,
				}},
			}, {
				Name:        []string{"lint"},
				Description: `Validates a Pod`,
				Args: []model.Arg{{
					Name:       "PODSPEC_PATHS",
					Generator:  nil, // TODO: port over generator
					IsOptional: true,
				}},
				Options: []model.Option{{
					Name:        []string{"--quick"},
					Description: `Lint skips checks that would require to download and build the spec`,
				}, {
					Name:        []string{"--allow-warnings"},
					Description: `Lint validates even if warnings are present`,
				}, {
					Name:        []string{"--subspec"},
					Description: `Lint validates only the given subspec`,
					Args: []model.Arg{{
						Name: "NAME",
					}},
				}, {
					Name:        []string{"--no-subspecs"},
					Description: `Lint skips validation of subspecs`,
				}, {
					Name:        []string{"--no-clean"},
					Description: `Lint leaves the build directory intact for inspection`,
				}, {
					Name:        []string{"--fail-fast"},
					Description: `Lint stops on the first failing platform or subspec`,
				}, {
					Name:        []string{"--use-libraries"},
					Description: `Lint uses static libraries to install the spec`,
				}, {
					Name:        []string{"--use-modular-headers"},
					Description: `Lint uses modular headers during installation`,
				}, {
					Name:        []string{"--use-static-frameworks"},
					Description: `Lint uses static frameworks during installation`,
				}, {
					Name:        []string{"--sources"},
					Description: `The sources from which to pull dependent pods (defaults to https://cdn.cocoapods.org/). Multiple,sources must be comma-delimited`,
					Args: []model.Arg{{
						Name: "source",
						Suggestions: []model.Suggestion{{
							Name: []string{`https://cdn.cocoapods.org/`},
						}},
					}},
				}, {
					Name:        []string{"--platforms"},
					Description: `Lint against specific platforms (defaults to all platforms supported by the podspec). Multiple platforms must be comma-delimited`,
					Args: []model.Arg{{
						Name: "platform",
						Suggestions: []model.Suggestion{{
							Name: []string{`ios`},
						}, {
							Name: []string{`macos`},
						}, {
							Name: []string{`ios,macos`},
						}},
					}},
				}, {
					Name:        []string{"--private"},
					Description: `Lint skips checks that apply only to public specs`,
				}, {
					Name:        []string{"--swift-version"},
					Description: `The "SWIFT_VERSION" that should be used to lint the spec. This takes precedence over the Swift versions specified by the spec or a ".swift-version" file`,
					Args: []model.Arg{{
						Name: "VERSION",
					}},
				}, {
					Name:        []string{"--include-podspecs"},
					Description: `Additional ancillary podspecs which are used for linting via :path`,
					Args: []model.Arg{{
						Name:      "podspec",
						Generator: nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"--external-podspecs"},
					Description: `Additional ancillary podspecs which are used for linting via :podspec. If there are --include-podspecs, then these are removed from them`,
					Args: []model.Arg{{
						Name:      "podspec",
						Generator: nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"--skip-import-validation"},
					Description: `Lint skips validating that the pod can be imported`,
				}, {
					Name:        []string{"--skip-tests"},
					Description: `Lint skips building and running tests during validation`,
				}, {
					Name:        []string{"--test-specs"},
					Description: `List of test specs to run`,
					Args: []model.Arg{{
						Name: "test-spec",
					}},
				}, {
					Name:        []string{"--analyze"},
					Description: `Validate with the Xcode Static Analysis tool`,
				}, {
					Name:        []string{"--configuration"},
					Description: `Build using the given configuration (defaults to Release)`,
					Args: []model.Arg{{
						Name: "CONFIGURATION",
					}},
				}, {
					Name:        []string{"--allow-root"},
					Description: `Allows CocoaPods to run as root`,
				}},
			}},
		}, {
			Name:        []string{"search"},
			Description: `Search for pods`,
			Args: []model.Arg{{
				Name: "QUERY",
			}},
			Options: []model.Option{{
				Name:        []string{"--regex"},
				Description: `Interpret the "QUERY" as a regular expression`,
			}, {
				Name:        []string{"--simple"},
				Description: `Search only by name`,
			}, {
				Name:        []string{"--stats"},
				Description: `Show additional stats (like GitHub watchers and forks)`,
			}, {
				Name:        []string{"--web"},
				Description: `Searches on cocoapods.org`,
			}, {
				Name:        []string{"--ios"},
				Description: `Restricts the search to Pods supported on iOS`,
			}, {
				Name:        []string{"--osx"},
				Description: `Restricts the search to Pods supported on macOS`,
			}, {
				Name:        []string{"--watchos"},
				Description: `Restricts the search to Pods supported on watchOS`,
			}, {
				Name:        []string{"--tvos"},
				Description: `Restricts the search to Pods supported on tvOS`,
			}, {
				Name:        []string{"--no-pager"},
				Description: `Do not pipe search results into a pager`,
			}, {
				Name:        []string{"--allow-root"},
				Description: `Allows CocoaPods to run as root`,
			}},
		}, {
			Name:        []string{"repo"},
			Description: `Manage spec-repositories`,
			Options: []model.Option{{
				Name:        []string{"--allow-root"},
				Description: `Allows CocoaPods to run as root`,
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"push"},
				Description: `Push new specifications to a spec-repo`,
				Args: []model.Arg{{
					Name: "REPO",
				}, {
					Name:       "NAME.podspec",
					Generator:  nil, // TODO: port over generator
					IsOptional: true,
				}},
				Options: []model.Option{{
					Name:        []string{"--allow-warnings"},
					Description: `Allows pushing even if there are warnings`,
				}, {
					Name:        []string{"--use-libraries"},
					Description: `Linter uses static libraries to install the spec`,
				}, {
					Name:        []string{"--use-modular-headers"},
					Description: `Lint uses modular headers during installation`,
				}, {
					Name:        []string{"--sources"},
					Description: `The sources from which to pull dependent pods (defaults to all available repos). Multiple sources must be comma-delimited`,
					Args: []model.Arg{{
						Name: "source",
						Suggestions: []model.Suggestion{{
							Name: []string{`https://cdn.cocoapods.org/`},
						}},
					}},
				}, {
					Name:        []string{"--local-only"},
					Description: `Does not perform the step of pushing REPO to its remote`,
				}, {
					Name:        []string{"--no-private"},
					Description: `Lint includes checks that apply only to public repos`,
				}, {
					Name:        []string{"--skip-import-validation"},
					Description: `Lint skips validating that the pod can be imported`,
				}, {
					Name:        []string{"--skip-tests"},
					Description: `Lint skips building and running tests during validation`,
				}, {
					Name:        []string{"--commit-message"},
					Description: `Add custom commit message. Opens default editor if no commit message is specified`,
					Args: []model.Arg{{
						Name: "message",
					}},
				}, {
					Name:        []string{"--use-json"},
					Description: `Convert the podspec to JSON before pushing it to the repo`,
				}, {
					Name:        []string{"--swift-version"},
					Description: `The "SWIFT_VERSION" that should be used when linting the spec. This takes precedence over the Swift versions specified by the spec or a ".swift-version" file`,
					Args: []model.Arg{{
						Name: "VERSION",
					}},
				}, {
					Name:        []string{"--no-overwrite"},
					Description: `Disallow pushing that would overwrite an existing spec`,
				}, {
					Name:        []string{"--allow-root"},
					Description: `Allows CocoaPods to run as root`,
				}},
			}, {
				Name:        []string{"add"},
				Description: `Add a spec repo`,
				Args: []model.Arg{{
					Name: "NAME",
				}, {
					Name: "URL",
				}, {
					Name:       "BRANCH",
					IsOptional: true,
				}},
				Options: []model.Option{{
					Name:        []string{"--progress"},
					Description: `Show the progress of cloning the spec repository`,
				}, {
					Name:        []string{"--allow-root"},
					Description: `Allows CocoaPods to run as root`,
				}},
			}, {
				Name:        []string{"remove"},
				Description: `Remove a spec repo`,
				Args: []model.Arg{{
					Name: "NAME",
				}},
				Options: []model.Option{{
					Name:        []string{"--allow-root"},
					Description: `Allows CocoaPods to run as root`,
				}},
			}, {
				Name:        []string{"add-cdn"},
				Description: `Add a spec repo backed by a CDN`,
				Args: []model.Arg{{
					Name: "NAME",
				}, {
					Name: "URL",
				}},
				Options: []model.Option{{
					Name:        []string{"--allow-root"},
					Description: `Allows CocoaPods to run as root`,
				}},
			}, {
				Name:        []string{"lint"},
				Description: `Validates all specs in a repo list`,
				Args: []model.Arg{{
					Name:       "NAME|DIRECTORY",
					IsOptional: true,
				}},
				Options: []model.Option{{
					Name:        []string{"--only-errors"},
					Description: `Lint presents only the errors`,
				}, {
					Name:        []string{"--allow-root"},
					Description: `Allows CocoaPods to run as root`,
				}},
			}, {
				Name:        []string{"update"},
				Description: `Update a spec repo`,
				Args: []model.Arg{{
					Name:       "NAME",
					IsOptional: true,
				}},
				Options: []model.Option{{
					Name:        []string{"--allow-root"},
					Description: `Allows CocoaPods to run as root`,
				}},
			}},
		}, {
			Name:        []string{"trunk"},
			Description: `Interact with the CocoaPods API (e.g. publishing new specs)`,
			Options: []model.Option{{
				Name:        []string{"--allow-root"},
				Description: `Allows CocoaPods to run as root`,
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"push"},
				Description: `Publish a podspec`,
				Args: []model.Arg{{
					Name:       "PATH",
					IsOptional: true,
				}},
				Options: []model.Option{{
					Name:        []string{"--allow-warnings"},
					Description: `Allows push even if there are lint warnings`,
				}, {
					Name:        []string{"--use-libraries"},
					Description: `Linter uses static libraries to install the spec`,
				}, {
					Name:        []string{"--use-modular-headers"},
					Description: `Lint uses modular headers during installation`,
				}, {
					Name:        []string{"--swift-version"},
					Description: `The SWIFT_VERSION that should be used to lint the spec. This takes precedence over a .swift-version file`,
					Args: []model.Arg{{
						Name: "VERSION",
					}},
				}, {
					Name:        []string{"--skip-import-validation"},
					Description: `Lint skips validating that the pod can be imported`,
				}, {
					Name:        []string{"--skip-tests"},
					Description: `Lint skips building and running tests during validation`,
				}, {
					Name:        []string{"--synchronous"},
					Description: `If validation depends on other recently pushed pods ,synchronize`,
				}, {
					Name:        []string{"--allow-root"},
					Description: `Allows CocoaPods to run as root`,
				}},
			}, {
				Name:        []string{"deprecate"},
				Description: `Deprecates a pod`,
				Args: []model.Arg{{
					Name: "NAME",
				}},
				Options: []model.Option{{
					Name:        []string{"--in-favor-of"},
					Description: `The pod to deprecate this pod in favor of`,
					Args: []model.Arg{{
						Name: "OTHER_NAME",
					}},
				}, {
					Name:        []string{"--allow-root"},
					Description: `Allows CocoaPods to run as root`,
				}},
			}, {
				Name:        []string{"delete"},
				Description: `Deletes a version of a pod`,
				Args: []model.Arg{{
					Name: "NAME",
				}, {
					Name: "VERSION",
				}},
				Options: []model.Option{{
					Name:        []string{"--allow-root"},
					Description: `Allows CocoaPods to run as root`,
				}},
			}, {
				Name:        []string{"add-owner"},
				Description: `Add an owner to a pod`,
				Args: []model.Arg{{
					Name: "POD",
				}, {
					Name: "OWNER-EMAIL",
				}},
				Options: []model.Option{{
					Name:        []string{"--allow-root"},
					Description: `Allows CocoaPods to run as root`,
				}},
			}, {
				Name:        []string{"remove-owner"},
				Description: `Remove an owner from a pod`,
				Args: []model.Arg{{
					Name: "POD",
				}, {
					Name: "OWNER-EMAIL",
				}},
				Options: []model.Option{{
					Name:        []string{"--allow-root"},
					Description: `Allows CocoaPods to run as root`,
				}},
			}, {
				Name:        []string{"me"},
				Description: `Display information about your sessions`,
				Options: []model.Option{{
					Name:        []string{"--allow-root"},
					Description: `Allows CocoaPods to run as root`,
				}},
				Subcommands: []model.Subcommand{{
					Name:        []string{"clean-sessions"},
					Description: `Remove sessions`,
					Options: []model.Option{{
						Name:        []string{"--all"},
						Description: `Removes all your sessions  except for the current one`,
					}, {
						Name:        []string{"--allow-root"},
						Description: `Allows CocoaPods to run as root`,
					}},
				}},
			}, {
				Name:        []string{"register"},
				Description: `Manage sessions`,
				Args: []model.Arg{{
					Name: "EMAIL",
				}, {
					Name:       "YOUR_NAME",
					IsOptional: true,
				}},
				Options: []model.Option{{
					Name:        []string{"--description"},
					Description: `An arbitrary description to easily identify your session later on`,
					Args: []model.Arg{{
						Name: "DESCRIPTION",
					}},
				}, {
					Name:        []string{"--allow-root"},
					Description: `Allows CocoaPods to run as root`,
				}},
			}, {
				Name:        []string{"info"},
				Description: `Returns information about a Pod`,
				Args: []model.Arg{{
					Name: "NAME",
				}},
				Options: []model.Option{{
					Name:        []string{"--allow-root"},
					Description: `Allows CocoaPods to run as root`,
				}},
			}},
		}, {
			Name:        []string{"update"},
			Description: `Update outdated project dependencies and create new Podfile.lock`,
			Args: []model.Arg{{
				Name:       "POD_NAMES",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"--sources"},
				Description: `The sources from which to update dependent pods. Multiple sources must be comma-delimited`,
				Args: []model.Arg{{
					Name: "https://cdn.cocoapods.org/",
				}},
			}, {
				Name:        []string{"--exclude-pods"},
				Description: `Pods to exclude during update. Multiple pods must be comma-delimited`,
				Args: []model.Arg{{
					Name: "podName",
				}},
			}, {
				Name:        []string{"--clean-install"},
				Description: `Ignore the contents of the project cache and force a full pod installation. This only applies to projects that have enabled incremental installation`,
			}, {
				Name:        []string{"--project-directory"},
				Description: `The path to the root of the project directory`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "/project/dir/",
				}},
			}, {
				Name:        []string{"--no-repo-update"},
				Description: `Skip running "pod repo update" before install`,
			}, {
				Name:        []string{"--allow-root"},
				Description: `Allows CocoaPods to run as root`,
			}},
		}, {
			Name:        []string{"try"},
			Description: `Try a Pod!`,
			Args: []model.Arg{{
				Name: "NAME|URL",
			}},
			Options: []model.Option{{
				Name: []string{"--podspec_name"},
				Args: []model.Arg{{
					Name:        "name",
					Description: `The name of the podspec file within the Git Repository`,
				}},
			}, {
				Name:        []string{"--no-repo-update"},
				Description: `Skip running "pod repo update" before install`,
			}, {
				Name:        []string{"--allow-root"},
				Description: `Allows CocoaPods to run as root`,
			}},
		}},
	}
}
