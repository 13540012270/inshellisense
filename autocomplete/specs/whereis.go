// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["whereis"] = model.Subcommand{
		Name:        []string{"whereis"},
		Description: `Locate the binary, source, and manual page files for a command`,
		Args: []model.Arg{{
			Name:        "Filename",
			Description: `The file to search for`,
		}},
		Options: []model.Option{{
			Name:        []string{"-b"},
			Description: `Search only for binaries`,
		}, {
			Name:        []string{"-m"},
			Description: `Search only for manual sections`,
		}, {
			Name:        []string{"-s"},
			Description: `Search only for sources`,
		}, {
			Name:        []string{"-u"},
			Description: `Search for unusual entries`,
		}, {
			Name:        []string{"-B"},
			Description: `Search for binaries only in the specified directory`,
			Args: []model.Arg{{
				Templates:   []model.Template{model.TemplateFolders},
				Name:        "directory",
				Description: `The directory to search in`,
			}},
		}, {
			Name:        []string{"-M"},
			Description: `Search for manual pages only in the specified directory`,
			Args: []model.Arg{{
				Templates:   []model.Template{model.TemplateFolders},
				Name:        "directory",
				Description: `The directory to search in`,
			}},
		}, {
			Name:        []string{"-S"},
			Description: `Search for sources only in the specified directory`,
			Args: []model.Arg{{
				Templates:   []model.Template{model.TemplateFolders},
				Name:        "directory",
				Description: `The directory to search in`,
			}},
		}, {
			Name:        []string{"-f"},
			Description: `Terminate the -B, -M, and -S options`,
		}},
	}
}
