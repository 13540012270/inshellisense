// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["fd"] = model.Subcommand{
		Name:        []string{"fd"},
		Description: `A simple, fast and user-friendly alternative to 'find'`,
		Args: []model.Arg{{
			Name:        "pattern",
			Description: `The search pattern - a regular expression unless '--glob' is used (optional)`,
		}, {
			Templates:   []model.Template{model.TemplateFolders},
			Name:        "path",
			Description: `The root directories for the filesystem search`,
			IsOptional:  true,
			IsVariadic:  true,
		}},
		Options: []model.Option{{
			Name:        []string{"-H", "--hidden"},
			Description: `Search hidden files and directories`,
		}, {
			Name:        []string{"-I", "--no-ignore"},
			Description: `Do not respect .(git|fd)ignore files`,
		}, {
			Name:        []string{"-s", "--case-sensitive"},
			Description: `Case-sensitive search (default: smart case)`,
		}, {
			Name:        []string{"-i", "--ignore-case"},
			Description: `Case-insensitive search (default: smart case)`,
		}, {
			Name:        []string{"-g", "--glob"},
			Description: `Glob-based search (default: regular expression)`,
		}, {
			Name:        []string{"-a", "--absolute-path"},
			Description: `Show absolute instead of relative paths`,
		}, {
			Name:        []string{"-l", "--list-details"},
			Description: `Use a long listing format with file metadata`,
		}, {
			Name:        []string{"-L", "--follow"},
			Description: `Follow symbolic links`,
		}, {
			Name:        []string{"-p", "--full-path"},
			Description: `Search full path (default: file-/dirname only)`,
		}, {
			Name:        []string{"-0", "--print0"},
			Description: `Separate results by the null character`,
		}, {
			Name:        []string{"-h", "--help"},
			Description: `Prints help information`,
		}, {
			Name:        []string{"-V", "--version"},
			Description: `Prints version information`,
		}, {
			Name:        []string{"-d", "--max-depth"},
			Description: `Set maximum search depth`,
			Args: []model.Arg{{
				Name: "depth",
			}},
		}, {
			Name:        []string{"-t", "--type"},
			Description: `Filter by type`,
			Args: []model.Arg{{
				Name: "filetype",
				Suggestions: []model.Suggestion{{
					Name:        []string{`f`},
					Description: `File`,
				}, {
					Name:        []string{`d`},
					Description: `Directory`,
				}, {
					Name:        []string{`l`},
					Description: `Symlink`,
				}, {
					Name:        []string{`x`},
					Description: `Executable`,
				}, {
					Name:        []string{`e`},
					Description: `Empty`,
				}, {
					Name:        []string{`s`},
					Description: `Socket`,
				}, {
					Name:        []string{`p`},
					Description: `Pipe`,
				}},
			}},
		}, {
			Name:        []string{"-e", "--extension"},
			Description: `Filter by file extension`,
			Args: []model.Arg{{
				Name: "file extension",
			}},
		}, {
			Name:        []string{"-x", "--exec"},
			Description: `Execute a command for each search result`,
			Args: []model.Arg{{
				Name:      "cmd",
				IsCommand: true,
			}},
		}, {
			Name:        []string{"-X", "--exec-batch"},
			Description: `Execute a command with all search results at once`,
			Args: []model.Arg{{
				Name:      "cmd",
				IsCommand: true,
			}},
		}, {
			Name:        []string{"-E", "--exclude"},
			Description: `Exclude entries that match the given glob pattern`,
			Args: []model.Arg{{
				Name: "pattern",
			}},
		}, {
			Name:        []string{"-c", "--color"},
			Description: `When to use colors`,
			Args: []model.Arg{{
				Name:        "when",
				Suggestions: []model.Suggestion{{Name: []string{`never`}}, {Name: []string{`auto`}}, {Name: []string{`always`}}},
			}},
		}, {
			Name:        []string{"-S", "--size"},
			Description: `Limit results based on the size of files`,
			Args: []model.Arg{{
				Name: "size",
			}},
		}, {
			Name:        []string{"--changed-within"},
			Description: `Filter by file modification time (newer than)`,
			Args: []model.Arg{{
				Name: "date",
			}},
		}, {
			Name:        []string{"--changed-before"},
			Description: `Filter by file modification time (older than)`,
			Args: []model.Arg{{
				Name: "date",
			}},
		}},
	}
}
