// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.
//
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

package specs

import (
	"github.com/microsoft/clac/autocomplete/model"
)

func init() {
	Specs["heroku"] = model.Subcommand{
		Name:        []string{"heroku"},
		Description: `Makes it easy to create and manage your Heroku apps directly from the terminal`,
		Subcommands: []model.Subcommand{{
			Name:        []string{"auth:2fa", "2fa", "twofactor"},
			Description: `Check 2fa status`,
		}, {
			Name:        []string{"auth:2fa:disable", "twofactor:disable", "2fa:disable"},
			Description: `Disables 2fa on account`,
		}, {
			Name:        []string{"auth:login", "login"},
			Description: `Login with your Heroku credentials`,
			Options: []model.Option{{
				Name:        []string{"--browser"},
				Description: `Browser to open SSO with (example: "firefox", "safari")`,
				Args: []model.Arg{{
					Name:        "browser",
					Suggestions: []model.Suggestion{{Name: []string{`firefox`}}, {Name: []string{`safari`}}, {Name: []string{`chrome`}}, {Name: []string{`brave`}}, {Name: []string{`explorer`}}},
				}},
			}, {
				Name:        []string{"-i", "--interactive"},
				Description: `Login with username/password`,
			}, {
				Name:        []string{"-e", "--expires-in"},
				Description: `Duration of token in seconds (default 30 days)`,
				Args: []model.Arg{{
					Name: "expires-in",
				}},
			}},
		}, {
			Name:        []string{"auth:logout", "logout"},
			Description: `Clears local login credentials and invalidates API session`,
		}, {
			Name:        []string{"auth:token"},
			Description: `Outputs current CLI authentication token`,
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Show CLI help`,
			}},
		}, {
			Name:        []string{"auth:whoami", "whoami"},
			Description: `Display the current logged in user`,
		}, {
			Name:        []string{"labs:disable"},
			Description: `Disables an experimental feature`,
			Args: []model.Arg{{
				Name:       "feature",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}, {
				Name:        []string{"--confirm"},
				Description: ``,
				Args: []model.Arg{{
					Name: "confirm",
				}},
			}},
		}, {
			Name:        []string{"buildpacks"},
			Description: `Display the buildpacks for an app`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"buildpacks:add"},
			Description: `Add new app buildpack, inserting into list of buildpacks if necessary`,
			Args: []model.Arg{{
				Name:        "buildpack",
				Description: `Namespace/name of the buildpack`,
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}, {
				Name:        []string{"-i", "--index"},
				Description: `The 1-based index of the URL in the list of URLs`,
				Args: []model.Arg{{
					Name: "index",
				}},
			}},
		}, {
			Name:        []string{"buildpacks:clear"},
			Description: `Clear all buildpacks set on the app`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"buildpacks:info"},
			Description: `Fetch info about a buildpack`,
			Args: []model.Arg{{
				Name:        "buildpack",
				Description: `Namespace/name of the buildpack`,
			}},
		}, {
			Name:        []string{"buildpacks:remove"},
			Description: `Remove a buildpack set on the app`,
			Args: []model.Arg{{
				Name:        "buildpack",
				Description: `Namespace/name of the buildpack`,
				IsOptional:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}, {
				Name:        []string{"-i", "--index"},
				Description: `The 1-based index of the URL to remove from the list of URLs`,
				Args: []model.Arg{{
					Name: "index",
				}},
			}},
		}, {
			Name:        []string{"buildpacks:search"},
			Description: `Search for buildpacks`,
			Args: []model.Arg{{
				Name:        "term",
				Description: `Search term that searches across name, namespace, and description`,
				IsOptional:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"--namespace"},
				Description: `Buildpack namespaces to filter on using a comma separated list`,
				Args: []model.Arg{{
					Name: "namespace",
				}},
			}, {
				Name:        []string{"--name"},
				Description: `Buildpack names to filter on using a comma separated list`,
				Args: []model.Arg{{
					Name: "name",
				}},
			}, {
				Name:        []string{"--description"},
				Description: `Buildpack description to filter on`,
				Args: []model.Arg{{
					Name: "description",
				}},
			}},
		}, {
			Name:        []string{"buildpacks:set"},
			Description: ``,
			Args: []model.Arg{{
				Name:        "buildpack",
				Description: `Namespace/name of the buildpack`,
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}, {
				Name:        []string{"-i", "--index"},
				Description: `The 1-based index of the URL in the list of URLs`,
				Args: []model.Arg{{
					Name: "index",
				}},
			}},
		}, {
			Name:        []string{"buildpacks:versions"},
			Description: `List versions of a buildpack`,
			Args: []model.Arg{{
				Name:        "buildpack",
				Description: `Namespace/name of the buildpack`,
			}},
		}, {
			Name:        []string{"ci:config"},
			Description: `Display CI config vars`,
			Options: []model.Option{{
				Name:        []string{"-s", "--shell"},
				Description: `Output config vars in shell format`,
			}, {
				Name:        []string{"--json"},
				Description: `Output config vars in json format`,
			}, {
				Name:        []string{"-p", "--pipeline"},
				Description: `Pipeline`,
				Args: []model.Arg{{
					Name: "pipeline",
				}},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"ci:config:get"},
			Description: `Get a CI config var`,
			Args: []model.Arg{{
				Name: "key",
			}},
			Options: []model.Option{{
				Name:        []string{"-s", "--shell"},
				Description: `Output config var in shell format`,
			}, {
				Name:        []string{"-p", "--pipeline"},
				Description: `Pipeline`,
				Args: []model.Arg{{
					Name: "pipeline",
				}},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"ci:config:set"},
			Description: `Set CI config vars`,
			Options: []model.Option{{
				Name:        []string{"-p", "--pipeline"},
				Description: `Pipeline`,
				Args: []model.Arg{{
					Name: "pipeline",
				}},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"ci:config:unset"},
			Description: `Unset CI config vars`,
			Options: []model.Option{{
				Name:        []string{"-p", "--pipeline"},
				Description: `Pipeline`,
				Args: []model.Arg{{
					Name: "pipeline",
				}},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"ci:debug"},
			Description: `Opens an interactive test debugging session with the contents of the current directory`,
			Options: []model.Option{{
				Name:        []string{"--no-setup"},
				Description: `Start test dyno without running test-setup`,
			}, {
				Name:        []string{"-p", "--pipeline"},
				Description: `Pipeline`,
				Args: []model.Arg{{
					Name: "pipeline",
				}},
			}, {
				Name:        []string{"--no-cache"},
				Description: `Start test run with an empty cache`,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"ci:migrate-manifest"},
			Description: `App-ci.json is deprecated. Run this command to migrate to app.json with an environments key`,
		}, {
			Name:        []string{"ci:open"},
			Description: `Open the Dashboard version of Heroku CI`,
			Options: []model.Option{{
				Name:        []string{"-p", "--pipeline"},
				Description: `Pipeline`,
				Args: []model.Arg{{
					Name: "pipeline",
				}},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"domains"},
			Description: `List domains for an app`,
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Show CLI help`,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}, {
				Name:        []string{"-j", "--json"},
				Description: `Output in json format`,
			}, {
				Name:        []string{"--columns"},
				Description: `Only show provided columns (comma-separated)`,
				Args: []model.Arg{{
					Name: "columns",
				}},
			}, {
				Name:        []string{"--sort"},
				Description: `Property to sort by (prepend '-' for descending)`,
				Args: []model.Arg{{
					Name: "sort",
				}},
			}, {
				Name:        []string{"--filter"},
				Description: `Filter property by partial string matching, ex: name=foo`,
				Args: []model.Arg{{
					Name: "filter",
				}},
			}, {
				Name:        []string{"--csv"},
				Description: `Output is csv format`,
			}, {
				Name:        []string{"-x", "--extended"},
				Description: `Show extra columns`,
			}, {
				Name:        []string{"--no-header"},
				Description: `Hide table header from output`,
			}},
		}, {
			Name:        []string{"domains:add"},
			Description: `Add a domain to an app`,
			Args: []model.Arg{{
				Name: "hostname",
			}},
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Show CLI help`,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-c", "--cert"},
				Description: `The name of the SSL cert you want to use for this domain`,
				Args: []model.Arg{{
					Name: "cert",
				}},
			}, {
				Name:        []string{"-j", "--json"},
				Description: `Output in json format`,
			}, {
				Name:        []string{"--wait"},
				Description: ``,
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"domains:clear"},
			Description: `Remove all domains from an app`,
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Show CLI help`,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"domains:info"},
			Description: `Show detailed information for a domain on an app`,
			Args: []model.Arg{{
				Name: "hostname",
			}},
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Show CLI help`,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"domains:remove"},
			Description: `Remove a domain from an app`,
			Args: []model.Arg{{
				Name: "hostname",
			}},
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Show CLI help`,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"domains:update"},
			Description: `Update a domain to use a different SSL certificate on an app`,
			Args: []model.Arg{{
				Name:       "hostname",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Show CLI help`,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}, {
				Name:        []string{"--cert"},
				Description: `The name or id of the certificate you want to use for this domain`,
				Args: []model.Arg{{
					Name: "cert",
				}},
			}},
		}, {
			Name:        []string{"domains:wait"},
			Description: `Wait for domain to be active for an app`,
			Args: []model.Arg{{
				Name:       "hostname",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Show CLI help`,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"apps"},
			Description: `List your apps`,
			Options: []model.Option{{
				Name:        []string{"-A", "--all"},
				Description: `Include apps in all teams`,
			}, {
				Name:        []string{"--json"},
				Description: `Output in json format`,
			}, {
				Name:        []string{"-s", "--space"},
				Description: `Filter by space`,
				Args: []model.Arg{{
					Name: "space",
				}},
			}, {
				Name:        []string{"-p", "--personal"},
				Description: `List apps in personal account when a default team is set`,
			}, {
				Name:        []string{"-t", "--team"},
				Description: `Team to use`,
				Args: []model.Arg{{
					Name: "team",
				}},
			}},
		}, {
			Name:        []string{"apps:create"},
			Description: `Creates a new app`,
			Args: []model.Arg{{
				Name:        "app",
				Description: `Name of app to create`,
				Generator:   nil, // TODO: port over generator
				IsOptional:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"--addons"},
				Description: `Comma-delimited list of addons to install`,
				Args: []model.Arg{{
					Name: "addons",
				}},
			}, {
				Name:        []string{"-b", "--buildpack"},
				Description: `Buildpack url to use for this app`,
				Args: []model.Arg{{
					Name: "buildpack",
				}},
			}, {
				Name:        []string{"-n", "--no-remote"},
				Description: `Do not create a git remote`,
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `The git remote to create, default "heroku"`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}, {
				Name:        []string{"-s", "--stack"},
				Description: `The stack to create the app on`,
				Args: []model.Arg{{
					Name: "stack",
				}},
			}, {
				Name:        []string{"--space"},
				Description: `The private space to create the app in`,
				Args: []model.Arg{{
					Name: "space",
				}},
			}, {
				Name:        []string{"--region"},
				Description: `Specify region for the app to run in`,
				Args: []model.Arg{{
					Name: "region",
				}},
			}, {
				Name:        []string{"--ssh-git"},
				Description: `Use SSH git protocol for local git remote`,
			}, {
				Name:        []string{"--json"},
				Description: `Output in json format`,
			}, {
				Name:        []string{"-t", "--team"},
				Description: `Team to use`,
				Args: []model.Arg{{
					Name: "team",
				}},
			}},
		}, {
			Name:        []string{"apps:destroy"},
			Description: `Permanently destroy an app`,
			Options: []model.Option{{
				Name:        []string{"-c", "--confirm"},
				Description: ``,
				Args: []model.Arg{{
					Name: "confirm",
				}},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"apps:errors"},
			Description: `View app errors`,
			Options: []model.Option{{
				Name:        []string{"--json"},
				Description: `Output in json format`,
			}, {
				Name:        []string{"--hours"},
				Description: `Number of hours to look back (default 24)`,
				Args: []model.Arg{{
					Name: "hours",
				}},
			}, {
				Name:        []string{"--router"},
				Description: `Show only router errors`,
			}, {
				Name:        []string{"--dyno"},
				Description: `Show only dyno errors`,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"apps:favorites"},
			Description: `List favorited apps`,
			Options: []model.Option{{
				Name:        []string{"--json"},
				Description: `Output in json format`,
			}},
		}, {
			Name:        []string{"apps:favorites:add"},
			Description: `Favorites an app`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"apps:favorites:remove"},
			Description: `Unfavorites an app`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"apps:info"},
			Description: `Show detailed app information`,
			Options: []model.Option{{
				Name:        []string{"-s", "--shell"},
				Description: `Output more shell friendly key/value pairs`,
			}, {
				Name:        []string{"-j", "--json"},
				Description: ``,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"apps:open"},
			Description: `Open the app in a web browser`,
			Args: []model.Arg{{
				Name:       "path",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"apps:rename"},
			Description: `Rename an app`,
			Args: []model.Arg{{
				Name: "newname",
			}},
			Options: []model.Option{{
				Name:        []string{"--ssh-git"},
				Description: `Use ssh git protocol instead of https`,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"apps:stacks"},
			Description: `Show the list of available stacks`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"apps:stacks:set"},
			Description: `Set the stack of an app`,
			Args: []model.Arg{{
				Name: "stack",
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"config:set"},
			Description: `Set one or more config vars`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"drains"},
			Description: `Display the log drains of an app`,
			Options: []model.Option{{
				Name:        []string{"--json"},
				Description: `Output in json format`,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"drains:get"},
			Description: `Display the log drain for a space`,
			Options: []model.Option{{
				Name:        []string{"--space"},
				Description: `Space for which to get log drain`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--json"},
				Description: `Output in json format`,
			}},
		}, {
			Name:        []string{"drains:set"},
			Description: `Replaces the log drain for a space`,
			Args: []model.Arg{{
				Name: "url",
			}},
			Options: []model.Option{{
				Name:        []string{"--space"},
				Description: `Space for which to set log drain`,
				Args:        []model.Arg{{}},
			}},
		}, {
			Name:        []string{"drains:add"},
			Description: `Adds a log drain to an app`,
			Args: []model.Arg{{
				Name: "url",
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"drains:remove"},
			Description: `Removes a log drain from an app`,
			Args: []model.Arg{{
				Name: "url",
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"dyno:kill"},
			Description: `Stop app dyno`,
			Args: []model.Arg{{
				Name: "dyno",
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"dyno:resize"},
			Description: `Manage dyno sizes`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"dyno:restart"},
			Description: `Restart app dynos`,
			Args: []model.Arg{{
				Name:       "dyno",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"dyno:scale"},
			Description: `Scale dyno quantity up or down`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"dyno:stop"},
			Description: `Stop app dyno`,
			Args: []model.Arg{{
				Name: "dyno",
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"features"},
			Description: `List available app features`,
			Options: []model.Option{{
				Name:        []string{"--json"},
				Description: `Output in json format`,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"features:disable"},
			Description: `Disables an app feature`,
			Args: []model.Arg{{
				Name: "feature",
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"features:enable"},
			Description: `Enables an app feature`,
			Args: []model.Arg{{
				Name: "feature",
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"features:info"},
			Description: `Display information about a feature`,
			Args: []model.Arg{{
				Name: "feature",
			}},
			Options: []model.Option{{
				Name:        []string{"--json"},
				Description: `Output in json format`,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"keys"},
			Description: `Display your SSH keys`,
			Options: []model.Option{{
				Name:        []string{"-l", "--long"},
				Description: `Display full SSH keys`,
			}, {
				Name:        []string{"--json"},
				Description: `Output in json format`,
			}},
		}, {
			Name:        []string{"keys:add"},
			Description: `Add an SSH key for a user`,
			Args: []model.Arg{{
				Name:       "key",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-y", "--yes"},
				Description: `Automatically answer yes for all prompts`,
			}},
		}, {
			Name:        []string{"keys:clear"},
			Description: `Remove all SSH keys for current user`,
		}, {
			Name:        []string{"keys:remove"},
			Description: `Remove an SSH key from the user`,
			Args: []model.Arg{{
				Name: "key",
			}},
		}, {
			Name:        []string{"labs"},
			Description: `List experimental features`,
			Options: []model.Option{{
				Name:        []string{"--json"},
				Description: `Display as json`,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"labs:enable"},
			Description: `Enables an experimental feature`,
			Args: []model.Arg{{
				Name: "feature",
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"labs:info"},
			Description: `Show feature info`,
			Args: []model.Arg{{
				Name: "feature",
			}},
			Options: []model.Option{{
				Name:        []string{"--json"},
				Description: `Display as json`,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"maintenance"},
			Description: `Display the current maintenance status of app`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"maintenance:off"},
			Description: `Take the app out of maintenance mode`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"maintenance:on"},
			Description: `Put the app into maintenance mode`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"notifications"},
			Description: `Display notifications`,
			Options: []model.Option{{
				Name:        []string{"--all"},
				Description: `View all notifications (not just the ones for the current app)`,
			}, {
				Name:        []string{"--json"},
				Description: `Output in json format`,
			}, {
				Name:        []string{"--read"},
				Description: `Show notifications already read`,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"ps"},
			Description: `List dynos for an app`,
			Options: []model.Option{{
				Name:        []string{"--json"},
				Description: `Display as json`,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"ps:kill"},
			Description: `Stop app dyno`,
			Args: []model.Arg{{
				Name: "dyno",
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"ps:resize"},
			Description: `Manage dyno sizes`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"ps:restart"},
			Description: `Restart app dynos`,
			Args: []model.Arg{{
				Name:       "dyno",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"ps:scale"},
			Description: `Scale dyno quantity up or down`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"ps:stop"},
			Description: `Stop app dyno`,
			Args: []model.Arg{{
				Name: "dyno",
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"ps:type"},
			Description: `Manage dyno sizes`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"releases"},
			Description: `Display the releases for an app`,
			Options: []model.Option{{
				Name:        []string{"-n", "--num"},
				Description: `Number of releases to show`,
				Args: []model.Arg{{
					Name: "num",
				}},
			}, {
				Name:        []string{"--json"},
				Description: `Output releases in json format`,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"releases:info"},
			Description: `View detailed information for a release`,
			Args: []model.Arg{{
				Name:       "release",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"--json"},
				Description: `Output in json format`,
			}, {
				Name:        []string{"-s", "--shell"},
				Description: `Output in shell format`,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"releases:output"},
			Description: `View the release command output`,
			Args: []model.Arg{{
				Name:       "release",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"releases:rollback"},
			Description: `Rollback to a previous release`,
			Args: []model.Arg{{
				Name:       "release",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"autocomplete"},
			Description: `Display autocomplete installation instructions`,
			Args: []model.Arg{{
				Name:        "shell",
				Description: `Shell type`,
				IsOptional:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"-r", "--refresh-cache"},
				Description: `Refresh cache only (ignores displaying instructions)`,
			}},
		}, {
			Name:        []string{"config"},
			Description: `Display the config vars for an app`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}, {
				Name:        []string{"-s", "--shell"},
				Description: `Output config vars in shell format`,
			}, {
				Name:        []string{"-j", "--json"},
				Description: `Output config vars in json format`,
			}},
		}, {
			Name:        []string{"config:edit"},
			Description: `Interactively edit config vars`,
			Args: []model.Arg{{
				Name:        "key",
				Description: `Edit a single key`,
				IsOptional:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"config:get"},
			Description: `Display a single config value for an app`,
			Args: []model.Arg{{
				Name: "KEY",
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}, {
				Name:        []string{"-s", "--shell"},
				Description: `Output config vars in shell format`,
			}},
		}, {
			Name:        []string{"config:unset", "config:remove"},
			Description: `Unset one or more config vars`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"local", "local:start"},
			Description: `Run heroku app locally`,
			Args: []model.Arg{{
				Name:       "processname",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-f", "--procfile"},
				Description: `Use a different Procfile`,
				Args: []model.Arg{{
					Name: "procfile",
				}},
			}, {
				Name:        []string{"-e", "--env"},
				Description: `Location of env file (defaults to .env)`,
				Args: []model.Arg{{
					Name: "env",
				}},
			}, {
				Name:        []string{"-p", "--port"},
				Description: `Port to listen on`,
				Args: []model.Arg{{
					Name: "port",
				}},
			}},
		}, {
			Name:        []string{"local:run"},
			Description: `Run a one-off command`,
			Options: []model.Option{{
				Name:        []string{"-e", "--env"},
				Description: ``,
				Args: []model.Arg{{
					Name: "env",
				}},
			}, {
				Name:        []string{"-p", "--port"},
				Description: ``,
				Args: []model.Arg{{
					Name: "port",
				}},
			}},
		}, {
			Name:        []string{"local:version"},
			Description: `Display node-foreman version`,
		}, {
			Name:        []string{"ci"},
			Description: `Display the most recent CI runs for the given pipeline`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App name`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--watch"},
				Description: `Keep running and watch for new and update tests`,
			}, {
				Name:        []string{"-p", "--pipeline"},
				Description: `Name of pipeline`,
				Args: []model.Arg{{
					Name: "pipeline",
				}},
			}, {
				Name:        []string{"--json"},
				Description: `Output in json format`,
			}},
		}, {
			Name:        []string{"ci:info"},
			Description: `Show the status of a specific test run`,
			Args: []model.Arg{{
				Name: "test-run",
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App name`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--node"},
				Description: `The node number to show its setup and output`,
				Args: []model.Arg{{
					Name: "node",
				}},
			}, {
				Name:        []string{"-p", "--pipeline"},
				Description: `Name of pipeline`,
				Args: []model.Arg{{
					Name: "pipeline",
				}},
			}},
		}, {
			Name:        []string{"ci:last"},
			Description: `Looks for the most recent run and returns the output of that run`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App name`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--node"},
				Description: `The node number to show its setup and output`,
				Args: []model.Arg{{
					Name: "node",
				}},
			}, {
				Name:        []string{"-p", "--pipeline"},
				Description: `Name of pipeline`,
				Args: []model.Arg{{
					Name: "pipeline",
				}},
			}},
		}, {
			Name:        []string{"ci:rerun"},
			Description: `Rerun tests against current directory`,
			Args: []model.Arg{{
				Name:       "number",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App name`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-p", "--pipeline"},
				Description: `Name of pipeline`,
				Args: []model.Arg{{
					Name: "pipeline",
				}},
			}},
		}, {
			Name:        []string{"ci:run"},
			Description: `Run tests against current directory`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App name`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-p", "--pipeline"},
				Description: `Name of pipeline`,
				Args: []model.Arg{{
					Name: "pipeline",
				}},
			}},
		}, {
			Name:        []string{"certs"},
			Description: `List SSL certificates for an app`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"certs:add"},
			Description: `Add an SSL certificate to an app`,
			Args: []model.Arg{{
				Name: "CRT",
			}, {
				Name: "KEY",
			}},
			Options: []model.Option{{
				Name:        []string{"--bypass"},
				Description: `Bypass the trust chain completion step`,
			}, {
				Name:        []string{"--type"},
				Description: `Type to create, either 'sni' or 'endpoint'`,
				Args: []model.Arg{{
					Name: "type",
				}},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"certs:auto"},
			Description: `Show ACM status for an app`,
			Options: []model.Option{{
				Name:        []string{"--wait"},
				Description: `Watch ACM status and display the status when complete`,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"certs:auto:disable"},
			Description: `Disable ACM for an app`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"certs:auto:enable"},
			Description: `Enable ACM status for an app`,
			Options: []model.Option{{
				Name:        []string{"--wait"},
				Description: `Watch ACM status and exit when complete`,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"certs:auto:refresh"},
			Description: `Refresh ACM for an app`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"certs:chain"},
			Description: `Print an ordered & complete chain for a certificate`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"certs:generate"},
			Description: `Generate a key and a CSR or self-signed certificate`,
			Args: []model.Arg{{
				Name: "domain",
			}},
			Options: []model.Option{{
				Name:        []string{"--selfsigned"},
				Description: `Generate a self-signed certificate instead of a CSR`,
			}, {
				Name:        []string{"--keysize"},
				Description: `RSA key size in bits (default: 2048)`,
				Args: []model.Arg{{
					Name: "keysize",
				}},
			}, {
				Name:        []string{"--owner"},
				Description: `Name of organization certificate belongs to`,
				Args: []model.Arg{{
					Name: "owner",
				}},
			}, {
				Name:        []string{"--country"},
				Description: `Country of owner, as a two-letter ISO country code`,
				Args: []model.Arg{{
					Name: "country",
				}},
			}, {
				Name:        []string{"--area"},
				Description: `Sub-country area (state, province, etc.) of owner`,
				Args: []model.Arg{{
					Name: "area",
				}},
			}, {
				Name:        []string{"--city"},
				Description: `City of owner`,
				Args: []model.Arg{{
					Name: "city",
				}},
			}, {
				Name:        []string{"--subject"},
				Description: `Specify entire certificate subject`,
				Args: []model.Arg{{
					Name: "subject",
				}},
			}, {
				Name:        []string{"--now"},
				Description: `Do not prompt for any owner information`,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"certs:info"},
			Description: `Show certificate information for an SSL certificate`,
			Options: []model.Option{{
				Name:        []string{"--name"},
				Description: `Name to check info on`,
				Args: []model.Arg{{
					Name: "name",
				}},
			}, {
				Name:        []string{"--endpoint"},
				Description: `Endpoint to check info on`,
				Args: []model.Arg{{
					Name: "endpoint",
				}},
			}, {
				Name:        []string{"--show-domains"},
				Description: `Show associated domains`,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"certs:key"},
			Description: `Print the correct key for the given certificate`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"certs:remove"},
			Description: `Remove an SSL certificate from an app`,
			Options: []model.Option{{
				Name:        []string{"--name"},
				Description: `Name to remove`,
				Args: []model.Arg{{
					Name: "name",
				}},
			}, {
				Name:        []string{"--endpoint"},
				Description: `Endpoint to remove`,
				Args: []model.Arg{{
					Name: "endpoint",
				}},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"certs:update"},
			Description: `Update an SSL certificate on an app`,
			Args: []model.Arg{{
				Name: "CRT",
			}, {
				Name: "KEY",
			}},
			Options: []model.Option{{
				Name:        []string{"--bypass"},
				Description: `Bypass the trust chain completion step`,
			}, {
				Name:        []string{"--name"},
				Description: `Name to update`,
				Args: []model.Arg{{
					Name: "name",
				}},
			}, {
				Name:        []string{"--endpoint"},
				Description: `Endpoint to update`,
				Args: []model.Arg{{
					Name: "endpoint",
				}},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"git:clone"},
			Description: `Clones a heroku app to your local machine at DIRECTORY (defaults to app name)`,
			Args: []model.Arg{{
				Name:        "DIRECTORY",
				Description: `Where to clone the app`,
				IsOptional:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `The Heroku app to use`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `The git remote to create, default "heroku"`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}, {
				Name:        []string{"--ssh-git"},
				Description: `Use SSH git protocol`,
			}},
		}, {
			Name:        []string{"git:remote"},
			Description: `Adds a git remote to an app repo`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `The Heroku app to use`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `The git remote to create`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}, {
				Name:        []string{"--ssh-git"},
				Description: `Use SSH git protocol`,
			}},
		}, {
			Name:        []string{"addons"},
			Description: `Lists your add-ons and attachments`,
			Options: []model.Option{{
				Name:        []string{"-A", "--all"},
				Description: `Show add-ons and attachments for all accessible apps`,
			}, {
				Name:        []string{"--json"},
				Description: `Return add-ons in json format`,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"addons:attach"},
			Description: `Attach an existing add-on resource to an app`,
			Args: []model.Arg{{
				Name: "addon_name",
			}},
			Options: []model.Option{{
				Name:        []string{"--as"},
				Description: `Name for add-on attachment`,
				Args: []model.Arg{{
					Name: "as",
				}},
			}, {
				Name:        []string{"--credential"},
				Description: `Credential name for scoped access to Heroku Postgres`,
				Args: []model.Arg{{
					Name: "credential",
				}},
			}, {
				Name:        []string{"--confirm"},
				Description: `Overwrite existing add-on attachment with same name`,
				Args: []model.Arg{{
					Name: "confirm",
				}},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"addons:create"},
			Description: `Create a new add-on resource`,
			Args: []model.Arg{{
				Name: "service:plan",
			}},
			Options: []model.Option{{
				Name:        []string{"--name"},
				Description: `Name for the add-on resource`,
				Args: []model.Arg{{
					Name: "name",
				}},
			}, {
				Name:        []string{"--as"},
				Description: `Name for the initial add-on attachment`,
				Args: []model.Arg{{
					Name: "as",
				}},
			}, {
				Name:        []string{"--confirm"},
				Description: `Overwrite existing config vars or existing add-on attachments`,
				Args: []model.Arg{{
					Name: "confirm",
				}},
			}, {
				Name:        []string{"--wait"},
				Description: `Watch add-on creation status and exit when complete`,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"addons:destroy"},
			Description: `Permanently destroy an add-on resource`,
			Options: []model.Option{{
				Name:        []string{"-f", "--force"},
				Description: `Allow destruction even if connected to other apps`,
			}, {
				Name:        []string{"-c", "--confirm"},
				Description: ``,
				Args: []model.Arg{{
					Name: "confirm",
				}},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"addons:detach"},
			Description: `Detach an existing add-on resource from an app`,
			Args: []model.Arg{{
				Name: "attachment_name",
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"addons:docs"},
			Description: `Open an add-on's Dev Center documentation in your browser`,
			Args: []model.Arg{{
				Name: "addon",
			}},
			Options: []model.Option{{
				Name:        []string{"--show-url"},
				Description: `Show URL, do not open browser`,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"addons:downgrade"},
			Description: `Change add-on plan`,
			Args: []model.Arg{{
				Name: "addon",
			}, {
				Name:       "plan",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"addons:info"},
			Description: `Show detailed add-on resource and attachment information`,
			Args: []model.Arg{{
				Name: "addon",
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"addons:open"},
			Description: `Open an add-on's dashboard in your browser`,
			Args: []model.Arg{{
				Name: "addon",
			}},
			Options: []model.Option{{
				Name:        []string{"--show-url"},
				Description: `Show URL, do not open browser`,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"addons:plans"},
			Description: `List all available plans for an add-on services`,
			Args: []model.Arg{{
				Name: "service",
			}},
			Options: []model.Option{{
				Name:        []string{"--json"},
				Description: `Output in json format`,
			}},
		}, {
			Name:        []string{"addons:rename"},
			Description: `Rename an add-on`,
			Args: []model.Arg{{
				Name: "addon",
			}, {
				Name: "name",
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"addons:services"},
			Description: `List all available add-on services`,
			Options: []model.Option{{
				Name:        []string{"--json"},
				Description: `Output in json format`,
			}},
		}, {
			Name:        []string{"addons:upgrade"},
			Description: `Change add-on plan`,
			Args: []model.Arg{{
				Name: "addon",
			}, {
				Name:       "plan",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"addons:wait"},
			Description: `Show provisioning status of the add-ons on the app`,
			Args: []model.Arg{{
				Name:       "addon",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"--wait-interval"},
				Description: `How frequently to poll in seconds`,
				Args: []model.Arg{{
					Name: "wait-interval",
				}},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"authorizations"},
			Description: `List OAuth authorizations`,
			Options: []model.Option{{
				Name:        []string{"-j", "--json"},
				Description: `Output in json format`,
			}},
		}, {
			Name:        []string{"authorizations:create"},
			Description: `Create a new OAuth authorization`,
			Options: []model.Option{{
				Name:        []string{"-d", "--description"},
				Description: `Set a custom authorization description`,
				Args: []model.Arg{{
					Name: "description",
				}},
			}, {
				Name:        []string{"-s", "--scope"},
				Description: `Set custom OAuth scopes`,
				Args: []model.Arg{{
					Name: "scope",
				}},
			}, {
				Name:        []string{"-e", "--expires-in"},
				Description: `Set expiration in seconds (default no expiration)`,
				Args: []model.Arg{{
					Name: "expires-in",
				}},
			}, {
				Name:        []string{"-S", "--short"},
				Description: `Only output token`,
			}, {
				Name:        []string{"-j", "--json"},
				Description: `Output in json format`,
			}},
		}, {
			Name:        []string{"authorizations:info"},
			Description: `Show an existing OAuth authorization`,
			Args: []model.Arg{{
				Name: "id",
			}},
			Options: []model.Option{{
				Name:        []string{"-j", "--json"},
				Description: `Output in json format`,
			}},
		}, {
			Name:        []string{"authorizations:revoke", "authorizations:destroy"},
			Description: `Revoke OAuth authorization`,
			Args: []model.Arg{{
				Name: "id",
			}},
		}, {
			Name:        []string{"authorizations:rotate"},
			Description: `Updates an OAuth authorization token`,
			Args: []model.Arg{{
				Name: "id",
			}},
		}, {
			Name:        []string{"authorizations:update"},
			Description: `Updates an OAuth authorization`,
			Args: []model.Arg{{
				Name: "id",
			}},
			Options: []model.Option{{
				Name:        []string{"-d", "--description"},
				Description: `Set a custom authorization description`,
				Args: []model.Arg{{
					Name: "description",
				}},
			}, {
				Name:        []string{"--client-id"},
				Description: `Identifier of OAuth client to set`,
				Args: []model.Arg{{
					Name: "client-id",
				}},
			}, {
				Name:        []string{"--client-secret"},
				Description: `Secret of OAuth client to set`,
				Args: []model.Arg{{
					Name: "client-secret",
				}},
			}},
		}, {
			Name:        []string{"clients"},
			Description: `List your OAuth clients`,
			Options: []model.Option{{
				Name:        []string{"-j", "--json"},
				Description: `Output in json format`,
			}},
		}, {
			Name:        []string{"clients:create"},
			Description: `Create a new OAuth client`,
			Args: []model.Arg{{
				Name: "name",
			}, {
				Name: "redirect_uri",
			}},
			Options: []model.Option{{
				Name:        []string{"-s", "--shell"},
				Description: `Output in shell format`,
			}, {
				Name:        []string{"-j", "--json"},
				Description: `Output in json format`,
			}},
		}, {
			Name:        []string{"clients:destroy"},
			Description: `Delete client by ID`,
			Args: []model.Arg{{
				Name: "id",
			}},
		}, {
			Name:        []string{"clients:info"},
			Description: `Show details of an oauth client`,
			Args: []model.Arg{{
				Name: "id",
			}},
			Options: []model.Option{{
				Name:        []string{"-j", "--json"},
				Description: `Output in json format`,
			}, {
				Name:        []string{"-s", "--shell"},
				Description: `Output in shell format`,
			}},
		}, {
			Name:        []string{"clients:rotate"},
			Description: `Rotate OAuth client secret`,
			Args: []model.Arg{{
				Name: "id",
			}},
			Options: []model.Option{{
				Name:        []string{"-j", "--json"},
				Description: `Output in json format`,
			}, {
				Name:        []string{"-s", "--shell"},
				Description: `Output in shell format`,
			}},
		}, {
			Name:        []string{"clients:update"},
			Description: `Update OAuth client`,
			Args: []model.Arg{{
				Name: "id",
			}},
			Options: []model.Option{{
				Name:        []string{"-n", "--name"},
				Description: `Change the client name`,
				Args: []model.Arg{{
					Name: "name",
				}},
			}, {
				Name:        []string{"--url"},
				Description: `Change the client redirect URL`,
				Args: []model.Arg{{
					Name: "url",
				}},
			}},
		}, {
			Name:        []string{"sessions"},
			Description: `List your OAuth sessions`,
			Options: []model.Option{{
				Name:        []string{"-j", "--json"},
				Description: `Output in json format`,
			}},
		}, {
			Name:        []string{"sessions:destroy"},
			Description: `Delete (logout) OAuth session by ID`,
			Args: []model.Arg{{
				Name: "id",
			}},
		}, {
			Name:        []string{"redis"},
			Description: `Gets information about redis`,
			Args: []model.Arg{{
				Name:       "database",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"--json"},
				Description: `Format output as JSON`,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"redis:cli"},
			Description: `Opens a redis prompt`,
			Args: []model.Arg{{
				Name:       "database",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-c", "--confirm"},
				Description: ``,
				Args: []model.Arg{{
					Name: "confirm",
				}},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"redis:credentials"},
			Description: `Display credentials information`,
			Args: []model.Arg{{
				Name:       "database",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"--reset"},
				Description: `Reset credentials`,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"redis:info"},
			Description: `Gets information about redis`,
			Args: []model.Arg{{
				Name:       "database",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"--json"},
				Description: `Format output as JSON`,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"redis:keyspace-notifications"},
			Description: `Set the keyspace notifications configuration`,
			Args: []model.Arg{{
				Name:       "database",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-c", "--config"},
				Description: `Set keyspace notifications configuration`,
				Args: []model.Arg{{
					Name: "config",
				}},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"redis:maintenance"},
			Description: `Manage maintenance windows`,
			Args: []model.Arg{{
				Name:       "database",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-w", "--window"},
				Description: `Set weekly UTC maintenance window`,
				Args: []model.Arg{{
					Name: "window",
				}},
			}, {
				Name:        []string{"--run"},
				Description: `Start maintenance`,
			}, {
				Name:        []string{"-f", "--force"},
				Description: `Start maintenance without entering application maintenance mode`,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"redis:maxmemory"},
			Description: `Set the key eviction policy`,
			Args: []model.Arg{{
				Name:       "database",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-p", "--policy"},
				Description: `Set policy name`,
				Args: []model.Arg{{
					Name: "policy",
				}},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"redis:promote"},
			Description: `Sets DATABASE as your REDIS_URL`,
			Args: []model.Arg{{
				Name: "database",
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"redis:stats-reset"},
			Description: `Reset all stats covered by RESETSTAT (https://redis.io/commands/config-resetstat)`,
			Args: []model.Arg{{
				Name:       "database",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-c", "--confirm"},
				Description: ``,
				Args: []model.Arg{{
					Name: "confirm",
				}},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"redis:timeout"},
			Description: `Set the number of seconds to wait before killing idle connections`,
			Args: []model.Arg{{
				Name:       "database",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-s", "--seconds"},
				Description: `Set timeout value`,
				Args: []model.Arg{{
					Name: "seconds",
				}},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"redis:wait"},
			Description: `Wait for Redis instance to be available`,
			Args: []model.Arg{{
				Name:       "database",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"container"},
			Description: `Use containers to build and deploy Heroku apps`,
		}, {
			Name:        []string{"container:login"},
			Description: `Log in to Heroku Container Registry`,
			Options: []model.Option{{
				Name:        []string{"-v", "--verbose"},
				Description: ``,
			}},
		}, {
			Name:        []string{"container:logout"},
			Description: `Log out from Heroku Container Registry`,
			Options: []model.Option{{
				Name:        []string{"-v", "--verbose"},
				Description: ``,
			}},
		}, {
			Name:        []string{"container:pull"},
			Description: `Pulls an image from an app's process type`,
			Options: []model.Option{{
				Name:        []string{"-v", "--verbose"},
				Description: ``,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"container:push"},
			Description: `Builds, then pushes Docker images to deploy your Heroku app`,
			Options: []model.Option{{
				Name:        []string{"-v", "--verbose"},
				Description: ``,
			}, {
				Name:        []string{"-R", "--recursive"},
				Description: `Pushes Dockerfile.<process> found in current and subdirectories`,
			}, {
				Name:        []string{"--arg"},
				Description: `Set build-time variables`,
				Args: []model.Arg{{
					Name: "arg",
				}},
			}, {
				Name:        []string{"--context-path"},
				Description: `Path to use as build context (defaults to Dockerfile dir)`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "context-path",
				}},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"container:release"},
			Description: `Releases previously pushed Docker images to your Heroku app`,
			Options: []model.Option{{
				Name:        []string{"-v", "--verbose"},
				Description: ``,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"container:rm"},
			Description: `Remove the process type from your app`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"container:run"},
			Description: `Builds, then runs the docker image locally`,
			Options: []model.Option{{
				Name:        []string{"-p", "--port"},
				Description: `Port the app will run on`,
				Args: []model.Arg{{
					Name: "port",
				}},
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: ``,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"logs"},
			Description: `Display recent log output`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}, {
				Name:        []string{"-n", "--num"},
				Description: `Number of lines to display`,
				Args: []model.Arg{{
					Name: "num",
				}},
			}, {
				Name:        []string{"-d", "--dyno"},
				Description: `Only show output from this dyno type (such as "web" or "worker")`,
				Args: []model.Arg{{
					Name: "dyno",
				}},
			}, {
				Name:        []string{"-s", "--source"},
				Description: `Only show output from this source (such as "app" or "heroku")`,
				Args: []model.Arg{{
					Name: "source",
				}},
			}, {
				Name:        []string{"-t", "--tail"},
				Description: `Continually stream logs`,
			}, {
				Name:        []string{"--force-colors"},
				Description: `Force use of colors (even on non-tty output)`,
			}},
		}, {
			Name:        []string{"run"},
			Description: `Run a one-off process inside a heroku dyno`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `Parent app used by review apps`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}, {
				Name:        []string{"-s", "--size"},
				Description: `Dyno size`,
				Args: []model.Arg{{
					Name: "size",
				}},
			}, {
				Name:        []string{"--type"},
				Description: `Process type`,
				Args: []model.Arg{{
					Name: "type",
				}},
			}, {
				Name:        []string{"-x", "--exit-code"},
				Description: `Passthrough the exit code of the remote command`,
			}, {
				Name:        []string{"-e", "--env"},
				Description: `Environment variables to set (use ';' to split multiple vars)`,
				Args: []model.Arg{{
					Name: "env",
				}},
			}, {
				Name:        []string{"--no-tty"},
				Description: `Force the command to not run in a tty`,
			}, {
				Name:        []string{"--no-notify"},
				Description: `Disables notification when dyno is up (alternatively use HEROKU_NOTIFICATIONS=0)`,
			}},
		}, {
			Name:        []string{"run:detached"},
			Description: `Run a detached dyno, where output is sent to your logs`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}, {
				Name:        []string{"-e", "--env"},
				Description: `Environment variables to set (use ';' to split multiple vars)`,
				Args: []model.Arg{{
					Name: "env",
				}},
			}, {
				Name:        []string{"-s", "--size"},
				Description: `Dyno size`,
				Args: []model.Arg{{
					Name: "size",
				}},
			}, {
				Name:        []string{"-t", "--tail"},
				Description: `Continually stream logs`,
			}, {
				Name:        []string{"--type"},
				Description: `Process type`,
				Args: []model.Arg{{
					Name: "type",
				}},
			}},
		}, {
			Name:        []string{"outbound-rules:add"},
			Description: `Add outbound rules to a Private Space`,
			Options: []model.Option{{
				Name:        []string{"--space"},
				Description: `Space to add rule to`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--confirm"},
				Description: `Set to space name to bypass confirm prompt`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--dest"},
				Description: `Target CIDR block dynos are allowed to communicate with`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--protocol"},
				Description: `The protocol dynos are allowed to use when communicating with hosts in destination CIDR block. Valid protocols are "tcp", "udp", "icmp", "0-255" and "any"`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--port"},
				Description: `The port dynos are allowed to use when communicating with hosts in destination CIDR block. Accepts a range in "<lowest port>-<highest port>" format. 0 is the minimum. The maximum port allowed is 65535, except for ICMP with a maximum of 255`,
				Args:        []model.Arg{{}},
			}},
		}, {
			Name:        []string{"outbound-rules"},
			Description: `List Outbound Rules for a space`,
			Args: []model.Arg{{
				Name: "space",
			}},
			Options: []model.Option{{
				Name:        []string{"--space"},
				Description: `Space to get outbound rules from`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--json"},
				Description: `Output in json format`,
			}},
		}, {
			Name:        []string{"outbound-rules:remove"},
			Description: `Remove a Rules from the list of Outbound Rules`,
			Args: []model.Arg{{
				Name: "ruleNumber",
			}},
			Options: []model.Option{{
				Name:        []string{"--space"},
				Description: `Space to remove rule from`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--confirm"},
				Description: `Set to space name to bypass confirm prompt`,
				Args:        []model.Arg{{}},
			}},
		}, {
			Name:        []string{"status"},
			Description: `Display current status of the Heroku platform`,
			Options: []model.Option{{
				Name:        []string{"--json"},
				Description: `Output in json format`,
			}},
		}, {
			Name:        []string{"pipelines"},
			Description: `List pipelines you have access to`,
			Options: []model.Option{{
				Name:        []string{"--json"},
				Description: `Output in json format`,
			}},
		}, {
			Name:        []string{"pipelines:add"},
			Description: `Add this app to a pipeline`,
			Args: []model.Arg{{
				Name:        "pipeline",
				Description: `Name of pipeline`,
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}, {
				Name:        []string{"-s", "--stage"},
				Description: `Stage of first app in pipeline`,
				Args: []model.Arg{{
					Name: "stage",
				}},
			}},
		}, {
			Name:        []string{"pipelines:connect"},
			Description: `Connect a github repo to an existing pipeline`,
			Args: []model.Arg{{
				Name:        "name",
				Description: `Name of pipeline`,
			}},
			Options: []model.Option{{
				Name:        []string{"-r", "--repo"},
				Description: `The GitHub repository to connect to`,
				Args: []model.Arg{{
					Name: "repo",
				}},
			}},
		}, {
			Name:        []string{"pipelines:create"},
			Description: `Create a new pipeline`,
			Args: []model.Arg{{
				Name:        "name",
				Description: `Name of pipeline (defaults to basename of the app)`,
				IsOptional:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}, {
				Name:        []string{"-s", "--stage"},
				Description: `Stage of first app in pipeline`,
				Args: []model.Arg{{
					Name: "stage",
				}},
			}, {
				Name:        []string{"-t", "--team"},
				Description: `The team which will own the apps`,
				Args: []model.Arg{{
					Name: "team",
				}},
			}},
		}, {
			Name:        []string{"pipelines:destroy"},
			Description: `Destroy a pipeline`,
			Args: []model.Arg{{
				Name:        "pipeline",
				Description: `Name of pipeline`,
			}},
		}, {
			Name:        []string{"pipelines:diff"},
			Description: `Compares the latest release of this app to its downstream app(s)`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pipelines:info"},
			Description: `Show list of apps in a pipeline`,
			Args: []model.Arg{{
				Name:        "pipeline",
				Description: `Pipeline to show list of apps for`,
			}},
			Options: []model.Option{{
				Name:        []string{"--json"},
				Description: `Output in json format`,
			}},
		}, {
			Name:        []string{"pipelines:open"},
			Description: `Open a pipeline in dashboard`,
			Args: []model.Arg{{
				Name:        "pipeline",
				Description: `Name of pipeline`,
			}},
		}, {
			Name:        []string{"pipelines:promote"},
			Description: `Promote the latest release of this app to its downstream app(s)`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}, {
				Name:        []string{"-t", "--to"},
				Description: `Comma separated list of apps to promote to`,
				Args: []model.Arg{{
					Name: "to",
				}},
			}},
		}, {
			Name:        []string{"pipelines:remove"},
			Description: `Remove this app from its pipeline`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pipelines:rename"},
			Description: `Rename a pipeline`,
			Args: []model.Arg{{
				Name:        "pipeline",
				Description: `Current name of pipeline`,
			}, {
				Name:        "name",
				Description: `New name of pipeline`,
			}},
		}, {
			Name:        []string{"pipelines:setup"},
			Description: `Bootstrap a new pipeline with common settings and create a production and staging app (requires a fully formed app.json in the repo)`,
			Args: []model.Arg{{
				Name:        "name",
				Description: `Name of pipeline`,
				IsOptional:  true,
			}, {
				Name:        "repo",
				Description: `A GitHub repository to connect the pipeline to`,
				IsOptional:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"-t", "--team"},
				Description: `The team to assign pipeline ownership to (defaults to current user)`,
				Args: []model.Arg{{
					Name: "team",
				}},
			}, {
				Name:        []string{"-y", "--yes"},
				Description: `Accept all default settings without prompting`,
			}},
		}, {
			Name:        []string{"pipelines:transfer"},
			Description: `Transfer ownership of a pipeline`,
			Args: []model.Arg{{
				Name:        "owner",
				Description: `The owner to transfer the pipeline to`,
			}},
			Options: []model.Option{{
				Name:        []string{"-p", "--pipeline"},
				Description: `Name of pipeline`,
				Args: []model.Arg{{
					Name: "pipeline",
				}},
			}, {
				Name:        []string{"-c", "--confirm"},
				Description: ``,
				Args: []model.Arg{{
					Name: "confirm",
				}},
			}},
		}, {
			Name:        []string{"pipelines:update"},
			Description: `Update the app's stage in a pipeline`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}, {
				Name:        []string{"-s", "--stage"},
				Description: `New stage of app`,
				Args: []model.Arg{{
					Name: "stage",
				}},
			}},
		}, {
			Name:        []string{"reviewapps:disable"},
			Description: `Disable review apps and/or settings on an existing pipeline`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `Parent app used by review apps`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}, {
				Name:        []string{"-p", "--pipeline"},
				Description: `Name of pipeline`,
				Args: []model.Arg{{
					Name: "pipeline",
				}},
			}, {
				Name:        []string{"--no-autodeploy"},
				Description: `Disable autodeployments`,
			}, {
				Name:        []string{"--no-autodestroy"},
				Description: `Disable automatically destroying review apps`,
			}, {
				Name:        []string{"--no-wait-for-ci"},
				Description: `Disable wait for CI`,
			}},
		}, {
			Name:        []string{"reviewapps:enable"},
			Description: `Enable review apps and/or settings on an existing pipeline`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `Parent app used by review apps`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}, {
				Name:        []string{"-p", "--pipeline"},
				Description: `Name of pipeline`,
				Args: []model.Arg{{
					Name: "pipeline",
				}},
			}, {
				Name:        []string{"--autodeploy"},
				Description: `Autodeploy the review app`,
			}, {
				Name:        []string{"--autodestroy"},
				Description: `Autodestroy the review app`,
			}, {
				Name:        []string{"--wait-for-ci"},
				Description: `Wait for CI to pass before deploying`,
			}},
		}, {
			Name:        []string{"spaces"},
			Description: `List available spaces`,
			Options: []model.Option{{
				Name:        []string{"--json"},
				Description: `Output in json format`,
			}, {
				Name:        []string{"-t", "--team"},
				Description: `Team to use`,
				Args: []model.Arg{{
					Name: "team",
				}},
			}},
		}, {
			Name:        []string{"spaces:create"},
			Description: `Create a new space`,
			Options: []model.Option{{
				Name:        []string{"-s", "--space"},
				Description: `Name of space to create`,
				Args: []model.Arg{{
					Name: "space",
				}},
			}, {
				Name:        []string{"--region"},
				Description: `Region name`,
				Args: []model.Arg{{
					Name: "region",
				}},
			}, {
				Name:        []string{"--cidr"},
				Description: `RFC-1918 CIDR the space will use`,
				Args: []model.Arg{{
					Name: "cidr",
				}},
			}, {
				Name:        []string{"--data-cidr"},
				Description: `RFC-1918 CIDR used by Heroku Data resources for the space`,
				Args: []model.Arg{{
					Name: "data-cidr",
				}},
			}, {
				Name:        []string{"-t", "--team"},
				Description: `Team to use`,
				Args: []model.Arg{{
					Name: "team",
				}},
			}},
		}, {
			Name:        []string{"spaces:destroy"},
			Description: `Destroy a space`,
			Options: []model.Option{{
				Name:        []string{"-s", "--space"},
				Description: `Space to destroy`,
				Args: []model.Arg{{
					Name: "space",
				}},
			}, {
				Name:        []string{"--confirm"},
				Description: `Set to space name to bypass confirm prompt`,
				Args: []model.Arg{{
					Name: "confirm",
				}},
			}},
		}, {
			Name:        []string{"spaces:info"},
			Description: `Show info about a space`,
			Options: []model.Option{{
				Name:        []string{"-s", "--space"},
				Description: `Space to get info of`,
				Args: []model.Arg{{
					Name: "space",
				}},
			}, {
				Name:        []string{"--json"},
				Description: `Output in json format`,
			}},
		}, {
			Name:        []string{"spaces:peering:info"},
			Description: `Display the information necessary to initiate a peering connection`,
			Options: []model.Option{{
				Name:        []string{"-s", "--space"},
				Description: `Space to get peering info from`,
				Args: []model.Arg{{
					Name: "space",
				}},
			}, {
				Name:        []string{"--json"},
				Description: `Output in json format`,
			}},
		}, {
			Name:        []string{"spaces:peerings"},
			Description: `List peering connections for a space`,
			Options: []model.Option{{
				Name:        []string{"-s", "--space"},
				Description: `Space to get peer list from`,
				Args: []model.Arg{{
					Name: "space",
				}},
			}, {
				Name:        []string{"--json"},
				Description: `Output in json format`,
			}},
		}, {
			Name:        []string{"spaces:peerings:accept"},
			Description: `Accepts a pending peering request for a private space`,
			Options: []model.Option{{
				Name:        []string{"-p", "--pcxid"},
				Description: `PCX ID of a pending peering`,
				Args: []model.Arg{{
					Name: "pcxid",
				}},
			}, {
				Name:        []string{"-s", "--space"},
				Description: `Space to get peering info from`,
				Args: []model.Arg{{
					Name: "space",
				}},
			}},
		}, {
			Name:        []string{"spaces:peerings:destroy"},
			Description: `Destroys an active peering connection in a private space`,
			Options: []model.Option{{
				Name:        []string{"-p", "--pcxid"},
				Description: `PCX ID of a pending peering`,
				Args: []model.Arg{{
					Name: "pcxid",
				}},
			}, {
				Name:        []string{"-s", "--space"},
				Description: `Space to get peering info from`,
				Args: []model.Arg{{
					Name: "space",
				}},
			}, {
				Name:        []string{"--confirm"},
				Description: `Set to PCX ID to bypass confirm prompt`,
				Args: []model.Arg{{
					Name: "confirm",
				}},
			}},
		}, {
			Name:        []string{"spaces:ps"},
			Description: `List dynos for a space`,
			Options: []model.Option{{
				Name:        []string{"-s", "--space"},
				Description: `Space to get dynos of`,
				Args: []model.Arg{{
					Name: "space",
				}},
			}, {
				Name:        []string{"--json"},
				Description: `Output in json format`,
			}},
		}, {
			Name:        []string{"spaces:rename"},
			Description: `Renames a space`,
			Options: []model.Option{{
				Name:        []string{"--from"},
				Description: `Current name of space`,
				Args: []model.Arg{{
					Name: "from",
				}},
			}, {
				Name:        []string{"--to"},
				Description: `Desired name of space`,
				Args: []model.Arg{{
					Name: "to",
				}},
			}},
		}, {
			Name:        []string{"spaces:topology"},
			Description: `Show space topology`,
			Options: []model.Option{{
				Name:        []string{"-s", "--space"},
				Description: `Space to get topology of`,
				Args: []model.Arg{{
					Name: "space",
				}},
			}, {
				Name:        []string{"--json"},
				Description: `Output in json format`,
			}},
		}, {
			Name:        []string{"spaces:transfer"},
			Description: `Transfer a space to another team`,
			Options: []model.Option{{
				Name:        []string{"--space"},
				Description: `Name of space`,
				Args: []model.Arg{{
					Name: "space",
				}},
			}, {
				Name:        []string{"--team"},
				Description: `Desired owner of space`,
				Args: []model.Arg{{
					Name: "team",
				}},
			}},
		}, {
			Name:        []string{"spaces:vpn:config"},
			Description: `Display the configuration information for VPN`,
			Options: []model.Option{{
				Name:        []string{"-s", "--space"},
				Description: `Space the VPN connection belongs to`,
				Args: []model.Arg{{
					Name: "space",
				}},
			}, {
				Name:        []string{"-n", "--name"},
				Description: `Name or id of the VPN connection to retrieve config from`,
				Args: []model.Arg{{
					Name: "name",
				}},
			}, {
				Name:        []string{"--json"},
				Description: `Output in json format`,
			}},
		}, {
			Name:        []string{"spaces:vpn:connect"},
			Description: `Create VPN`,
			Options: []model.Option{{
				Name:        []string{"-n", "--name"},
				Description: `VPN name`,
				Args: []model.Arg{{
					Name: "name",
				}},
			}, {
				Name:        []string{"-i", "--ip"},
				Description: `Public IP of customer gateway`,
				Args: []model.Arg{{
					Name: "ip",
				}},
			}, {
				Name:        []string{"-c", "--cidrs"},
				Description: `A list of routable CIDRs separated by commas`,
				Args: []model.Arg{{
					Name: "cidrs",
				}},
			}, {
				Name:        []string{"-s", "--space"},
				Description: `Space name`,
				Args: []model.Arg{{
					Name: "space",
				}},
			}},
		}, {
			Name:        []string{"spaces:vpn:connections"},
			Description: `List the VPN Connections for a space`,
			Options: []model.Option{{
				Name:        []string{"-s", "--space"},
				Description: `Space to get VPN connections from`,
				Args: []model.Arg{{
					Name: "space",
				}},
			}, {
				Name:        []string{"--json"},
				Description: `Output in json format`,
			}},
		}, {
			Name:        []string{"spaces:vpn:destroy"},
			Description: `Destroys VPN in a private space`,
			Options: []model.Option{{
				Name:        []string{"-s", "--space"},
				Description: `Space to get peering info from`,
				Args: []model.Arg{{
					Name: "space",
				}},
			}, {
				Name:        []string{"-n", "--name"},
				Description: `Name or id of the VPN connection to retrieve config from`,
				Args: []model.Arg{{
					Name: "name",
				}},
			}, {
				Name:        []string{"--confirm"},
				Description: `Set to VPN connection name to bypass confirm prompt`,
				Args: []model.Arg{{
					Name: "confirm",
				}},
			}},
		}, {
			Name:        []string{"spaces:vpn:info"},
			Description: `Display the information for VPN`,
			Options: []model.Option{{
				Name:        []string{"-s", "--space"},
				Description: `Space the vpn connection belongs to`,
				Args: []model.Arg{{
					Name: "space",
				}},
			}, {
				Name:        []string{"--json"},
				Description: `Output in json format`,
			}, {
				Name:        []string{"-n", "--name"},
				Description: `Name or id of the VPN connection to get info from`,
				Args: []model.Arg{{
					Name: "name",
				}},
			}},
		}, {
			Name:        []string{"spaces:vpn:update"},
			Description: `Update VPN`,
			Options: []model.Option{{
				Name:        []string{"-n", "--name"},
				Description: `VPN name`,
				Args: []model.Arg{{
					Name: "name",
				}},
			}, {
				Name:        []string{"-c", "--cidrs"},
				Description: `A list of routable CIDRs separated by commas`,
				Args: []model.Arg{{
					Name: "cidrs",
				}},
			}, {
				Name:        []string{"-s", "--space"},
				Description: `Space name`,
				Args: []model.Arg{{
					Name: "space",
				}},
			}},
		}, {
			Name:        []string{"spaces:vpn:wait"},
			Description: `Wait for VPN Connection to be created`,
			Options: []model.Option{{
				Name:        []string{"-s", "--space"},
				Description: `Space the vpn connection belongs to`,
				Args: []model.Arg{{
					Name: "space",
				}},
			}, {
				Name:        []string{"-n", "--name"},
				Description: `Name or id of the vpn connection to wait for`,
				Args: []model.Arg{{
					Name: "name",
				}},
			}, {
				Name:        []string{"--json"},
				Description: `Output in json format`,
			}, {
				Name:        []string{"-i", "--interval"},
				Description: `Seconds to wait between poll intervals`,
				Args: []model.Arg{{
					Name: "interval",
				}},
			}, {
				Name:        []string{"-t", "--timeout"},
				Description: `Maximum number of seconds to wait`,
				Args: []model.Arg{{
					Name: "timeout",
				}},
			}},
		}, {
			Name:        []string{"spaces:wait"},
			Description: `Wait for a space to be created`,
			Options: []model.Option{{
				Name:        []string{"-s", "--space"},
				Description: `Space to get info of`,
				Args: []model.Arg{{
					Name: "space",
				}},
			}, {
				Name:        []string{"--json"},
				Description: `Output in json format`,
			}, {
				Name:        []string{"-i", "--interval"},
				Description: `Seconds to wait between poll intervals`,
				Args: []model.Arg{{
					Name: "interval",
				}},
			}, {
				Name:        []string{"-t", "--timeout"},
				Description: `Maximum number of seconds to wait`,
				Args: []model.Arg{{
					Name: "timeout",
				}},
			}},
		}, {
			Name:        []string{"trusted-ips"},
			Description: `List trusted IP ranges for a space`,
			Options: []model.Option{{
				Name:        []string{"-s", "--space"},
				Description: `Space to get inbound rules from`,
				Args: []model.Arg{{
					Name: "space",
				}},
			}, {
				Name:        []string{"--json"},
				Description: `Output in json format`,
			}},
		}, {
			Name:        []string{"trusted-ips:add"},
			Description: `Add one range to the list of trusted IP ranges`,
			Args: []model.Arg{{
				Name: "source",
			}},
			Options: []model.Option{{
				Name:        []string{"-s", "--space"},
				Description: `Space to add rule to`,
				Args: []model.Arg{{
					Name: "space",
				}},
			}, {
				Name:        []string{"--confirm"},
				Description: `Set to space name to bypass confirm prompt`,
				Args: []model.Arg{{
					Name: "confirm",
				}},
			}},
		}, {
			Name:        []string{"trusted-ips:remove"},
			Description: `Remove a range from the list of trusted IP ranges`,
			Args: []model.Arg{{
				Name: "source",
			}},
			Options: []model.Option{{
				Name:        []string{"--space"},
				Description: `Space to remove rule from`,
				Args: []model.Arg{{
					Name: "space",
				}},
			}, {
				Name:        []string{"--confirm"},
				Description: `Set to space name to bypass confirm prompt`,
				Args: []model.Arg{{
					Name: "confirm",
				}},
			}},
		}, {
			Name:        []string{"ps:copy"},
			Description: `Copy a file from a dyno to the local filesystem`,
			Args: []model.Arg{{
				Name: "file",
			}},
			Options: []model.Option{{
				Name:        []string{"-d", "--dyno"},
				Description: `Specify the dyno to connect to`,
				Args: []model.Arg{{
					Name: "dyno",
				}},
			}, {
				Name:        []string{"-o", "--output"},
				Description: `The name of the output file`,
				Args: []model.Arg{{
					Name: "output",
				}},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"ps:exec"},
			Description: `Create an SSH session to a dyno`,
			Options: []model.Option{{
				Name:        []string{"-d", "--dyno"},
				Description: `Specify the dyno to connect to`,
				Args: []model.Arg{{
					Name: "dyno",
				}},
			}, {
				Name:        []string{"--ssh"},
				Description: `Use native ssh`,
			}, {
				Name:        []string{"--status"},
				Description: `Lists the status of the SSH server in the dyno`,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"ps:forward"},
			Description: `Forward traffic on a local port to a dyno`,
			Args: []model.Arg{{
				Name: "port",
			}},
			Options: []model.Option{{
				Name:        []string{"-d", "--dyno"},
				Description: `Specify the dyno to connect to`,
				Args: []model.Arg{{
					Name: "dyno",
				}},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"ps:socks"},
			Description: `Launch a SOCKS proxy into a dyno`,
			Options: []model.Option{{
				Name:        []string{"-d", "--dyno"},
				Description: `Specify the dyno to connect to`,
				Args: []model.Arg{{
					Name: "dyno",
				}},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"access"},
			Description: `List who has access to an app`,
			Options: []model.Option{{
				Name:        []string{"--json"},
				Description: `Output in json format`,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"access:add"},
			Description: `Add new users to your app`,
			Args: []model.Arg{{
				Name: "email",
			}},
			Options: []model.Option{{
				Name:        []string{"-p", "--permissions"},
				Description: `List of permissions comma separated`,
				Args: []model.Arg{{
					Name: "permissions",
				}},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"access:remove"},
			Description: `Remove users from a team app`,
			Args: []model.Arg{{
				Name: "email",
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"access:update"},
			Description: `Update existing collaborators on an team app`,
			Args: []model.Arg{{
				Name: "email",
			}},
			Options: []model.Option{{
				Name:        []string{"-p", "--permissions"},
				Description: `Comma-delimited list of permissions to update (deploy,manage,operate)`,
				Args: []model.Arg{{
					Name: "permissions",
				}},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"apps:join"},
			Description: `Add yourself to a team app`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"apps:leave"},
			Description: `Remove yourself from a team app`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"apps:lock"},
			Description: `Prevent team members from joining an app`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"apps:transfer"},
			Description: `Transfer applications to another user or team`,
			Args: []model.Arg{{
				Name:        "recipient",
				Description: `User or team to transfer applications to`,
			}},
			Options: []model.Option{{
				Name:        []string{"-l", "--locked"},
				Description: `Lock the app upon transfer`,
			}, {
				Name:        []string{"--bulk"},
				Description: `Transfer applications in bulk`,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"apps:unlock"},
			Description: `Unlock an app so any team member can join`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"join"},
			Description: `Add yourself to a team app`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"leave"},
			Description: `Remove yourself from a team app`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"lock"},
			Description: `Prevent team members from joining an app`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"members"},
			Description: `List members of a team`,
			Options: []model.Option{{
				Name:        []string{"-r", "--role"},
				Description: `Filter by role`,
				Args: []model.Arg{{
					Name: "role",
				}},
			}, {
				Name:        []string{"--pending"},
				Description: `Filter by pending team invitations`,
			}, {
				Name:        []string{"--json"},
				Description: `Output in json format`,
			}, {
				Name:        []string{"-t", "--team"},
				Description: `Team to use`,
				Args: []model.Arg{{
					Name: "team",
				}},
			}},
		}, {
			Name:        []string{"members:add"},
			Description: `Adds a user to a team`,
			Args: []model.Arg{{
				Name: "email",
			}},
			Options: []model.Option{{
				Name:        []string{"-r", "--role"},
				Description: `Member role (admin, collaborator, member, owner)`,
				Args: []model.Arg{{
					Name: "role",
				}},
			}, {
				Name:        []string{"-t", "--team"},
				Description: `Team to use`,
				Args: []model.Arg{{
					Name: "team",
				}},
			}},
		}, {
			Name:        []string{"members:remove"},
			Description: `Removes a user from a team`,
			Args: []model.Arg{{
				Name: "email",
			}},
			Options: []model.Option{{
				Name:        []string{"-t", "--team"},
				Description: `Team to use`,
				Args: []model.Arg{{
					Name: "team",
				}},
			}},
		}, {
			Name:        []string{"members:set"},
			Description: `Sets a members role in a team`,
			Args: []model.Arg{{
				Name: "email",
			}},
			Options: []model.Option{{
				Name:        []string{"-r", "--role"},
				Description: `Member role (admin, collaborator, member, owner)`,
				Args: []model.Arg{{
					Name: "role",
				}},
			}, {
				Name:        []string{"-t", "--team"},
				Description: `Team to use`,
				Args: []model.Arg{{
					Name: "team",
				}},
			}},
		}, {
			Name:        []string{"orgs"},
			Description: `List the teams that you are a member of`,
			Options: []model.Option{{
				Name:        []string{"--json"},
				Description: `Output in json format`,
			}, {
				Name:        []string{"--enterprise"},
				Description: `Filter by enterprise teams`,
			}},
		}, {
			Name:        []string{"orgs:open"},
			Description: `Open the team interface in a browser window`,
			Options: []model.Option{{
				Name:        []string{"-t", "--team"},
				Description: `Team to use`,
				Args: []model.Arg{{
					Name: "team",
				}},
			}},
		}, {
			Name:        []string{"teams"},
			Description: `List the teams that you are a member of`,
			Options: []model.Option{{
				Name:        []string{"--json"},
				Description: `Output in json format`,
			}},
		}, {
			Name:        []string{"unlock"},
			Description: `Unlock an app so any team member can join`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"ps:autoscale:disable"},
			Description: `Disable web dyno autoscaling`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"ps:autoscale:enable"},
			Description: `Enable web dyno autoscaling`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}, {
				Name:        []string{"--min"},
				Description: `Minimum number of dynos`,
				Args: []model.Arg{{
					Name: "min",
				}},
			}, {
				Name:        []string{"--max"},
				Description: `Maximum number of dynos`,
				Args: []model.Arg{{
					Name: "max",
				}},
			}, {
				Name:        []string{"--p95"},
				Description: `Desired p95 response time`,
				Args: []model.Arg{{
					Name: "p95",
				}},
			}, {
				Name:        []string{"--notifications"},
				Description: `Receive email notifications when the max dyno limit is reached`,
			}},
		}, {
			Name:        []string{"ps:wait"},
			Description: `Wait for all dynos to be running latest version after a release`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}, {
				Name:        []string{"-t", "--type"},
				Description: `Wait for one specific dyno type`,
				Args: []model.Arg{{
					Name: "type",
				}},
			}, {
				Name:        []string{"-w", "--wait-interval"},
				Description: `How frequently to poll in seconds (to avoid hitting Heroku API rate limits)`,
				Args: []model.Arg{{
					Name: "wait-interval",
				}},
			}, {
				Name:        []string{"-R", "--with-run"},
				Description: `Whether to wait for one-off run dynos`,
			}},
		}, {
			Name:        []string{"regions"},
			Description: `List available regions for deployment`,
			Options: []model.Option{{
				Name:        []string{"--json"},
				Description: `Output in json format`,
			}, {
				Name:        []string{"--private"},
				Description: `Show regions for private spaces`,
			}, {
				Name:        []string{"--common"},
				Description: `Show regions for common runtime`,
			}},
		}, {
			Name:        []string{"webhooks"},
			Description: `List webhooks on an app`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"webhooks:add"},
			Description: `Add a webhook to an app`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}, {
				Name:        []string{"-i", "--include"},
				Description: `Comma delimited event types your server will receive`,
				Args: []model.Arg{{
					Name: "include",
				}},
			}, {
				Name:        []string{"-l", "--level"},
				Description: `Notify does not retry, sync will retry until successful or timeout`,
				Args: []model.Arg{{
					Name: "level",
				}},
			}, {
				Name:        []string{"-s", "--secret"},
				Description: `Value to sign delivery with in Heroku-Webhook-Hmac-SHA256 header`,
				Args: []model.Arg{{
					Name: "secret",
				}},
			}, {
				Name:        []string{"-t", "--authorization"},
				Description: `Authoriation header to send with webhooks`,
				Args: []model.Arg{{
					Name: "authorization",
				}},
			}, {
				Name:        []string{"-u", "--url"},
				Description: `URL for receiver`,
				Args: []model.Arg{{
					Name: "url",
				}},
			}},
		}, {
			Name:        []string{"webhooks:deliveries"},
			Description: `List webhook deliveries on an app`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}, {
				Name:        []string{"-s", "--status"},
				Description: `Filter deliveries by status`,
				Args: []model.Arg{{
					Name: "status",
				}},
			}},
		}, {
			Name:        []string{"webhooks:deliveries:info"},
			Description: `Info for a webhook event on an app`,
			Args: []model.Arg{{
				Name: "id",
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"webhooks:events"},
			Description: `List webhook events on an app`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"webhooks:events:info"},
			Description: `Info for a webhook event on an app`,
			Args: []model.Arg{{
				Name: "id",
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"webhooks:info"},
			Description: `Info for a webhook on an app`,
			Args: []model.Arg{{
				Name: "id",
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"webhooks:remove"},
			Description: `Removes a webhook from an app`,
			Args: []model.Arg{{
				Name:        "id",
				Description: `Id of webhook to remove`,
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"webhooks:update"},
			Description: `Updates a webhook in an app`,
			Args: []model.Arg{{
				Name: "id",
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}, {
				Name:        []string{"-i", "--include"},
				Description: `Comma delimited event types your server will receive`,
				Args: []model.Arg{{
					Name: "include",
				}},
			}, {
				Name:        []string{"-l", "--level"},
				Description: `Notify does not retry, sync will retry until successful or timeout`,
				Args: []model.Arg{{
					Name: "level",
				}},
			}, {
				Name:        []string{"-s", "--secret"},
				Description: `Value to sign delivery with in Heroku-Webhook-Hmac-SHA256 header`,
				Args: []model.Arg{{
					Name: "secret",
				}},
			}, {
				Name:        []string{"-t", "--authorization"},
				Description: `Authoriation header to send with webhooks`,
				Args: []model.Arg{{
					Name: "authorization",
				}},
			}, {
				Name:        []string{"-u", "--url"},
				Description: `URL for receiver`,
				Args: []model.Arg{{
					Name: "url",
				}},
			}},
		}, {
			Name:        []string{"commands"},
			Description: `List all the commands`,
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Show CLI help`,
			}, {
				Name:        []string{"-j", "--json"},
				Description: `Display unfiltered api data in json format`,
			}, {
				Name:        []string{"--hidden"},
				Description: `Show hidden commands`,
			}, {
				Name:        []string{"--columns"},
				Description: `Only show provided columns (comma-separated)`,
				Args: []model.Arg{{
					Name: "columns",
				}},
			}, {
				Name:        []string{"--sort"},
				Description: `Property to sort by (prepend '-' for descending)`,
				Args: []model.Arg{{
					Name: "sort",
				}},
			}, {
				Name:        []string{"--filter"},
				Description: `Filter property by partial string matching, ex: name=foo`,
				Args: []model.Arg{{
					Name: "filter",
				}},
			}, {
				Name:        []string{"--csv"},
				Description: `Output is csv format [alias: --output=csv]`,
			}, {
				Name:        []string{"--output"},
				Description: `Output in a more machine friendly format`,
				Args: []model.Arg{{
					Name:        "output",
					Suggestions: []model.Suggestion{{Name: []string{`csv`}}, {Name: []string{`json`}}, {Name: []string{`yaml`}}},
				}},
			}, {
				Name:        []string{"-x", "--extended"},
				Description: `Show extra columns`,
			}, {
				Name:        []string{"--no-truncate"},
				Description: `Do not truncate output to fit screen`,
			}, {
				Name:        []string{"--no-header"},
				Description: `Hide table header from output`,
			}},
		}, {
			Name:        []string{"help"},
			Description: `Display help for <%= config.bin %>`,
			Args: []model.Arg{{
				Name:        "command",
				Description: `Command to show help for`,
				IsOptional:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"--all"},
				Description: `See all commands in CLI`,
			}},
		}, {
			Name:        []string{"which"},
			Description: `Show which plugin a command is in`,
			Args: []model.Arg{{
				Name: "command",
			}},
		}, {
			Name:        []string{"update"},
			Description: `Update the <%= config.bin %> CLI`,
			Args: []model.Arg{{
				Name:       "channel",
				IsOptional: true,
			}},
		}, {
			Name:        []string{"plugins"},
			Description: `List installed plugins`,
			Options: []model.Option{{
				Name:        []string{"--core"},
				Description: `Show core plugins`,
			}},
		}, {
			Name:        []string{"plugins:install", "plugins:add"},
			Description: `Installs a plugin into the CLI`,
			Args: []model.Arg{{
				Name:        "plugin",
				Description: `Plugin to install`,
			}},
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Show CLI help`,
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: ``,
			}, {
				Name:        []string{"-f", "--force"},
				Description: `Yarn install with force flag`,
			}},
		}, {
			Name:        []string{"plugins:link"},
			Description: `Links a plugin into the CLI for development`,
			Args: []model.Arg{{
				Templates:   []model.Template{model.TemplateFolders},
				Name:        "path",
				Description: `Path to plugin`,
			}},
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Show CLI help`,
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: ``,
			}},
		}, {
			Name:        []string{"plugins:uninstall", "plugins:unlink", "plugins:remove"},
			Description: `Removes a plugin from the CLI`,
			Args: []model.Arg{{
				Name:        "plugin",
				Description: `Plugin to uninstall`,
				IsOptional:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Show CLI help`,
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: ``,
			}},
		}, {
			Name:        []string{"plugins:update"},
			Description: `Update installed plugins`,
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Show CLI help`,
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: ``,
			}},
		}, {
			Name:        []string{"pg"},
			Description: `Show database information`,
			Args: []model.Arg{{
				Name:       "database",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pg:backups"},
			Description: `List database backups`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pg:backups:cancel"},
			Description: `Cancel an in-progress backup or restore (default newest)`,
			Args: []model.Arg{{
				Name:       "backup_id",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pg:backups:capture"},
			Description: `Capture a new backup`,
			Args: []model.Arg{{
				Name:       "database",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"--wait-interval"},
				Description: ``,
				Args: []model.Arg{{
					Name: "wait-interval",
				}},
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: ``,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pg:backups:delete"},
			Description: `Delete a backup`,
			Args: []model.Arg{{
				Name: "backup_id",
			}},
			Options: []model.Option{{
				Name:        []string{"-c", "--confirm"},
				Description: ``,
				Args: []model.Arg{{
					Name: "confirm",
				}},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pg:backups:download"},
			Description: `Downloads database backup`,
			Args: []model.Arg{{
				Name:       "backup_id",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-o", "--output"},
				Description: `Location to download to. Defaults to latest.dump`,
				Args: []model.Arg{{
					Name: "output",
				}},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pg:backups:info"},
			Description: `Get information about a specific backup`,
			Args: []model.Arg{{
				Name:       "backup_id",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pg:backups:restore"},
			Description: `Restore a backup (default latest) to a database`,
			Args: []model.Arg{{
				Name:       "backup",
				IsOptional: true,
			}, {
				Name:       "database",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"--wait-interval"},
				Description: ``,
				Args: []model.Arg{{
					Name: "wait-interval",
				}},
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: ``,
			}, {
				Name:        []string{"-c", "--confirm"},
				Description: ``,
				Args: []model.Arg{{
					Name: "confirm",
				}},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pg:backups:schedule"},
			Description: `Schedule daily backups for given database`,
			Args: []model.Arg{{
				Name:       "database",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"--at"},
				Description: `At a specific (24h) hour in the given timezone. Defaults to UTC. --at '[HOUR]:00 [TIMEZONE]'`,
				Args: []model.Arg{{
					Name: "at",
				}},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pg:backups:schedules"},
			Description: `List backup schedule`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pg:backups:unschedule"},
			Description: `Stop daily backups`,
			Args: []model.Arg{{
				Name:       "database",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pg:backups:url"},
			Description: `Get secret but publicly accessible URL of a backup`,
			Args: []model.Arg{{
				Name:       "backup_id",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pg:bloat"},
			Description: `Show table and index bloat in your database ordered by most wasteful`,
			Args: []model.Arg{{
				Name:       "database",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pg:blocking"},
			Description: `Display queries holding locks other queries are waiting to be released`,
			Args: []model.Arg{{
				Name:       "database",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pg:connection-pooling:attach"},
			Description: `Add an attachment to a database using connection pooling`,
			Args: []model.Arg{{
				Name:       "database",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"--as"},
				Description: `Name for add-on attachment`,
				Args: []model.Arg{{
					Name: "as",
				}},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pg:copy"},
			Description: `Copy all data from source db to target`,
			Args: []model.Arg{{
				Name: "source",
			}, {
				Name: "target",
			}},
			Options: []model.Option{{
				Name:        []string{"--wait-interval"},
				Description: ``,
				Args: []model.Arg{{
					Name: "wait-interval",
				}},
			}, {
				Name:        []string{"--verbose"},
				Description: ``,
			}, {
				Name:        []string{"--confirm"},
				Description: ``,
				Args: []model.Arg{{
					Name: "confirm",
				}},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pg:credentials"},
			Description: `Show information on credentials in the database`,
			Args: []model.Arg{{
				Name:       "database",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"--reset"},
				Description: `DEPRECATED`,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pg:credentials:create"},
			Description: `Create credential within database`,
			Args: []model.Arg{{
				Name:       "database",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-n", "--name"},
				Description: `Name of the new credential within the database`,
				Args: []model.Arg{{
					Name: "name",
				}},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pg:credentials:destroy"},
			Description: `Destroy credential within database`,
			Args: []model.Arg{{
				Name:       "database",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-n", "--name"},
				Description: `Unique identifier for the credential`,
				Args: []model.Arg{{
					Name: "name",
				}},
			}, {
				Name:        []string{"-c", "--confirm"},
				Description: ``,
				Args: []model.Arg{{
					Name: "confirm",
				}},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pg:credentials:repair-default"},
			Description: `Repair the permissions of the default credential within database`,
			Args: []model.Arg{{
				Name:       "database",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-c", "--confirm"},
				Description: ``,
				Args: []model.Arg{{
					Name: "confirm",
				}},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pg:credentials:rotate"},
			Description: `Rotate the database credentials`,
			Args: []model.Arg{{
				Name:       "database",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-n", "--name"},
				Description: `Which credential to rotate (default credentials if not specified)`,
				Args: []model.Arg{{
					Name: "name",
				}},
			}, {
				Name:        []string{"--all"},
				Description: `Rotate all credentials`,
			}, {
				Name:        []string{"-c", "--confirm"},
				Description: ``,
				Args: []model.Arg{{
					Name: "confirm",
				}},
			}, {
				Name:        []string{"--force"},
				Description: `Forces rotating the targeted credentials`,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pg:credentials:url"},
			Description: `Show information on a database credential`,
			Args: []model.Arg{{
				Name:       "database",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-n", "--name"},
				Description: `Which credential to show (default credentials if not specified)`,
				Args: []model.Arg{{
					Name: "name",
				}},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pg:diagnose"},
			Description: `Run or view diagnostics report`,
			Args: []model.Arg{{
				Name:       "DATABASE|REPORT_ID",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"--json"},
				Description: `Format output as JSON`,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pg:info"},
			Description: `Show database information`,
			Args: []model.Arg{{
				Name:       "database",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pg:kill"},
			Description: `Kill a query`,
			Args: []model.Arg{{
				Name: "pid",
			}, {
				Name:       "database",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-f", "--force"},
				Description: ``,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pg:killall"},
			Description: `Terminates all connections for all credentials`,
			Args: []model.Arg{{
				Name:       "database",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pg:links"},
			Description: `Lists all databases and information on link`,
			Args: []model.Arg{{
				Name:       "database",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pg:links:create"},
			Description: `Create a link between data stores`,
			Args: []model.Arg{{
				Name: "remote",
			}, {
				Name: "database",
			}},
			Options: []model.Option{{
				Name:        []string{"--as"},
				Description: `Name of link to create`,
				Args: []model.Arg{{
					Name: "as",
				}},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pg:links:destroy"},
			Description: `Destroys a link between data stores`,
			Args: []model.Arg{{
				Name: "database",
			}, {
				Name: "link",
			}},
			Options: []model.Option{{
				Name:        []string{"-c", "--confirm"},
				Description: ``,
				Args: []model.Arg{{
					Name: "confirm",
				}},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pg:locks"},
			Description: `Display queries with active locks`,
			Args: []model.Arg{{
				Name:       "database",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-t", "--truncate"},
				Description: `Truncates queries to 40 characters`,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pg:maintenance"},
			Description: `Show current maintenance information`,
			Args: []model.Arg{{
				Name:       "database",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pg:maintenance:run"},
			Description: `Start maintenance`,
			Args: []model.Arg{{
				Name:       "database",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-f", "--force"},
				Description: ``,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pg:maintenance:window"},
			Description: `Set weekly maintenance window`,
			Args: []model.Arg{{
				Name: "database",
			}, {
				Name: "window",
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pg:outliers"},
			Description: `Show 10 queries that have longest execution time in aggregate`,
			Args: []model.Arg{{
				Name:       "database",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"--reset"},
				Description: `Resets statistics gathered by pg_stat_statements`,
			}, {
				Name:        []string{"-t", "--truncate"},
				Description: `Truncate queries to 40 characters`,
			}, {
				Name:        []string{"-n", "--num"},
				Description: `The number of queries to display (default: 10)`,
				Args: []model.Arg{{
					Name: "num",
				}},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pg:promote"},
			Description: `Sets DATABASE as your DATABASE_URL`,
			Args: []model.Arg{{
				Name: "database",
			}},
			Options: []model.Option{{
				Name:        []string{"-f", "--force"},
				Description: ``,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pg:ps"},
			Description: `View active queries with execution time`,
			Args: []model.Arg{{
				Name:       "database",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-v", "--verbose"},
				Description: ``,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pg:psql"},
			Description: `Open a psql shell to the database`,
			Args: []model.Arg{{
				Name:       "database",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-c", "--command"},
				Description: `SQL command to run`,
				Args: []model.Arg{{
					Name: "command",
				}},
			}, {
				Name:        []string{"-f", "--file"},
				Description: `SQL file to run`,
				Args: []model.Arg{{
					Name: "file",
				}},
			}, {
				Name:        []string{"--credential"},
				Description: `Credential to use`,
				Args: []model.Arg{{
					Name: "credential",
				}},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pg:pull"},
			Description: `Pull Heroku database into local or remote database`,
			Args: []model.Arg{{
				Name: "source",
			}, {
				Name: "target",
			}},
			Options: []model.Option{{
				Name:        []string{"--exclude-table-data"},
				Description: `Tables for which data should be excluded (use ';' to split multiple names)`,
				Args: []model.Arg{{
					Name: "exclude-table-data",
				}},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pg:push"},
			Description: `Push local or remote into Heroku database`,
			Args: []model.Arg{{
				Name: "source",
			}, {
				Name: "target",
			}},
			Options: []model.Option{{
				Name:        []string{"--exclude-table-data"},
				Description: `Tables for which data should be excluded (use ';' to split multiple names)`,
				Args: []model.Arg{{
					Name: "exclude-table-data",
				}},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pg:reset"},
			Description: `Delete all data in DATABASE`,
			Args: []model.Arg{{
				Name:       "database",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-c", "--confirm"},
				Description: ``,
				Args: []model.Arg{{
					Name: "confirm",
				}},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pg:settings"},
			Description: `Show your current database settings`,
			Args: []model.Arg{{
				Name:       "database",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pg:settings:log-lock-waits"},
			Description: `Controls whether a log message is produced when a session waits longer than the deadlock_timeout to acquire a lock. deadlock_timeout is set to 1 second`,
			Args: []model.Arg{{
				Name:       "value",
				IsOptional: true,
			}, {
				Name:       "database",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pg:settings:log-min-duration-statement"},
			Description: `The duration of each completed statement will be logged if the statement completes after the time specified by VALUE`,
			Args: []model.Arg{{
				Name:       "value",
				IsOptional: true,
			}, {
				Name:       "database",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pg:settings:log-statement"},
			Description: `Log_statement controls which SQL statements are logged`,
			Args: []model.Arg{{
				Name:       "value",
				IsOptional: true,
			}, {
				Name:       "database",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pg:unfollow"},
			Description: `Stop a replica from following and make it a writeable database`,
			Args: []model.Arg{{
				Name: "database",
			}},
			Options: []model.Option{{
				Name:        []string{"-c", "--confirm"},
				Description: ``,
				Args: []model.Arg{{
					Name: "confirm",
				}},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pg:upgrade"},
			Description: `Unfollow a database and upgrade it to the latest stable PostgreSQL version`,
			Args: []model.Arg{{
				Name:       "database",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-c", "--confirm"},
				Description: ``,
				Args: []model.Arg{{
					Name: "confirm",
				}},
			}, {
				Name:        []string{"-v", "--version"},
				Description: `PostgreSQL version to upgrade to`,
				Args: []model.Arg{{
					Name: "version",
				}},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pg:vacuum-stats"},
			Description: `Show dead rows and whether an automatic vacuum is expected to be triggered`,
			Args: []model.Arg{{
				Name:       "database",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"pg:wait"},
			Description: `Blocks until database is available`,
			Args: []model.Arg{{
				Name:       "database",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"--wait-interval"},
				Description: `How frequently to poll in seconds (to avoid rate limiting)`,
				Args: []model.Arg{{
					Name: "wait-interval",
				}},
			}, {
				Name:        []string{"--no-notify"},
				Description: `Do not show OS notification`,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"psql"},
			Description: `Open a psql shell to the database`,
			Args: []model.Arg{{
				Name:       "database",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-c", "--command"},
				Description: `SQL command to run`,
				Args: []model.Arg{{
					Name: "command",
				}},
			}, {
				Name:        []string{"-f", "--file"},
				Description: `SQL file to run`,
				Args: []model.Arg{{
					Name: "file",
				}},
			}, {
				Name:        []string{"--credential"},
				Description: `Credential to use`,
				Args: []model.Arg{{
					Name: "credential",
				}},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `Git remote of app to use`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name: []string{"rake"},
			Args: []model.Arg{{
				Name:       "rake",
				IsVariadic: true,
			}},
			Options: []model.Option{{
				Name:        []string{"--size"},
				Description: `Dyno size`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--exit-code"},
				Description: `Passthrough the exit code of the remote command`,
			}, {
				Name:        []string{"--env"},
				Description: `Environment variables to set (use ';' to split multiple vars)`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--no-tty"},
				Description: `Force the command to not run in a tty`,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"addons:add"},
			Description: `Create a new add-on resource`,
			Args: []model.Arg{{
				Name: "service:plan",
			}, {
				Name:       "addon",
				IsVariadic: true,
			}},
			Options: []model.Option{{
				Name:        []string{"--name"},
				Description: `Name for the add-on resource`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--as"},
				Description: `Name for the initial add-on attachment`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--confirm"},
				Description: `Overwrite existing config vars or existing add-on attachments`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--wait"},
				Description: `Watch add-on creation status and exit when complete`,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"addons:remove"},
			Description: `Permanently destroy an add-on resource`,
			Args: []model.Arg{{
				Name:       "addon",
				IsVariadic: true,
			}},
			Options: []model.Option{{
				Name:        []string{"--force"},
				Description: `Allow destruction even if connected to other apps`,
			}, {
				Name: []string{"--confirm"},
				Args: []model.Arg{{}},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:       "app",
					Generator:  nil, // TODO: port over generator
					IsOptional: true,
				}},
			}},
		}, {
			Name:        []string{"create"},
			Description: `Creates a new app`,
			Args: []model.Arg{{
				Name:      "app",
				Generator: nil, // TODO: port over generator
			}},
			Options: []model.Option{{
				Name: []string{"--app"},
				Args: []model.Arg{{}},
			}, {
				Name:        []string{"--addons"},
				Description: `Comma-delimited list of addons to install`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--buildpack"},
				Description: `Buildpack url to use for this app`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--manifest"},
				Description: `Use heroku.yml settings for this app`,
			}, {
				Name:        []string{"--no-remote"},
				Description: `Do not create a git remote`,
			}, {
				Name:        []string{"--remote"},
				Description: `The git remote to create, default "heroku"`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--stack"},
				Description: `The stack to create the app on`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--space"},
				Description: `The private space to create the app in`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--region"},
				Description: `Specify region for the app to run in`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--ssh-git"},
				Description: `Use SSH git protocol for local git remote`,
			}, {
				Name:        []string{"--internal-routing"},
				Description: `Private space-only. create as an Internal Web App that is only routable in the local network`,
			}, {
				Name: []string{"--features"},
				Args: []model.Arg{{}},
			}, {
				Name: []string{"--kernel"},
				Args: []model.Arg{{}},
			}, {
				Name: []string{"--locked"},
			}, {
				Name:        []string{"--json"},
				Description: `Output in json format`,
			}, {
				Name:        []string{"--team"},
				Description: `Team to use`,
				Args:        []model.Arg{{}},
			}},
		}, {
			Name:        []string{"destroy"},
			Description: `Permanently destroy an app`,
			Args: []model.Arg{{
				Name:      "app",
				Generator: nil, // TODO: port over generator
			}},
			Options: []model.Option{{
				Name: []string{"--confirm"},
				Args: []model.Arg{{}},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:       "app",
					Generator:  nil, // TODO: port over generator
					IsOptional: true,
				}},
			}},
		}, {
			Name:        []string{"apps:delete"},
			Description: `Permanently destroy an app`,
			Args: []model.Arg{{
				Name:      "app",
				Generator: nil, // TODO: port over generator
			}},
			Options: []model.Option{{
				Name: []string{"--confirm"},
				Args: []model.Arg{{}},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:       "app",
					Generator:  nil, // TODO: port over generator
					IsOptional: true,
				}},
			}},
		}, {
			Name:        []string{"list"},
			Description: `List your apps`,
			Options: []model.Option{{
				Name:        []string{"--all"},
				Description: `Include apps in all teams`,
			}, {
				Name:        []string{"--json"},
				Description: `Output in json format`,
			}, {
				Name:        []string{"--space"},
				Description: `Filter by space`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--personal"},
				Description: `List apps in personal account when a default team is set`,
			}, {
				Name:        []string{"--internal-routing"},
				Description: `Filter to Internal Web Apps`,
			}, {
				Name:        []string{"--team"},
				Description: `Team to use`,
				Args:        []model.Arg{{}},
			}},
		}, {
			Name:        []string{"apps:list"},
			Description: `List your apps`,
			Options: []model.Option{{
				Name:        []string{"--all"},
				Description: `Include apps in all teams`,
			}, {
				Name:        []string{"--json"},
				Description: `Output in json format`,
			}, {
				Name:        []string{"--space"},
				Description: `Filter by space`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--personal"},
				Description: `List apps in personal account when a default team is set`,
			}, {
				Name:        []string{"--internal-routing"},
				Description: `Filter to Internal Web Apps`,
			}, {
				Name:        []string{"--team"},
				Description: `Team to use`,
				Args:        []model.Arg{{}},
			}},
		}, {
			Name:        []string{"info"},
			Description: `Show detailed app information`,
			Args: []model.Arg{{
				Name:      "app",
				Generator: nil, // TODO: port over generator
			}},
			Options: []model.Option{{
				Name:        []string{"--shell"},
				Description: `Output more shell friendly key/value pairs`,
			}, {
				Name: []string{"--extended"},
			}, {
				Name: []string{"--json"},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:       "app",
					Generator:  nil, // TODO: port over generator
					IsOptional: true,
				}},
			}},
		}, {
			Name:        []string{"open"},
			Description: `Open the app in a web browser`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "path",
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"rename"},
			Description: `Rename an app`,
			Args: []model.Arg{{
				Name: "newname",
			}},
			Options: []model.Option{{
				Name:        []string{"--ssh-git"},
				Description: `Use ssh git protocol instead of https`,
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"stack"},
			Description: `Show the list of available stacks`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"stack:set"},
			Description: `Set the stack of an app`,
			Args: []model.Arg{{
				Name: "stack",
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"config:add"},
			Description: `Set one or more config vars`,
			Args: []model.Arg{{
				Name:       "confi",
				IsVariadic: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"dashboard"},
			Description: `Display information about favorite apps`,
		}, {
			Name:        []string{"restart"},
			Description: `Restart app dynos`,
			Args: []model.Arg{{
				Name: "dyno",
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"scale"},
			Description: `Scale dyno quantity up or down`,
			Args: []model.Arg{{
				Name:       "scal",
				IsVariadic: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"stop"},
			Description: `Stop app dyno`,
			Args: []model.Arg{{
				Name: "dyno",
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"kill"},
			Description: `Stop app dyno`,
			Args: []model.Arg{{
				Name: "dyno",
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"resize"},
			Description: `Manage dyno sizes`,
			Args: []model.Arg{{
				Name:       "resiz",
				IsVariadic: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"dyno:type"},
			Description: `Manage dyno sizes`,
			Args: []model.Arg{{
				Name:       "dyn",
				IsVariadic: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"rollback"},
			Description: `Rollback to a previous release`,
			Args: []model.Arg{{
				Name: "release",
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"auth:disable"},
			Description: `Disables an experimental feature`,
			Args: []model.Arg{{
				Name:       "feature",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `The git remote to create, default "heroku"`,
				Args:        []model.Arg{{}},
			}, {
				Name: []string{"confirm"},
				Args: []model.Arg{{}},
			}},
		}, {
			Name:        []string{"certs:wait"},
			Description: `Waits for the certificate to be activated`,
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Show help for this command`,
			}},
		}, {
			Name:        []string{"git:credentials"},
			Description: `Internal command for git-credentials`,
			Args: []model.Arg{{
				Name: "command",
			}},
		}, {
			Name: []string{"sharing:add"},
			Args: []model.Arg{{
				Name:       "sharin",
				IsVariadic: true,
			}},
		}, {
			Name: []string{"sharing:access"},
			Args: []model.Arg{{
				Name:       "sharin",
				IsVariadic: true,
			}},
		}, {
			Name: []string{"sharing:remove"},
			Args: []model.Arg{{
				Name:       "sharin",
				IsVariadic: true,
			}},
		}, {
			Name:        []string{"join:null"},
			Description: `Add yourself to a team app`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"leave:null"},
			Description: `Remove yourself from a team app`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name: []string{"sharing:transfer"},
			Args: []model.Arg{{
				Name:       "sharin",
				IsVariadic: true,
			}},
		}, {
			Name:        []string{"unlock:null"},
			Description: `Unlock an app so any team member can join`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name: []string{"orgs:default"},
		}, {
			Name:        []string{"pg:backups:public-url"},
			Description: `Get secret but publicly accessible URL of a backup`,
			Args: []model.Arg{{
				Name: "backup_id",
			}},
			Options: []model.Option{{
				Name: []string{"--quiet"},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"pg:backups:publicurl"},
			Description: `Get secret but publicly accessible URL of a backup`,
			Args: []model.Arg{{
				Name: "backup_id",
			}},
			Options: []model.Option{{
				Name: []string{"--quiet"},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"pg:repoint"},
			Description: `Changes which leader a follower is following`,
			Args: []model.Arg{{
				Name: "database",
			}},
			Options: []model.Option{{
				Name: []string{"--confirm"},
				Args: []model.Arg{{}},
			}, {
				Name:        []string{"--follow"},
				Description: `Leader database to follow`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"pg:settings:log-connections"},
			Description: `Controls whether a log message is produced when a login attempt is made. Default is true`,
			Args: []model.Arg{{
				Name: "value",
			}, {
				Name: "database",
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"pg:vacuum_stats"},
			Description: `Show dead rows and whether an automatic vacuum is expected to be triggered`,
			Args: []model.Arg{{
				Name: "database",
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"pipelines:disable"},
			Description: `Disable review apps and/or settings on an existing pipeline`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `The git remote to create, default "heroku"`,
				Args:        []model.Arg{{}},
			}, {
				Name: []string{"pipeline"},
				Args: []model.Arg{{}},
			}, {
				Name:        []string{"autodeploy"},
				Description: `Disable autodeployments`,
			}, {
				Name:        []string{"autodestroy"},
				Description: `Disable automatically destroying review apps`,
			}},
		}, {
			Name:        []string{"pipelines:enable"},
			Description: `Enable review apps and/or settings on an existing pipeline`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `The git remote to create, default "heroku"`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-p", "--pipeline"},
				Description: `Name of pipeline`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"autodeploy"},
				Description: `Autodeploy the review app`,
			}, {
				Name:        []string{"autodestroy"},
				Description: `Autodestroy the review app`,
			}},
		}, {
			Name:        []string{"ps:disable"},
			Description: `Disable web dyno autoscaling`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `The git remote to create, default "heroku"`,
				Args:        []model.Arg{{}},
			}},
		}, {
			Name:        []string{"ps:enable"},
			Description: `Enable web dyno autoscaling`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `The git remote to create, default "heroku"`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"min"},
				Description: `Minimum number of dynos`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"max"},
				Description: `Maximum number of dynos`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"p95"},
				Description: `Desired p95 response time`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"notifications"},
				Description: `Receive email notifications when the max dyno limit is reached`,
			}},
		}, {
			Name:        []string{"ps:regions"},
			Description: `List available regions for deployment`,
			Options: []model.Option{{
				Name:        []string{"json"},
				Description: `Output in json format`,
			}, {
				Name:        []string{"private"},
				Description: `Show regions for private spaces`,
			}, {
				Name:        []string{"common"},
				Description: `Show regions for common runtime`,
			}},
		}, {
			Name:        []string{"run:console"},
			Description: ``,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `The git remote to create, default "heroku"`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-s", "--size"},
				Description: `Dyno size`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-e", "--env"},
				Description: `Environment variables to set (use ';' to split multiple vars)`,
				Args:        []model.Arg{{}},
			}},
		}, {
			Name:        []string{"run:logs"},
			Description: ``,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `The git remote to create, default "heroku"`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-n", "--num"},
				Description: `Number of lines to display`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-p", "--ps"},
				Description: `Hidden alias for dyno`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-d", "--dyno"},
				Description: `Only show output from this dyno type (such as "web" or "worker")`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-s", "--source"},
				Description: `Only show output from this source (such as "app" or "heroku")`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-t", "--tail"},
				Description: `Continually stream logs`,
			}},
		}, {
			Name:        []string{"run:rake"},
			Description: ``,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `The git remote to create, default "heroku"`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-s", "--size"},
				Description: `Dyno size`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-e", "--env"},
				Description: `Environment variables to set (use ';' to split multiple vars)`,
				Args:        []model.Arg{{}},
			}},
		}, {
			Name:        []string{"run:inside"},
			Description: `Run a one-off process inside an existing heroku dyno`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-r", "--remote"},
				Description: `The git remote to create, default "heroku"`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-e", "--env"},
				Description: `Environment variables to set (use ';' to split multiple vars)`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"listen"},
				Description: `Listen on a local port`,
			}},
		}, {
			Name: []string{"console"},
			Options: []model.Option{{
				Name:        []string{"--size"},
				Description: `Dyno size`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--env"},
				Description: `Environment variables to set (use ';' to split multiple vars)`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-a", "--app"},
				Description: `App to run command against`,
				Args: []model.Arg{{
					Name:      "app",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"spaces:hosts"},
			Description: `List dedicated hosts for a space`,
			Args: []model.Arg{{
				Name: "space",
			}},
			Options: []model.Option{{
				Name:        []string{"--space"},
				Description: `Space to get host list from`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--json"},
				Description: `Output in json format`,
			}},
		}},
	}
}
