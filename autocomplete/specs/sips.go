// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.
//
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

package specs

import (
	"github.com/microsoft/clac/autocomplete/model"
)

func init() {
	Specs["sips"] = model.Subcommand{
		Name:        []string{"sips"},
		Description: `Scriptable image processing system`,
		Args: []model.Arg{{
			Templates: []model.Template{model.TemplateFilepaths},
			Name:      "file",
		}},
		Options: []model.Option{{
			Name:        []string{"-g", "--getProperty"},
			Description: `Output the property value for key to stdout`,
			Args: []model.Arg{{
				Name:        "key",
				Suggestions: []model.Suggestion{{Name: []string{`all`}}, {Name: []string{`allxml`}}, {Name: []string{`dpiHeight`}}, {Name: []string{`dpiWidth`}}, {Name: []string{`pixelHeight`}}, {Name: []string{`pixelWidth`}}, {Name: []string{`typeIdentifier`}}, {Name: []string{`format`}}, {Name: []string{`formatOptions`}}, {Name: []string{`space`}}, {Name: []string{`samplesPerPixel`}}, {Name: []string{`bitsPerSample`}}, {Name: []string{`creation`}}, {Name: []string{`make`}}, {Name: []string{`model`}}, {Name: []string{`software`}}, {Name: []string{`description`}}, {Name: []string{`copyright`}}, {Name: []string{`artist`}}, {Name: []string{`profile`}}, {Name: []string{`hasAlpha`}}, {Name: []string{`size`}}, {Name: []string{`cmm`}}, {Name: []string{`version`}}, {Name: []string{`class`}}, {Name: []string{`pcs`}}, {Name: []string{`platform`}}, {Name: []string{`quality`}}, {Name: []string{`deviceManufacturer`}}, {Name: []string{`deviceModel`}}, {Name: []string{`deviceAttributes0`}}, {Name: []string{`deviceAttributes1`}}, {Name: []string{`renderingIntent`}}, {Name: []string{`creator`}}, {Name: []string{`md5`}}},
			}},
		}, {
			Name:        []string{"-s", "--setProperty"},
			Description: `Set a property value for key to value`,
			Args: []model.Arg{{
				Name:        "key",
				Suggestions: []model.Suggestion{{Name: []string{`all`}}, {Name: []string{`allxml`}}, {Name: []string{`dpiHeight`}}, {Name: []string{`dpiWidth`}}, {Name: []string{`pixelHeight`}}, {Name: []string{`pixelWidth`}}, {Name: []string{`typeIdentifier`}}, {Name: []string{`format`}}, {Name: []string{`formatOptions`}}, {Name: []string{`space`}}, {Name: []string{`samplesPerPixel`}}, {Name: []string{`bitsPerSample`}}, {Name: []string{`creation`}}, {Name: []string{`make`}}, {Name: []string{`model`}}, {Name: []string{`software`}}, {Name: []string{`description`}}, {Name: []string{`copyright`}}, {Name: []string{`artist`}}, {Name: []string{`profile`}}, {Name: []string{`hasAlpha`}}, {Name: []string{`size`}}, {Name: []string{`cmm`}}, {Name: []string{`version`}}, {Name: []string{`class`}}, {Name: []string{`pcs`}}, {Name: []string{`platform`}}, {Name: []string{`quality`}}, {Name: []string{`deviceManufacturer`}}, {Name: []string{`deviceModel`}}, {Name: []string{`deviceAttributes0`}}, {Name: []string{`deviceAttributes1`}}, {Name: []string{`renderingIntent`}}, {Name: []string{`creator`}}, {Name: []string{`md5`}}},
			}, {
				Name: "value",
			}},
		}, {
			Name:        []string{"-d", "--deleteProperty"},
			Description: `Remove a property value for key`,
			Args: []model.Arg{{
				Name:        "key",
				Suggestions: []model.Suggestion{{Name: []string{`all`}}, {Name: []string{`allxml`}}, {Name: []string{`dpiHeight`}}, {Name: []string{`dpiWidth`}}, {Name: []string{`pixelHeight`}}, {Name: []string{`pixelWidth`}}, {Name: []string{`typeIdentifier`}}, {Name: []string{`format`}}, {Name: []string{`formatOptions`}}, {Name: []string{`space`}}, {Name: []string{`samplesPerPixel`}}, {Name: []string{`bitsPerSample`}}, {Name: []string{`creation`}}, {Name: []string{`make`}}, {Name: []string{`model`}}, {Name: []string{`software`}}, {Name: []string{`description`}}, {Name: []string{`copyright`}}, {Name: []string{`artist`}}, {Name: []string{`profile`}}, {Name: []string{`hasAlpha`}}, {Name: []string{`size`}}, {Name: []string{`cmm`}}, {Name: []string{`version`}}, {Name: []string{`class`}}, {Name: []string{`pcs`}}, {Name: []string{`platform`}}, {Name: []string{`quality`}}, {Name: []string{`deviceManufacturer`}}, {Name: []string{`deviceModel`}}, {Name: []string{`deviceAttributes0`}}, {Name: []string{`deviceAttributes1`}}, {Name: []string{`renderingIntent`}}, {Name: []string{`creator`}}, {Name: []string{`md5`}}},
			}},
		}, {
			Name:        []string{"-X", "--extractTag"},
			Description: `Extract a profile tag element to tagFile`,
			Args: []model.Arg{{
				Name: "tag",
			}, {
				Name: "tagFile",
			}},
		}, {
			Name:        []string{"--verify"},
			Description: `Verify any profile problems and log output to stdout`,
		}, {
			Name:        []string{"-x", "--extractProfile"},
			Description: `Get the embedded profile from image and write it to profile`,
			Args: []model.Arg{{
				Name: "profile",
			}},
		}, {
			Name:        []string{"--deleteTag"},
			Description: `Remove the tag element from a profile`,
			Args: []model.Arg{{
				Name: "tag",
			}},
		}, {
			Name:        []string{"--copyTag"},
			Description: `Copy the srcTag element of a profile to dstTag`,
			Args: []model.Arg{{
				Name: "srcTag",
			}, {
				Name: "dstTag",
			}},
		}, {
			Name:        []string{"--loadTag"},
			Description: `Set the tag element of a profile to the contents of tagFile`,
			Args: []model.Arg{{
				Name: "tag",
			}, {
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "tagFile",
			}},
		}, {
			Name:        []string{"--repair"},
			Description: `Repair any profile problems and log output to stdout`,
		}, {
			Name:        []string{"-e", "--embedProfile"},
			Description: `Embed profile in image`,
			Args: []model.Arg{{
				Name: "profile",
			}},
		}, {
			Name:        []string{"-E", "--embedProfileIfNone"},
			Description: `Embed profile in image only if image doesn't have a profile`,
			Args: []model.Arg{{
				Name: "profile",
			}},
		}, {
			Name:        []string{"-m", "--matchTo"},
			Description: `Color match image to profile`,
			Args: []model.Arg{{
				Name: "profile",
			}},
		}, {
			Name:        []string{"-M", "--matchToWithIntent"},
			Description: `Color match image to profile with rendering intent perceptual | relative | saturation | absolute`,
			Args: []model.Arg{{
				Name: "profile",
			}, {
				Name:        "intent",
				Suggestions: []model.Suggestion{{Name: []string{`perceptual`}}, {Name: []string{`relative`}}, {Name: []string{`saturation`}}, {Name: []string{`absolute`}}},
			}},
		}, {
			Name:        []string{"--deleteColorManagementProperties"},
			Description: `Delete color management properties in TIFF, PNG, and EXIF dictionaries`,
		}, {
			Name: []string{"-r", "--rotate"},
			Args: []model.Arg{{
				Name: "degreesCW",
			}},
		}, {
			Name: []string{"-f", "--flip"},
			Args: []model.Arg{{
				Name:        "axis",
				Suggestions: []model.Suggestion{{Name: []string{`horizontal`}}, {Name: []string{`vertical`}}},
			}},
		}, {
			Name:        []string{"-c", "--cropToHeightWidth"},
			Description: `Crop image to fit specified size`,
			Args: []model.Arg{{
				Name: "pixelsH",
			}, {
				Name: "pixelsW",
			}},
		}, {
			Name:        []string{"-p", "--padToHeightWidth"},
			Description: `Pad image with pixels to fit specified size`,
			Args: []model.Arg{{
				Name: "pixelsH",
			}, {
				Name: "pixelsW",
			}},
		}, {
			Name:        []string{"-padColor"},
			Description: `Use this color when padding.  White=FFFFFF, Red=FF0000, Default=Black=000000`,
			Args: []model.Arg{{
				Name: "hexcolor",
			}},
		}, {
			Name:        []string{"-z", "--resampleHeightWidth"},
			Description: `Resample image at specified size. Image apsect ratio may be altered`,
			Args: []model.Arg{{
				Name: "pixelsH",
			}, {
				Name: "pixelsW",
			}},
		}, {
			Name:        []string{"--resampleWidth"},
			Description: `Resample image to specified width`,
			Args: []model.Arg{{
				Name: "pixelsW",
			}},
		}, {
			Name:        []string{"--resampleHeight"},
			Description: `Resample image to specified height`,
			Args: []model.Arg{{
				Name: "pixelsH",
			}},
		}, {
			Name:        []string{"-Z", "--resampleHeightWidthMax"},
			Description: `Resample image so height and width aren't greater than specified size`,
			Args: []model.Arg{{
				Name: "pixelsWH",
			}},
		}, {
			Name:        []string{"-i", "--addIcon"},
			Description: `Add a Finder icon to image file`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "icon",
			}},
		}, {
			Name:        []string{"--debug"},
			Description: `Enable debugging output`,
		}, {
			Name:        []string{"-h", "--help"},
			Description: `Show help`,
		}, {
			Name:        []string{"-H", "--helpProperties"},
			Description: `Show help for properties`,
		}, {
			Name:        []string{"--man"},
			Description: `Generate man pages`,
		}, {
			Name:        []string{"-v", "--version"},
			Description: `Show the version`,
		}, {
			Name:        []string{"--formats"},
			Description: `Show the read/write formats`,
		}},
	}
}
