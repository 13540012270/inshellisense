// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.
//
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

package specs

import (
	"github.com/microsoft/clac/autocomplete/model"
)

func init() {
	Specs["dd"] = model.Subcommand{
		Name:        []string{"dd"},
		Description: `Convert and copy a file`,
		Options: []model.Option{{
			Name:        []string{"bs"},
			Description: `Set input and output block size`,
			Args: []model.Arg{{
				Name: "size",
			}},
		}, {
			Name:        []string{"cbs"},
			Description: `Set the conversion record size`,
			Args: []model.Arg{{
				Name: "size",
			}},
		}, {
			Name:        []string{"count"},
			Description: `Copy this many input blocks`,
			Args: []model.Arg{{
				Name: "number",
			}},
		}, {
			Name:        []string{"files"},
			Description: `Copy this many files before terminating`,
			Args: []model.Arg{{
				Name: "number",
			}},
		}, {
			Name:        []string{"ibs"},
			Description: `Set the input block size`,
			Args: []model.Arg{{
				Name: "size",
			}},
		}, {
			Name:        []string{"if"},
			Description: `Read an input file instead of stdin`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "file",
			}},
		}, {
			Name:        []string{"iseek"},
			Description: `Seek this many blocks on the input file`,
			Args: []model.Arg{{
				Name: "blocks",
			}},
		}, {
			Name:        []string{"obs"},
			Description: `Set the output block size`,
			Args: []model.Arg{{
				Name: "size",
			}},
		}, {
			Name:        []string{"of"},
			Description: `Write to an output file instead of stdout`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "file",
			}},
		}, {
			Name:        []string{"oseek"},
			Description: `Seek this many blocks on the output file`,
			Args: []model.Arg{{
				Name: "blocks",
			}},
		}, {
			Name:        []string{"seek"},
			Description: `Seek this many blocks from the beginning of the output before copying`,
			Args: []model.Arg{{
				Name: "blocks",
			}},
		}, {
			Name:        []string{"skip"},
			Description: `Skip this many blocks from the beginning of the input before copying`,
			Args: []model.Arg{{
				Name: "blocks",
			}},
		}, {
			Name:        []string{"conv"},
			Description: `Convert input data (comma-separated list)`,
			Args: []model.Arg{{
				Name:      "value",
				Generator: nil, // TODO: port over generator
			}},
		}},
	}
}
