// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["xargs"] = model.Subcommand{
		Name:        []string{"xargs"},
		Description: `Execute a command with whitespace-delimited strings (from stdin) as arguments`,
		Args: []model.Arg{{
			Name:        "utility",
			Description: `Run this program for each line of stdin (default: echo)`,
			IsOptional:  true,
			IsCommand:   true,
		}},
		Options: []model.Option{{
			Name:        []string{"-0"},
			Description: `Use NUL (0x00) as a separator, instead of whitespace`,
		}, {
			Name:        []string{"-E"},
			Description: `Use this string as a logical EOF marker`,
			Args: []model.Arg{{
				Name:        "eof-str",
				Description: `The string to use that marks EOF`,
			}},
		}, {
			Name:        []string{"-I"},
			Description: `Replace occurrences of this string with the input`,
			Args: []model.Arg{{
				Name:        "replacement-str",
				Description: `The string to replace`,
			}},
		}, {
			Name:        []string{"-J"},
			Description: `Replace an argument exactly equal to this string with the input`,
			Args: []model.Arg{{
				Name:        "replacement-str",
				Description: `The string to replace`,
			}},
		}, {
			Name:        []string{"-L"},
			Description: `Run the program each time this many lines of input are read`,
			Args: []model.Arg{{
				Name: "number",
			}},
			ExclusiveOn: []string{"-n"},
		}, {
			Name:        []string{"-n"},
			Description: `The maximum number of arguments that can be taken from stdin on each run`,
			Args: []model.Arg{{
				Name: "number",
			}},
			ExclusiveOn: []string{"-L"},
		}, {
			Name:        []string{"-o"},
			Description: `Reopen stdin as /dev/tty (useful for running interactive applications)`,
		}, {
			Name:        []string{"-P"},
			Description: `Run up to this many commands in parallel (as many as possible if 0)`,
			Args: []model.Arg{{
				Name: "max-procs",
			}},
		}, {
			Name:        []string{"-p"},
			Description: `Prompt to run each command`,
		}, {
			Name:        []string{"-r"},
			Description: `Run the command once if there's no input (compatible with GNU xargs)`,
		}, {
			Name:        []string{"-R"},
			Description: `Specify the maximum number of occurrences that -I will replace`,
			Args: []model.Arg{{
				Name: "number",
			}},
		}, {
			Name:        []string{"-S"},
			Description: `Specify the maximum size in bytes that -I can use for replacements (default: 255)`,
			Args: []model.Arg{{
				Name: "replacement-size",
			}},
		}, {
			Name:        []string{"-s"},
			Description: `Maximum number of bytes that can be provided to the program (default: 4096)`,
			Args: []model.Arg{{
				Name: "max-args-size",
			}},
		}, {
			Name:        []string{"-t"},
			Description: `Echo the command to stderr before it's executed`,
		}, {
			Name:        []string{"-x"},
			Description: `Terminal if the arguments will not fit in the maximum line length`,
		}},
	}
}
