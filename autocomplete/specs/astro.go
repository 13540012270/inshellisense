// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["astro"] = model.Subcommand{
		Name:        []string{"astro"},
		Description: `CLI provided by Astro to develop, build, and preview your project from a terminal window`,
		Options: []model.Option{{
			Name:        []string{"--config"},
			Description: `Specify your config file`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "path",
			}},
			IsPersistent: true,
		}, {
			Name:        []string{"--root"},
			Description: `Specify your project root folder`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFolders},
				Name:      "path",
			}},
			IsPersistent: true,
		}, {
			Name:        []string{"--site"},
			Description: `Specify your project site`,
			Args: []model.Arg{{
				Name: "url",
			}},
			IsPersistent: true,
		}, {
			Name:        []string{"--base"},
			Description: `Specify your project base`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFolders},
				Name:      "pathname",
			}},
			IsPersistent: true,
		}, {
			Name:         []string{"--verbose"},
			Description:  `Enable verbose logging`,
			IsPersistent: true,
		}, {
			Name:         []string{"--silent"},
			Description:  `Disable all logging`,
			IsPersistent: true,
		}, {
			Name:         []string{"--version"},
			Description:  `Show the version number and exit`,
			IsPersistent: true,
		}, {
			Name:         []string{"--help"},
			Description:  `Show help for astro`,
			IsPersistent: true,
		}},
		Subcommands: []model.Subcommand{{
			Name:        []string{"add"},
			Description: `Add an integration`,
			Args: []model.Arg{{
				Name: "integration",
			}},
			Options: []model.Option{{
				Name:        []string{"--yes"},
				Description: `Accept all prompts`,
			}},
		}, {
			Name:        []string{"build"},
			Description: `Build your project and write it to disk`,
			Options: []model.Option{{
				Name:        []string{"--drafts"},
				Description: `Include Markdown draft pages in the build`,
			}},
		}, {
			Name:        []string{"check"},
			Description: `Check your project for errors`,
			Options: []model.Option{{
				Name:        []string{"--watch"},
				Description: `Watch Astro files for changes and re-run checks`,
			}},
		}, {
			Name:        []string{"dev"},
			Description: `Starts the development server`,
			Options: []model.Option{{
				Name:        []string{"--port"},
				Description: `Specify a port to listen on`,
				Args: []model.Arg{{
					Name: "port",
				}},
			}, {
				Name:        []string{"--host"},
				Description: `Listen on all addresses, including LAN and public addresses`,
				Args: []model.Arg{{
					Name:       "custom address",
					IsOptional: true,
				}},
			}, {
				Name:        []string{"--open"},
				Description: `Automatically open the app in the browser on server start`,
			}},
		}, {
			Name:        []string{"docs"},
			Description: `Open documentation in your web browser`,
		}, {
			Name:        []string{"preview"},
			Description: `Preview your build locally`,
			Options: []model.Option{{
				Name:        []string{"--open"},
				Description: `Automatically open the app in the browser on server start`,
			}},
		}, {
			Name:        []string{"sync"},
			Description: `Generate content collection types`,
		}, {
			Name:        []string{"telemetry"},
			Description: `Configure telemetry settings`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"enable"},
				Description: `Enable anonymous data collection`,
			}, {
				Name:        []string{"disable"},
				Description: `Disable anonymous data collection`,
			}, {
				Name:        []string{"reset"},
				Description: `Reset anonymous data collection settings`,
			}},
		}},
	}
}
