// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["tangram"] = model.Subcommand{
		Name:        []string{"tangram"},
		Description: ``,
		Options: []model.Option{{
			Name:        []string{"--help", "-h"},
			Description: `Print help information`,
		}, {
			Name:        []string{"--version", "-v"},
			Description: `Print version information`,
		}},
		Subcommands: []model.Subcommand{{
			Name:        []string{"app"},
			Description: `Run the app`,
			Options: []model.Option{{
				Name:        []string{"-c", "--config"},
				Description: `The path to a config file`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "CONFIG",
				}},
			}},
		}, {
			Name:        []string{"migrate"},
			Description: `Migrate your app database`,
			Options: []model.Option{{
				Name: []string{"--database-url"},
				Args: []model.Arg{{
					Name: "DATABASE_URL",
				}},
			}},
		}, {
			Name:        []string{"predict"},
			Description: `Make predictions with a model`,
			Options: []model.Option{{
				Name:        []string{"-f", "--file"},
				Description: `The path to read examples from, defaults to stdin`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "FILE",
				}},
			}, {
				Name:        []string{"-m", "--model"},
				Description: `The path to the model to make predictions with`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "MODEL",
				}},
			}, {
				Name:        []string{"-o", "--output"},
				Description: `The path to write the predictions to, defaults to stdout`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "OUTPUT",
				}},
			}, {
				Name:        []string{"-p", "--probabilities"},
				Description: `Output probabilities instead of class labels, only relevant for classifier models`,
				Args: []model.Arg{{
					Name: "PROBABILITIES",
				}},
			}},
		}, {
			Name:        []string{"train"},
			Description: `Train a model`,
			Options: []model.Option{{
				Name:        []string{"-c", "--config"},
				Description: `The path to a config file`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "CONFIG",
				}},
			}, {
				Name:        []string{"-f", "--file"},
				Description: `The path to your .csv file`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "FILE",
				}},
			}, {
				Name:        []string{"--file-test"},
				Description: `The path to your .csv file used for testing`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "FILE_TEST",
				}},
			}, {
				Name:        []string{"--file-train"},
				Description: `The path to your .csv file used for training`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "FILE_TRAIN",
				}},
			}, {
				Name:        []string{"-o", "--output"},
				Description: `The path to write the .tangram file to`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "OUTPUT",
				}},
			}, {
				Name:        []string{"-t", "--target"},
				Description: `The name of the column to predict`,
				Args: []model.Arg{{
					Name: "TARGET",
				}},
			}},
		}},
	}
}
