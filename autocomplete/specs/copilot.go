// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.
//
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

package specs

import (
	"github.com/microsoft/clac/autocomplete/model"
)

func init() {
	Specs["copilot"] = model.Subcommand{
		Name:        []string{"copilot"},
		Description: `üë©‚Äç‚úàÔ∏è Launch and manage containerized applications on AWS`,
		Options: []model.Option{{
			Name:        []string{"--help", "-h"},
			Description: `Help for command`,
		}},
		Subcommands: []model.Subcommand{{
			Name:        []string{"init"},
			Description: `Create a new ECS or App Runner application`,
			Options: []model.Option{{
				Name:        []string{"--app", "-a"},
				Description: `Name of the application`,
				Args: []model.Arg{{
					Name: "app",
				}},
			}, {
				Name:        []string{"--deploy"},
				Description: `Deploy your service or job to a "test" environment`,
			}, {
				Name:        []string{"--dockerfile", "-d"},
				Description: `Path to the Dockerfile`,
				Args: []model.Arg{{
					Name: "dockerfile",
				}},
				ExclusiveOn: []string{"--image", "-i"},
			}, {
				Name:        []string{"--image", "-i"},
				Description: `The location of an existing Docker image`,
				Args: []model.Arg{{
					Name: "image",
				}},
				ExclusiveOn: []string{"--dockerfile", "-d"},
			}, {
				Name:        []string{"--name", "-n"},
				Description: `Name of the service or job`,
				Args: []model.Arg{{
					Name: "name",
				}},
			}, {
				Name:        []string{"--port"},
				Description: `The port on which your service listens`,
				Args: []model.Arg{{
					Name: "port",
				}},
			}, {
				Name:        []string{"--retries"},
				Description: `Optional. The number of times to try restarting the job on a failure`,
				Args: []model.Arg{{
					Name: "retries",
				}},
			}, {
				Name:        []string{"--schedule"},
				Description: `The schedule on which to run this job.  Accepts cron expressions of the format (M H DoM M DoW) and schedule definition strings.  For example: "0 * * * *", "@daily", "@weekly", "@every 1h30m". AWS Schedule Expressions of the form "rate(10 minutes)" or "cron(0 12 L * ? 2021)" are also accepted`,
				Args: []model.Arg{{
					Name: "schedule",
				}},
			}, {
				Name:        []string{"--tag"},
				Description: `Optional. The container image tag`,
				Args: []model.Arg{{
					Name: "tag",
				}},
			}, {
				Name:        []string{"--timeout"},
				Description: `Optional. The total execution time for the task, including retries. Accepts valid Go duration strings. For example: "2h", "1h30m", "900s"`,
				Args: []model.Arg{{
					Name: "timeout",
				}},
			}, {
				Name:        []string{"--type", "-t"},
				Description: `Type of job or svc to create`,
				Args: []model.Arg{{
					Name:        "type",
					Suggestions: []model.Suggestion{{Name: []string{`Request-Driven Web Service`}}, {Name: []string{`Load Balanced Web Service`}}, {Name: []string{`Backend Service`}}, {Name: []string{`Worker Service`}}, {Name: []string{`Scheduled Job`}}},
				}},
			}, {
				Name:        []string{"--help", "-h"},
				Description: `Help for command`,
			}},
		}, {
			Name:        []string{"docs"},
			Description: `Open the copilot docs`,
			Options: []model.Option{{
				Name:        []string{"--help", "-h"},
				Description: `Help for command`,
			}},
		}, {
			Name:        []string{"app"},
			Description: `Commands for applications. Applications are a collection of services and environments`,
			Options: []model.Option{{
				Name:        []string{"--help", "-h"},
				Description: `Help for command`,
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"init"},
				Description: `Creates a new empty application`,
				Options: []model.Option{{
					Name:        []string{"--domain"},
					Description: `Optional. Your existing custom domain name`,
					Args: []model.Arg{{
						Name: "domain",
					}},
				}, {
					Name:        []string{"--resource-tags"},
					Description: `Optional. Labels with a key and value separated by commas. Allows you to categorize resources`,
					Args: []model.Arg{{
						Name: "resource-tags",
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
			}, {
				Name:        []string{"ls"},
				Description: `Lists all the applications in your account`,
				Options: []model.Option{{
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
			}, {
				Name:        []string{"show"},
				Description: `Shows info about an application`,
				Options: []model.Option{{
					Name:        []string{"--json"},
					Description: `Outputs in JSON format`,
				}, {
					Name:        []string{"--name", "-n"},
					Description: `Name of the application`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
			}, {
				Name:        []string{"delete"},
				Description: `Delete all resources associated with the application`,
				Options: []model.Option{{
					Name:        []string{"--name", "-n"},
					Description: `Name of the application`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--yes"},
					Description: `Skips confirmation prompt`,
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
			}, {
				Name:        []string{"upgrade"},
				Description: `Upgrades the template of an application to the latest version`,
				Options: []model.Option{{
					Name:        []string{"--name", "-n"},
					Description: `Name of the application`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
			}},
		}, {
			Name:        []string{"env"},
			Description: `Commands for environments. Environments are deployment stages shared between services`,
			Options: []model.Option{{
				Name:        []string{"--help", "-h"},
				Description: `Help for command`,
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"init"},
				Description: `Creates a new environment in your application`,
				Options: []model.Option{{
					Name:        []string{"--app", "-a"},
					Description: `Name of the application`,
					Args: []model.Arg{{
						Name:      "name",
						Generator: nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"--aws-access-key-id"},
					Description: `Optional. An AWS access key`,
					Args: []model.Arg{{
						Name: "aws-access-key-id",
					}},
				}, {
					Name:        []string{"--aws-secret-access-key"},
					Description: `Optional. An AWS secret access key`,
					Args: []model.Arg{{
						Name: "aws-secret-access-key",
					}},
				}, {
					Name:        []string{"--aws-session-token"},
					Description: `Optional. An AWS session token for temporary credentials`,
					Args: []model.Arg{{
						Name: "aws-session-token",
					}},
				}, {
					Name:        []string{"--default-config"},
					Description: `Optional. Skip prompting and use default environment configuration`,
				}, {
					Name:        []string{"--import-private-subnets"},
					Description: `Optional. Use existing private subnet IDs`,
					Args: []model.Arg{{
						Name: "import-private-subnets",
					}},
				}, {
					Name:        []string{"--import-public-subnets"},
					Description: `Optional. Use existing public subnet IDs`,
					Args: []model.Arg{{
						Name: "import-public-subnets",
					}},
				}, {
					Name:        []string{"--import-vpc-id"},
					Description: `Optional. Use an existing VPC ID`,
					Args: []model.Arg{{
						Name: "import-vpc-id",
					}},
				}, {
					Name:        []string{"--name", "-n"},
					Description: `Name of the environment`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--override-az-names"},
					Description: `Optional. Availability Zone names. (default 2 random AZs)`,
					Args: []model.Arg{{
						Name: "override-az-names",
					}},
				}, {
					Name:        []string{"--override-private-cidrs"},
					Description: `Optional. CIDR to use for private subnets. (default 10.0.2.0/24,10.0.3.0/24)`,
					Args: []model.Arg{{
						Name: "override-private-cidrs",
					}},
				}, {
					Name:        []string{"--override-public-cidrs"},
					Description: `Optional. CIDR to use for public subnets.  (default 10.0.0.0/24,10.0.1.0/24)`,
					Args: []model.Arg{{
						Name: "override-public-cidrs",
					}},
				}, {
					Name:        []string{"--override-vpc-cidr"},
					Description: `Optional. Global CIDR to use for VPC. (default 10.0.0.0/16)`,
					Args: []model.Arg{{
						Name: "override-vpc-cidr",
					}},
				}, {
					Name:        []string{"--prod"},
					Description: `If the environment contains production services`,
				}, {
					Name:        []string{"--profile"},
					Description: `Name of the profile`,
					Args: []model.Arg{{
						Name: "profile",
					}},
				}, {
					Name:        []string{"--region"},
					Description: `Optional. An AWS region where the environment will be created`,
					Args: []model.Arg{{
						Name: "region",
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
			}, {
				Name:        []string{"ls"},
				Description: `Lists all the environments in an application`,
				Options: []model.Option{{
					Name:        []string{"--app", "-a"},
					Description: `Name of the application`,
					Args: []model.Arg{{
						Name:      "name",
						Generator: nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"--json"},
					Description: `Outputs in JSON format`,
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
			}, {
				Name:        []string{"delete"},
				Description: `Deletes an environment from your application`,
				Options: []model.Option{{
					Name:        []string{"--app", "-a"},
					Description: `Name of the application`,
					Args: []model.Arg{{
						Name:      "name",
						Generator: nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"--name", "-n"},
					Description: `Name of the environment`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--yes"},
					Description: `Skips confirmation prompt`,
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
			}, {
				Name:        []string{"show"},
				Description: `Shows info about a deployed environment`,
				Options: []model.Option{{
					Name:        []string{"--app", "-a"},
					Description: `Name of the application`,
					Args: []model.Arg{{
						Name:      "name",
						Generator: nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"--json"},
					Description: `Outputs in JSON format`,
				}, {
					Name:        []string{"--name", "-n"},
					Description: `Name of the environment`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--resources"},
					Description: `Optional. Show the resources in your environment`,
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
			}},
		}, {
			Name:        []string{"svc"},
			Description: `Commands for services. Services are long-running ECS or App Runner services`,
			Options: []model.Option{{
				Name:        []string{"--help", "-h"},
				Description: `Help for command`,
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"init"},
				Description: `Creates a new service in an application`,
				Options: []model.Option{{
					Name:        []string{"--app", "-a"},
					Description: `Name of the application`,
					Args: []model.Arg{{
						Name:      "name",
						Generator: nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"--dockerfile", "-d"},
					Description: `Path to the Dockerfile`,
					Args: []model.Arg{{
						Name: "dockerfile",
					}},
					ExclusiveOn: []string{"--image", "-i"},
				}, {
					Name:        []string{"--image", "-i"},
					Description: `The location of an existing Docker image`,
					Args: []model.Arg{{
						Name: "image",
					}},
					ExclusiveOn: []string{"--dockerfile", "-d"},
				}, {
					Name:        []string{"--name", "-n"},
					Description: `Name of the service`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--no-subscribe"},
					Description: `Optional. Turn off selection for adding subscriptions for worker services`,
				}, {
					Name:        []string{"--port"},
					Description: `The port on which your service listens`,
					Args: []model.Arg{{
						Name: "port",
					}},
				}, {
					Name:        []string{"--subscribe-topics"},
					Description: `Optional. SNS Topics to subscribe to from other services in your application. Must be of format '<svcName>:<topicName>'`,
					Args: []model.Arg{{
						Name: "subscribe-topics",
					}},
				}, {
					Name:        []string{"--svc-type", "-t"},
					Description: `Type of service to create`,
					Args: []model.Arg{{
						Name:        "svc-type",
						Suggestions: []model.Suggestion{{Name: []string{`Request-Driven Web Service`}}, {Name: []string{`Load Balanced Web Service`}}, {Name: []string{`Backend Service`}}, {Name: []string{`Worker Service`}}},
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
			}, {
				Name:        []string{"ls"},
				Description: `Lists all the services in an application`,
				Options: []model.Option{{
					Name:        []string{"--app", "-a"},
					Description: `Name of the application`,
					Args: []model.Arg{{
						Name:      "name",
						Generator: nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"--json"},
					Description: `Outputs in JSON format`,
				}, {
					Name:        []string{"--local"},
					Description: `Only show services in the workspace`,
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
			}, {
				Name:        []string{"package"},
				Description: `Prints the AWS CloudFormation template of a service`,
				Options: []model.Option{{
					Name:        []string{"--app", "-a"},
					Description: `Name of the application`,
					Args: []model.Arg{{
						Name:      "name",
						Generator: nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"--name", "-n"},
					Description: `Name of the environment`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--name", "-n"},
					Description: `Name of the service`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--output-dir"},
					Description: `Optional. Writes the stack template and template configuration to a directory`,
					Args: []model.Arg{{
						Name: "output-dir",
					}},
				}, {
					Name:        []string{"--tag"},
					Description: `Optional. The container image tag`,
					Args: []model.Arg{{
						Name: "tag",
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
			}, {
				Name:        []string{"deploy"},
				Description: `Deploys a service to an environment`,
				Options: []model.Option{{
					Name:        []string{"--app", "-a"},
					Description: `Name of the application`,
					Args: []model.Arg{{
						Name:      "name",
						Generator: nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"--name", "-n"},
					Description: `Name of the environment`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--force"},
					Description: `Optional. Force a new service deployment using the existing image`,
				}, {
					Name:        []string{"--name", "-n"},
					Description: `Name of the service`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--resource-tags"},
					Description: `Optional. Labels with a key and value separated by commas. Allows you to categorize resources`,
					Args: []model.Arg{{
						Name: "resource-tags",
					}},
				}, {
					Name:        []string{"--tag"},
					Description: `Optional. The container image tag`,
					Args: []model.Arg{{
						Name: "tag",
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
			}, {
				Name:        []string{"delete"},
				Description: `Deletes a service from an application`,
				Options: []model.Option{{
					Name:        []string{"--app", "-a"},
					Description: `Name of the application`,
					Args: []model.Arg{{
						Name:      "name",
						Generator: nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"--name", "-n"},
					Description: `Name of the environment`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--name", "-n"},
					Description: `Name of the service`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--yes"},
					Description: `Skips confirmation prompt`,
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
			}, {
				Name:        []string{"show"},
				Description: `Shows info about a deployed service per environment`,
				Options: []model.Option{{
					Name:        []string{"--app", "-a"},
					Description: `Name of the application`,
					Args: []model.Arg{{
						Name:      "name",
						Generator: nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"--json"},
					Description: `Outputs in JSON format`,
				}, {
					Name:        []string{"--name", "-n"},
					Description: `Name of the service`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--resources"},
					Description: `Optional. Show the resources in your service`,
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
			}, {
				Name:        []string{"status"},
				Description: `Shows status of a deployed service`,
				Options: []model.Option{{
					Name:        []string{"--app", "-a"},
					Description: `Name of the application`,
					Args: []model.Arg{{
						Name:      "name",
						Generator: nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"--name", "-n"},
					Description: `Name of the environment`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--json"},
					Description: `Outputs in JSON format`,
				}, {
					Name:        []string{"--name", "-n"},
					Description: `Name of the service`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
			}, {
				Name:        []string{"logs"},
				Description: `Displays logs of a deployed service`,
				Options: []model.Option{{
					Name:        []string{"--app", "-a"},
					Description: `Name of the application`,
					Args: []model.Arg{{
						Name:      "name",
						Generator: nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"--end-time"},
					Description: `Optional. Only return logs before a specific date (RFC3339). Defaults to all logs`,
					Args: []model.Arg{{
						Name: "end-time",
					}},
					ExclusiveOn: []string{"--follow"},
				}, {
					Name:        []string{"--name", "-n"},
					Description: `Name of the environment`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--follow"},
					Description: `Optional. Specifies if the logs should be streamed`,
					ExclusiveOn: []string{"--end-time"},
				}, {
					Name:        []string{"--json"},
					Description: `Outputs in JSON format`,
				}, {
					Name:        []string{"--limit"},
					Description: `Optional. The maximum number of log events returned. Default is 10 unless any time filtering flags are set`,
					Args: []model.Arg{{
						Name: "limit",
					}},
				}, {
					Name:        []string{"--log-group"},
					Description: `Optional. Only return logs from specific log group`,
					Args: []model.Arg{{
						Name: "log-group",
					}},
				}, {
					Name:        []string{"--name", "-n"},
					Description: `Name of the service`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--since"},
					Description: `Optional. Only return logs newer than a relative duration like 5s, 2m, or 3h. Defaults to all logs`,
					Args: []model.Arg{{
						Name: "since",
					}},
					ExclusiveOn: []string{"--start-time"},
				}, {
					Name:        []string{"--start-time"},
					Description: `Optional. Only return logs after a specific date (RFC3339). Defaults to all logs`,
					Args: []model.Arg{{
						Name: "start-time",
					}},
					ExclusiveOn: []string{"--since"},
				}, {
					Name:        []string{"--tasks"},
					Description: `Optional. Only return logs from specific task IDs`,
					Args: []model.Arg{{
						Name: "tasks",
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
			}, {
				Name:        []string{"exec"},
				Description: `Execute a command in a running container part of a service`,
				Options: []model.Option{{
					Name:        []string{"--app", "-a"},
					Description: `Name of the application`,
					Args: []model.Arg{{
						Name:      "name",
						Generator: nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"--command", "-c"},
					Description: `Optional. The command that is passed to a running container`,
					Args: []model.Arg{{
						Name: "command",
					}},
				}, {
					Name:        []string{"--container"},
					Description: `Optional. The specific container you want to exec in. By default the first essential container will be used`,
					Args: []model.Arg{{
						Name: "container",
					}},
				}, {
					Name:        []string{"--name", "-n"},
					Description: `Name of the environment`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--name", "-n"},
					Description: `Name of the service, job, or task group`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--task-id"},
					Description: `Optional. ID of the task you want to exec in`,
					Args: []model.Arg{{
						Name: "task-id",
					}},
				}, {
					Name:        []string{"--yes"},
					Description: `Optional. Whether to update the Session Manager Plugin`,
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
			}, {
				Name:        []string{"pause"},
				Description: `Pause running App Runner service`,
				Options: []model.Option{{
					Name:        []string{"--app", "-a"},
					Description: `Name of the application`,
					Args: []model.Arg{{
						Name:      "name",
						Generator: nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"--name", "-n"},
					Description: `Name of the environment`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--name", "-n"},
					Description: `Name of the service`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--yes"},
					Description: `Skips confirmation prompt`,
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
			}, {
				Name:        []string{"resume"},
				Description: `Resumes a paused service`,
				Options: []model.Option{{
					Name:        []string{"--app", "-a"},
					Description: `Name of the application`,
					Args: []model.Arg{{
						Name:      "name",
						Generator: nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"--name", "-n"},
					Description: `Name of the environment`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--name", "-n"},
					Description: `Name of the service`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
			}},
		}, {
			Name:        []string{"job"},
			Description: `Commands for jobs. Jobs are tasks that are triggered by events`,
			Options: []model.Option{{
				Name:        []string{"--help", "-h"},
				Description: `Help for command`,
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"init"},
				Description: `Creates a new scheduled job in an application`,
				Options: []model.Option{{
					Name:        []string{"--app", "-a"},
					Description: `Name of the application`,
					Args: []model.Arg{{
						Name:      "name",
						Generator: nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"--dockerfile", "-d"},
					Description: `Path to the Dockerfile`,
					Args: []model.Arg{{
						Name: "dockerfile",
					}},
					ExclusiveOn: []string{"--image", "-i"},
				}, {
					Name:        []string{"--image", "-i"},
					Description: `The location of an existing Docker image`,
					Args: []model.Arg{{
						Name: "image",
					}},
					ExclusiveOn: []string{"--dockerfile", "-d"},
				}, {
					Name:        []string{"--job-type", "-t"},
					Description: `Type of job to create`,
					Args: []model.Arg{{
						Name:        "job-type",
						Suggestions: []model.Suggestion{{Name: []string{`Scheduled Job`}}},
					}},
				}, {
					Name:        []string{"--name", "-n"},
					Description: `Name of the job`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--retries"},
					Description: `Optional. The number of times to try restarting the job on a failure`,
					Args: []model.Arg{{
						Name: "retries",
					}},
				}, {
					Name:        []string{"--schedule", "-s"},
					Description: `The schedule on which to run this job.  Accepts cron expressions of the format (M H DoM M DoW) and schedule definition strings.  For example: "0 * * * *", "@daily", "@weekly", "@every 1h30m". AWS Schedule Expressions of the form "rate(10 minutes)" or "cron(0 12 L * ? 2021)" are also accepted`,
					Args: []model.Arg{{
						Name: "schedule",
					}},
				}, {
					Name:        []string{"--timeout"},
					Description: `Optional. The total execution time for the task, including retries. Accepts valid Go duration strings. For example: "2h", "1h30m", "900s"`,
					Args: []model.Arg{{
						Name: "timeout",
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
			}, {
				Name:        []string{"ls"},
				Description: `Lists all the jobs in an application`,
				Options: []model.Option{{
					Name:        []string{"--app", "-a"},
					Description: `Name of the application`,
					Args: []model.Arg{{
						Name:      "name",
						Generator: nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"--json"},
					Description: `Outputs in JSON format`,
				}, {
					Name:        []string{"--local"},
					Description: `Only show jobs in the workspace`,
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
			}, {
				Name:        []string{"package"},
				Description: `Prints the AWS CloudFormation template of a job`,
				Options: []model.Option{{
					Name:        []string{"--app", "-a"},
					Description: `Name of the application`,
					Args: []model.Arg{{
						Name:      "name",
						Generator: nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"--name", "-n"},
					Description: `Name of the environment`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--name", "-n"},
					Description: `Name of the job`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--output-dir"},
					Description: `Optional. Writes the stack template and template configuration to a directory`,
					Args: []model.Arg{{
						Name: "output-dir",
					}},
				}, {
					Name:        []string{"--tag"},
					Description: `Optional. The container image tag`,
					Args: []model.Arg{{
						Name: "tag",
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
			}, {
				Name:        []string{"deploy"},
				Description: `Deploys a job to an environment`,
				Options: []model.Option{{
					Name:        []string{"--app", "-a"},
					Description: `Name of the application`,
					Args: []model.Arg{{
						Name:      "name",
						Generator: nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"--name", "-n"},
					Description: `Name of the environment`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--name", "-n"},
					Description: `Name of the job`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--resource-tags"},
					Description: `Optional. Labels with a key and value separated by commas. Allows you to categorize resources`,
					Args: []model.Arg{{
						Name: "resource-tags",
					}},
				}, {
					Name:        []string{"--tag"},
					Description: `Optional. The container image tag`,
					Args: []model.Arg{{
						Name: "tag",
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
			}, {
				Name:        []string{"delete"},
				Description: `Deletes a job from an application`,
				Options: []model.Option{{
					Name:        []string{"--app", "-a"},
					Description: `Name of the application`,
					Args: []model.Arg{{
						Name:      "name",
						Generator: nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"--name", "-n"},
					Description: `Name of the environment`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--name", "-n"},
					Description: `Name of the job`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--yes"},
					Description: `Skips confirmation prompt`,
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
			}},
		}, {
			Name:        []string{"task"},
			Description: `Commands for tasks. One-off Amazon ECS tasks that terminate once their work is done`,
			Options: []model.Option{{
				Name:        []string{"--help", "-h"},
				Description: `Help for command`,
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"run"},
				Description: `Run a one-off task on Amazon ECS`,
				Options: []model.Option{{
					Name:        []string{"--app"},
					Description: `Optional. Name of the application`,
					Args: []model.Arg{{
						Name:      "app",
						Generator: nil, // TODO: port over generator
					}},
					ExclusiveOn: []string{"--default", "--subnets", "--security-groups"},
				}, {
					Name:        []string{"--build-context"},
					Description: `Path to the Docker build context`,
					Args: []model.Arg{{
						Name: "build-context",
					}},
					ExclusiveOn: []string{"--image", "-i"},
				}, {
					Name:        []string{"--cluster"},
					Description: `Optional. The short name or full ARN of the cluster to run the task in`,
					Args: []model.Arg{{
						Name: "cluster",
					}},
					ExclusiveOn: []string{"--app", "--env", "--default"},
				}, {
					Name:        []string{"--command"},
					Description: `Optional. The command that is passed to "docker run" to override the default command`,
					Args: []model.Arg{{
						Name: "command",
					}},
				}, {
					Name:        []string{"--count"},
					Description: `Optional. The number of tasks to set up`,
					Args: []model.Arg{{
						Name: "count",
					}},
				}, {
					Name:        []string{"--cpu"},
					Description: `Optional. The number of CPU units to reserve for each task`,
					Args: []model.Arg{{
						Name: "cpu",
					}},
				}, {
					Name:        []string{"--default"},
					Description: `Optional. Run tasks in default cluster and default subnets`,
					ExclusiveOn: []string{"--app", "--env", "--subnets"},
				}, {
					Name:        []string{"--dockerfile"},
					Description: `Path to the Dockerfile`,
					Args: []model.Arg{{
						Name: "dockerfile",
					}},
					ExclusiveOn: []string{"--image", "-i"},
				}, {
					Name:        []string{"--entrypoint"},
					Description: `Optional. The entrypoint that is passed to "docker run" to override the default entrypoint`,
					Args: []model.Arg{{
						Name: "entrypoint",
					}},
				}, {
					Name:        []string{"--env"},
					Description: `Optional. Name of the environment`,
					Args: []model.Arg{{
						Name: "env",
					}},
					ExclusiveOn: []string{"--default", "--subnets", "--security-groups"},
				}, {
					Name:        []string{"--env-vars"},
					Description: `Optional. Environment variables specified by key=value separated by commas`,
					Args: []model.Arg{{
						Name: "env-vars",
					}},
				}, {
					Name:        []string{"--execution-role"},
					Description: `Optional. The ARN of the role that grants the container agent permission to make AWS API calls`,
					Args: []model.Arg{{
						Name: "execution-role",
					}},
				}, {
					Name:        []string{"--follow"},
					Description: `Optional. Specifies if the logs should be streamed`,
				}, {
					Name:        []string{"--generate-cmd"},
					Description: `Optional. Generate a command with a pre-filled value for each flag. To use it for an ECS service, specify --generate-cmd <cluster name>/<service name>. Alternatively, if the service or job is created with Copilot, specify --generate-cmd <application>/<environment>/<service or job name>. Cannot be specified with any other flags`,
					Args: []model.Arg{{
						Name: "generate-cmd",
					}},
				}, {
					Name:        []string{"--image", "-i"},
					Description: `The location of an existing Docker image`,
					Args: []model.Arg{{
						Name: "image",
					}},
					ExclusiveOn: []string{"--dockerfile", "-d"},
				}, {
					Name:        []string{"--memory"},
					Description: `Optional. The amount of memory to reserve in MiB for each task`,
					Args: []model.Arg{{
						Name: "memory",
					}},
				}, {
					Name:        []string{"--platform-arch"},
					Description: `Optional. Architecture of the task. Must be specified along with 'platform-os'`,
					Args: []model.Arg{{
						Name: "platform-arch",
					}},
				}, {
					Name:        []string{"--platform-os"},
					Description: `Optional. Operating system of the task. Must be specified along with 'platform-arch'`,
					Args: []model.Arg{{
						Name: "platform-os",
					}},
				}, {
					Name:        []string{"--resource-tags"},
					Description: `Optional. Labels with a key and value separated by commas. Allows you to categorize resources`,
					Args: []model.Arg{{
						Name: "resource-tags",
					}},
				}, {
					Name:        []string{"--secrets"},
					Description: `Optional. Secrets to inject into the container. Specified by key=value separated by commas`,
					Args: []model.Arg{{
						Name: "secrets",
					}},
				}, {
					Name:        []string{"--security-groups"},
					Description: `Optional. The security group IDs for the task to use. Can be specified multiple times`,
					Args: []model.Arg{{
						Name: "security-groups",
					}},
					ExclusiveOn: []string{"--app", "--env"},
				}, {
					Name:        []string{"--subnets"},
					Description: `Optional. The subnet IDs for the task to use. Can be specified multiple times`,
					Args: []model.Arg{{
						Name: "subnets",
					}},
					ExclusiveOn: []string{"--app", "--env", "--default"},
				}, {
					Name:        []string{"--tag"},
					Description: `Optional. The container image tag in addition to "latest"`,
					Args: []model.Arg{{
						Name: "tag",
					}},
				}, {
					Name:        []string{"--task-group-name", "-n"},
					Description: `Optional. The group name of the task.  Tasks with the same group name share the same set of resources.  (default directory name)`,
					Args: []model.Arg{{
						Name: "task-group-name",
					}},
				}, {
					Name:        []string{"--task-role"},
					Description: `Optional. The ARN of the role for the task to use`,
					Args: []model.Arg{{
						Name: "task-role",
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
			}, {
				Name:        []string{"exec"},
				Description: `Execute a command in a running container part of a task`,
				Options: []model.Option{{
					Name:        []string{"--app", "-a"},
					Description: `Name of the application`,
					Args: []model.Arg{{
						Name:      "name",
						Generator: nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"--command", "-c"},
					Description: `Optional. The command that is passed to a running container`,
					Args: []model.Arg{{
						Name: "command",
					}},
				}, {
					Name:        []string{"--default"},
					Description: `Optional. Execute commands in running tasks in default cluster and default subnets`,
					ExclusiveOn: []string{"--app", "--env"},
				}, {
					Name:        []string{"--name", "-n"},
					Description: `Name of the environment`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--name", "-n"},
					Description: `Name of the service, job, or task group`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--task-id"},
					Description: `Optional. ID of the task you want to exec in`,
					Args: []model.Arg{{
						Name: "task-id",
					}},
				}, {
					Name:        []string{"--yes"},
					Description: `Optional. Whether to update the Session Manager Plugin`,
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
			}, {
				Name:        []string{"delete"},
				Description: `Deletes a one-off task from an application or default cluster`,
				Options: []model.Option{{
					Name:        []string{"--app", "-a"},
					Description: `Name of the application`,
					Args: []model.Arg{{
						Name:      "name",
						Generator: nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"--default"},
					Description: `Optional. Delete a task which was launched in the default cluster and subnets`,
					ExclusiveOn: []string{"--app", "--env"},
				}, {
					Name:        []string{"--name", "-n"},
					Description: `Name of the environment`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--name", "-n"},
					Description: `Name of the service`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--yes"},
					Description: `Skips confirmation prompt`,
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
			}},
		}, {
			Name:        []string{"storage"},
			Description: `Commands for working with storage and databases`,
			Options: []model.Option{{
				Name:        []string{"--help", "-h"},
				Description: `Help for command`,
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"init"},
				Description: `Creates a new AWS CloudFormation template for a storage resource`,
				Options: []model.Option{{
					Name:        []string{"--engine"},
					Description: `The database engine used in the cluster. Must be either "MySQL" or "PostgreSQL"`,
					Args: []model.Arg{{
						Name: "engine",
					}},
				}, {
					Name:        []string{"--initial-db"},
					Description: `The initial database to create in the cluster`,
					Args: []model.Arg{{
						Name: "initial-db",
					}},
				}, {
					Name:        []string{"--lsi"},
					Description: `Optional. Attribute to use as an alternate sort key. May be specified up to 5 times. Must be of the format '<keyName>:<dataType>'`,
					Args: []model.Arg{{
						Name: "lsi",
					}},
				}, {
					Name:        []string{"--name", "-n"},
					Description: `Name of the storage resource to create`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--no-lsi"},
					Description: `Optional. Don't ask about configuring alternate sort keys`,
				}, {
					Name:        []string{"--no-sort"},
					Description: `Optional. Skip configuring sort keys`,
				}, {
					Name:        []string{"--parameter-group"},
					Description: `Optional. The name of the parameter group to associate with the cluster`,
					Args: []model.Arg{{
						Name: "parameter-group",
					}},
				}, {
					Name:        []string{"--partition-key"},
					Description: `Partition key for the DDB table. Must be of the format '<keyName>:<dataType>'`,
					Args: []model.Arg{{
						Name: "partition-key",
					}},
				}, {
					Name:        []string{"--sort-key"},
					Description: `Optional. Sort key for the DDB table. Must be of the format '<keyName>:<dataType>'`,
					Args: []model.Arg{{
						Name: "sort-key",
					}},
				}, {
					Name:        []string{"--storage-type", "-t"},
					Description: `Type of storage to add. Must be one of: "DynamoDB", "S3", "Aurora"`,
					Args: []model.Arg{{
						Name: "storage-type",
					}},
				}, {
					Name:        []string{"--workload", "-w"},
					Description: `Name of the service or job to associate with storage`,
					Args: []model.Arg{{
						Name: "workload",
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
			}},
		}, {
			Name:        []string{"secret"},
			Description: `Commands for secrets. Secrets are sensitive information that you need in your application`,
			Options: []model.Option{{
				Name:        []string{"--help", "-h"},
				Description: `Help for command`,
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"init"},
				Description: `Create or update secrets in SSM Parameter Store`,
				Options: []model.Option{{
					Name:        []string{"--app", "-a"},
					Description: `Name of the application`,
					Args: []model.Arg{{
						Name:      "name",
						Generator: nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"--cli-input-yaml"},
					Description: `Optional. A YAML file in which the secret values are specified`,
					Args: []model.Arg{{
						Name: "cli-input-yaml",
					}},
					ExclusiveOn: []string{"-n", "--name", "--values"},
				}, {
					Name:        []string{"--name", "-n"},
					Description: `The name of the secret`,
					Args: []model.Arg{{
						Name: "name",
					}},
					ExclusiveOn: []string{"--cli-input-yaml"},
				}, {
					Name:        []string{"--overwrite"},
					Description: `Optional. Whether to overwrite an existing secret`,
				}, {
					Name:        []string{"--values"},
					Description: `Values of the secret in each environment. Specified as <environment>=<value> separated by commas`,
					Args: []model.Arg{{
						Name: "values",
					}},
					ExclusiveOn: []string{"--cli-input-yaml"},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
			}},
		}, {
			Name:        []string{"version"},
			Description: `Print the version number`,
			Options: []model.Option{{
				Name:        []string{"--help", "-h"},
				Description: `Help for command`,
			}},
		}, {
			Name:        []string{"completion"},
			Description: `Output shell completion code`,
			Options: []model.Option{{
				Name:        []string{"--help", "-h"},
				Description: `Help for command`,
			}},
		}, {
			Name:        []string{"pipeline"},
			Description: `Commands for pipelines. Continuous delivery pipelines to release services`,
			Options: []model.Option{{
				Name:        []string{"--help", "-h"},
				Description: `Help for command`,
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"init"},
				Description: `Creates a pipeline for the services in your workspace`,
				Options: []model.Option{{
					Name:        []string{"--app", "-a"},
					Description: `Name of the application`,
					Args: []model.Arg{{
						Name:      "name",
						Generator: nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"--environments", "-e"},
					Description: `Environments to add to the pipeline`,
					Args: []model.Arg{{
						Name: "environments",
					}},
				}, {
					Name:        []string{"--git-branch", "-b"},
					Description: `Branch used to trigger your pipeline`,
					Args: []model.Arg{{
						Name: "git-branch",
					}},
				}, {
					Name:        []string{"--github-access-token", "-t"},
					Description: `GitHub personal access token for your repository`,
					Args: []model.Arg{{
						Name: "github-access-token",
					}},
				}, {
					Name:        []string{"--github-url"},
					Description: `(Deprecated.) Use --url instead. Repository URL to trigger your pipeline`,
					Args: []model.Arg{{
						Name: "github-url",
					}},
				}, {
					Name:        []string{"--url", "-u"},
					Description: `The repository URL to trigger your pipeline. Supported providers are: GitHub, CodeCommit, Bitbucket`,
					Args: []model.Arg{{
						Name: "url",
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
			}, {
				Name:        []string{"update"},
				Description: `Deploys a pipeline for the services in your workspace`,
				Options: []model.Option{{
					Name:        []string{"--app", "-a"},
					Description: `Name of the application`,
					Args: []model.Arg{{
						Name:      "name",
						Generator: nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"--yes"},
					Description: `Skips confirmation prompt`,
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
			}, {
				Name:        []string{"delete"},
				Description: `Deletes the pipeline associated with your workspace`,
				Options: []model.Option{{
					Name:        []string{"--app", "-a"},
					Description: `Name of the application`,
					Args: []model.Arg{{
						Name:      "name",
						Generator: nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"--delete-secret"},
					Description: `Deletes AWS Secrets Manager secret associated with a pipeline source repository`,
				}, {
					Name:        []string{"--yes"},
					Description: `Skips confirmation prompt`,
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
			}, {
				Name:        []string{"show"},
				Description: `Shows info about a deployed pipeline for an application`,
				Options: []model.Option{{
					Name:        []string{"--app", "-a"},
					Description: `Name of the application`,
					Args: []model.Arg{{
						Name:      "name",
						Generator: nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"--json"},
					Description: `Outputs in JSON format`,
				}, {
					Name:        []string{"--name", "-n"},
					Description: `Name of the pipeline`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--resources"},
					Description: `Optional. Show the resources in your pipeline`,
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
			}, {
				Name:        []string{"status"},
				Description: `Shows the status of a pipeline`,
				Options: []model.Option{{
					Name:        []string{"--app", "-a"},
					Description: `Name of the application`,
					Args: []model.Arg{{
						Name:      "name",
						Generator: nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"--json"},
					Description: `Outputs in JSON format`,
				}, {
					Name:        []string{"--name", "-n"},
					Description: `Name of the pipeline`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
			}, {
				Name:        []string{"ls"},
				Description: `Lists all the deployed pipelines in an application`,
				Options: []model.Option{{
					Name:        []string{"--app", "-a"},
					Description: `Name of the application`,
					Args: []model.Arg{{
						Name:      "name",
						Generator: nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"--json"},
					Description: `Outputs in JSON format`,
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
			}},
		}, {
			Name:        []string{"deploy"},
			Description: `Deploy a Copilot job or service`,
			Options: []model.Option{{
				Name:        []string{"--app", "-a"},
				Description: `Name of the application`,
				Args: []model.Arg{{
					Name:      "name",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--name", "-n"},
				Description: `Name of the environment`,
				Args: []model.Arg{{
					Name: "name",
				}},
			}, {
				Name:        []string{"--force"},
				Description: `Optional. Force a new service deployment using the existing image`,
			}, {
				Name:        []string{"--name", "-n"},
				Description: `Name of the service or job`,
				Args: []model.Arg{{
					Name: "name",
				}},
			}, {
				Name:        []string{"--resource-tags"},
				Description: `Optional. Labels with a key and value separated by commas. Allows you to categorize resources`,
				Args: []model.Arg{{
					Name: "resource-tags",
				}},
			}, {
				Name:        []string{"--tag"},
				Description: `Optional. The container image tag`,
				Args: []model.Arg{{
					Name: "tag",
				}},
			}, {
				Name:        []string{"--help", "-h"},
				Description: `Help for command`,
			}},
		}, {
			Name:        []string{"help"},
			Description: `Help about any command`,
			Options: []model.Option{{
				Name:        []string{"--help", "-h"},
				Description: `Help for command`,
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"init"},
				Description: `Create a new ECS or App Runner application`,
				Options: []model.Option{{
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
			}, {
				Name:        []string{"docs"},
				Description: `Open the copilot docs`,
				Options: []model.Option{{
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
			}, {
				Name:        []string{"app"},
				Description: `Commands for applications. Applications are a collection of services and environments`,
				Options: []model.Option{{
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
				Subcommands: []model.Subcommand{{
					Name:        []string{"init"},
					Description: `Creates a new empty application`,
					Options: []model.Option{{
						Name:        []string{"--domain"},
						Description: `Optional. Your existing custom domain name`,
						Args: []model.Arg{{
							Name: "domain",
						}},
					}, {
						Name:        []string{"--resource-tags"},
						Description: `Optional. Labels with a key and value separated by commas. Allows you to categorize resources`,
						Args: []model.Arg{{
							Name: "resource-tags",
						}},
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for command`,
					}},
				}, {
					Name:        []string{"ls"},
					Description: `Lists all the applications in your account`,
					Options: []model.Option{{
						Name:        []string{"--help", "-h"},
						Description: `Help for command`,
					}},
				}, {
					Name:        []string{"show"},
					Description: `Shows info about an application`,
					Options: []model.Option{{
						Name:        []string{"--json"},
						Description: `Outputs in JSON format`,
					}, {
						Name:        []string{"--name", "-n"},
						Description: `Name of the application`,
						Args: []model.Arg{{
							Name: "name",
						}},
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for command`,
					}},
				}, {
					Name:        []string{"delete"},
					Description: `Delete all resources associated with the application`,
					Options: []model.Option{{
						Name:        []string{"--name", "-n"},
						Description: `Name of the application`,
						Args: []model.Arg{{
							Name: "name",
						}},
					}, {
						Name:        []string{"--yes"},
						Description: `Skips confirmation prompt`,
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for command`,
					}},
				}, {
					Name:        []string{"upgrade"},
					Description: `Upgrades the template of an application to the latest version`,
					Options: []model.Option{{
						Name:        []string{"--name", "-n"},
						Description: `Name of the application`,
						Args: []model.Arg{{
							Name: "name",
						}},
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for command`,
					}},
				}},
			}, {
				Name:        []string{"env"},
				Description: `Commands for environments. Environments are deployment stages shared between services`,
				Options: []model.Option{{
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
				Subcommands: []model.Subcommand{{
					Name:        []string{"init"},
					Description: `Creates a new environment in your application`,
					Options: []model.Option{{
						Name:        []string{"--app", "-a"},
						Description: `Name of the application`,
						Args: []model.Arg{{
							Name:      "name",
							Generator: nil, // TODO: port over generator
						}},
					}, {
						Name:        []string{"--aws-access-key-id"},
						Description: `Optional. An AWS access key`,
						Args: []model.Arg{{
							Name: "aws-access-key-id",
						}},
					}, {
						Name:        []string{"--aws-secret-access-key"},
						Description: `Optional. An AWS secret access key`,
						Args: []model.Arg{{
							Name: "aws-secret-access-key",
						}},
					}, {
						Name:        []string{"--aws-session-token"},
						Description: `Optional. An AWS session token for temporary credentials`,
						Args: []model.Arg{{
							Name: "aws-session-token",
						}},
					}, {
						Name:        []string{"--default-config"},
						Description: `Optional. Skip prompting and use default environment configuration`,
					}, {
						Name:        []string{"--import-private-subnets"},
						Description: `Optional. Use existing private subnet IDs`,
						Args: []model.Arg{{
							Name: "import-private-subnets",
						}},
					}, {
						Name:        []string{"--import-public-subnets"},
						Description: `Optional. Use existing public subnet IDs`,
						Args: []model.Arg{{
							Name: "import-public-subnets",
						}},
					}, {
						Name:        []string{"--import-vpc-id"},
						Description: `Optional. Use an existing VPC ID`,
						Args: []model.Arg{{
							Name: "import-vpc-id",
						}},
					}, {
						Name:        []string{"--name", "-n"},
						Description: `Name of the environment`,
						Args: []model.Arg{{
							Name: "name",
						}},
					}, {
						Name:        []string{"--override-az-names"},
						Description: `Optional. Availability Zone names. (default 2 random AZs)`,
						Args: []model.Arg{{
							Name: "override-az-names",
						}},
					}, {
						Name:        []string{"--override-private-cidrs"},
						Description: `Optional. CIDR to use for private subnets. (default 10.0.2.0/24,10.0.3.0/24)`,
						Args: []model.Arg{{
							Name: "override-private-cidrs",
						}},
					}, {
						Name:        []string{"--override-public-cidrs"},
						Description: `Optional. CIDR to use for public subnets.  (default 10.0.0.0/24,10.0.1.0/24)`,
						Args: []model.Arg{{
							Name: "override-public-cidrs",
						}},
					}, {
						Name:        []string{"--override-vpc-cidr"},
						Description: `Optional. Global CIDR to use for VPC. (default 10.0.0.0/16)`,
						Args: []model.Arg{{
							Name: "override-vpc-cidr",
						}},
					}, {
						Name:        []string{"--prod"},
						Description: `If the environment contains production services`,
					}, {
						Name:        []string{"--profile"},
						Description: `Name of the profile`,
						Args: []model.Arg{{
							Name: "profile",
						}},
					}, {
						Name:        []string{"--region"},
						Description: `Optional. An AWS region where the environment will be created`,
						Args: []model.Arg{{
							Name: "region",
						}},
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for command`,
					}},
				}, {
					Name:        []string{"ls"},
					Description: `Lists all the environments in an application`,
					Options: []model.Option{{
						Name:        []string{"--app", "-a"},
						Description: `Name of the application`,
						Args: []model.Arg{{
							Name:      "name",
							Generator: nil, // TODO: port over generator
						}},
					}, {
						Name:        []string{"--json"},
						Description: `Outputs in JSON format`,
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for command`,
					}},
				}, {
					Name:        []string{"delete"},
					Description: `Deletes an environment from your application`,
					Options: []model.Option{{
						Name:        []string{"--app", "-a"},
						Description: `Name of the application`,
						Args: []model.Arg{{
							Name:      "name",
							Generator: nil, // TODO: port over generator
						}},
					}, {
						Name:        []string{"--name", "-n"},
						Description: `Name of the environment`,
						Args: []model.Arg{{
							Name: "name",
						}},
					}, {
						Name:        []string{"--yes"},
						Description: `Skips confirmation prompt`,
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for command`,
					}},
				}, {
					Name:        []string{"show"},
					Description: `Shows info about a deployed environment`,
					Options: []model.Option{{
						Name:        []string{"--app", "-a"},
						Description: `Name of the application`,
						Args: []model.Arg{{
							Name:      "name",
							Generator: nil, // TODO: port over generator
						}},
					}, {
						Name:        []string{"--json"},
						Description: `Outputs in JSON format`,
					}, {
						Name:        []string{"--name", "-n"},
						Description: `Name of the environment`,
						Args: []model.Arg{{
							Name: "name",
						}},
					}, {
						Name:        []string{"--resources"},
						Description: `Optional. Show the resources in your environment`,
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for command`,
					}},
				}},
			}, {
				Name:        []string{"svc"},
				Description: `Commands for services. Services are long-running ECS or App Runner services`,
				Options: []model.Option{{
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
				Subcommands: []model.Subcommand{{
					Name:        []string{"init"},
					Description: `Creates a new service in an application`,
					Options: []model.Option{{
						Name:        []string{"--app", "-a"},
						Description: `Name of the application`,
						Args: []model.Arg{{
							Name:      "name",
							Generator: nil, // TODO: port over generator
						}},
					}, {
						Name:        []string{"--dockerfile", "-d"},
						Description: `Path to the Dockerfile`,
						Args: []model.Arg{{
							Name: "dockerfile",
						}},
						ExclusiveOn: []string{"--image", "-i"},
					}, {
						Name:        []string{"--image", "-i"},
						Description: `The location of an existing Docker image`,
						Args: []model.Arg{{
							Name: "image",
						}},
						ExclusiveOn: []string{"--dockerfile", "-d"},
					}, {
						Name:        []string{"--name", "-n"},
						Description: `Name of the service`,
						Args: []model.Arg{{
							Name: "name",
						}},
					}, {
						Name:        []string{"--no-subscribe"},
						Description: `Optional. Turn off selection for adding subscriptions for worker services`,
					}, {
						Name:        []string{"--port"},
						Description: `The port on which your service listens`,
						Args: []model.Arg{{
							Name: "port",
						}},
					}, {
						Name:        []string{"--subscribe-topics"},
						Description: `Optional. SNS Topics to subscribe to from other services in your application. Must be of format '<svcName>:<topicName>'`,
						Args: []model.Arg{{
							Name: "subscribe-topics",
						}},
					}, {
						Name:        []string{"--svc-type", "-t"},
						Description: `Type of service to create`,
						Args: []model.Arg{{
							Name:        "svc-type",
							Suggestions: []model.Suggestion{{Name: []string{`Request-Driven Web Service`}}, {Name: []string{`Load Balanced Web Service`}}, {Name: []string{`Backend Service`}}, {Name: []string{`Worker Service`}}},
						}},
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for command`,
					}},
				}, {
					Name:        []string{"ls"},
					Description: `Lists all the services in an application`,
					Options: []model.Option{{
						Name:        []string{"--app", "-a"},
						Description: `Name of the application`,
						Args: []model.Arg{{
							Name:      "name",
							Generator: nil, // TODO: port over generator
						}},
					}, {
						Name:        []string{"--json"},
						Description: `Outputs in JSON format`,
					}, {
						Name:        []string{"--local"},
						Description: `Only show services in the workspace`,
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for command`,
					}},
				}, {
					Name:        []string{"package"},
					Description: `Prints the AWS CloudFormation template of a service`,
					Options: []model.Option{{
						Name:        []string{"--app", "-a"},
						Description: `Name of the application`,
						Args: []model.Arg{{
							Name:      "name",
							Generator: nil, // TODO: port over generator
						}},
					}, {
						Name:        []string{"--name", "-n"},
						Description: `Name of the environment`,
						Args: []model.Arg{{
							Name: "name",
						}},
					}, {
						Name:        []string{"--name", "-n"},
						Description: `Name of the service`,
						Args: []model.Arg{{
							Name: "name",
						}},
					}, {
						Name:        []string{"--output-dir"},
						Description: `Optional. Writes the stack template and template configuration to a directory`,
						Args: []model.Arg{{
							Name: "output-dir",
						}},
					}, {
						Name:        []string{"--tag"},
						Description: `Optional. The container image tag`,
						Args: []model.Arg{{
							Name: "tag",
						}},
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for command`,
					}},
				}, {
					Name:        []string{"deploy"},
					Description: `Deploys a service to an environment`,
					Options: []model.Option{{
						Name:        []string{"--app", "-a"},
						Description: `Name of the application`,
						Args: []model.Arg{{
							Name:      "name",
							Generator: nil, // TODO: port over generator
						}},
					}, {
						Name:        []string{"--name", "-n"},
						Description: `Name of the environment`,
						Args: []model.Arg{{
							Name: "name",
						}},
					}, {
						Name:        []string{"--force"},
						Description: `Optional. Force a new service deployment using the existing image`,
					}, {
						Name:        []string{"--name", "-n"},
						Description: `Name of the service`,
						Args: []model.Arg{{
							Name: "name",
						}},
					}, {
						Name:        []string{"--resource-tags"},
						Description: `Optional. Labels with a key and value separated by commas. Allows you to categorize resources`,
						Args: []model.Arg{{
							Name: "resource-tags",
						}},
					}, {
						Name:        []string{"--tag"},
						Description: `Optional. The container image tag`,
						Args: []model.Arg{{
							Name: "tag",
						}},
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for command`,
					}},
				}, {
					Name:        []string{"delete"},
					Description: `Deletes a service from an application`,
					Options: []model.Option{{
						Name:        []string{"--app", "-a"},
						Description: `Name of the application`,
						Args: []model.Arg{{
							Name:      "name",
							Generator: nil, // TODO: port over generator
						}},
					}, {
						Name:        []string{"--name", "-n"},
						Description: `Name of the environment`,
						Args: []model.Arg{{
							Name: "name",
						}},
					}, {
						Name:        []string{"--name", "-n"},
						Description: `Name of the service`,
						Args: []model.Arg{{
							Name: "name",
						}},
					}, {
						Name:        []string{"--yes"},
						Description: `Skips confirmation prompt`,
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for command`,
					}},
				}, {
					Name:        []string{"show"},
					Description: `Shows info about a deployed service per environment`,
					Options: []model.Option{{
						Name:        []string{"--app", "-a"},
						Description: `Name of the application`,
						Args: []model.Arg{{
							Name:      "name",
							Generator: nil, // TODO: port over generator
						}},
					}, {
						Name:        []string{"--json"},
						Description: `Outputs in JSON format`,
					}, {
						Name:        []string{"--name", "-n"},
						Description: `Name of the service`,
						Args: []model.Arg{{
							Name: "name",
						}},
					}, {
						Name:        []string{"--resources"},
						Description: `Optional. Show the resources in your service`,
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for command`,
					}},
				}, {
					Name:        []string{"status"},
					Description: `Shows status of a deployed service`,
					Options: []model.Option{{
						Name:        []string{"--app", "-a"},
						Description: `Name of the application`,
						Args: []model.Arg{{
							Name:      "name",
							Generator: nil, // TODO: port over generator
						}},
					}, {
						Name:        []string{"--name", "-n"},
						Description: `Name of the environment`,
						Args: []model.Arg{{
							Name: "name",
						}},
					}, {
						Name:        []string{"--json"},
						Description: `Outputs in JSON format`,
					}, {
						Name:        []string{"--name", "-n"},
						Description: `Name of the service`,
						Args: []model.Arg{{
							Name: "name",
						}},
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for command`,
					}},
				}, {
					Name:        []string{"logs"},
					Description: `Displays logs of a deployed service`,
					Options: []model.Option{{
						Name:        []string{"--app", "-a"},
						Description: `Name of the application`,
						Args: []model.Arg{{
							Name:      "name",
							Generator: nil, // TODO: port over generator
						}},
					}, {
						Name:        []string{"--end-time"},
						Description: `Optional. Only return logs before a specific date (RFC3339). Defaults to all logs`,
						Args: []model.Arg{{
							Name: "end-time",
						}},
						ExclusiveOn: []string{"--follow"},
					}, {
						Name:        []string{"--name", "-n"},
						Description: `Name of the environment`,
						Args: []model.Arg{{
							Name: "name",
						}},
					}, {
						Name:        []string{"--follow"},
						Description: `Optional. Specifies if the logs should be streamed`,
						ExclusiveOn: []string{"--end-time"},
					}, {
						Name:        []string{"--json"},
						Description: `Outputs in JSON format`,
					}, {
						Name:        []string{"--limit"},
						Description: `Optional. The maximum number of log events returned. Default is 10 unless any time filtering flags are set`,
						Args: []model.Arg{{
							Name: "limit",
						}},
					}, {
						Name:        []string{"--log-group"},
						Description: `Optional. Only return logs from specific log group`,
						Args: []model.Arg{{
							Name: "log-group",
						}},
					}, {
						Name:        []string{"--name", "-n"},
						Description: `Name of the service`,
						Args: []model.Arg{{
							Name: "name",
						}},
					}, {
						Name:        []string{"--since"},
						Description: `Optional. Only return logs newer than a relative duration like 5s, 2m, or 3h. Defaults to all logs`,
						Args: []model.Arg{{
							Name: "since",
						}},
						ExclusiveOn: []string{"--start-time"},
					}, {
						Name:        []string{"--start-time"},
						Description: `Optional. Only return logs after a specific date (RFC3339). Defaults to all logs`,
						Args: []model.Arg{{
							Name: "start-time",
						}},
						ExclusiveOn: []string{"--since"},
					}, {
						Name:        []string{"--tasks"},
						Description: `Optional. Only return logs from specific task IDs`,
						Args: []model.Arg{{
							Name: "tasks",
						}},
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for command`,
					}},
				}, {
					Name:        []string{"exec"},
					Description: `Execute a command in a running container part of a service`,
					Options: []model.Option{{
						Name:        []string{"--app", "-a"},
						Description: `Name of the application`,
						Args: []model.Arg{{
							Name:      "name",
							Generator: nil, // TODO: port over generator
						}},
					}, {
						Name:        []string{"--command", "-c"},
						Description: `Optional. The command that is passed to a running container`,
						Args: []model.Arg{{
							Name: "command",
						}},
					}, {
						Name:        []string{"--container"},
						Description: `Optional. The specific container you want to exec in. By default the first essential container will be used`,
						Args: []model.Arg{{
							Name: "container",
						}},
					}, {
						Name:        []string{"--name", "-n"},
						Description: `Name of the environment`,
						Args: []model.Arg{{
							Name: "name",
						}},
					}, {
						Name:        []string{"--name", "-n"},
						Description: `Name of the service, job, or task group`,
						Args: []model.Arg{{
							Name: "name",
						}},
					}, {
						Name:        []string{"--task-id"},
						Description: `Optional. ID of the task you want to exec in`,
						Args: []model.Arg{{
							Name: "task-id",
						}},
					}, {
						Name:        []string{"--yes"},
						Description: `Optional. Whether to update the Session Manager Plugin`,
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for command`,
					}},
				}, {
					Name:        []string{"pause"},
					Description: `Pause running App Runner service`,
					Options: []model.Option{{
						Name:        []string{"--app", "-a"},
						Description: `Name of the application`,
						Args: []model.Arg{{
							Name:      "name",
							Generator: nil, // TODO: port over generator
						}},
					}, {
						Name:        []string{"--name", "-n"},
						Description: `Name of the environment`,
						Args: []model.Arg{{
							Name: "name",
						}},
					}, {
						Name:        []string{"--name", "-n"},
						Description: `Name of the service`,
						Args: []model.Arg{{
							Name: "name",
						}},
					}, {
						Name:        []string{"--yes"},
						Description: `Skips confirmation prompt`,
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for command`,
					}},
				}, {
					Name:        []string{"resume"},
					Description: `Resumes a paused service`,
					Options: []model.Option{{
						Name:        []string{"--app", "-a"},
						Description: `Name of the application`,
						Args: []model.Arg{{
							Name:      "name",
							Generator: nil, // TODO: port over generator
						}},
					}, {
						Name:        []string{"--name", "-n"},
						Description: `Name of the environment`,
						Args: []model.Arg{{
							Name: "name",
						}},
					}, {
						Name:        []string{"--name", "-n"},
						Description: `Name of the service`,
						Args: []model.Arg{{
							Name: "name",
						}},
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for command`,
					}},
				}},
			}, {
				Name:        []string{"job"},
				Description: `Commands for jobs. Jobs are tasks that are triggered by events`,
				Options: []model.Option{{
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
				Subcommands: []model.Subcommand{{
					Name:        []string{"init"},
					Description: `Creates a new scheduled job in an application`,
					Options: []model.Option{{
						Name:        []string{"--app", "-a"},
						Description: `Name of the application`,
						Args: []model.Arg{{
							Name:      "name",
							Generator: nil, // TODO: port over generator
						}},
					}, {
						Name:        []string{"--dockerfile", "-d"},
						Description: `Path to the Dockerfile`,
						Args: []model.Arg{{
							Name: "dockerfile",
						}},
						ExclusiveOn: []string{"--image", "-i"},
					}, {
						Name:        []string{"--image", "-i"},
						Description: `The location of an existing Docker image`,
						Args: []model.Arg{{
							Name: "image",
						}},
						ExclusiveOn: []string{"--dockerfile", "-d"},
					}, {
						Name:        []string{"--job-type", "-t"},
						Description: `Type of job to create`,
						Args: []model.Arg{{
							Name:        "job-type",
							Suggestions: []model.Suggestion{{Name: []string{`Scheduled Job`}}},
						}},
					}, {
						Name:        []string{"--name", "-n"},
						Description: `Name of the job`,
						Args: []model.Arg{{
							Name: "name",
						}},
					}, {
						Name:        []string{"--retries"},
						Description: `Optional. The number of times to try restarting the job on a failure`,
						Args: []model.Arg{{
							Name: "retries",
						}},
					}, {
						Name:        []string{"--schedule", "-s"},
						Description: `The schedule on which to run this job.  Accepts cron expressions of the format (M H DoM M DoW) and schedule definition strings.  For example: "0 * * * *", "@daily", "@weekly", "@every 1h30m". AWS Schedule Expressions of the form "rate(10 minutes)" or "cron(0 12 L * ? 2021)" are also accepted`,
						Args: []model.Arg{{
							Name: "schedule",
						}},
					}, {
						Name:        []string{"--timeout"},
						Description: `Optional. The total execution time for the task, including retries. Accepts valid Go duration strings. For example: "2h", "1h30m", "900s"`,
						Args: []model.Arg{{
							Name: "timeout",
						}},
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for command`,
					}},
				}, {
					Name:        []string{"ls"},
					Description: `Lists all the jobs in an application`,
					Options: []model.Option{{
						Name:        []string{"--app", "-a"},
						Description: `Name of the application`,
						Args: []model.Arg{{
							Name:      "name",
							Generator: nil, // TODO: port over generator
						}},
					}, {
						Name:        []string{"--json"},
						Description: `Outputs in JSON format`,
					}, {
						Name:        []string{"--local"},
						Description: `Only show jobs in the workspace`,
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for command`,
					}},
				}, {
					Name:        []string{"package"},
					Description: `Prints the AWS CloudFormation template of a job`,
					Options: []model.Option{{
						Name:        []string{"--app", "-a"},
						Description: `Name of the application`,
						Args: []model.Arg{{
							Name:      "name",
							Generator: nil, // TODO: port over generator
						}},
					}, {
						Name:        []string{"--name", "-n"},
						Description: `Name of the environment`,
						Args: []model.Arg{{
							Name: "name",
						}},
					}, {
						Name:        []string{"--name", "-n"},
						Description: `Name of the job`,
						Args: []model.Arg{{
							Name: "name",
						}},
					}, {
						Name:        []string{"--output-dir"},
						Description: `Optional. Writes the stack template and template configuration to a directory`,
						Args: []model.Arg{{
							Name: "output-dir",
						}},
					}, {
						Name:        []string{"--tag"},
						Description: `Optional. The container image tag`,
						Args: []model.Arg{{
							Name: "tag",
						}},
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for command`,
					}},
				}, {
					Name:        []string{"deploy"},
					Description: `Deploys a job to an environment`,
					Options: []model.Option{{
						Name:        []string{"--app", "-a"},
						Description: `Name of the application`,
						Args: []model.Arg{{
							Name:      "name",
							Generator: nil, // TODO: port over generator
						}},
					}, {
						Name:        []string{"--name", "-n"},
						Description: `Name of the environment`,
						Args: []model.Arg{{
							Name: "name",
						}},
					}, {
						Name:        []string{"--name", "-n"},
						Description: `Name of the job`,
						Args: []model.Arg{{
							Name: "name",
						}},
					}, {
						Name:        []string{"--resource-tags"},
						Description: `Optional. Labels with a key and value separated by commas. Allows you to categorize resources`,
						Args: []model.Arg{{
							Name: "resource-tags",
						}},
					}, {
						Name:        []string{"--tag"},
						Description: `Optional. The container image tag`,
						Args: []model.Arg{{
							Name: "tag",
						}},
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for command`,
					}},
				}, {
					Name:        []string{"delete"},
					Description: `Deletes a job from an application`,
					Options: []model.Option{{
						Name:        []string{"--app", "-a"},
						Description: `Name of the application`,
						Args: []model.Arg{{
							Name:      "name",
							Generator: nil, // TODO: port over generator
						}},
					}, {
						Name:        []string{"--name", "-n"},
						Description: `Name of the environment`,
						Args: []model.Arg{{
							Name: "name",
						}},
					}, {
						Name:        []string{"--name", "-n"},
						Description: `Name of the job`,
						Args: []model.Arg{{
							Name: "name",
						}},
					}, {
						Name:        []string{"--yes"},
						Description: `Skips confirmation prompt`,
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for command`,
					}},
				}},
			}, {
				Name:        []string{"task"},
				Description: `Commands for tasks. One-off Amazon ECS tasks that terminate once their work is done`,
				Options: []model.Option{{
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
				Subcommands: []model.Subcommand{{
					Name:        []string{"run"},
					Description: `Run a one-off task on Amazon ECS`,
					Options: []model.Option{{
						Name:        []string{"--app"},
						Description: `Optional. Name of the application`,
						Args: []model.Arg{{
							Name:      "app",
							Generator: nil, // TODO: port over generator
						}},
						ExclusiveOn: []string{"--default", "--subnets", "--security-groups"},
					}, {
						Name:        []string{"--build-context"},
						Description: `Path to the Docker build context`,
						Args: []model.Arg{{
							Name: "build-context",
						}},
						ExclusiveOn: []string{"--image", "-i"},
					}, {
						Name:        []string{"--cluster"},
						Description: `Optional. The short name or full ARN of the cluster to run the task in`,
						Args: []model.Arg{{
							Name: "cluster",
						}},
						ExclusiveOn: []string{"--app", "--env", "--default"},
					}, {
						Name:        []string{"--command"},
						Description: `Optional. The command that is passed to "docker run" to override the default command`,
						Args: []model.Arg{{
							Name: "command",
						}},
					}, {
						Name:        []string{"--count"},
						Description: `Optional. The number of tasks to set up`,
						Args: []model.Arg{{
							Name: "count",
						}},
					}, {
						Name:        []string{"--cpu"},
						Description: `Optional. The number of CPU units to reserve for each task`,
						Args: []model.Arg{{
							Name: "cpu",
						}},
					}, {
						Name:        []string{"--default"},
						Description: `Optional. Run tasks in default cluster and default subnets`,
						ExclusiveOn: []string{"--app", "--env", "--subnets"},
					}, {
						Name:        []string{"--dockerfile"},
						Description: `Path to the Dockerfile`,
						Args: []model.Arg{{
							Name: "dockerfile",
						}},
						ExclusiveOn: []string{"--image", "-i"},
					}, {
						Name:        []string{"--entrypoint"},
						Description: `Optional. The entrypoint that is passed to "docker run" to override the default entrypoint`,
						Args: []model.Arg{{
							Name: "entrypoint",
						}},
					}, {
						Name:        []string{"--env"},
						Description: `Optional. Name of the environment`,
						Args: []model.Arg{{
							Name: "env",
						}},
						ExclusiveOn: []string{"--default", "--subnets", "--security-groups"},
					}, {
						Name:        []string{"--env-vars"},
						Description: `Optional. Environment variables specified by key=value separated by commas`,
						Args: []model.Arg{{
							Name: "env-vars",
						}},
					}, {
						Name:        []string{"--execution-role"},
						Description: `Optional. The ARN of the role that grants the container agent permission to make AWS API calls`,
						Args: []model.Arg{{
							Name: "execution-role",
						}},
					}, {
						Name:        []string{"--follow"},
						Description: `Optional. Specifies if the logs should be streamed`,
					}, {
						Name:        []string{"--generate-cmd"},
						Description: `Optional. Generate a command with a pre-filled value for each flag. To use it for an ECS service, specify --generate-cmd <cluster name>/<service name>. Alternatively, if the service or job is created with Copilot, specify --generate-cmd <application>/<environment>/<service or job name>. Cannot be specified with any other flags`,
						Args: []model.Arg{{
							Name: "generate-cmd",
						}},
					}, {
						Name:        []string{"--image", "-i"},
						Description: `The location of an existing Docker image`,
						Args: []model.Arg{{
							Name: "image",
						}},
						ExclusiveOn: []string{"--dockerfile", "-d"},
					}, {
						Name:        []string{"--memory"},
						Description: `Optional. The amount of memory to reserve in MiB for each task`,
						Args: []model.Arg{{
							Name: "memory",
						}},
					}, {
						Name:        []string{"--platform-arch"},
						Description: `Optional. Architecture of the task. Must be specified along with 'platform-os'`,
						Args: []model.Arg{{
							Name: "platform-arch",
						}},
					}, {
						Name:        []string{"--platform-os"},
						Description: `Optional. Operating system of the task. Must be specified along with 'platform-arch'`,
						Args: []model.Arg{{
							Name: "platform-os",
						}},
					}, {
						Name:        []string{"--resource-tags"},
						Description: `Optional. Labels with a key and value separated by commas. Allows you to categorize resources`,
						Args: []model.Arg{{
							Name: "resource-tags",
						}},
					}, {
						Name:        []string{"--secrets"},
						Description: `Optional. Secrets to inject into the container. Specified by key=value separated by commas`,
						Args: []model.Arg{{
							Name: "secrets",
						}},
					}, {
						Name:        []string{"--security-groups"},
						Description: `Optional. The security group IDs for the task to use. Can be specified multiple times`,
						Args: []model.Arg{{
							Name: "security-groups",
						}},
						ExclusiveOn: []string{"--app", "--env"},
					}, {
						Name:        []string{"--subnets"},
						Description: `Optional. The subnet IDs for the task to use. Can be specified multiple times`,
						Args: []model.Arg{{
							Name: "subnets",
						}},
						ExclusiveOn: []string{"--app", "--env", "--default"},
					}, {
						Name:        []string{"--tag"},
						Description: `Optional. The container image tag in addition to "latest"`,
						Args: []model.Arg{{
							Name: "tag",
						}},
					}, {
						Name:        []string{"--task-group-name", "-n"},
						Description: `Optional. The group name of the task.  Tasks with the same group name share the same set of resources.  (default directory name)`,
						Args: []model.Arg{{
							Name: "task-group-name",
						}},
					}, {
						Name:        []string{"--task-role"},
						Description: `Optional. The ARN of the role for the task to use`,
						Args: []model.Arg{{
							Name: "task-role",
						}},
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for command`,
					}},
				}, {
					Name:        []string{"exec"},
					Description: `Execute a command in a running container part of a task`,
					Options: []model.Option{{
						Name:        []string{"--app", "-a"},
						Description: `Name of the application`,
						Args: []model.Arg{{
							Name:      "name",
							Generator: nil, // TODO: port over generator
						}},
					}, {
						Name:        []string{"--command", "-c"},
						Description: `Optional. The command that is passed to a running container`,
						Args: []model.Arg{{
							Name: "command",
						}},
					}, {
						Name:        []string{"--default"},
						Description: `Optional. Execute commands in running tasks in default cluster and default subnets`,
						ExclusiveOn: []string{"--app", "--env"},
					}, {
						Name:        []string{"--name", "-n"},
						Description: `Name of the environment`,
						Args: []model.Arg{{
							Name: "name",
						}},
					}, {
						Name:        []string{"--name", "-n"},
						Description: `Name of the service, job, or task group`,
						Args: []model.Arg{{
							Name: "name",
						}},
					}, {
						Name:        []string{"--task-id"},
						Description: `Optional. ID of the task you want to exec in`,
						Args: []model.Arg{{
							Name: "task-id",
						}},
					}, {
						Name:        []string{"--yes"},
						Description: `Optional. Whether to update the Session Manager Plugin`,
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for command`,
					}},
				}, {
					Name:        []string{"delete"},
					Description: `Deletes a one-off task from an application or default cluster`,
					Options: []model.Option{{
						Name:        []string{"--app", "-a"},
						Description: `Name of the application`,
						Args: []model.Arg{{
							Name:      "name",
							Generator: nil, // TODO: port over generator
						}},
					}, {
						Name:        []string{"--default"},
						Description: `Optional. Delete a task which was launched in the default cluster and subnets`,
						ExclusiveOn: []string{"--app", "--env"},
					}, {
						Name:        []string{"--name", "-n"},
						Description: `Name of the environment`,
						Args: []model.Arg{{
							Name: "name",
						}},
					}, {
						Name:        []string{"--name", "-n"},
						Description: `Name of the service`,
						Args: []model.Arg{{
							Name: "name",
						}},
					}, {
						Name:        []string{"--yes"},
						Description: `Skips confirmation prompt`,
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for command`,
					}},
				}},
			}, {
				Name:        []string{"storage"},
				Description: `Commands for working with storage and databases`,
				Options: []model.Option{{
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
				Subcommands: []model.Subcommand{{
					Name:        []string{"init"},
					Description: `Creates a new AWS CloudFormation template for a storage resource`,
					Options: []model.Option{{
						Name:        []string{"--engine"},
						Description: `The database engine used in the cluster. Must be either "MySQL" or "PostgreSQL"`,
						Args: []model.Arg{{
							Name: "engine",
						}},
					}, {
						Name:        []string{"--initial-db"},
						Description: `The initial database to create in the cluster`,
						Args: []model.Arg{{
							Name: "initial-db",
						}},
					}, {
						Name:        []string{"--lsi"},
						Description: `Optional. Attribute to use as an alternate sort key. May be specified up to 5 times. Must be of the format '<keyName>:<dataType>'`,
						Args: []model.Arg{{
							Name: "lsi",
						}},
					}, {
						Name:        []string{"--name", "-n"},
						Description: `Name of the storage resource to create`,
						Args: []model.Arg{{
							Name: "name",
						}},
					}, {
						Name:        []string{"--no-lsi"},
						Description: `Optional. Don't ask about configuring alternate sort keys`,
					}, {
						Name:        []string{"--no-sort"},
						Description: `Optional. Skip configuring sort keys`,
					}, {
						Name:        []string{"--parameter-group"},
						Description: `Optional. The name of the parameter group to associate with the cluster`,
						Args: []model.Arg{{
							Name: "parameter-group",
						}},
					}, {
						Name:        []string{"--partition-key"},
						Description: `Partition key for the DDB table. Must be of the format '<keyName>:<dataType>'`,
						Args: []model.Arg{{
							Name: "partition-key",
						}},
					}, {
						Name:        []string{"--sort-key"},
						Description: `Optional. Sort key for the DDB table. Must be of the format '<keyName>:<dataType>'`,
						Args: []model.Arg{{
							Name: "sort-key",
						}},
					}, {
						Name:        []string{"--storage-type", "-t"},
						Description: `Type of storage to add. Must be one of: "DynamoDB", "S3", "Aurora"`,
						Args: []model.Arg{{
							Name: "storage-type",
						}},
					}, {
						Name:        []string{"--workload", "-w"},
						Description: `Name of the service or job to associate with storage`,
						Args: []model.Arg{{
							Name: "workload",
						}},
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for command`,
					}},
				}},
			}, {
				Name:        []string{"secret"},
				Description: `Commands for secrets. Secrets are sensitive information that you need in your application`,
				Options: []model.Option{{
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
				Subcommands: []model.Subcommand{{
					Name:        []string{"init"},
					Description: `Create or update secrets in SSM Parameter Store`,
					Options: []model.Option{{
						Name:        []string{"--app", "-a"},
						Description: `Name of the application`,
						Args: []model.Arg{{
							Name:      "name",
							Generator: nil, // TODO: port over generator
						}},
					}, {
						Name:        []string{"--cli-input-yaml"},
						Description: `Optional. A YAML file in which the secret values are specified`,
						Args: []model.Arg{{
							Name: "cli-input-yaml",
						}},
						ExclusiveOn: []string{"-n", "--name", "--values"},
					}, {
						Name:        []string{"--name", "-n"},
						Description: `The name of the secret`,
						Args: []model.Arg{{
							Name: "name",
						}},
						ExclusiveOn: []string{"--cli-input-yaml"},
					}, {
						Name:        []string{"--overwrite"},
						Description: `Optional. Whether to overwrite an existing secret`,
					}, {
						Name:        []string{"--values"},
						Description: `Values of the secret in each environment. Specified as <environment>=<value> separated by commas`,
						Args: []model.Arg{{
							Name: "values",
						}},
						ExclusiveOn: []string{"--cli-input-yaml"},
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for command`,
					}},
				}},
			}, {
				Name:        []string{"version"},
				Description: `Print the version number`,
				Options: []model.Option{{
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
			}, {
				Name:        []string{"completion"},
				Description: `Output shell completion code`,
				Options: []model.Option{{
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
			}, {
				Name:        []string{"pipeline"},
				Description: `Commands for pipelines. Continuous delivery pipelines to release services`,
				Options: []model.Option{{
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
				Subcommands: []model.Subcommand{{
					Name:        []string{"init"},
					Description: `Creates a pipeline for the services in your workspace`,
					Options: []model.Option{{
						Name:        []string{"--app", "-a"},
						Description: `Name of the application`,
						Args: []model.Arg{{
							Name:      "name",
							Generator: nil, // TODO: port over generator
						}},
					}, {
						Name:        []string{"--environments", "-e"},
						Description: `Environments to add to the pipeline`,
						Args: []model.Arg{{
							Name: "environments",
						}},
					}, {
						Name:        []string{"--git-branch", "-b"},
						Description: `Branch used to trigger your pipeline`,
						Args: []model.Arg{{
							Name: "git-branch",
						}},
					}, {
						Name:        []string{"--github-access-token", "-t"},
						Description: `GitHub personal access token for your repository`,
						Args: []model.Arg{{
							Name: "github-access-token",
						}},
					}, {
						Name:        []string{"--github-url"},
						Description: `(Deprecated.) Use --url instead. Repository URL to trigger your pipeline`,
						Args: []model.Arg{{
							Name: "github-url",
						}},
					}, {
						Name:        []string{"--url", "-u"},
						Description: `The repository URL to trigger your pipeline. Supported providers are: GitHub, CodeCommit, Bitbucket`,
						Args: []model.Arg{{
							Name: "url",
						}},
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for command`,
					}},
				}, {
					Name:        []string{"update"},
					Description: `Deploys a pipeline for the services in your workspace`,
					Options: []model.Option{{
						Name:        []string{"--app", "-a"},
						Description: `Name of the application`,
						Args: []model.Arg{{
							Name:      "name",
							Generator: nil, // TODO: port over generator
						}},
					}, {
						Name:        []string{"--yes"},
						Description: `Skips confirmation prompt`,
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for command`,
					}},
				}, {
					Name:        []string{"delete"},
					Description: `Deletes the pipeline associated with your workspace`,
					Options: []model.Option{{
						Name:        []string{"--app", "-a"},
						Description: `Name of the application`,
						Args: []model.Arg{{
							Name:      "name",
							Generator: nil, // TODO: port over generator
						}},
					}, {
						Name:        []string{"--delete-secret"},
						Description: `Deletes AWS Secrets Manager secret associated with a pipeline source repository`,
					}, {
						Name:        []string{"--yes"},
						Description: `Skips confirmation prompt`,
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for command`,
					}},
				}, {
					Name:        []string{"show"},
					Description: `Shows info about a deployed pipeline for an application`,
					Options: []model.Option{{
						Name:        []string{"--app", "-a"},
						Description: `Name of the application`,
						Args: []model.Arg{{
							Name:      "name",
							Generator: nil, // TODO: port over generator
						}},
					}, {
						Name:        []string{"--json"},
						Description: `Outputs in JSON format`,
					}, {
						Name:        []string{"--name", "-n"},
						Description: `Name of the pipeline`,
						Args: []model.Arg{{
							Name: "name",
						}},
					}, {
						Name:        []string{"--resources"},
						Description: `Optional. Show the resources in your pipeline`,
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for command`,
					}},
				}, {
					Name:        []string{"status"},
					Description: `Shows the status of a pipeline`,
					Options: []model.Option{{
						Name:        []string{"--app", "-a"},
						Description: `Name of the application`,
						Args: []model.Arg{{
							Name:      "name",
							Generator: nil, // TODO: port over generator
						}},
					}, {
						Name:        []string{"--json"},
						Description: `Outputs in JSON format`,
					}, {
						Name:        []string{"--name", "-n"},
						Description: `Name of the pipeline`,
						Args: []model.Arg{{
							Name: "name",
						}},
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for command`,
					}},
				}, {
					Name:        []string{"ls"},
					Description: `Lists all the deployed pipelines in an application`,
					Options: []model.Option{{
						Name:        []string{"--app", "-a"},
						Description: `Name of the application`,
						Args: []model.Arg{{
							Name:      "name",
							Generator: nil, // TODO: port over generator
						}},
					}, {
						Name:        []string{"--json"},
						Description: `Outputs in JSON format`,
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for command`,
					}},
				}},
			}, {
				Name:        []string{"deploy"},
				Description: `Deploy a Copilot job or service`,
				Options: []model.Option{{
					Name:        []string{"--help", "-h"},
					Description: `Help for command`,
				}},
			}},
		}},
	}
}
