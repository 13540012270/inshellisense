// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["onboardbase"] = model.Subcommand{
		Name:        []string{"onboardbase"},
		Description: `Onboardbase manages app secrets and credentials securely with team work and contractors in mind`,
		Subcommands: []model.Subcommand{{
			Name:        []string{"build"},
			Description: `Run a command with secrets injected into the environment`,
			Args: []model.Arg{{
				Name: "command",
			}},
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Show CLI help`,
			}, {
				Name:        []string{"-p", "--project"},
				Description: `Name of project`,
				Args: []model.Arg{{
					Name: "project name",
				}},
			}, {
				Name:        []string{"-e", "--environment"},
				Description: `Environment to run by default`,
				Args: []model.Arg{{
					Name: "environment",
				}},
			}, {
				Name:        []string{"-c", "--command"},
				Description: `Command to run`,
				Args: []model.Arg{{
					Name: "Command to Run",
				}},
			}, {
				Name:        []string{"-k", "--prefix"},
				Description: `Prefix`,
				Args: []model.Arg{{
					Name: "Project Prefix",
				}},
			}, {
				Name:        []string{"-s", "--passphrase"},
				Description: `Passphrase`,
				Args: []model.Arg{{
					Name: "Encryption Passphrase",
				}},
			}},
		}, {
			Name:        []string{"config:get-token"},
			Description: `Get all tokens`,
			Options: []model.Option{{
				Name:        []string{"-S", "--scope"},
				Description: `Scope`,
				Args: []model.Arg{{
					Name: "project scope",
				}},
			}},
		}, {
			Name:        []string{"config:set"},
			Description: `Update your onboardbase config`,
			Options: []model.Option{{
				Name:        []string{"-s", "--scope"},
				Description: `Scope`,
				Args: []model.Arg{{
					Name: "project scope",
				}},
			}, {
				Name:        []string{"-t", "--token"},
				Description: `Auth Token`,
				Args: []model.Arg{{
					Name: "Auth Token",
				}},
			}, {
				Name:        []string{"-A", "--api-host"},
				Description: `API Host`,
				Args: []model.Arg{{
					Name: "Api Host",
				}},
			}, {
				Name:        []string{"-D", "--dashboard-host"},
				Description: `Dashboard Host`,
				Args: []model.Arg{{
					Name: "Dashboard Host",
				}},
			}},
		}, {
			Name:        []string{"config:set-token"},
			Description: `Set up Configuration token manually`,
			Args: []model.Arg{{
				Name: "token",
			}},
			Options: []model.Option{{
				Name:        []string{"-S", "--scope"},
				Description: `Scope`,
				Args:        []model.Arg{{}},
			}},
		}, {
			Name:        []string{"destroy"},
			Description: `Cleanup Onboardbase artifacts including backup and authentication`,
		}, {
			Name:        []string{"environment:create"},
			Description: `Create an environment under a project`,
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Show CLI help`,
			}, {
				Name:        []string{"-p", "--project"},
				Description: `Name of project`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-e", "--environment"},
				Description: `Environment Title`,
				Args: []model.Arg{{
					Name: "Environment Name",
				}},
			}},
		}, {
			Name:        []string{"login"},
			Description: `Describe the command here`,
			Options: []model.Option{{
				Name: []string{"--overwrite"},
			}},
		}, {
			Name:        []string{"logout"},
			Description: `Log out of the CLI`,
		}, {
			Name:        []string{"project:create"},
			Description: `Create a project`,
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Show CLI help`,
			}, {
				Name:        []string{"-t", "--title"},
				Description: `Name of project`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-d", "--description"},
				Description: `Project description`,
				Args: []model.Arg{{
					Name: "Project Description",
				}},
			}, {
				Name:        []string{"-e", "--environment"},
				Description: `Environment to run by default`,
				Args: []model.Arg{{
					Name: "default environment",
				}},
			}},
		}, {
			Name:        []string{"recommendation:create"},
			Description: `Create a recommendation`,
			Args: []model.Arg{{
				Name: "secrets",
			}},
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Show CLI help`,
			}, {
				Name:        []string{"-p", "--project"},
				Description: `Name of project`,
				Args: []model.Arg{{
					Name: "project name",
				}},
			}, {
				Name:        []string{"-n", "--note"},
				Description: `Note`,
				Args: []model.Arg{{
					Name: "project description",
				}},
			}},
		}, {
			Name:        []string{"secrets"},
			Description: `Log secrets in JSON file`,
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Show CLI help`,
			}, {
				Name:        []string{"-p", "--project"},
				Description: `Name of project`,
				Args: []model.Arg{{
					Name: "project name",
				}},
			}, {
				Name:        []string{"-e", "--environment"},
				Description: `Environment to run by default`,
				Args: []model.Arg{{
					Name: "default environment",
				}},
			}, {
				Name:        []string{"-J", "--json"},
				Description: `JSON format`,
			}},
		}, {
			Name:        []string{"secrets:delete"},
			Description: `Update secrets on Onboardbase`,
			Args: []model.Arg{{
				Name: "secrets",
			}},
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Show CLI help`,
			}, {
				Name:        []string{"-p", "--project"},
				Description: `Name of project`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-e", "--environment"},
				Description: `Environment to run by default`,
				Args: []model.Arg{{
					Name: "Environment to update",
				}},
			}},
		}, {
			Name:        []string{"secrets:update"},
			Description: `Update secrets on Onboardbase`,
			Args: []model.Arg{{
				Name: "secrets",
			}},
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Show CLI help`,
			}, {
				Name:        []string{"-p", "--project"},
				Description: `Name of project`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-e", "--environment"},
				Description: `Environment to run by default`,
				Args: []model.Arg{{
					Name: "Environment to update",
				}},
			}},
		}, {
			Name:        []string{"secrets:upload"},
			Description: `Upload secrets`,
			Args: []model.Arg{{
				Name: "secrets",
			}},
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Show CLI help`,
			}, {
				Name:        []string{"-p", "--project"},
				Description: `Name of project`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-e", "--environment"},
				Description: `Environment to run by default`,
				Args: []model.Arg{{
					Name: "Environment to update",
				}},
			}},
		}, {
			Name:        []string{"setup"},
			Description: `Setup the Onboardbase CLI for managing secrets`,
		}, {
			Name:        []string{"share"},
			Description: `Share your local onboardbase.yaml secrets with a teammate`,
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Show CLI help`,
			}, {
				Name:        []string{"-p", "--project"},
				Description: `Project name`,
				Args: []model.Arg{{
					Name: "project name",
				}},
			}},
		}, {
			Name:        []string{"help"},
			Description: `Display help for <%= config.bin %>`,
			Args: []model.Arg{{
				Name:        "command",
				Description: `Command to show help for`,
				IsOptional:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"--all"},
				Description: `See all commands in CLI`,
			}},
		}},
	}
}
