// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.
//
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

package specs

import (
	"github.com/microsoft/clac/autocomplete/model"
)

func init() {
	Specs["ant"] = model.Subcommand{
		Name:        []string{"ant"},
		Description: `A software tool for automating software build processes`,
		Args: []model.Arg{{
			Name:       "target",
			Generator:  nil, // TODO: port over generator
			IsOptional: true,
			IsVariadic: true,
		}},
		Options: []model.Option{{
			Name:        []string{"--help", "-help", "-h"},
			Description: `Show help for ant`,
		}, {
			Name:        []string{"--noconfig"},
			Description: `Suppress sourcing of /etc/ant.conf, $HOME/.ant/ant.conf, and $HOME/.antrc configuration files`,
		}, {
			Name:        []string{"--usejikes"},
			Description: `Enable use of jikes by default, unless set explicitly in configuration files`,
		}, {
			Name:        []string{"--execdebug"},
			Description: `Print ant exec line generated by this launch script`,
		}, {
			Name:        []string{"-projecthelp", "-p"},
			Description: `Print project help information and exit`,
		}, {
			Name:        []string{"-version"},
			Description: `Print the version information and exit`,
		}, {
			Name:        []string{"-diagnostics"},
			Description: `Print information that might be helpful to diagnose or report problems and exit`,
		}, {
			Name:        []string{"-quiet", "-q"},
			Description: `Be extra quiet`,
		}, {
			Name:        []string{"-silent", "-S"},
			Description: `Print nothing but task outputs and build failures`,
		}, {
			Name:        []string{"-verbose", "-v"},
			Description: `Be extra verbose`,
		}, {
			Name:        []string{"-debug", "-d"},
			Description: `Print debugging information`,
		}, {
			Name:        []string{"-emacs", "-e"},
			Description: `Produce logging information without adornments`,
		}, {
			Name:        []string{"-lib"},
			Description: `Specifies a path to search for jars and classes`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFolders},
				Name:      "path",
			}},
		}, {
			Name:        []string{"-logfile", "-l"},
			Description: `Use given file for log`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "file",
			}},
		}, {
			Name:        []string{"-logger"},
			Description: `The class which is to perform logging`,
			Args: []model.Arg{{
				Name: "classname",
			}},
		}, {
			Name:        []string{"-listener"},
			Description: `Add an instance of class as a project listener`,
			Args: []model.Arg{{
				Name: "classname",
			}},
		}, {
			Name:        []string{"-noinput"},
			Description: `Do not allow interactive input`,
		}, {
			Name:        []string{"-buildfile", "-file", "-f"},
			Description: `Use given buildfile`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "file",
			}},
		}, {
			Name:        []string{"-keep-going", "-k"},
			Description: `Execute all targets that do not depend on failed target(s)`,
		}, {
			Name:        []string{"-propertyfile"},
			Description: `Load all properties from file with -D properties taking precedence`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "name",
			}},
		}, {
			Name:        []string{"-inputhandler"},
			Description: `The class which will handle input requests`,
			Args: []model.Arg{{
				Name: "class",
			}},
		}, {
			Name:        []string{"-find", "-s"},
			Description: `Search for buildfile towards the root of the filesystem and use it`,
			Args: []model.Arg{{
				Name: "file",
			}},
		}, {
			Name:        []string{"-nice"},
			Description: `A niceness value for the main thread`,
			Args: []model.Arg{{
				Name: "number",
			}},
		}, {
			Name:        []string{"-nouserlib"},
			Description: `Run ant without using the jar files from ${user.home}/.ant/lib`,
		}, {
			Name:        []string{"-noclasspath"},
			Description: `Run ant without using CLASSPATH`,
		}, {
			Name:        []string{"-autoproxy"},
			Description: `Java1.5+: use the OS proxy settings`,
		}, {
			Name:        []string{"-main"},
			Description: `Override Ant's normal entry point`,
			Args: []model.Arg{{
				Name: "class",
			}},
		}},
	}
}
