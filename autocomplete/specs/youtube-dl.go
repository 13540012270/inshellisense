// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.
//
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

package specs

import (
	"github.com/microsoft/clac/autocomplete/model"
)

func init() {
	Specs["youtube-dl"] = model.Subcommand{
		Name:        []string{"youtube-dl"},
		Description: `Download videos from YouTube`,
		Args: []model.Arg{{
			Name:       "URL",
			Generator:  nil, // TODO: port over generator
			IsVariadic: true,
		}},
		Options: []model.Option{{
			Name:        []string{"--help", "-h"},
			Description: `Print the help text and exit`,
		}, {
			Name:        []string{"--version"},
			Description: `Print program version and exit`,
		}, {
			Name:        []string{"-U", "--update"},
			Description: `Update this program to latest version. Make sure you have sufficient permissions (run with sudo if needed)`,
		}, {
			Name:        []string{"--ignore-errors", "-i"},
			Description: `Continue on download errors, for example to skip unavailable videos in a playlist`,
		}, {
			Name:        []string{"--abort-on-error"},
			Description: `Abort downloading of further videos (in the playlist or the command line) if an error occurs`,
		}, {
			Name:        []string{"--dump-user-agent"},
			Description: `Display the current browser identification`,
		}, {
			Name:        []string{"--list-extractors"},
			Description: `List all supported extractors`,
		}, {
			Name:        []string{"--extractor-descriptions"},
			Description: `Output descriptions of all supported extractors`,
		}, {
			Name:        []string{"--default-search"},
			Description: `Use this prefix for unqualified URLs. For example "gvsearch2:" downloads two videos from google videos for youtube-dl "large apple"`,
			Args: []model.Arg{{
				Name: "PREFIX",
			}},
		}, {
			Name:        []string{"--config-location"},
			Description: `Location of the configuration file; either the path to the config or its containing directory`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths, model.TemplateFolders},
				Name:      "PATH",
			}},
		}, {
			Name:        []string{"--force-generic-extractor"},
			Description: `Force extraction to use the generic extractor`,
		}, {
			Name:        []string{"--ignore-config"},
			Description: `Do not read configuration files`,
		}, {
			Name:        []string{"--flat-playlist"},
			Description: `Do not extract the videos of a playlist, only list them`,
		}, {
			Name:        []string{"--mark-watched"},
			Description: `Mark videos watched (YouTube only)`,
		}, {
			Name:        []string{"--no-mark-watched"},
			Description: `Do not mark videos watched (YouTube only)`,
		}, {
			Name:        []string{"--no-color"},
			Description: `Do not emit color codes in output`,
		}, {
			Name:        []string{"--proxy"},
			Description: `Use the specified HTTP/HTTPS/SOCKS proxy. Pass in an empty string for direct connection`,
			Args: []model.Arg{{
				Name: "URL",
			}},
		}, {
			Name:        []string{"--socket-timeout"},
			Description: `Time to wait before giving up, in seconds`,
			Args: []model.Arg{{
				Name: "SECONDS",
			}},
		}, {
			Name:        []string{"--source-address"},
			Description: `Client-side IP address to bind to`,
			Args: []model.Arg{{
				Name: "IP",
			}},
		}, {
			Name:        []string{"-4", "--force-ipv4"},
			Description: `Make all connections via IPv4`,
		}, {
			Name:        []string{"-6", "--force-ipv6"},
			Description: `Make all connections via IPv6`,
		}, {
			Name:        []string{"--geo-verification-proxy"},
			Description: `Use this proxy to verify the IP address for some geo-restricted sites`,
			Args: []model.Arg{{
				Name: "URL",
			}},
		}, {
			Name:        []string{"--geo-bypass"},
			Description: `Bypass geographic restriction via faking X-Forwarded-For HTTP header`,
		}, {
			Name:        []string{"--no-geo-bypass"},
			Description: `Do not bypass geographic restriction via faking X-Forwarded-For HTTP header`,
		}, {
			Name:        []string{"--geo-bypass-country"},
			Description: `Force bypass geographic restriction with explicitly provided two-letter ISO 3166-2 county code`,
			Args: []model.Arg{{
				Name: "CODE",
			}},
		}, {
			Name:        []string{"--geo-bypass-ip-block"},
			Description: `Force bypass geographic restriction with explicitly provided IP block in CIDR notation`,
			Args: []model.Arg{{
				Name: "IP_BLOCK",
			}},
		}, {
			Name:        []string{"--playlist-start"},
			Description: `Playlist video to start at (default is 1)`,
			Args: []model.Arg{{
				Name:      "NUMBER",
				Generator: nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"--playlist-end"},
			Description: `Playlist video to end at (default is last)`,
			Args: []model.Arg{{
				Name:      "NUMBER",
				Generator: nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"--playlist-items"},
			Description: `Playlist video to end at (default is last)`,
			Args: []model.Arg{{
				Name:      "ITEM_SPEC",
				Generator: nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"--match-title"},
			Description: `Download only matching titles (regex or caseless sub-string)`,
			Args: []model.Arg{{
				Name: "REGEX",
			}},
		}, {
			Name:        []string{"--reject-title"},
			Description: `Skip download for matching titles (regex or caseless sub-string)`,
			Args: []model.Arg{{
				Name: "REGEX",
			}},
		}, {
			Name:        []string{"--max-downloads"},
			Description: `Abort after downloading NUMBER files`,
			Args: []model.Arg{{
				Name: "NUMBER",
			}},
		}, {
			Name:        []string{"--min-filesize"},
			Description: `Do not download any videos smaller than SIZE (e.g. 50k or 44.6)`,
			Args: []model.Arg{{
				Name: "SIZE",
			}},
		}, {
			Name:        []string{"--max-filesize"},
			Description: `Do not download any videos larger than SIZE (e.g. 50k or 44.6)`,
			Args: []model.Arg{{
				Name: "SIZE",
			}},
		}, {
			Name:        []string{"--date"},
			Description: `Download only videos uploaded in this date`,
			Args: []model.Arg{{
				Name: "DATE",
			}},
		}, {
			Name:        []string{"--datebefore"},
			Description: `Download only videos uploaded on or before this date (i.e. inclusive)`,
			Args: []model.Arg{{
				Name: "DATE",
			}},
		}, {
			Name:        []string{"--dateafter"},
			Description: `Download only videos uploaded on or after this date (i.e. inclusive)`,
			Args: []model.Arg{{
				Name: "DATE",
			}},
		}, {
			Name:        []string{"--min-views"},
			Description: `Do not download any videos with less than COUNT views`,
			Args: []model.Arg{{
				Name: "COUNT",
			}},
		}, {
			Name:        []string{"--max-views"},
			Description: `Do not download any videos with more than COUNT views`,
			Args: []model.Arg{{
				Name: "COUNT",
			}},
		}, {
			Name:        []string{"--match-filter"},
			Description: `Generic video filter`,
			Args: []model.Arg{{
				Name: "FILTER",
			}},
		}, {
			Name:        []string{"--no-playlist"},
			Description: `Download only the video, if the URL refers to a video and a playlist`,
		}, {
			Name:        []string{"--yes-playlist"},
			Description: `Download the playlist, if the URL refers to a video and a playlist`,
		}, {
			Name:        []string{"--age-limit"},
			Description: `Download only videos suitable for the given age`,
			Args: []model.Arg{{
				Name: "YEARS",
			}},
		}, {
			Name:        []string{"--download-archive"},
			Description: `Download only videos not listed in the archive file. Record the IDs of all downloaded videos in it`,
			Args: []model.Arg{{
				Name: "FILE",
			}},
		}, {
			Name:        []string{"--include-ads"},
			Description: `Download advertisements as well (experimental)`,
		}, {
			Name:        []string{"-r", "--limit-rate"},
			Description: `Maximum download rate in bytes per second (e.g. 50K or 4.2M)`,
			Args: []model.Arg{{
				Name: "RATE",
			}},
		}, {
			Name:        []string{"-R", "--retries"},
			Description: `Number of retries or "infinite"`,
			Args: []model.Arg{{
				Name: "RETRIES",
			}},
		}, {
			Name:        []string{"--fragment-retries"},
			Description: `Number of retries for a fragment or "infinite"`,
			Args: []model.Arg{{
				Name: "RETRIES",
			}},
		}, {
			Name:        []string{"--skip-unavailable-fragments"},
			Description: `Skip unavailable fragments`,
		}, {
			Name:        []string{"--abort-on-unavailable-fragments"},
			Description: `Abort downloading when some fragment is not available`,
		}, {
			Name:        []string{"--keep-fragments"},
			Description: `Keep downloaded fragments on disk after downloading is finished; fragments are erased by default`,
		}, {
			Name:        []string{"--buffer-size"},
			Description: `Size of download buffer (e.g. 1024 or 16K)`,
			Args: []model.Arg{{
				Name: "SIZE",
			}},
		}, {
			Name:        []string{"--no-resize-buffer"},
			Description: `Do not automatically adjust the buffer size`,
		}, {
			Name:        []string{"--http-chunk-size"},
			Description: `Size of a chunk for chunk-based HTTP downloading (e.g. 10385760 or 10M)`,
			Args: []model.Arg{{
				Name: "SIZE",
			}},
		}, {
			Name:        []string{"--playlist-reverse"},
			Description: `Download playlist videos in reverse order`,
		}, {
			Name:        []string{"--playlist-random"},
			Description: `Download playlist videos in random order`,
		}, {
			Name:        []string{"--xattr-set-filesize"},
			Description: `Set file xattribute ytdl.filesize with expected file size`,
		}, {
			Name:        []string{"--hls-prefer-native"},
			Description: `Use the native HLS downloader instead of ffmpeg`,
		}, {
			Name:        []string{"--hls-prefer-ffmpeg"},
			Description: `Use ffmpeg instead of the native HLS downloader`,
		}, {
			Name:        []string{"--hls-prefer-mpegts"},
			Description: `Use the mpegts container for HLS videos, allowing to play the video while downloading`,
		}, {
			Name:        []string{"--external-downloader"},
			Description: `Use the specified external downloader`,
			Args: []model.Arg{{
				Name:        "COMMAND",
				Suggestions: []model.Suggestion{{Name: []string{`aria2c`}}, {Name: []string{`avconv`}}, {Name: []string{`axel`}}, {Name: []string{`curl`}}, {Name: []string{`ffmpeg`}}, {Name: []string{`httpie`}}, {Name: []string{`wget`}}},
			}},
		}, {
			Name:        []string{"--external-downloader-args"},
			Description: `Give these arguments to the external downloader`,
			Args: []model.Arg{{
				Name: "ARGS",
			}},
		}, {
			Name:        []string{"-a", "--batch-file"},
			Description: `File containing URLs to download ('-' for stdin), one URL per line. Lines starting with '#', ';' or ']' are considered as comments and ignored`,
			Args: []model.Arg{{
				Templates:   []model.Template{model.TemplateFilepaths},
				Name:        "FILE",
				Suggestions: []model.Suggestion{{Name: []string{`-`}}},
			}},
		}, {
			Name:        []string{"--id"},
			Description: `Use only video ID in file name`,
		}, {
			Name:        []string{"-o", "--output"},
			Description: `Output filename template`,
			Args: []model.Arg{{
				Name: "TEMPLATE",
			}},
		}, {
			Name:        []string{"--output-na-placeholder"},
			Description: `Placeholder value for unavailable meta fields in output filename template`,
			Args: []model.Arg{{
				Name: "PLACEHOLDER",
			}},
		}, {
			Name:        []string{"--autonumber-start"},
			Description: `Specify the start value for %(autonumber)s`,
			Args: []model.Arg{{
				Name: "NUMBER",
			}},
		}, {
			Name:        []string{"--restrict-filenames"},
			Description: `Restrict filenames to only ASCII characters, and avoid "&" and spaces in filenames`,
		}, {
			Name:        []string{"-w", "--no-overwrites"},
			Description: `Do not overwrite files`,
		}, {
			Name:        []string{"-c", "--continue"},
			Description: `Do not resume partially downloaded files (restart from beginning)`,
		}, {
			Name:        []string{"--no-part"},
			Description: `Do not use .part files - write directly into output file`,
		}, {
			Name:        []string{"--no-mtime"},
			Description: `Do not use the Last-modified header to set the file modification time`,
		}, {
			Name:        []string{"--write-description"},
			Description: `Write video descriptions to a .description file`,
		}, {
			Name:        []string{"--write-info-json"},
			Description: `Write video metadata to a .info.json file`,
		}, {
			Name:        []string{"--write-annotations"},
			Description: `Write video annotations to a .annotations.xml file`,
		}, {
			Name:        []string{"--load-info-json"},
			Description: `JSON file containing the video information (created with the "--write-info-json" option`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "FILE",
			}},
		}, {
			Name:        []string{"--cookies"},
			Description: `File to read cookies from and dump cookie jar in`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "FILE",
			}},
		}, {
			Name:        []string{"--cache-dir"},
			Description: `Location in the filesystem where youtube-dl can store some downloaded information permanently`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFolders},
				Name:      "DIR",
			}},
		}, {
			Name:        []string{"--no-cache-dir"},
			Description: `Disable filesystem caching`,
		}, {
			Name:        []string{"--rm-cache-dir"},
			Description: `Delete all filesystem cache files`,
		}, {
			Name:        []string{"--write-thumbnail"},
			Description: `Write thumbnail image to disk`,
		}, {
			Name:        []string{"--write-all-thumbnail"},
			Description: `Write all thumbnail image formats to disk`,
		}, {
			Name:        []string{"--list-thumbnails"},
			Description: `Simulate and list all available thumbnail formats`,
		}, {
			Name:        []string{"-q", "--quiet"},
			Description: `Activate quite mode`,
		}, {
			Name:        []string{"--no-warnings"},
			Description: `Ignore warnings`,
		}, {
			Name:        []string{"-s", "--simulate"},
			Description: `Do not download the video and do note write anything to disk`,
		}, {
			Name:        []string{"--skip-download"},
			Description: `Do not download the video`,
		}, {
			Name:        []string{"-g", "--get-url"},
			Description: `Simulate, quiet but print URL`,
		}, {
			Name:        []string{"-e", "--get-title"},
			Description: `Simulate, quiet but print title`,
		}, {
			Name:        []string{"--get-id"},
			Description: `Simulate, quiet but print id`,
		}, {
			Name:        []string{"--get-thumbnail"},
			Description: `Simulate, quiet but print thumbnail URL`,
		}, {
			Name:        []string{"--get-description"},
			Description: `Simulate, quiet but print video description`,
		}, {
			Name:        []string{"--get-duration"},
			Description: `Simulate, quiet but print video length`,
		}, {
			Name:        []string{"--get-filename"},
			Description: `Simulate, quiet but print output filename`,
		}, {
			Name:        []string{"--get-format"},
			Description: `Simulate, quiet but print output format`,
		}, {
			Name:        []string{"-j", "--dump-json"},
			Description: `Simulate, quiet but JSON information`,
		}, {
			Name:        []string{"-J", "--dump-single-json"},
			Description: `Simulate, quiet but JSON information for each command-line argument`,
		}, {
			Name:        []string{"--print-json"},
			Description: `Be quiet and print the video information as JSON (video is still being downloaded)`,
		}, {
			Name:        []string{"--newline"},
			Description: `Output the progress bar as new lines`,
		}, {
			Name:        []string{"--no-progress"},
			Description: `Do not print the progress bar`,
		}, {
			Name:        []string{"--console-title"},
			Description: `Display progress in console titlebar`,
		}, {
			Name:        []string{"-v", "--verbose"},
			Description: `Print various debugging information`,
		}, {
			Name:        []string{"--dump-pages"},
			Description: `Print downloaded pages encoded using base64 to debug problems (very verbose)`,
		}, {
			Name:        []string{"--write-pages"},
			Description: `Write downloaded intermediary pages to files in the current directory to debug problems`,
		}, {
			Name:        []string{"--print-traffic"},
			Description: `Display sent and read HTTP traffic`,
		}, {
			Name:        []string{"-C", "--call-home"},
			Description: `Contact the youtube-dl server for debugging`,
		}, {
			Name:        []string{"--no-call-home"},
			Description: `Do NOT contact the youtube-dl server for debugging`,
		}, {
			Name:        []string{"--encoding"},
			Description: `Force the specified encoding (experimental)`,
			Args: []model.Arg{{
				Name: "ENCODING",
			}},
		}, {
			Name:        []string{"--no-check-certificate"},
			Description: `Suppress HTTPS certificate validation`,
		}, {
			Name:        []string{"--prefer-insecure"},
			Description: `Use an unencrypted connection to retrieve information about the video. (Currently supported only for YouTube)`,
		}, {
			Name:        []string{"--user-agent"},
			Description: `Specify a custom user agent`,
			Args: []model.Arg{{
				Name: "UA",
			}},
		}, {
			Name:        []string{"--referer"},
			Description: `Specify a custom referer, use if the video access is restricted to one domain`,
			Args: []model.Arg{{
				Name: "URL",
			}},
		}, {
			Name:        []string{"--add-header"},
			Description: `Specify a custom HTTP header and its value, separated by a colon ':'`,
			Args: []model.Arg{{
				Name: "FIELD:VALUE",
			}},
		}, {
			Name:        []string{"--bidi-workaround"},
			Description: `Work around terminals that lack bidirectional text support. Requires bidiv or fribidi executable in PATH`,
		}, {
			Name:        []string{"--sleep-interval"},
			Description: `Number of seconds to sleep before each download when used alone or a lower bound of a range for randomized sleep before each download when used along with --max-sleep-interval`,
			Args: []model.Arg{{
				Name: "SECONDS",
			}},
		}, {
			Name:        []string{"--max-sleep-interval"},
			Description: `Upper bound of a range for randomized sleep before each download. Must only be used along with --min- sleep-interval`,
			Args: []model.Arg{{
				Name: "SECONDS",
			}},
		}, {
			Name:        []string{"-f", "--format"},
			Description: `Video format code`,
			Args: []model.Arg{{
				Name: "FORMAT",
			}},
		}, {
			Name:        []string{"--all-formats"},
			Description: `Download all available video formats`,
		}, {
			Name:        []string{"--prefer-free-formats"},
			Description: `Prefer free video formats unless a specific one is requested`,
		}, {
			Name:        []string{"-F", "--list-formats"},
			Description: `List all available formats of requested videos`,
		}, {
			Name:        []string{"--youtube-skip-dash-manifest"},
			Description: `Do not download the DASH manifests and related data on YouTube videos`,
		}, {
			Name:        []string{"--merge-output-format"},
			Description: `If a merge is required (e.g. bestvideo+bestaudio), output to given container format`,
			Args: []model.Arg{{
				Name:        "FORMAT",
				Suggestions: []model.Suggestion{{Name: []string{`mkv`}}, {Name: []string{`mp4`}}, {Name: []string{`ogg`}}, {Name: []string{`webm`}}, {Name: []string{`flv`}}},
			}},
		}, {
			Name:        []string{"--write-sub"},
			Description: `Write subtitle file`,
		}, {
			Name:        []string{"--write-auto-sub"},
			Description: `Write automatically generated subtitle file (YouTube only)`,
		}, {
			Name:        []string{"--all-subs"},
			Description: `Download all the available subtitles of the video`,
		}, {
			Name:        []string{"--list-subs"},
			Description: `List all available subtitles for the video`,
		}, {
			Name:        []string{"--sub-format"},
			Description: `Subtitle format, accepts formats preference, for example: "srt" or "ass/srt/best"`,
			Args: []model.Arg{{
				Name: "FORMAT",
			}},
		}, {
			Name:        []string{"--sub-lang"},
			Description: `Languages of the subtitles to download (optional) separated by commas`,
			Args: []model.Arg{{
				Name:        "LANGS",
				Suggestions: []model.Suggestion{{Name: []string{`af`}}, {Name: []string{`sq`}}, {Name: []string{`am`}}, {Name: []string{`ar`}}, {Name: []string{`hy`}}, {Name: []string{`az`}}, {Name: []string{`bn`}}, {Name: []string{`eu`}}, {Name: []string{`be`}}, {Name: []string{`bs`}}, {Name: []string{`bg`}}, {Name: []string{`my`}}, {Name: []string{`ca`}}, {Name: []string{`ceb`}}, {Name: []string{`zh-Hans`}}, {Name: []string{`zh-Hant`}}, {Name: []string{`co`}}, {Name: []string{`hr`}}, {Name: []string{`cs`}}, {Name: []string{`da`}}, {Name: []string{`nl`}}, {Name: []string{`en`}}, {Name: []string{`eo`}}, {Name: []string{`et`}}, {Name: []string{`fil`}}, {Name: []string{`fi`}}, {Name: []string{`fr`}}, {Name: []string{`gl`}}, {Name: []string{`ka`}}, {Name: []string{`de`}}, {Name: []string{`el`}}, {Name: []string{`gu`}}, {Name: []string{`ht`}}, {Name: []string{`ha`}}, {Name: []string{`haw`}}, {Name: []string{`iw`}}, {Name: []string{`hi`}}, {Name: []string{`hmn`}}, {Name: []string{`hu`}}, {Name: []string{`is`}}, {Name: []string{`ig`}}, {Name: []string{`id`}}, {Name: []string{`ga`}}, {Name: []string{`it`}}, {Name: []string{`ja`}}, {Name: []string{`jv`}}, {Name: []string{`kn`}}, {Name: []string{`kk`}}, {Name: []string{`km`}}, {Name: []string{`rw`}}, {Name: []string{`ko`}}, {Name: []string{`ku`}}, {Name: []string{`ky`}}, {Name: []string{`lo`}}, {Name: []string{`la`}}, {Name: []string{`lv`}}, {Name: []string{`lt`}}, {Name: []string{`lb`}}, {Name: []string{`mk`}}, {Name: []string{`mg`}}, {Name: []string{`ms`}}, {Name: []string{`ml`}}, {Name: []string{`mt`}}, {Name: []string{`mi`}}, {Name: []string{`mr`}}, {Name: []string{`mn`}}, {Name: []string{`ne`}}, {Name: []string{`no`}}, {Name: []string{`ny`}}, {Name: []string{`or`}}, {Name: []string{`ps`}}, {Name: []string{`fa`}}, {Name: []string{`pl`}}, {Name: []string{`pt`}}, {Name: []string{`pa`}}, {Name: []string{`ro`}}, {Name: []string{`ru`}}, {Name: []string{`sm`}}, {Name: []string{`gd`}}, {Name: []string{`sr`}}, {Name: []string{`sn`}}, {Name: []string{`sd`}}, {Name: []string{`si`}}, {Name: []string{`sk`}}, {Name: []string{`sl`}}, {Name: []string{`so`}}, {Name: []string{`st`}}, {Name: []string{`es`}}, {Name: []string{`su`}}, {Name: []string{`sw`}}, {Name: []string{`sv`}}, {Name: []string{`tg`}}, {Name: []string{`ta`}}, {Name: []string{`tt`}}, {Name: []string{`te`}}, {Name: []string{`th`}}, {Name: []string{`tr`}}, {Name: []string{`tk`}}, {Name: []string{`uk`}}, {Name: []string{`ur`}}, {Name: []string{`ug`}}, {Name: []string{`uz`}}, {Name: []string{`vi`}}, {Name: []string{`cy`}}, {Name: []string{`fy`}}, {Name: []string{`xh`}}, {Name: []string{`yi`}}, {Name: []string{`yo`}}, {Name: []string{`zu`}}},
				Generator:   nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"-u", "--username"},
			Description: `Login with this account ID`,
			Args: []model.Arg{{
				Name: "USERNAME",
			}},
		}, {
			Name:        []string{"-p", "--password"},
			Description: `Account password. If this option is left out, youtube-dl will ask interactively`,
			Args: []model.Arg{{
				Name: "PASSWORD",
			}},
		}, {
			Name:        []string{"-2", "--twofactor"},
			Description: `Two-factor authentication code`,
			Args: []model.Arg{{
				Name: "TWOFACTOR",
			}},
		}, {
			Name:        []string{"-n", "--netrc"},
			Description: `Use .netrc authentication data`,
		}, {
			Name:        []string{"--video-password"},
			Description: `Video password (vimeo, youku)`,
			Args: []model.Arg{{
				Name: "PASSWORD",
			}},
		}, {
			Name:        []string{"--ap-mso"},
			Description: `Adobe Pass multiple-system operator (TV provider) identifier`,
			Args: []model.Arg{{
				Name:      "MSO",
				Generator: nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"--ap-username"},
			Description: `Multiple-system operator account login`,
			Args: []model.Arg{{
				Name: "USERNAME",
			}},
		}, {
			Name:        []string{"--ap-password"},
			Description: `Multiple-system operator account password. If this option is left out, youtube-dl will ask interactively`,
			Args: []model.Arg{{
				Name: "PASSWORD",
			}},
		}, {
			Name:        []string{"--ap-list-mso"},
			Description: `List all supported multiple-system operators`,
		}, {
			Name:        []string{"-x", "--extract-audio"},
			Description: `Convert audio files to audio-only files (requires ffmpeg/avconv and ffprobe/avprobe)`,
		}, {
			Name:        []string{"--audio-format"},
			Description: `Specify audio format`,
			Args: []model.Arg{{
				Name:        "FORMAT",
				Suggestions: []model.Suggestion{{Name: []string{`best`}}, {Name: []string{`aac`}}, {Name: []string{`flac`}}, {Name: []string{`mp3`}}, {Name: []string{`m4a`}}, {Name: []string{`opus`}}, {Name: []string{`vorbis`}}, {Name: []string{`wav`}}},
			}},
		}, {
			Name:        []string{"--audio-quality"},
			Description: `Specify ffmpeg/avconv audio quality, insert a value between 0 (better) and 9 (worse) for VBR or a specific bitrate like 128K`,
			Args: []model.Arg{{
				Name: "QUALITY",
			}},
		}, {
			Name:        []string{"--recode-video"},
			Description: `Encode the video to another format if necessary`,
			Args: []model.Arg{{
				Name:        "FORMAT",
				Suggestions: []model.Suggestion{{Name: []string{`mp4`}}, {Name: []string{`flv`}}, {Name: []string{`ogg`}}, {Name: []string{`webm`}}, {Name: []string{`mkv`}}, {Name: []string{`avi`}}},
			}},
		}, {
			Name:        []string{"--postprocessor-args"},
			Description: `Give these arguments to the postprocessor`,
			Args: []model.Arg{{
				Name: "ARGS",
			}},
		}, {
			Name:        []string{"-k", "--keep-video"},
			Description: `Keep the video file on disk after the post-processing; the video is erased by default`,
		}, {
			Name:        []string{"--no-post-overwrites"},
			Description: `Do not overwrite post-processed files; the post-processed files are overwritten by default`,
		}, {
			Name:        []string{"--embed-subs"},
			Description: `Embed subtitles in the video (only for mp4, webm and mkv videos)`,
		}, {
			Name:        []string{"--embed-thumbnail"},
			Description: `Embed thumbnail in the audio as cover art`,
		}, {
			Name:        []string{"--embed-metadata"},
			Description: `Write metadata to the video file`,
		}, {
			Name:        []string{"--metadata-from-title"},
			Description: `Parse additional metadata like song title / artist from the video title. The format syntax is the same as --output. Regular expressions with named capture groups may also be used. The parsed parameters replace existing values`,
			Args: []model.Arg{{
				Name: "FORMAT",
			}},
		}, {
			Name:        []string{"--xattrs"},
			Description: `Write metadata to the video file's xattrs (using dublin core and xdg standards)`,
		}, {
			Name:        []string{"--fixup"},
			Description: `Automatically correct known faults of the file`,
			Args: []model.Arg{{
				Name: "POLICY",
				Suggestions: []model.Suggestion{{
					Name:        []string{`never`},
					Description: `Do nothing`,
				}, {
					Name:        []string{`warn`},
					Description: `Only emit a warning`,
				}, {
					Name:        []string{`detect_or_warn`},
					Description: `Fix file if we can, warn otherwise`,
				}},
			}},
		}, {
			Name:        []string{"--prefer-avconv"},
			Description: `Prefer avconv over ffmpeg for running the postprocessors`,
		}, {
			Name:        []string{"--prefer-ffmpeg"},
			Description: `Prefer ffmpeg over avconv for running the postprocessors (default)`,
		}, {
			Name:        []string{"--ffmpeg-location"},
			Description: `Location of the ffmpeg/avconv binary; either the path to the binary or its containing directory`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFolders, model.TemplateFilepaths},
				Name:      "PATH",
			}},
		}, {
			Name:        []string{"--exec"},
			Description: `Execute a command on the file after downloading and post-processing, similar to find's -exec syntax`,
			Args: []model.Arg{{
				Name: "CMD",
			}},
		}, {
			Name:        []string{"--convert-subs"},
			Description: `Convert the subtitles to other format`,
			Args: []model.Arg{{
				Name:        "FORMAT",
				Suggestions: []model.Suggestion{{Name: []string{`srt`}}, {Name: []string{`ass`}}, {Name: []string{`vtt`}}, {Name: []string{`lrc`}}},
			}},
		}},
	}
}
