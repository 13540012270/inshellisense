// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["create-nx-workspace"] = model.Subcommand{
		Name:        []string{"create-nx-workspace"},
		Description: `Create a new Nx workspace`,
		Args: []model.Arg{{
			Name:        "workspace",
			Description: `The name of the workspace`,
		}},
		Options: []model.Option{{
			Name:        []string{"--name"},
			Description: `Workspace name (e.g., org name)`,
			Args: []model.Arg{{
				Name:        "workspace",
				Description: `The name of the workspace`,
			}},
		}, {
			Name:        []string{"--preset"},
			Description: `What to create in a new workspace (options: "empty", "npm", "web-components", "angular", "angular-nest", "react", "react-express", "react-native", "next", "gatsby", "nest", "express")`,
			Args: []model.Arg{{
				Name: "preset",
				Suggestions: []model.Suggestion{{
					Name:        []string{`empty`},
					Description: `Empty [an empty workspace with a layout that works best for building apps]`,
				}, {
					Name:        []string{`npm`},
					Description: `Npm [an empty workspace set up to publish npm packages (similar to and compatible with yarn workspaces)]`,
				}, {
					Name:        []string{`web-components`},
					Description: `Web components [a workspace with a single app built using web components]`,
				}, {
					Name:        []string{`angular`},
					Description: `Angular [a workspace with a single Angular application]`,
				}, {
					Name:        []string{`angular-nest`},
					Description: `Angular-nest [a workspace with a full stack application (Angular + Nest)]`,
				}, {
					Name:        []string{`react`},
					Description: `React [a workspace with a single React application]`,
				}, {
					Name:        []string{`react-express`},
					Description: `React-express [a workspace with a full stack application (React + Express)]`,
				}, {
					Name:        []string{`react-native`},
					Description: `React-native [a workspace with a single React Native application]`,
				}, {
					Name:        []string{`next`},
					Description: `Next.js [a workspace with a single Next.js application]`,
				}, {
					Name:        []string{`gatsby`},
					Description: `Gatsby [a workspace with a single Gatsby application]`,
				}, {
					Name:        []string{`nest`},
					Description: `Nest [a workspace with a single Nest application]`,
				}, {
					Name:        []string{`express`},
					Description: `Express [a workspace with a single Express application]`,
				}},
			}},
		}, {
			Name:        []string{"--appName"},
			Description: `The name of the application created by some presets`,
			Args: []model.Arg{{
				Name:       "appName",
				IsOptional: true,
			}},
		}, {
			Name:        []string{"--cli"},
			Description: `CLI to power the Nx workspace (options: "nx", "angular")`,
			Args: []model.Arg{{
				Name: "cli",
				Suggestions: []model.Suggestion{{
					Name: []string{`nx`},
				}, {
					Name: []string{`angular`},
				}},
			}},
		}, {
			Name:        []string{"--style"},
			Description: `Default style option to be used when a non-empty preset is selected options: ("css", "scss", "less") plus ("styl") for all non-Angular and ("styled-components", "@emotion/styled", "styled-jsx") for React, Next.js, Gatsby`,
			Args: []model.Arg{{
				Name: "style",
				Suggestions: []model.Suggestion{{
					Name:        []string{`css`},
					Description: `CSS`,
				}, {
					Name:        []string{`scss`},
					Description: `SASS(.scss) [ http://sass-lang.com ]`,
				}, {
					Name:        []string{`less`},
					Description: `LESS [ http://lesscss.org ]`,
				}, {
					Name:        []string{`styl`},
					Description: `Stylus(.styl) [ http://stylus-lang.com ]`,
				}, {
					Name:        []string{`styled-components`},
					Description: `Styled-components [ https://styled-components.com ]`,
				}, {
					Name:        []string{`@emotion/styled`},
					Description: `Emotion [ https://emotion.sh ]`,
				}, {
					Name:        []string{`styled-jsx`},
					Description: `Styled-jsx [ https://www.npmjs.com/package/styled-jsx ]`,
				}},
			}},
		}, {
			Name:        []string{"--interactive"},
			Description: `Enable interactive mode when using presets (boolean)`,
			Args: []model.Arg{{
				Name: "interactive",
				Suggestions: []model.Suggestion{{
					Name: []string{`true`},
				}, {
					Name: []string{`false`},
				}},
				IsOptional: true,
			}},
		}, {
			Name:        []string{"--packageManager", "--pm"},
			Description: `Package manager to use (npm, yarn, pnpm)`,
			Args: []model.Arg{{
				Name: "packageManager",
				Suggestions: []model.Suggestion{{
					Name: []string{`npm`},
				}, {
					Name: []string{`yarn`},
				}, {
					Name: []string{`pnpm`},
				}},
			}},
		}, {
			Name:        []string{"--nx-cloud"},
			Description: `Use Nx Cloud (boolean)`,
			Args: []model.Arg{{
				Name: "nx-cloud",
				Suggestions: []model.Suggestion{{
					Name: []string{`true`},
				}, {
					Name: []string{`false`},
				}},
				IsOptional: true,
			}},
		}, {
			Name:        []string{"--help", "-h"},
			Description: `Show help for create-nx-workspace`,
		}},
	}
}
