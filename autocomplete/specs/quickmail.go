// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["quickmail"] = model.Subcommand{
		Name:        []string{"quickmail"},
		Description: `Quickmail is a terminal-based solution to send mails`,
		Options: []model.Option{{
			Name:        []string{"-v", "--version"},
			Description: `Output cli version`,
		}, {
			Name:        []string{"-h", "--help"},
			Description: `Output cli help`,
		}},
		Subcommands: []model.Subcommand{{
			Name:        []string{"init"},
			Description: `Initialise cli`,
			Args: []model.Arg{{
				Templates:  []model.Template{model.TemplateFilepaths},
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Get help regarding init command`,
			}},
		}, {
			Name:        []string{"clear"},
			Description: `Clear the files stored locally`,
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Get help regarding clear command`,
			}, {
				Name:        []string{"-j", "--justdoit"},
				Description: `Clear entire cli storage including token`,
			}},
		}, {
			Name:        []string{"send"},
			Description: `Send mail`,
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Get help regarding send command`,
			}, {
				Name:        []string{"-r", "--receiver"},
				Description: `Receiver's email address`,
				Args: []model.Arg{{
					Name: "receiver",
				}},
			}, {
				Name:        []string{"-sub", "--subject"},
				Description: `Subject of mail`,
				Args: []model.Arg{{
					Name: "Subject",
				}},
			}, {
				Name:        []string{"-t", "--template"},
				Description: `Templates for mail body`,
				Args: []model.Arg{{
					Name:       "Template",
					Generator:  nil, // TODO: port over generator
					IsOptional: true,
				}},
			}, {
				Name:        []string{"-b", "--body"},
				Description: `Body of the mail`,
				Args: []model.Arg{{
					Name:       "Body",
					IsOptional: true,
				}},
			}, {
				Name:        []string{"-a", "--attachment"},
				Description: `Path to attachment file`,
				Args: []model.Arg{{
					Templates:  []model.Template{model.TemplateFilepaths},
					Name:       "Attachment file",
					IsOptional: true,
				}},
			}, {
				Name:        []string{"-l", "--lessgo"},
				Description: `Skip confirmation, and send mail`,
			}},
		}, {
			Name:        []string{"template"},
			Description: `Manage templates`,
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Get help regarding template command`,
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"add"},
				Description: `Add a new template`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Get help regarding template add subcommand`,
				}, {
					Name:        []string{"-n"},
					Description: `Set template id`,
					Args: []model.Arg{{
						Name: "Template id",
					}},
				}},
			}, {
				Name:        []string{"listall"},
				Description: `List all templates stored`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Get help regarding template listall subcommand`,
				}},
			}, {
				Name:        []string{"edit"},
				Description: `Edit any particular template`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Get help regarding template edit subcommand`,
				}, {
					Name:        []string{"-n"},
					Description: `Edit template by id`,
					Args: []model.Arg{{
						Name:      "Template id",
						Generator: nil, // TODO: port over generator
					}},
				}},
			}},
		}},
	}
}
