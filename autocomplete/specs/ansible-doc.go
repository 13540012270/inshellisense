// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["ansible-doc"] = model.Subcommand{
		Name:        []string{"ansible-doc"},
		Description: `Displays information on modules installed in Ansible libraries`,
		Args: []model.Arg{{
			Name:       "plugin",
			Generator:  nil, // TODO: port over generator
			IsVariadic: true,
		}},
		Options: []model.Option{{
			Name:        []string{"--metadata-dump"},
			Description: `For internal testing only Dump json metadata for all plugins`,
			Args: []model.Arg{{
				IsOptional: true,
			}},
		}, {
			Name:        []string{"--playbook-dir"},
			Description: `Sets the relative path for many features including roles/ group_vars/ etc`,
			Args: []model.Arg{{
				Templates:   []model.Template{model.TemplateFilepaths},
				Name:        "BASEDIR",
				Description: `Base directory`,
			}},
		}, {
			Name:        []string{"--version"},
			Description: `Shows version number, config file location, module search path, module location, executable location and exit`,
			Args: []model.Arg{{
				IsOptional: true,
			}},
		}, {
			Name:        []string{"--list_files", "-F"},
			Description: `Show plugin names and their source files without summaries (implies --list)`,
			Args: []model.Arg{{
				IsOptional: true,
			}},
		}, {
			Name:        []string{"--module-path", "-M"},
			Description: `Prepend colon-separated path(s) to module library`,
			Args: []model.Arg{{
				IsOptional: true,
			}},
		}, {
			Name:        []string{"--entry-point", "-E"},
			Description: `Select the entry point for role(s)`,
			Args: []model.Arg{{
				Name: "ENTRY_POINT",
			}},
		}, {
			Name:        []string{"--help", "-h"},
			Description: `Show help and exit`,
			Args: []model.Arg{{
				IsOptional: true,
			}},
		}, {
			Name:        []string{"--json", "-j"},
			Description: `Change output into json format`,
			Args: []model.Arg{{
				IsOptional: true,
			}},
		}, {
			Name:        []string{"--list", "-l"},
			Description: `List available plugins; a supplied argument will be used for filtering (can be a namespace or full collection name)`,
			Args: []model.Arg{{
				Name:       "NAMESPACE|COLLECTION",
				IsOptional: true,
			}},
		}, {
			Name:        []string{"--roles-path", "-r"},
			Description: `The path to the directory containing your roles`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "PATH",
			}},
		}, {
			Name:        []string{"--snippet", "-s"},
			Description: `Show playbook snippet for these plugin types: inventory, lookup, module`,
			Args: []model.Arg{{
				Name:        "PLUGIN_TYPE",
				Suggestions: []model.Suggestion{{Name: []string{`inventory`}}, {Name: []string{`lookup`}}, {Name: []string{`module`}}},
			}},
		}, {
			Name:        []string{"--type", "-t"},
			Description: `Choose which plugin type (defaults to "module")`,
			Args: []model.Arg{{
				Name:        "PLUGIN_TYPE",
				Suggestions: []model.Suggestion{{Name: []string{`become`}}, {Name: []string{`cache`}}, {Name: []string{`callback`}}, {Name: []string{`cliconf`}}, {Name: []string{`connection`}}, {Name: []string{`httpapi`}}, {Name: []string{`inventory`}}, {Name: []string{`lookup`}}, {Name: []string{`netconf`}}, {Name: []string{`shell`}}, {Name: []string{`vars`}}, {Name: []string{`module`}}, {Name: []string{`strategy`}}, {Name: []string{`role`}}, {Name: []string{`keyword`}}},
			}},
		}, {
			Name:        []string{"--verbose"},
			Description: `Verbose mode (-vvv for more, -vvvv to enable connection debugging)`,
			Args: []model.Arg{{
				IsOptional: true,
			}},
			ExclusiveOn: []string{"-v"},
		}, {
			Name:        []string{"-v"},
			Description: `Verbose mode (-vvv for more, -vvvv to enable connection debugging)`,
			Args: []model.Arg{{
				IsOptional: true,
			}},
			ExclusiveOn: []string{"--verbose"},
		}},
	}
}
