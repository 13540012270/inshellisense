// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.
//
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

package specs

import (
	"github.com/microsoft/clac/autocomplete/model"
)

func init() {
	Specs["supabase"] = model.Subcommand{
		Name:        []string{"supabase"},
		Description: `Supabase CLI`,
		Options: []model.Option{{
			Name:         []string{"--debug"},
			Description:  `Output debug logs to stderr`,
			IsPersistent: true,
		}, {
			Name:         []string{"--help", "-h"},
			Description:  `Display help`,
			IsPersistent: true,
		}},
		Subcommands: []model.Subcommand{{
			Name:        []string{"completion"},
			Description: `Generate the autocompletion script for the specified shell`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"bash"},
				Description: `Generate the autocompletion script for bash`,
				Options: []model.Option{{
					Name:        []string{"--no-descriptions"},
					Description: `Disable completion descriptions`,
				}},
			}, {
				Name:        []string{"fish"},
				Description: `Generate the autocompletion script for fish`,
				Options: []model.Option{{
					Name:        []string{"--no-descriptions"},
					Description: `Disable completion descriptions`,
				}},
			}, {
				Name:        []string{"powershell"},
				Description: `Generate the autocompletion script for powershell`,
				Options: []model.Option{{
					Name:        []string{"--no-descriptions"},
					Description: `Disable completion descriptions`,
				}},
			}, {
				Name:        []string{"zsh"},
				Description: `Generate the autocompletion script for zsh`,
				Options: []model.Option{{
					Name:        []string{"--no-descriptions"},
					Description: `Disable completion descriptions`,
				}},
			}},
		}, {
			Name:        []string{"db"},
			Description: `Manage local Postgres databases`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"branch"},
				Description: `Manage local database branches`,
				Subcommands: []model.Subcommand{{
					Name:        []string{"create"},
					Description: `Create a branch`,
				}, {
					Name:        []string{"delete"},
					Description: `Delete a branch`,
				}, {
					Name:        []string{"list"},
					Description: `List branches`,
				}, {
					Name:        []string{"switch"},
					Description: `Switch the active branch`,
				}},
			}, {
				Name:        []string{"diff"},
				Description: `Diffs the local database for schema changes`,
				Options: []model.Option{{
					Name:        []string{"--file", "-f"},
					Description: `Saves schema diff to a file`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "file",
					}},
				}, {
					Name:        []string{"--schema", "-s"},
					Description: `List of schema to include`,
					Args: []model.Arg{{
						Name: "schema",
					}},
				}, {
					Name:        []string{"--use-migra"},
					Description: `Use migra to generate schema diff`,
				}},
			}, {
				Name:        []string{"lint"},
				Description: `Checks local database for typing error`,
				Options: []model.Option{{
					Name:        []string{"--level"},
					Description: `Error level to emit`,
					Args: []model.Arg{{
						Name: "level",
					}},
				}, {
					Name:        []string{"--schema", "-s"},
					Description: `List of schema to include`,
					Args: []model.Arg{{
						Name: "schema",
					}},
				}},
			}, {
				Name:        []string{"push"},
				Description: `Push new migrations to the remote database`,
				Options: []model.Option{{
					Name:        []string{"--dry-run"},
					Description: `Print the migrations that would be applied, but don't actually apply them`,
				}, {
					Name:        []string{"--password", "-p"},
					Description: `Password to your remote Postgres database`,
					Args: []model.Arg{{
						Name: "password",
					}},
				}},
			}, {
				Name:        []string{"remote"},
				Description: `Manage remote databases`,
				Options: []model.Option{{
					Name:        []string{"--password", "-p"},
					Description: `Password to your remote Postgres database`,
					Args: []model.Arg{{
						Name: "password",
					}},
					IsPersistent: true,
				}},
				Subcommands: []model.Subcommand{{
					Name:        []string{"changes"},
					Description: `Show changes on the remote database`,
				}, {
					Name:        []string{"commit"},
					Description: `Commit remote changes as a new migration`,
				}},
			}, {
				Name:        []string{"reset"},
				Description: `Resets the local database to current migrations`,
			}},
		}, {
			Name:        []string{"functions"},
			Description: `Manage Supabase Edge functions`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"delete"},
				Description: `Delete a Function from Supabase`,
				Options: []model.Option{{
					Name:        []string{"--project-ref"},
					Description: `Project ref of the Supabase project`,
					Args: []model.Arg{{
						Name: "project-ref",
					}},
				}},
			}, {
				Name:        []string{"deploy"},
				Description: `Deploy a Function to Supabase`,
				Options: []model.Option{{
					Name:        []string{"--no-verify-jwt"},
					Description: `Disable JWT verification for the Function`,
				}, {
					Name:        []string{"--project-ref"},
					Description: `Project ref of the Supabase project`,
					Args: []model.Arg{{
						Name: "project-ref",
					}},
				}},
			}, {
				Name:        []string{"new"},
				Description: `Create a new Function locally`,
			}, {
				Name:        []string{"serve"},
				Description: `Serve a Function locally`,
				Options: []model.Option{{
					Name:        []string{"--env-file"},
					Description: `Path to an env file to be populated to the Function environment`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "env-file",
					}},
				}, {
					Name:        []string{"--no-verify-jwt"},
					Description: `Disable JWT verification for the Function`,
				}},
			}},
		}, {
			Name:        []string{"gen"},
			Description: `Run code generation tools`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"types"},
				Description: `Generate types from Postgres schema`,
				Subcommands: []model.Subcommand{{
					Name:        []string{"typescript"},
					Description: `Generate types for TypeScript`,
					Options: []model.Option{{
						Name:        []string{"--db-url"},
						Description: `Generate types from a database url`,
						Args: []model.Arg{{
							Name: "db-url",
						}},
					}, {
						Name:        []string{"--local"},
						Description: `Generate types from the local dev database`,
					}},
				}},
			}},
		}, {
			Name:        []string{"init"},
			Description: `Initialize a local project`,
		}, {
			Name:        []string{"link"},
			Description: `Link to a Supabase project`,
			Options: []model.Option{{
				Name:        []string{"--password", "-p"},
				Description: `Password to your remote Postgres database`,
				Args: []model.Arg{{
					Name: "password",
				}},
			}, {
				Name:        []string{"--project-ref"},
				Description: `Project ref of the Supabase project`,
				Args: []model.Arg{{
					Name: "project-ref",
				}},
			}},
		}, {
			Name:        []string{"login"},
			Description: `Authenticate using an access token`,
		}, {
			Name:        []string{"migration"},
			Description: `Manage database migration scripts`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"list"},
				Description: `List local and remote migrations`,
				Options: []model.Option{{
					Name:        []string{"--password", "-p"},
					Description: `Password to your remote Postgres database`,
					Args: []model.Arg{{
						Name: "password",
					}},
				}},
			}, {
				Name:        []string{"new"},
				Description: `Create an empty migration script`,
			}},
		}, {
			Name:        []string{"orgs"},
			Description: `Manage Supabase organizations`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"list"},
				Description: `List all organizations`,
			}},
		}, {
			Name:        []string{"projects"},
			Description: `Manage Supabase projects`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"create"},
				Description: `Create a project on Supabase`,
				Options: []model.Option{{
					Name:        []string{"--db-password"},
					Description: `Database password of the project`,
					Args: []model.Arg{{
						Name: "db-password",
					}},
				}, {
					Name:        []string{"--interactive", "-i"},
					Description: `Enables interactive mode`,
				}, {
					Name:        []string{"--org-id"},
					Description: `Organization ID to create the project in`,
					Args: []model.Arg{{
						Name: "org-id",
					}},
				}, {
					Name:        []string{"--plan"},
					Description: `Select a plan that suits your needs`,
					Args: []model.Arg{{
						Name: "plan",
					}},
				}, {
					Name:        []string{"--region"},
					Description: `Select a region close to you for the best performance`,
					Args: []model.Arg{{
						Name: "region",
					}},
				}},
			}, {
				Name:        []string{"list"},
				Description: `List all Supabase projects`,
			}},
		}, {
			Name:        []string{"secrets"},
			Description: `Manage Supabase secrets`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"list"},
				Description: `List all secrets on Supabase`,
			}, {
				Name:        []string{"set"},
				Description: `Set a secret(s) on Supabase`,
				Options: []model.Option{{
					Name:        []string{"--env-file"},
					Description: `Read secrets from a .env file`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "env-file",
					}},
				}},
			}, {
				Name:        []string{"unset"},
				Description: `Unset a secret(s) on Supabase`,
			}},
		}, {
			Name:        []string{"start"},
			Description: `Start containers for Supabase local development`,
		}, {
			Name:        []string{"status"},
			Description: `Show status of local Supabase containers`,
		}, {
			Name:        []string{"stop"},
			Description: `Stop all local Supabase containers`,
		}, {
			Name:        []string{"help"},
			Description: `Help about any command`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"completion"},
				Description: `Generate the autocompletion script for the specified shell`,
				Subcommands: []model.Subcommand{{
					Name:        []string{"bash"},
					Description: `Generate the autocompletion script for bash`,
				}, {
					Name:        []string{"fish"},
					Description: `Generate the autocompletion script for fish`,
				}, {
					Name:        []string{"powershell"},
					Description: `Generate the autocompletion script for powershell`,
				}, {
					Name:        []string{"zsh"},
					Description: `Generate the autocompletion script for zsh`,
				}},
			}, {
				Name:        []string{"db"},
				Description: `Manage local Postgres databases`,
				Subcommands: []model.Subcommand{{
					Name:        []string{"branch"},
					Description: `Manage local database branches`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"create"},
						Description: `Create a branch`,
					}, {
						Name:        []string{"delete"},
						Description: `Delete a branch`,
					}, {
						Name:        []string{"list"},
						Description: `List branches`,
					}, {
						Name:        []string{"switch"},
						Description: `Switch the active branch`,
					}},
				}, {
					Name:        []string{"diff"},
					Description: `Diffs the local database for schema changes`,
				}, {
					Name:        []string{"lint"},
					Description: `Checks local database for typing error`,
				}, {
					Name:        []string{"push"},
					Description: `Push new migrations to the remote database`,
				}, {
					Name:        []string{"remote"},
					Description: `Manage remote databases`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"changes"},
						Description: `Show changes on the remote database`,
					}, {
						Name:        []string{"commit"},
						Description: `Commit remote changes as a new migration`,
					}},
				}, {
					Name:        []string{"reset"},
					Description: `Resets the local database to current migrations`,
				}},
			}, {
				Name:        []string{"functions"},
				Description: `Manage Supabase Edge functions`,
				Subcommands: []model.Subcommand{{
					Name:        []string{"delete"},
					Description: `Delete a Function from Supabase`,
				}, {
					Name:        []string{"deploy"},
					Description: `Deploy a Function to Supabase`,
				}, {
					Name:        []string{"new"},
					Description: `Create a new Function locally`,
				}, {
					Name:        []string{"serve"},
					Description: `Serve a Function locally`,
				}},
			}, {
				Name:        []string{"gen"},
				Description: `Run code generation tools`,
				Subcommands: []model.Subcommand{{
					Name:        []string{"types"},
					Description: `Generate types from Postgres schema`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"typescript"},
						Description: `Generate types for TypeScript`,
					}},
				}},
			}, {
				Name:        []string{"init"},
				Description: `Initialize a local project`,
			}, {
				Name:        []string{"link"},
				Description: `Link to a Supabase project`,
			}, {
				Name:        []string{"login"},
				Description: `Authenticate using an access token`,
			}, {
				Name:        []string{"migration"},
				Description: `Manage database migration scripts`,
				Subcommands: []model.Subcommand{{
					Name:        []string{"list"},
					Description: `List local and remote migrations`,
				}, {
					Name:        []string{"new"},
					Description: `Create an empty migration script`,
				}},
			}, {
				Name:        []string{"orgs"},
				Description: `Manage Supabase organizations`,
				Subcommands: []model.Subcommand{{
					Name:        []string{"list"},
					Description: `List all organizations`,
				}},
			}, {
				Name:        []string{"projects"},
				Description: `Manage Supabase projects`,
				Subcommands: []model.Subcommand{{
					Name:        []string{"create"},
					Description: `Create a project on Supabase`,
				}, {
					Name:        []string{"list"},
					Description: `List all Supabase projects`,
				}},
			}, {
				Name:        []string{"secrets"},
				Description: `Manage Supabase secrets`,
				Subcommands: []model.Subcommand{{
					Name:        []string{"list"},
					Description: `List all secrets on Supabase`,
				}, {
					Name:        []string{"set"},
					Description: `Set a secret(s) on Supabase`,
				}, {
					Name:        []string{"unset"},
					Description: `Unset a secret(s) on Supabase`,
				}},
			}, {
				Name:        []string{"start"},
				Description: `Start containers for Supabase local development`,
			}, {
				Name:        []string{"status"},
				Description: `Show status of local Supabase containers`,
			}, {
				Name:        []string{"stop"},
				Description: `Stop all local Supabase containers`,
			}},
		}},
	}
}
