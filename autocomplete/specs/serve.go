// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["serve"] = model.Subcommand{
		Name:        []string{"serve"},
		Description: `Static file serving and directory listing`,
		Args: []model.Arg{{
			Templates: []model.Template{model.TemplateFolders},
			Name:      "location",
		}},
		Options: []model.Option{{
			Name:        []string{"-h", "--help"},
			Description: `Shows help message`,
		}, {
			Name:        []string{"-v", "--version"},
			Description: `Displays the current version of serve`,
		}, {
			Name:        []string{"-l", "--listen"},
			Description: `Specify a URI endpoint on which to listen - more than one may be specified to listen in multiple places`,
			Args: []model.Arg{{
				Name: "listen_uri",
				Suggestions: []model.Suggestion{{
					Name:        []string{`port`},
					Description: `E.g. serve --listen 1234`,
				}, {
					Name:        []string{`host/port`},
					Description: `E.g. serve --listen tcp://hostname:1234`,
				}, {
					Name:        []string{`unix domain`},
					Description: `E.g. serve --listen unix:/path/to/socket.sock`,
				}, {
					Name:        []string{`windows pipe`},
					Description: `E.g. serve -l pipe:\.pipePipeName`,
				}},
			}},
		}, {
			Name:        []string{"-p"},
			Description: `Specify custom port`,
			Args: []model.Arg{{
				Name: "port",
			}},
		}, {
			Name:        []string{"-d", "--debug"},
			Description: `Show debugging information`,
		}, {
			Name:        []string{"-s", "--single"},
			Description: `Rewrite all not-found requests to "index.html"`,
		}, {
			Name:        []string{"-c", "--config"},
			Description: `Specify custom path to "serve.json"`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "path to config file",
			}},
		}, {
			Name:        []string{"-C", "--cors"},
			Description: `Enable CORS, sets "Access-Control-Allow-Origin" to "*"`,
		}, {
			Name:        []string{"-n", "--no-clipboard"},
			Description: `Do not copy the local address to the clipboard`,
		}, {
			Name:        []string{"-u", "--no-compression"},
			Description: `Do not compress files`,
		}, {
			Name:        []string{"--no-etag"},
			Description: `Send "Last-Modified" header instead of "ETag"`,
		}, {
			Name:        []string{"-S", "--symlinks"},
			Description: `Resolve symlinks instead of showing 404 errors`,
		}, {
			Name:        []string{"--ssl-cert"},
			Description: `Optional path to an SSL/TLS certificate to serve with HTTPS`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "path to SSL/TLS certificate",
			}},
		}, {
			Name:        []string{"--ssl-key"},
			Description: `Optional path to the SSL/TLS certificate's private key`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "path to private key",
			}},
		}, {
			Name:        []string{"--ssl-pass"},
			Description: `Optional path to the SSL/TLS certificate's passphrase`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "path to passphrase",
			}},
		}, {
			Name:        []string{"--no-port-switching"},
			Description: `Do not open a port other than the one specified when it's taken`,
		}},
	}
}
