// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["mkdocs"] = model.Subcommand{
		Name:        []string{"mkdocs"},
		Description: `Project documentation with Markdown`,
		Options: []model.Option{{
			Name:        []string{"-h", "--help"},
			Description: `Show help message and exit`,
		}, {
			Name:        []string{"-V", "--version"},
			Description: `Show the version and exit`,
		}},
		Subcommands: []model.Subcommand{{
			Name:        []string{"build"},
			Description: `Build the MkDocs documentation`,
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `help for build`,
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Silence warnings`,
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Enable verbose output`,
			}, {
				Name:        []string{"-f", "--config-file"},
				Description: `Provide a specific MkDocs config`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
				}},
			}, {
				Name:        []string{"-s", "--strict"},
				Description: `Enable strict mode. This will cause MkDocs to abort the build on any warnings`,
			}, {
				Name:        []string{"-t", "--theme"},
				Description: `The theme to use when building your documentation`,
				Args: []model.Arg{{
					Name: "theme",
				}},
			}, {
				Name:        []string{"--use-directory-urls"},
				Description: `Use directory URLs when building pages (the default)`,
			}, {
				Name:        []string{"--no-directory-urls"},
				Description: `Don't use directory URLs when building pages`,
			}, {
				Name:        []string{"-c", "--clean"},
				Description: `Remove old files from the site directory before building (the default)`,
			}, {
				Name:        []string{"--dirty"},
				Description: `Only rebuild pages that have been modified since last build`,
			}, {
				Name:        []string{"-d", "--site-dir"},
				Description: `The directory to output the result of the documentation build`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
				}},
			}},
		}, {
			Name:        []string{"gh-deploy"},
			Description: `Deploy your documentation to GitHub Pages`,
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `help for gh-deploy`,
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Silence warnings`,
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Enable verbose output`,
			}, {
				Name:        []string{"-f", "--config-file"},
				Description: `Provide a specific MkDocs config`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
				}},
			}, {
				Name:        []string{"-s", "--strict"},
				Description: `Enable strict mode. This will cause MkDocs to abort the build on any warnings`,
			}, {
				Name:        []string{"-t", "--theme"},
				Description: `The theme to use when building your documentation`,
				Args: []model.Arg{{
					Name: "theme",
				}},
			}, {
				Name:        []string{"--use-directory-urls"},
				Description: `Use directory URLs when building pages (the default)`,
			}, {
				Name:        []string{"--no-directory-urls"},
				Description: `Don't use directory URLs when building pages`,
			}, {
				Name:        []string{"-c", "--clean"},
				Description: `Remove old files from the site directory before building (the default)`,
			}, {
				Name:        []string{"--dirty"},
				Description: `Only rebuild pages that have been modified since last build`,
			}, {
				Name:        []string{"-m", "--message"},
				Description: `A commit message to use when committing to the GitHub Pages remote branch. Commit {sha} and MkDocs {version} are available as expansions`,
				Args: []model.Arg{{
					Name: "message",
				}},
			}, {
				Name:        []string{"-b", "-remote-branch"},
				Description: `The remote branch to commit to for GitHub Pages. This overrides the value specified in config`,
				Args: []model.Arg{{
					Name: "branch name",
				}},
			}, {
				Name:        []string{"-r", "--remote-name"},
				Description: `The remote name to commit to for GitHub Pages. This overrides the value specified in config`,
				Args: []model.Arg{{
					Name: "remote name",
				}},
			}, {
				Name:        []string{"--force"},
				Description: `Force the push to the repository`,
			}, {
				Name:        []string{"--no-history"},
				Description: `Replace the whole Git history with one new commit`,
			}, {
				Name:        []string{"--ignore-version"},
				Description: `Ignore check that build is not being deployed with an older version of MkDocs`,
			}, {
				Name:        []string{"--shell"},
				Description: `Use the shell when invoking Git`,
			}},
		}, {
			Name:        []string{"new"},
			Description: `Create a new MkDocs project`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFolders},
			}},
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `help for new`,
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Silence warnings`,
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Enable verbose output`,
			}},
		}, {
			Name:        []string{"serve"},
			Description: `Run the builtin development server`,
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `help for serve`,
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Silence warnings`,
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Enable verbose output`,
			}, {
				Name:        []string{"-f", "--config-file"},
				Description: `Provide a specific MkDocs config`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
				}},
			}, {
				Name:        []string{"-s", "--strict"},
				Description: `Enable strict mode. This will cause MkDocs to abort the build on any warnings`,
			}, {
				Name:        []string{"-t", "--theme"},
				Description: `The theme to use when building your documentation`,
				Args: []model.Arg{{
					Name: "theme",
				}},
			}, {
				Name:        []string{"--use-directory-urls"},
				Description: `Use directory URLs when building pages (the default)`,
			}, {
				Name:        []string{"--no-directory-urls"},
				Description: `Don't use directory URLs when building pages`,
			}, {
				Name:        []string{"-a", "--dev-addr"},
				Description: `IP address and port to serve documentation locally (default: localhost:8000)`,
				Args: []model.Arg{{
					Name: "IP:PORT",
				}},
			}, {
				Name:        []string{"--live-reload"},
				Description: `Enable the live reloading in the development server (this is the default)`,
			}, {
				Name:        []string{"--no-reload"},
				Description: `Disable the live reloading in the development server`,
			}, {
				Name:        []string{"--dirtyreload"},
				Description: `Enable the live reloading in the development server, but only re-build files that have changed`,
			}, {
				Name:        []string{"--watch-theme"},
				Description: `Include the theme in list of files to watch for live reloading. Ignored when live reload is not used`,
			}, {
				Name:        []string{"-w", "--watch"},
				Description: `A directory or file to watch for live reloading. Can be supplied multiple times`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders, model.TemplateFilepaths},
				}},
			}},
		}},
	}
}
