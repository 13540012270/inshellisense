// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.
//
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

package specs

import (
	"github.com/microsoft/clac/autocomplete/model"
)

func init() {
	Specs["chown"] = model.Subcommand{
		Name:        []string{"chown"},
		Description: `Change the user and/or group ownership of a given file, directory, or symbolic link`,
		Args: []model.Arg{{
			Name:      "owner[:group] or :group",
			Generator: nil, // TODO: port over generator
		}, {
			Templates:  []model.Template{model.TemplateFilepaths, model.TemplateFolders},
			Name:       "file/directory",
			IsVariadic: true,
		}},
		Options: []model.Option{{
			Name:        []string{"-f"},
			Description: `Don't report any failure to change file owner or group, nor modify the exit status to reflect such failures`,
		}, {
			Name:        []string{"-h"},
			Description: `If the file is a symbolic link, change the user ID and/or the group ID of the link itself`,
		}, {
			Name:        []string{"-n"},
			Description: `Interpret user ID and group ID as numeric, avoiding name lookups`,
		}, {
			Name:        []string{"-v"},
			Description: `Cause chown to be verbose, showing files as the owner is modified`,
		}, {
			Name:        []string{"-R"},
			Description: `Change the user ID and/or the group ID for the file hierarchies rooted in the files instead of just the files themselves`,
		}, {
			Name:        []string{"-H"},
			Description: `If the -R option is specified, symbolic links on the command line are followed`,
			ExclusiveOn: []string{"-L", "-P"},
		}, {
			Name:        []string{"-L"},
			Description: `If the -R option is specified, all symbolic links are followed`,
			ExclusiveOn: []string{"-H", "-P"},
		}, {
			Name:        []string{"-P"},
			Description: `If the -R option is specified, no symbolic links are followed`,
			ExclusiveOn: []string{"-H", "-L"},
		}},
	}
}
