// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.
//
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

package specs

import (
	"github.com/microsoft/clac/autocomplete/model"
)

func init() {
	Specs["gltfjsx"] = model.Subcommand{
		Name:        []string{"gltfjsx"},
		Description: `GLTF to JSX converter`,
		Args: []model.Arg{{
			Templates: []model.Template{model.TemplateFilepaths},
			Name:      "file",
		}},
		Options: []model.Option{{
			Name:        []string{"-t", "--types"},
			Description: `Add Typescript definitions`,
		}, {
			Name:        []string{"-v", "--verbose"},
			Description: `Verbose output w/ names and empty groups`,
		}, {
			Name:        []string{"-m", "--meta"},
			Description: `Include metadata (as userData)`,
		}, {
			Name:        []string{"-s", "--shadows"},
			Description: `Let meshes cast and receive shadows`,
		}, {
			Name:        []string{"-w", "--printwidth"},
			Description: `Prettier printWidth (default: 120)`,
			Args: []model.Arg{{
				Name: "width",
			}},
		}, {
			Name:        []string{"-p", "--precision"},
			Description: `Number of fractional digits (default: 2)`,
			Args: []model.Arg{{
				Name: "digits",
			}},
		}, {
			Name:        []string{"-d", "--draco"},
			Description: `Draco binary path`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "path",
			}},
		}, {
			Name:        []string{"-r", "--root"},
			Description: `Sets directory from which .gltf file is served`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFolders},
				Name:      "root",
			}},
		}, {
			Name:        []string{"-D", "--debug"},
			Description: `Debug output`,
		}},
	}
}
