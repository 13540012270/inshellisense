// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.
//
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

package specs

import (
	"github.com/microsoft/clac/autocomplete/model"
)

func init() {
	Specs["okteto"] = model.Subcommand{
		Name:        []string{"okteto"},
		Description: `Okteto - Remote Development Environments powered by Kubernetes`,
		Options: []model.Option{{
			Name:        []string{"--loglevel", "-l"},
			Description: `Amount of information outputted (debug, info, warn, error)`,
			Args: []model.Arg{{
				Name: "loglevel",
			}},
		}, {
			Name:        []string{"--output", "-o"},
			Description: `Output format (tty, plain, json)`,
			Args: []model.Arg{{
				Name: "output",
			}},
		}, {
			Name:        []string{"--help", "-h"},
			Description: `Help for okteto`,
		}},
		Subcommands: []model.Subcommand{{
			Name:        []string{"analytics"},
			Description: `Enable / Disable analytics`,
			Options: []model.Option{{
				Name:        []string{"--loglevel", "-l"},
				Description: `Amount of information outputted (debug, info, warn, error)`,
				Args: []model.Arg{{
					Name: "loglevel",
				}},
			}, {
				Name:        []string{"--output", "-o"},
				Description: `Output format (tty, plain, json)`,
				Args: []model.Arg{{
					Name: "output",
				}},
			}, {
				Name:        []string{"--disable", "-d"},
				Description: `Disable analytics`,
			}, {
				Name:        []string{"--help", "-h"},
				Description: `Help for analytics`,
			}},
		}, {
			Name:        []string{"build"},
			Description: `Build (and optionally push) a Docker image`,
			Options: []model.Option{{
				Name:        []string{"--loglevel", "-l"},
				Description: `Amount of information outputted (debug, info, warn, error)`,
				Args: []model.Arg{{
					Name: "loglevel",
				}},
			}, {
				Name:        []string{"--output", "-o"},
				Description: `Output format (tty, plain, json)`,
				Args: []model.Arg{{
					Name: "output",
				}},
			}, {
				Name:        []string{"--build-arg"},
				Description: `Set build-time variables`,
				Args: []model.Arg{{
					Name: "build-arg",
				}},
			}, {
				Name:        []string{"--cache-from"},
				Description: `Cache source images`,
				Args: []model.Arg{{
					Name: "cache-from",
				}},
			}, {
				Name:        []string{"--file", "-f"},
				Description: `Name of the Dockerfile (Default is 'PATH/Dockerfile')`,
				Args: []model.Arg{{
					Name: "file",
				}},
			}, {
				Name:        []string{"--namespace"},
				Description: `Namespace against which the image will be consumed. Default is the one defined at okteto context or okteto manifest`,
				Args: []model.Arg{{
					Name: "namespace",
				}},
			}, {
				Name:        []string{"--no-cache"},
				Description: `Do not use cache when building the image`,
			}, {
				Name:        []string{"--progress"},
				Description: `Show plain/tty build output`,
				Args: []model.Arg{{
					Name: "progress",
				}},
			}, {
				Name:        []string{"--secret"},
				Description: `Secret files exposed to the build. Format: id=mysecret,src=/local/secret`,
				Args: []model.Arg{{
					Name: "secret",
				}},
			}, {
				Name:        []string{"--tag", "-t"},
				Description: `Name and optionally a tag in the 'name:tag' format (it is automatically pushed)`,
				Args: []model.Arg{{
					Name: "tag",
				}},
			}, {
				Name:        []string{"--target"},
				Description: `Set the target build stage to build`,
				Args: []model.Arg{{
					Name: "target",
				}},
			}, {
				Name:        []string{"--help", "-h"},
				Description: `Help for build`,
			}},
		}, {
			Name:        []string{"completion"},
			Description: `Generate the autocompletion script for the specified shell`,
			Options: []model.Option{{
				Name:        []string{"--loglevel", "-l"},
				Description: `Amount of information outputted (debug, info, warn, error)`,
				Args: []model.Arg{{
					Name: "loglevel",
				}},
			}, {
				Name:        []string{"--output", "-o"},
				Description: `Output format (tty, plain, json)`,
				Args: []model.Arg{{
					Name: "output",
				}},
			}, {
				Name:        []string{"--help", "-h"},
				Description: `Help for completion`,
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"bash"},
				Description: `Generate the autocompletion script for bash`,
				Options: []model.Option{{
					Name:        []string{"--loglevel", "-l"},
					Description: `Amount of information outputted (debug, info, warn, error)`,
					Args: []model.Arg{{
						Name: "loglevel",
					}},
				}, {
					Name:        []string{"--output", "-o"},
					Description: `Output format (tty, plain, json)`,
					Args: []model.Arg{{
						Name: "output",
					}},
				}, {
					Name:        []string{"--no-descriptions"},
					Description: `Disable completion descriptions`,
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for bash`,
				}},
			}, {
				Name:        []string{"fish"},
				Description: `Generate the autocompletion script for fish`,
				Options: []model.Option{{
					Name:        []string{"--loglevel", "-l"},
					Description: `Amount of information outputted (debug, info, warn, error)`,
					Args: []model.Arg{{
						Name: "loglevel",
					}},
				}, {
					Name:        []string{"--output", "-o"},
					Description: `Output format (tty, plain, json)`,
					Args: []model.Arg{{
						Name: "output",
					}},
				}, {
					Name:        []string{"--no-descriptions"},
					Description: `Disable completion descriptions`,
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for fish`,
				}},
			}, {
				Name:        []string{"powershell"},
				Description: `Generate the autocompletion script for powershell`,
				Options: []model.Option{{
					Name:        []string{"--loglevel", "-l"},
					Description: `Amount of information outputted (debug, info, warn, error)`,
					Args: []model.Arg{{
						Name: "loglevel",
					}},
				}, {
					Name:        []string{"--output", "-o"},
					Description: `Output format (tty, plain, json)`,
					Args: []model.Arg{{
						Name: "output",
					}},
				}, {
					Name:        []string{"--no-descriptions"},
					Description: `Disable completion descriptions`,
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for powershell`,
				}},
			}, {
				Name:        []string{"zsh"},
				Description: `Generate the autocompletion script for zsh`,
				Options: []model.Option{{
					Name:        []string{"--loglevel", "-l"},
					Description: `Amount of information outputted (debug, info, warn, error)`,
					Args: []model.Arg{{
						Name: "loglevel",
					}},
				}, {
					Name:        []string{"--output", "-o"},
					Description: `Output format (tty, plain, json)`,
					Args: []model.Arg{{
						Name: "output",
					}},
				}, {
					Name:        []string{"--no-descriptions"},
					Description: `Disable completion descriptions`,
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for zsh`,
				}},
			}},
		}, {
			Name:        []string{"ctx", "context"},
			Description: `Set the default context`,
			Options: []model.Option{{
				Name:        []string{"--loglevel", "-l"},
				Description: `Amount of information outputted (debug, info, warn, error)`,
				Args: []model.Arg{{
					Name: "loglevel",
				}},
			}, {
				Name:        []string{"--output", "-o"},
				Description: `Output format (tty, plain, json)`,
				Args: []model.Arg{{
					Name: "output",
				}},
			}, {
				Name:        []string{"--builder", "-b"},
				Description: `Url of the builder service`,
				Args: []model.Arg{{
					Name: "builder",
				}},
			}, {
				Name:        []string{"--namespace", "-n"},
				Description: `Namespace of your okteto context`,
				Args: []model.Arg{{
					Name: "namespace",
				}},
			}, {
				Name:        []string{"--okteto"},
				Description: `Only shows okteto cluster options`,
			}, {
				Name:        []string{"--token", "-t"},
				Description: `API token for authentication`,
				Args: []model.Arg{{
					Name: "token",
				}},
			}, {
				Name:        []string{"--help", "-h"},
				Description: `Help for context`,
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"delete"},
				Description: `Delete a context`,
				Args: []model.Arg{{
					Generator: nil, // TODO: port over generator
				}},
				Options: []model.Option{{
					Name:        []string{"--loglevel", "-l"},
					Description: `Amount of information outputted (debug, info, warn, error)`,
					Args: []model.Arg{{
						Name: "loglevel",
					}},
				}, {
					Name:        []string{"--output", "-o"},
					Description: `Output format (tty, plain, json)`,
					Args: []model.Arg{{
						Name: "output",
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for delete`,
				}},
			}, {
				Name:        []string{"ls", "list"},
				Description: `List available contexts`,
				Options: []model.Option{{
					Name:        []string{"--loglevel", "-l"},
					Description: `Amount of information outputted (debug, info, warn, error)`,
					Args: []model.Arg{{
						Name: "loglevel",
					}},
				}, {
					Name:        []string{"--output", "-o"},
					Description: `Output format (tty, plain, json)`,
					Args: []model.Arg{{
						Name: "output",
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for list`,
				}},
			}, {
				Name:        []string{"show"},
				Description: `Print the current context`,
				Options: []model.Option{{
					Name:        []string{"--loglevel", "-l"},
					Description: `Amount of information outputted (debug, info, warn, error)`,
					Args: []model.Arg{{
						Name: "loglevel",
					}},
				}, {
					Name:        []string{"--output", "-o"},
					Description: `Output format (tty, plain, json)`,
					Args: []model.Arg{{
						Name: "output",
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for show`,
				}},
			}, {
				Name:        []string{"use"},
				Description: `Set the default context`,
				Args: []model.Arg{{
					Generator: nil, // TODO: port over generator
				}},
				Options: []model.Option{{
					Name:        []string{"--loglevel", "-l"},
					Description: `Amount of information outputted (debug, info, warn, error)`,
					Args: []model.Arg{{
						Name: "loglevel",
					}},
				}, {
					Name:        []string{"--output", "-o"},
					Description: `Output format (tty, plain, json)`,
					Args: []model.Arg{{
						Name: "output",
					}},
				}, {
					Name:        []string{"--builder", "-b"},
					Description: `Url of the builder service`,
					Args: []model.Arg{{
						Name: "builder",
					}},
				}, {
					Name:        []string{"--namespace", "-n"},
					Description: `Namespace of your okteto context`,
					Args: []model.Arg{{
						Name: "namespace",
					}},
				}, {
					Name:        []string{"--okteto"},
					Description: `Only shows okteto cluster options`,
				}, {
					Name:        []string{"--token", "-t"},
					Description: `API token for authentication`,
					Args: []model.Arg{{
						Name: "token",
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for use`,
				}},
			}},
		}, {
			Name:        []string{"doctor"},
			Description: `Generate a zip file with the okteto logs`,
			Options: []model.Option{{
				Name:        []string{"--loglevel", "-l"},
				Description: `Amount of information outputted (debug, info, warn, error)`,
				Args: []model.Arg{{
					Name: "loglevel",
				}},
			}, {
				Name:        []string{"--output", "-o"},
				Description: `Output format (tty, plain, json)`,
				Args: []model.Arg{{
					Name: "output",
				}},
			}, {
				Name:        []string{"--context", "-c"},
				Description: `Context where the up command was executing`,
				Args: []model.Arg{{
					Name: "context",
				}},
			}, {
				Name:        []string{"--file", "-f"},
				Description: `Path to the manifest file`,
				Args: []model.Arg{{
					Name: "file",
				}},
			}, {
				Name:        []string{"--namespace", "-n"},
				Description: `Namespace where the up command was executing`,
				Args: []model.Arg{{
					Name: "namespace",
				}},
			}, {
				Name:        []string{"--help", "-h"},
				Description: `Help for doctor`,
			}},
		}, {
			Name:        []string{"down"},
			Description: `Deactivate your development container`,
			Options: []model.Option{{
				Name:        []string{"--loglevel", "-l"},
				Description: `Amount of information outputted (debug, info, warn, error)`,
				Args: []model.Arg{{
					Name: "loglevel",
				}},
			}, {
				Name:        []string{"--output", "-o"},
				Description: `Output format (tty, plain, json)`,
				Args: []model.Arg{{
					Name: "output",
				}},
			}, {
				Name:        []string{"--context", "-c"},
				Description: `Context where the down command is executed`,
				Args: []model.Arg{{
					Name: "context",
				}},
			}, {
				Name:        []string{"--file", "-f"},
				Description: `Path to the manifest file`,
				Args: []model.Arg{{
					Name: "file",
				}},
			}, {
				Name:        []string{"--namespace", "-n"},
				Description: `Namespace where the down command is executed`,
				Args: []model.Arg{{
					Name: "namespace",
				}},
			}, {
				Name:        []string{"--volumes", "-v"},
				Description: `Remove persistent volume`,
			}, {
				Name:        []string{"--help", "-h"},
				Description: `Help for down`,
			}},
		}, {
			Name:        []string{"exec"},
			Description: `Execute a command in your development container`,
			Options: []model.Option{{
				Name:        []string{"--loglevel", "-l"},
				Description: `Amount of information outputted (debug, info, warn, error)`,
				Args: []model.Arg{{
					Name: "loglevel",
				}},
			}, {
				Name:        []string{"--output", "-o"},
				Description: `Output format (tty, plain, json)`,
				Args: []model.Arg{{
					Name: "output",
				}},
			}, {
				Name:        []string{"--context", "-c"},
				Description: `Context where the exec command is executed`,
				Args: []model.Arg{{
					Name: "context",
				}},
			}, {
				Name:        []string{"--file", "-f"},
				Description: `Path to the manifest file`,
				Args: []model.Arg{{
					Name: "file",
				}},
			}, {
				Name:        []string{"--namespace", "-n"},
				Description: `Namespace where the exec command is executed`,
				Args: []model.Arg{{
					Name: "namespace",
				}},
			}, {
				Name:        []string{"--help", "-h"},
				Description: `Help for exec`,
			}},
		}, {
			Name:        []string{"init"},
			Description: `Automatically generate your okteto manifest file`,
			Options: []model.Option{{
				Name:        []string{"--loglevel", "-l"},
				Description: `Amount of information outputted (debug, info, warn, error)`,
				Args: []model.Arg{{
					Name: "loglevel",
				}},
			}, {
				Name:        []string{"--output", "-o"},
				Description: `Output format (tty, plain, json)`,
				Args: []model.Arg{{
					Name: "output",
				}},
			}, {
				Name:        []string{"--context", "-c"},
				Description: `Context target for generating the okteto manifest`,
				Args: []model.Arg{{
					Name: "context",
				}},
			}, {
				Name:        []string{"--file", "-f"},
				Description: `Path to the manifest file`,
				Args: []model.Arg{{
					Name: "file",
				}},
			}, {
				Name:        []string{"--namespace", "-n"},
				Description: `Namespace target for generating the okteto manifest`,
				Args: []model.Arg{{
					Name: "namespace",
				}},
			}, {
				Name:        []string{"--overwrite"},
				Description: `Overwrite existing manifest file`,
			}, {
				Name:        []string{"--help", "-h"},
				Description: `Help for init`,
			}},
		}, {
			Name:        []string{"kubeconfig"},
			Description: `Download credentials for the Kubernetes cluster selected via 'okteto context'`,
			Options: []model.Option{{
				Name:        []string{"--loglevel", "-l"},
				Description: `Amount of information outputted (debug, info, warn, error)`,
				Args: []model.Arg{{
					Name: "loglevel",
				}},
			}, {
				Name:        []string{"--output", "-o"},
				Description: `Output format (tty, plain, json)`,
				Args: []model.Arg{{
					Name: "output",
				}},
			}, {
				Name:        []string{"--help", "-h"},
				Description: `Help for kubeconfig`,
			}},
		}, {
			Name:        []string{"ns", "namespace"},
			Description: `Configure the current namespace of the okteto context`,
			Options: []model.Option{{
				Name:        []string{"--loglevel", "-l"},
				Description: `Amount of information outputted (debug, info, warn, error)`,
				Args: []model.Arg{{
					Name: "loglevel",
				}},
			}, {
				Name:        []string{"--output", "-o"},
				Description: `Output format (tty, plain, json)`,
				Args: []model.Arg{{
					Name: "output",
				}},
			}, {
				Name:        []string{"--personal"},
				Description: `Load personal account`,
			}, {
				Name:        []string{"--help", "-h"},
				Description: `Help for namespace`,
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"create"},
				Description: `Create a namespace`,
				Options: []model.Option{{
					Name:        []string{"--loglevel", "-l"},
					Description: `Amount of information outputted (debug, info, warn, error)`,
					Args: []model.Arg{{
						Name: "loglevel",
					}},
				}, {
					Name:        []string{"--output", "-o"},
					Description: `Output format (tty, plain, json)`,
					Args: []model.Arg{{
						Name: "output",
					}},
				}, {
					Name:        []string{"--members", "-m"},
					Description: `Members of the namespace, it can the username or email`,
					Args: []model.Arg{{
						Name: "members",
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for create`,
				}},
			}, {
				Name:        []string{"delete"},
				Description: `Delete a namespace`,
				Args: []model.Arg{{
					Generator: nil, // TODO: port over generator
				}},
				Options: []model.Option{{
					Name:        []string{"--loglevel", "-l"},
					Description: `Amount of information outputted (debug, info, warn, error)`,
					Args: []model.Arg{{
						Name: "loglevel",
					}},
				}, {
					Name:        []string{"--output", "-o"},
					Description: `Output format (tty, plain, json)`,
					Args: []model.Arg{{
						Name: "output",
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for delete`,
				}},
			}, {
				Name:        []string{"ls", "list"},
				Description: `List namespaces managed by Okteto in your current context`,
				Options: []model.Option{{
					Name:        []string{"--loglevel", "-l"},
					Description: `Amount of information outputted (debug, info, warn, error)`,
					Args: []model.Arg{{
						Name: "loglevel",
					}},
				}, {
					Name:        []string{"--output", "-o"},
					Description: `Output format (tty, plain, json)`,
					Args: []model.Arg{{
						Name: "output",
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for list`,
				}},
			}, {
				Name:        []string{"ns", "use"},
				Description: `Configure the current namespace of the okteto context`,
				Args: []model.Arg{{
					Generator: nil, // TODO: port over generator
				}},
				Options: []model.Option{{
					Name:        []string{"--loglevel", "-l"},
					Description: `Amount of information outputted (debug, info, warn, error)`,
					Args: []model.Arg{{
						Name: "loglevel",
					}},
				}, {
					Name:        []string{"--output", "-o"},
					Description: `Output format (tty, plain, json)`,
					Args: []model.Arg{{
						Name: "output",
					}},
				}, {
					Name:        []string{"--personal"},
					Description: `Load personal account`,
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for use`,
				}},
			}},
		}, {
			Name:        []string{"pipeline"},
			Description: `Pipeline management commands`,
			Options: []model.Option{{
				Name:        []string{"--loglevel", "-l"},
				Description: `Amount of information outputted (debug, info, warn, error)`,
				Args: []model.Arg{{
					Name: "loglevel",
				}},
			}, {
				Name:        []string{"--output", "-o"},
				Description: `Output format (tty, plain, json)`,
				Args: []model.Arg{{
					Name: "output",
				}},
			}, {
				Name:        []string{"--help", "-h"},
				Description: `Help for pipeline`,
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"deploy"},
				Description: `Deploy an okteto pipeline`,
				Options: []model.Option{{
					Name:        []string{"--loglevel", "-l"},
					Description: `Amount of information outputted (debug, info, warn, error)`,
					Args: []model.Arg{{
						Name: "loglevel",
					}},
				}, {
					Name:        []string{"--output", "-o"},
					Description: `Output format (tty, plain, json)`,
					Args: []model.Arg{{
						Name: "output",
					}},
				}, {
					Name:        []string{"--branch", "-b"},
					Description: `The branch to deploy (defaults to the current branch)`,
					Args: []model.Arg{{
						Name: "branch",
					}},
				}, {
					Name:        []string{"--file", "-f"},
					Description: `Relative path within the repository to the manifest file (default to okteto-pipeline.yaml or .okteto/okteto-pipeline.yaml)`,
					Args: []model.Arg{{
						Name: "file",
					}},
				}, {
					Name:        []string{"--filename"},
					Description: `Relative path within the repository to the manifest file (default to okteto-pipeline.yaml or .okteto/okteto-pipeline.yaml)`,
					Args: []model.Arg{{
						Name: "filename",
					}},
				}, {
					Name:        []string{"--name", "-p"},
					Description: `Name of the pipeline (defaults to the git config name)`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--namespace", "-n"},
					Description: `Namespace where the up command is executed (defaults to the current namespace)`,
					Args: []model.Arg{{
						Name: "namespace",
					}},
				}, {
					Name:        []string{"--repository", "-r"},
					Description: `The repository to deploy (defaults to the current repository)`,
					Args: []model.Arg{{
						Name: "repository",
					}},
				}, {
					Name:        []string{"--skip-if-exists"},
					Description: `Skip the pipeline deployment if the pipeline already exists in the namespace (defaults to false)`,
				}, {
					Name:        []string{"--timeout", "-t"},
					Description: `The length of time to wait for completion, zero means never. Any other values should contain a corresponding time unit e.g. 1s, 2m, 3h`,
					Args: []model.Arg{{
						Name: "timeout",
					}},
				}, {
					Name:        []string{"--var", "-v"},
					Description: `Set a pipeline variable (can be set more than once)`,
					Args: []model.Arg{{
						Name: "var",
					}},
				}, {
					Name:        []string{"--wait", "-w"},
					Description: `Wait until the pipeline finishes (defaults to false)`,
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for deploy`,
				}},
			}, {
				Name:        []string{"destroy"},
				Description: `Destroy an okteto pipeline`,
				Options: []model.Option{{
					Name:        []string{"--loglevel", "-l"},
					Description: `Amount of information outputted (debug, info, warn, error)`,
					Args: []model.Arg{{
						Name: "loglevel",
					}},
				}, {
					Name:        []string{"--output", "-o"},
					Description: `Output format (tty, plain, json)`,
					Args: []model.Arg{{
						Name: "output",
					}},
				}, {
					Name:        []string{"--name", "-p"},
					Description: `Name of the pipeline (defaults to the git config name)`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--namespace", "-n"},
					Description: `Namespace where the up command is executed (defaults to the current namespace)`,
					Args: []model.Arg{{
						Name: "namespace",
					}},
				}, {
					Name:        []string{"--timeout", "-t"},
					Description: `The length of time to wait for completion, zero means never. Any other values should contain a corresponding time unit e.g. 1s, 2m, 3h`,
					Args: []model.Arg{{
						Name: "timeout",
					}},
				}, {
					Name:        []string{"--volumes", "-v"},
					Description: `Destroy persistent volumes created by the pipeline (defaults to false)`,
				}, {
					Name:        []string{"--wait", "-w"},
					Description: `Wait until the pipeline finishes (defaults to false)`,
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for destroy`,
				}},
			}},
		}, {
			Name:        []string{"preview"},
			Description: `Preview environment management commands`,
			Options: []model.Option{{
				Name:        []string{"--loglevel", "-l"},
				Description: `Amount of information outputted (debug, info, warn, error)`,
				Args: []model.Arg{{
					Name: "loglevel",
				}},
			}, {
				Name:        []string{"--output", "-o"},
				Description: `Output format (tty, plain, json)`,
				Args: []model.Arg{{
					Name: "output",
				}},
			}, {
				Name:        []string{"--help", "-h"},
				Description: `Help for preview`,
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"deploy"},
				Description: `Deploy a preview environment`,
				Options: []model.Option{{
					Name:        []string{"--loglevel", "-l"},
					Description: `Amount of information outputted (debug, info, warn, error)`,
					Args: []model.Arg{{
						Name: "loglevel",
					}},
				}, {
					Name:        []string{"--output", "-o"},
					Description: `Output format (tty, plain, json)`,
					Args: []model.Arg{{
						Name: "output",
					}},
				}, {
					Name:        []string{"--branch", "-b"},
					Description: `The branch to deploy (defaults to the current branch)`,
					Args: []model.Arg{{
						Name: "branch",
					}},
				}, {
					Name:        []string{"--file", "-f"},
					Description: `Relative path within the repository to the manifest file (default to okteto-pipeline.yaml or .okteto/okteto-pipeline.yaml)`,
					Args: []model.Arg{{
						Name: "file",
					}},
				}, {
					Name:        []string{"--filename"},
					Description: `Relative path within the repository to the manifest file (default to okteto-pipeline.yaml or .okteto/okteto-pipeline.yaml)`,
					Args: []model.Arg{{
						Name: "filename",
					}},
				}, {
					Name:        []string{"--repository", "-r"},
					Description: `The repository to deploy (defaults to the current repository)`,
					Args: []model.Arg{{
						Name: "repository",
					}},
				}, {
					Name:        []string{"--scope", "-s"},
					Description: `The scope of preview environment to create. Accepted values are ['personal', 'global']`,
					Args: []model.Arg{{
						Name: "scope",
					}},
				}, {
					Name:        []string{"--sourceUrl"},
					Description: `The URL of the original pull/merge request`,
					Args: []model.Arg{{
						Name: "sourceUrl",
					}},
				}, {
					Name:        []string{"--timeout", "-t"},
					Description: `The length of time to wait for completion, zero means never. Any other values should contain a corresponding time unit e.g. 1s, 2m, 3h`,
					Args: []model.Arg{{
						Name: "timeout",
					}},
				}, {
					Name:        []string{"--var", "-v"},
					Description: `Set a pipeline variable (can be set more than once)`,
					Args: []model.Arg{{
						Name: "var",
					}},
				}, {
					Name:        []string{"--wait", "-w"},
					Description: `Wait until the preview environment deployment finishes (defaults to false)`,
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for deploy`,
				}},
			}, {
				Name:        []string{"destroy"},
				Description: `Destroy a preview environment`,
				Options: []model.Option{{
					Name:        []string{"--loglevel", "-l"},
					Description: `Amount of information outputted (debug, info, warn, error)`,
					Args: []model.Arg{{
						Name: "loglevel",
					}},
				}, {
					Name:        []string{"--output", "-o"},
					Description: `Output format (tty, plain, json)`,
					Args: []model.Arg{{
						Name: "output",
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for destroy`,
				}},
			}, {
				Name:        []string{"endpoints"},
				Description: `Show endpoints for a preview environment`,
				Options: []model.Option{{
					Name:        []string{"--loglevel", "-l"},
					Description: `Amount of information outputted (debug, info, warn, error)`,
					Args: []model.Arg{{
						Name: "loglevel",
					}},
				}, {
					Name:        []string{"--output", "-o"},
					Description: `Output format (tty, plain, json)`,
					Args: []model.Arg{{
						Name: "output",
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for endpoints`,
				}},
			}, {
				Name:        []string{"list"},
				Description: `List all preview environments`,
				Options: []model.Option{{
					Name:        []string{"--loglevel", "-l"},
					Description: `Amount of information outputted (debug, info, warn, error)`,
					Args: []model.Arg{{
						Name: "loglevel",
					}},
				}, {
					Name:        []string{"--output", "-o"},
					Description: `Output format (tty, plain, json)`,
					Args: []model.Arg{{
						Name: "output",
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for list`,
				}},
			}},
		}, {
			Name:        []string{"push"},
			Description: `Build, push and redeploy source code to the target app`,
			Options: []model.Option{{
				Name:        []string{"--loglevel", "-l"},
				Description: `Amount of information outputted (debug, info, warn, error)`,
				Args: []model.Arg{{
					Name: "loglevel",
				}},
			}, {
				Name:        []string{"--output", "-o"},
				Description: `Output format (tty, plain, json)`,
				Args: []model.Arg{{
					Name: "output",
				}},
			}, {
				Name:        []string{"--context", "-c"},
				Description: `Context where the push command is executed`,
				Args: []model.Arg{{
					Name: "context",
				}},
			}, {
				Name:        []string{"--deploy", "-d"},
				Description: `Create deployment when the app doesn't exist in a namespace`,
			}, {
				Name:        []string{"--file", "-f"},
				Description: `Path to the manifest file`,
				Args: []model.Arg{{
					Name: "file",
				}},
			}, {
				Name:        []string{"--name"},
				Description: `Name of the app to push to`,
				Args: []model.Arg{{
					Name: "name",
				}},
			}, {
				Name:        []string{"--namespace", "-n"},
				Description: `Namespace where the push command is executed`,
				Args: []model.Arg{{
					Name: "namespace",
				}},
			}, {
				Name:        []string{"--no-cache"},
				Description: `Do not use cache when building the image`,
			}, {
				Name:        []string{"--progress"},
				Description: `Show plain/tty build output`,
				Args: []model.Arg{{
					Name: "progress",
				}},
			}, {
				Name:        []string{"--tag", "-t"},
				Description: `Image tag to build, push and redeploy`,
				Args: []model.Arg{{
					Name: "tag",
				}},
			}, {
				Name:        []string{"--help", "-h"},
				Description: `Help for push`,
			}},
		}, {
			Name:        []string{"restart"},
			Description: `Restart the deployments listed in the services field of the okteto manifest`,
			Options: []model.Option{{
				Name:        []string{"--loglevel", "-l"},
				Description: `Amount of information outputted (debug, info, warn, error)`,
				Args: []model.Arg{{
					Name: "loglevel",
				}},
			}, {
				Name:        []string{"--output", "-o"},
				Description: `Output format (tty, plain, json)`,
				Args: []model.Arg{{
					Name: "output",
				}},
			}, {
				Name:        []string{"--context", "-c"},
				Description: `Context where the restart command is executed`,
				Args: []model.Arg{{
					Name: "context",
				}},
			}, {
				Name:        []string{"--file", "-f"},
				Description: `Path to the manifest file`,
				Args: []model.Arg{{
					Name: "file",
				}},
			}, {
				Name:        []string{"--namespace", "-n"},
				Description: `Namespace where the restart command is executed`,
				Args: []model.Arg{{
					Name: "namespace",
				}},
			}, {
				Name:        []string{"--help", "-h"},
				Description: `Help for restart`,
			}},
		}, {
			Name:        []string{"stack"},
			Description: `Stack management commands`,
			Options: []model.Option{{
				Name:        []string{"--loglevel", "-l"},
				Description: `Amount of information outputted (debug, info, warn, error)`,
				Args: []model.Arg{{
					Name: "loglevel",
				}},
			}, {
				Name:        []string{"--output", "-o"},
				Description: `Output format (tty, plain, json)`,
				Args: []model.Arg{{
					Name: "output",
				}},
			}, {
				Name:        []string{"--help", "-h"},
				Description: `Help for stack`,
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"deploy"},
				Description: `Deploy a stack`,
				Options: []model.Option{{
					Name:        []string{"--loglevel", "-l"},
					Description: `Amount of information outputted (debug, info, warn, error)`,
					Args: []model.Arg{{
						Name: "loglevel",
					}},
				}, {
					Name:        []string{"--output", "-o"},
					Description: `Output format (tty, plain, json)`,
					Args: []model.Arg{{
						Name: "output",
					}},
				}, {
					Name:        []string{"--build"},
					Description: `Build images before starting any Stack service`,
				}, {
					Name:        []string{"--file", "-f"},
					Description: `Path to the stack manifest files. If more than one is passed the latest will overwrite the fields from the previous`,
					Args: []model.Arg{{
						Name: "file",
					}},
				}, {
					Name:        []string{"--name"},
					Description: `Overwrites the stack name`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--namespace", "-n"},
					Description: `Overwrites the stack namespace where the stack is deployed`,
					Args: []model.Arg{{
						Name: "namespace",
					}},
				}, {
					Name:        []string{"--no-cache"},
					Description: `Do not use cache when building the image`,
				}, {
					Name:        []string{"--progress"},
					Description: `Show plain/tty build output (default "tty")`,
					Args: []model.Arg{{
						Name: "progress",
					}},
				}, {
					Name:        []string{"--timeout", "-t"},
					Description: `The length of time to wait for completion, zero means never. Any other values should contain a corresponding time unit e.g. 1s, 2m, 3h`,
					Args: []model.Arg{{
						Name: "timeout",
					}},
				}, {
					Name:        []string{"--wait"},
					Description: `Wait until a minimum number of containers are in a ready state for every service`,
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for deploy`,
				}},
			}, {
				Name:        []string{"destroy"},
				Description: `Destroy a stack`,
				Options: []model.Option{{
					Name:        []string{"--loglevel", "-l"},
					Description: `Amount of information outputted (debug, info, warn, error)`,
					Args: []model.Arg{{
						Name: "loglevel",
					}},
				}, {
					Name:        []string{"--output", "-o"},
					Description: `Output format (tty, plain, json)`,
					Args: []model.Arg{{
						Name: "output",
					}},
				}, {
					Name:        []string{"--file", "-f"},
					Description: `Path to the stack manifest file`,
					Args: []model.Arg{{
						Name: "file",
					}},
				}, {
					Name:        []string{"--name"},
					Description: `Overwrites the stack name`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--namespace", "-n"},
					Description: `Overwrites the stack namespace where the stack is destroyed`,
					Args: []model.Arg{{
						Name: "namespace",
					}},
				}, {
					Name:        []string{"--volumes", "-v"},
					Description: `Remove persistent volumes`,
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for destroy`,
				}},
			}, {
				Name:        []string{"endpoints"},
				Description: `Show endpoints for a stack`,
				Options: []model.Option{{
					Name:        []string{"--loglevel", "-l"},
					Description: `Amount of information outputted (debug, info, warn, error)`,
					Args: []model.Arg{{
						Name: "loglevel",
					}},
				}, {
					Name:        []string{"--output", "-o"},
					Description: `Output format (tty, plain, json)`,
					Args: []model.Arg{{
						Name: "output",
					}},
				}, {
					Name:        []string{"--file", "-f"},
					Description: `Path to the stack manifest files. If more than one is passed the latest will overwrite the fields from the previous`,
					Args: []model.Arg{{
						Name: "file",
					}},
				}, {
					Name:        []string{"--name"},
					Description: `Overwrites the stack name`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--namespace", "-n"},
					Description: `Overwrites the stack namespace where the stack is deployed`,
					Args: []model.Arg{{
						Name: "namespace",
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for endpoints`,
				}},
			}},
		}, {
			Name:        []string{"status"},
			Description: `Status of the synchronization process`,
			Options: []model.Option{{
				Name:        []string{"--loglevel", "-l"},
				Description: `Amount of information outputted (debug, info, warn, error)`,
				Args: []model.Arg{{
					Name: "loglevel",
				}},
			}, {
				Name:        []string{"--output", "-o"},
				Description: `Output format (tty, plain, json)`,
				Args: []model.Arg{{
					Name: "output",
				}},
			}, {
				Name:        []string{"--context", "-c"},
				Description: `Context where the up command is executing`,
				Args: []model.Arg{{
					Name: "context",
				}},
			}, {
				Name:        []string{"--file", "-f"},
				Description: `Path to the manifest file`,
				Args: []model.Arg{{
					Name: "file",
				}},
			}, {
				Name:        []string{"--info", "-i"},
				Description: `Show syncthing links for troubleshooting the synchronization service`,
			}, {
				Name:        []string{"--namespace", "-n"},
				Description: `Namespace where the up command is executing`,
				Args: []model.Arg{{
					Name: "namespace",
				}},
			}, {
				Name:        []string{"--watch", "-w"},
				Description: `Watch for changes`,
			}, {
				Name:        []string{"--help", "-h"},
				Description: `Help for status`,
			}},
		}, {
			Name:        []string{"up"},
			Description: `Activate your development container`,
			Options: []model.Option{{
				Name:        []string{"--loglevel", "-l"},
				Description: `Amount of information outputted (debug, info, warn, error)`,
				Args: []model.Arg{{
					Name: "loglevel",
				}},
			}, {
				Name:        []string{"--output", "-o"},
				Description: `Output format (tty, plain, json)`,
				Args: []model.Arg{{
					Name: "output",
				}},
			}, {
				Name:        []string{"--build"},
				Description: `Build on-the-fly the dev image using the info provided by the 'build' okteto manifest field`,
			}, {
				Name:        []string{"--context", "-c"},
				Description: `Context where the up command is executed`,
				Args: []model.Arg{{
					Name: "context",
				}},
			}, {
				Name:        []string{"--deploy", "-d"},
				Description: `Create deployment when it doesn't exist in a namespace`,
			}, {
				Name:        []string{"--file", "-f"},
				Description: `Path to the manifest file`,
				Args: []model.Arg{{
					Name: "file",
				}},
			}, {
				Name:        []string{"--namespace", "-n"},
				Description: `Namespace where the up command is executed`,
				Args: []model.Arg{{
					Name: "namespace",
				}},
			}, {
				Name:        []string{"--pull"},
				Description: `Force dev image pull`,
			}, {
				Name:        []string{"--remote", "-r"},
				Description: `Configures remote execution on the specified port`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}, {
				Name:        []string{"--reset"},
				Description: `Reset the file synchronization database`,
			}, {
				Name:        []string{"--help", "-h"},
				Description: `Help for up`,
			}},
		}, {
			Name:        []string{"update"},
			Description: `Update okteto version`,
			Options: []model.Option{{
				Name:        []string{"--loglevel", "-l"},
				Description: `Amount of information outputted (debug, info, warn, error)`,
				Args: []model.Arg{{
					Name: "loglevel",
				}},
			}, {
				Name:        []string{"--output", "-o"},
				Description: `Output format (tty, plain, json)`,
				Args: []model.Arg{{
					Name: "output",
				}},
			}, {
				Name:        []string{"--help", "-h"},
				Description: `Help for update`,
			}},
		}, {
			Name:        []string{"version"},
			Description: `View the version of the okteto binary`,
			Options: []model.Option{{
				Name:        []string{"--loglevel", "-l"},
				Description: `Amount of information outputted (debug, info, warn, error)`,
				Args: []model.Arg{{
					Name: "loglevel",
				}},
			}, {
				Name:        []string{"--output", "-o"},
				Description: `Output format (tty, plain, json)`,
				Args: []model.Arg{{
					Name: "output",
				}},
			}, {
				Name:        []string{"--help", "-h"},
				Description: `Help for version`,
			}},
		}, {
			Name:        []string{"help"},
			Description: `Help about any command`,
			Options: []model.Option{{
				Name:        []string{"--loglevel", "-l"},
				Description: `Amount of information outputted (debug, info, warn, error)`,
				Args: []model.Arg{{
					Name: "loglevel",
				}},
			}, {
				Name:        []string{"--output", "-o"},
				Description: `Output format (tty, plain, json)`,
				Args: []model.Arg{{
					Name: "output",
				}},
			}, {
				Name:        []string{"--help", "-h"},
				Description: `Help for help`,
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"analytics"},
				Description: `Enable / Disable analytics`,
				Options: []model.Option{{
					Name:        []string{"--loglevel", "-l"},
					Description: `Amount of information outputted (debug, info, warn, error)`,
					Args: []model.Arg{{
						Name: "loglevel",
					}},
				}, {
					Name:        []string{"--output", "-o"},
					Description: `Output format (tty, plain, json)`,
					Args: []model.Arg{{
						Name: "output",
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for analytics`,
				}},
			}, {
				Name:        []string{"build"},
				Description: `Build (and optionally push) a Docker image`,
				Options: []model.Option{{
					Name:        []string{"--loglevel", "-l"},
					Description: `Amount of information outputted (debug, info, warn, error)`,
					Args: []model.Arg{{
						Name: "loglevel",
					}},
				}, {
					Name:        []string{"--output", "-o"},
					Description: `Output format (tty, plain, json)`,
					Args: []model.Arg{{
						Name: "output",
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for build`,
				}},
			}, {
				Name:        []string{"completion"},
				Description: `Generate the autocompletion script for the specified shell`,
				Options: []model.Option{{
					Name:        []string{"--loglevel", "-l"},
					Description: `Amount of information outputted (debug, info, warn, error)`,
					Args: []model.Arg{{
						Name: "loglevel",
					}},
				}, {
					Name:        []string{"--output", "-o"},
					Description: `Output format (tty, plain, json)`,
					Args: []model.Arg{{
						Name: "output",
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for completion`,
				}},
				Subcommands: []model.Subcommand{{
					Name:        []string{"bash"},
					Description: `Generate the autocompletion script for bash`,
					Options: []model.Option{{
						Name:        []string{"--loglevel", "-l"},
						Description: `Amount of information outputted (debug, info, warn, error)`,
						Args: []model.Arg{{
							Name: "loglevel",
						}},
					}, {
						Name:        []string{"--output", "-o"},
						Description: `Output format (tty, plain, json)`,
						Args: []model.Arg{{
							Name: "output",
						}},
					}, {
						Name:        []string{"--no-descriptions"},
						Description: `Disable completion descriptions`,
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for bash`,
					}},
				}, {
					Name:        []string{"fish"},
					Description: `Generate the autocompletion script for fish`,
					Options: []model.Option{{
						Name:        []string{"--loglevel", "-l"},
						Description: `Amount of information outputted (debug, info, warn, error)`,
						Args: []model.Arg{{
							Name: "loglevel",
						}},
					}, {
						Name:        []string{"--output", "-o"},
						Description: `Output format (tty, plain, json)`,
						Args: []model.Arg{{
							Name: "output",
						}},
					}, {
						Name:        []string{"--no-descriptions"},
						Description: `Disable completion descriptions`,
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for fish`,
					}},
				}, {
					Name:        []string{"powershell"},
					Description: `Generate the autocompletion script for powershell`,
					Options: []model.Option{{
						Name:        []string{"--loglevel", "-l"},
						Description: `Amount of information outputted (debug, info, warn, error)`,
						Args: []model.Arg{{
							Name: "loglevel",
						}},
					}, {
						Name:        []string{"--output", "-o"},
						Description: `Output format (tty, plain, json)`,
						Args: []model.Arg{{
							Name: "output",
						}},
					}, {
						Name:        []string{"--no-descriptions"},
						Description: `Disable completion descriptions`,
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for powershell`,
					}},
				}, {
					Name:        []string{"zsh"},
					Description: `Generate the autocompletion script for zsh`,
					Options: []model.Option{{
						Name:        []string{"--loglevel", "-l"},
						Description: `Amount of information outputted (debug, info, warn, error)`,
						Args: []model.Arg{{
							Name: "loglevel",
						}},
					}, {
						Name:        []string{"--output", "-o"},
						Description: `Output format (tty, plain, json)`,
						Args: []model.Arg{{
							Name: "output",
						}},
					}, {
						Name:        []string{"--no-descriptions"},
						Description: `Disable completion descriptions`,
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for zsh`,
					}},
				}},
			}, {
				Name:        []string{"ctx", "context"},
				Description: `Set the default context`,
				Options: []model.Option{{
					Name:        []string{"--loglevel", "-l"},
					Description: `Amount of information outputted (debug, info, warn, error)`,
					Args: []model.Arg{{
						Name: "loglevel",
					}},
				}, {
					Name:        []string{"--output", "-o"},
					Description: `Output format (tty, plain, json)`,
					Args: []model.Arg{{
						Name: "output",
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for context`,
				}},
				Subcommands: []model.Subcommand{{
					Name:        []string{"delete"},
					Description: `Delete a context`,
					Options: []model.Option{{
						Name:        []string{"--loglevel", "-l"},
						Description: `Amount of information outputted (debug, info, warn, error)`,
						Args: []model.Arg{{
							Name: "loglevel",
						}},
					}, {
						Name:        []string{"--output", "-o"},
						Description: `Output format (tty, plain, json)`,
						Args: []model.Arg{{
							Name: "output",
						}},
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for delete`,
					}},
				}, {
					Name:        []string{"ls", "list"},
					Description: `List available contexts`,
					Options: []model.Option{{
						Name:        []string{"--loglevel", "-l"},
						Description: `Amount of information outputted (debug, info, warn, error)`,
						Args: []model.Arg{{
							Name: "loglevel",
						}},
					}, {
						Name:        []string{"--output", "-o"},
						Description: `Output format (tty, plain, json)`,
						Args: []model.Arg{{
							Name: "output",
						}},
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for list`,
					}},
				}, {
					Name:        []string{"show"},
					Description: `Print the current context`,
					Options: []model.Option{{
						Name:        []string{"--loglevel", "-l"},
						Description: `Amount of information outputted (debug, info, warn, error)`,
						Args: []model.Arg{{
							Name: "loglevel",
						}},
					}, {
						Name:        []string{"--output", "-o"},
						Description: `Output format (tty, plain, json)`,
						Args: []model.Arg{{
							Name: "output",
						}},
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for show`,
					}},
				}, {
					Name:        []string{"use"},
					Description: `Set the default context`,
					Options: []model.Option{{
						Name:        []string{"--loglevel", "-l"},
						Description: `Amount of information outputted (debug, info, warn, error)`,
						Args: []model.Arg{{
							Name: "loglevel",
						}},
					}, {
						Name:        []string{"--output", "-o"},
						Description: `Output format (tty, plain, json)`,
						Args: []model.Arg{{
							Name: "output",
						}},
					}, {
						Name:        []string{"--builder", "-b"},
						Description: `Url of the builder service`,
						Args: []model.Arg{{
							Name: "builder",
						}},
					}, {
						Name:        []string{"--namespace", "-n"},
						Description: `Namespace of your okteto context`,
						Args: []model.Arg{{
							Name: "namespace",
						}},
					}, {
						Name:        []string{"--okteto"},
						Description: `Only shows okteto cluster options`,
					}, {
						Name:        []string{"--token", "-t"},
						Description: `API token for authentication`,
						Args: []model.Arg{{
							Name: "token",
						}},
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for use`,
					}},
				}},
			}, {
				Name:        []string{"doctor"},
				Description: `Generate a zip file with the okteto logs`,
				Options: []model.Option{{
					Name:        []string{"--loglevel", "-l"},
					Description: `Amount of information outputted (debug, info, warn, error)`,
					Args: []model.Arg{{
						Name: "loglevel",
					}},
				}, {
					Name:        []string{"--output", "-o"},
					Description: `Output format (tty, plain, json)`,
					Args: []model.Arg{{
						Name: "output",
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for doctor`,
				}},
			}, {
				Name:        []string{"down"},
				Description: `Deactivate your development container`,
				Options: []model.Option{{
					Name:        []string{"--loglevel", "-l"},
					Description: `Amount of information outputted (debug, info, warn, error)`,
					Args: []model.Arg{{
						Name: "loglevel",
					}},
				}, {
					Name:        []string{"--output", "-o"},
					Description: `Output format (tty, plain, json)`,
					Args: []model.Arg{{
						Name: "output",
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for down`,
				}},
			}, {
				Name:        []string{"exec"},
				Description: `Execute a command in your development container`,
				Options: []model.Option{{
					Name:        []string{"--loglevel", "-l"},
					Description: `Amount of information outputted (debug, info, warn, error)`,
					Args: []model.Arg{{
						Name: "loglevel",
					}},
				}, {
					Name:        []string{"--output", "-o"},
					Description: `Output format (tty, plain, json)`,
					Args: []model.Arg{{
						Name: "output",
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for exec`,
				}},
			}, {
				Name:        []string{"init"},
				Description: `Automatically generate your okteto manifest file`,
				Options: []model.Option{{
					Name:        []string{"--loglevel", "-l"},
					Description: `Amount of information outputted (debug, info, warn, error)`,
					Args: []model.Arg{{
						Name: "loglevel",
					}},
				}, {
					Name:        []string{"--output", "-o"},
					Description: `Output format (tty, plain, json)`,
					Args: []model.Arg{{
						Name: "output",
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for init`,
				}},
			}, {
				Name:        []string{"kubeconfig"},
				Description: `Download credentials for the Kubernetes cluster selected via 'okteto context'`,
				Options: []model.Option{{
					Name:        []string{"--loglevel", "-l"},
					Description: `Amount of information outputted (debug, info, warn, error)`,
					Args: []model.Arg{{
						Name: "loglevel",
					}},
				}, {
					Name:        []string{"--output", "-o"},
					Description: `Output format (tty, plain, json)`,
					Args: []model.Arg{{
						Name: "output",
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for kubeconfig`,
				}},
			}, {
				Name:        []string{"ns", "namespace"},
				Description: `Configure the current namespace of the okteto context`,
				Options: []model.Option{{
					Name:        []string{"--loglevel", "-l"},
					Description: `Amount of information outputted (debug, info, warn, error)`,
					Args: []model.Arg{{
						Name: "loglevel",
					}},
				}, {
					Name:        []string{"--output", "-o"},
					Description: `Output format (tty, plain, json)`,
					Args: []model.Arg{{
						Name: "output",
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for namespace`,
				}},
				Subcommands: []model.Subcommand{{
					Name:        []string{"create"},
					Description: `Create a namespace`,
					Options: []model.Option{{
						Name:        []string{"--loglevel", "-l"},
						Description: `Amount of information outputted (debug, info, warn, error)`,
						Args: []model.Arg{{
							Name: "loglevel",
						}},
					}, {
						Name:        []string{"--output", "-o"},
						Description: `Output format (tty, plain, json)`,
						Args: []model.Arg{{
							Name: "output",
						}},
					}, {
						Name:        []string{"--members", "-m"},
						Description: `Members of the namespace, it can the username or email`,
						Args: []model.Arg{{
							Name: "members",
						}},
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for create`,
					}},
				}, {
					Name:        []string{"delete"},
					Description: `Delete a namespace`,
					Options: []model.Option{{
						Name:        []string{"--loglevel", "-l"},
						Description: `Amount of information outputted (debug, info, warn, error)`,
						Args: []model.Arg{{
							Name: "loglevel",
						}},
					}, {
						Name:        []string{"--output", "-o"},
						Description: `Output format (tty, plain, json)`,
						Args: []model.Arg{{
							Name: "output",
						}},
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for delete`,
					}},
				}, {
					Name:        []string{"ls", "list"},
					Description: `List namespaces managed by Okteto in your current context`,
					Options: []model.Option{{
						Name:        []string{"--loglevel", "-l"},
						Description: `Amount of information outputted (debug, info, warn, error)`,
						Args: []model.Arg{{
							Name: "loglevel",
						}},
					}, {
						Name:        []string{"--output", "-o"},
						Description: `Output format (tty, plain, json)`,
						Args: []model.Arg{{
							Name: "output",
						}},
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for list`,
					}},
				}, {
					Name:        []string{"ns", "use"},
					Description: `Configure the current namespace of the okteto context`,
					Options: []model.Option{{
						Name:        []string{"--loglevel", "-l"},
						Description: `Amount of information outputted (debug, info, warn, error)`,
						Args: []model.Arg{{
							Name: "loglevel",
						}},
					}, {
						Name:        []string{"--output", "-o"},
						Description: `Output format (tty, plain, json)`,
						Args: []model.Arg{{
							Name: "output",
						}},
					}, {
						Name:        []string{"--personal"},
						Description: `Load personal account`,
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for use`,
					}},
				}},
			}, {
				Name:        []string{"pipeline"},
				Description: `Pipeline management commands`,
				Options: []model.Option{{
					Name:        []string{"--loglevel", "-l"},
					Description: `Amount of information outputted (debug, info, warn, error)`,
					Args: []model.Arg{{
						Name: "loglevel",
					}},
				}, {
					Name:        []string{"--output", "-o"},
					Description: `Output format (tty, plain, json)`,
					Args: []model.Arg{{
						Name: "output",
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for pipeline`,
				}},
				Subcommands: []model.Subcommand{{
					Name:        []string{"deploy"},
					Description: `Deploy an okteto pipeline`,
					Options: []model.Option{{
						Name:        []string{"--loglevel", "-l"},
						Description: `Amount of information outputted (debug, info, warn, error)`,
						Args: []model.Arg{{
							Name: "loglevel",
						}},
					}, {
						Name:        []string{"--output", "-o"},
						Description: `Output format (tty, plain, json)`,
						Args: []model.Arg{{
							Name: "output",
						}},
					}, {
						Name:        []string{"--branch", "-b"},
						Description: `The branch to deploy (defaults to the current branch)`,
						Args: []model.Arg{{
							Name: "branch",
						}},
					}, {
						Name:        []string{"--file", "-f"},
						Description: `Relative path within the repository to the manifest file (default to okteto-pipeline.yaml or .okteto/okteto-pipeline.yaml)`,
						Args: []model.Arg{{
							Name: "file",
						}},
					}, {
						Name:        []string{"--filename"},
						Description: `Relative path within the repository to the manifest file (default to okteto-pipeline.yaml or .okteto/okteto-pipeline.yaml)`,
						Args: []model.Arg{{
							Name: "filename",
						}},
					}, {
						Name:        []string{"--name", "-p"},
						Description: `Name of the pipeline (defaults to the git config name)`,
						Args: []model.Arg{{
							Name: "name",
						}},
					}, {
						Name:        []string{"--namespace", "-n"},
						Description: `Namespace where the up command is executed (defaults to the current namespace)`,
						Args: []model.Arg{{
							Name: "namespace",
						}},
					}, {
						Name:        []string{"--repository", "-r"},
						Description: `The repository to deploy (defaults to the current repository)`,
						Args: []model.Arg{{
							Name: "repository",
						}},
					}, {
						Name:        []string{"--skip-if-exists"},
						Description: `Skip the pipeline deployment if the pipeline already exists in the namespace (defaults to false)`,
					}, {
						Name:        []string{"--timeout", "-t"},
						Description: `The length of time to wait for completion, zero means never. Any other values should contain a corresponding time unit e.g. 1s, 2m, 3h`,
						Args: []model.Arg{{
							Name: "timeout",
						}},
					}, {
						Name:        []string{"--var", "-v"},
						Description: `Set a pipeline variable (can be set more than once)`,
						Args: []model.Arg{{
							Name: "var",
						}},
					}, {
						Name:        []string{"--wait", "-w"},
						Description: `Wait until the pipeline finishes (defaults to false)`,
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for deploy`,
					}},
				}, {
					Name:        []string{"destroy"},
					Description: `Destroy an okteto pipeline`,
					Options: []model.Option{{
						Name:        []string{"--loglevel", "-l"},
						Description: `Amount of information outputted (debug, info, warn, error)`,
						Args: []model.Arg{{
							Name: "loglevel",
						}},
					}, {
						Name:        []string{"--output", "-o"},
						Description: `Output format (tty, plain, json)`,
						Args: []model.Arg{{
							Name: "output",
						}},
					}, {
						Name:        []string{"--name", "-p"},
						Description: `Name of the pipeline (defaults to the git config name)`,
						Args: []model.Arg{{
							Name: "name",
						}},
					}, {
						Name:        []string{"--namespace", "-n"},
						Description: `Namespace where the up command is executed (defaults to the current namespace)`,
						Args: []model.Arg{{
							Name: "namespace",
						}},
					}, {
						Name:        []string{"--timeout", "-t"},
						Description: `The length of time to wait for completion, zero means never. Any other values should contain a corresponding time unit e.g. 1s, 2m, 3h`,
						Args: []model.Arg{{
							Name: "timeout",
						}},
					}, {
						Name:        []string{"--volumes", "-v"},
						Description: `Destroy persistent volumes created by the pipeline (defaults to false)`,
					}, {
						Name:        []string{"--wait", "-w"},
						Description: `Wait until the pipeline finishes (defaults to false)`,
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for destroy`,
					}},
				}},
			}, {
				Name:        []string{"preview"},
				Description: `Preview environment management commands`,
				Options: []model.Option{{
					Name:        []string{"--loglevel", "-l"},
					Description: `Amount of information outputted (debug, info, warn, error)`,
					Args: []model.Arg{{
						Name: "loglevel",
					}},
				}, {
					Name:        []string{"--output", "-o"},
					Description: `Output format (tty, plain, json)`,
					Args: []model.Arg{{
						Name: "output",
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for preview`,
				}},
				Subcommands: []model.Subcommand{{
					Name:        []string{"deploy"},
					Description: `Deploy a preview environment`,
					Options: []model.Option{{
						Name:        []string{"--loglevel", "-l"},
						Description: `Amount of information outputted (debug, info, warn, error)`,
						Args: []model.Arg{{
							Name: "loglevel",
						}},
					}, {
						Name:        []string{"--output", "-o"},
						Description: `Output format (tty, plain, json)`,
						Args: []model.Arg{{
							Name: "output",
						}},
					}, {
						Name:        []string{"--branch", "-b"},
						Description: `The branch to deploy (defaults to the current branch)`,
						Args: []model.Arg{{
							Name: "branch",
						}},
					}, {
						Name:        []string{"--file", "-f"},
						Description: `Relative path within the repository to the manifest file (default to okteto-pipeline.yaml or .okteto/okteto-pipeline.yaml)`,
						Args: []model.Arg{{
							Name: "file",
						}},
					}, {
						Name:        []string{"--filename"},
						Description: `Relative path within the repository to the manifest file (default to okteto-pipeline.yaml or .okteto/okteto-pipeline.yaml)`,
						Args: []model.Arg{{
							Name: "filename",
						}},
					}, {
						Name:        []string{"--repository", "-r"},
						Description: `The repository to deploy (defaults to the current repository)`,
						Args: []model.Arg{{
							Name: "repository",
						}},
					}, {
						Name:        []string{"--scope", "-s"},
						Description: `The scope of preview environment to create. Accepted values are ['personal', 'global']`,
						Args: []model.Arg{{
							Name: "scope",
						}},
					}, {
						Name:        []string{"--sourceUrl"},
						Description: `The URL of the original pull/merge request`,
						Args: []model.Arg{{
							Name: "sourceUrl",
						}},
					}, {
						Name:        []string{"--timeout", "-t"},
						Description: `The length of time to wait for completion, zero means never. Any other values should contain a corresponding time unit e.g. 1s, 2m, 3h`,
						Args: []model.Arg{{
							Name: "timeout",
						}},
					}, {
						Name:        []string{"--var", "-v"},
						Description: `Set a pipeline variable (can be set more than once)`,
						Args: []model.Arg{{
							Name: "var",
						}},
					}, {
						Name:        []string{"--wait", "-w"},
						Description: `Wait until the preview environment deployment finishes (defaults to false)`,
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for deploy`,
					}},
				}, {
					Name:        []string{"destroy"},
					Description: `Destroy a preview environment`,
					Options: []model.Option{{
						Name:        []string{"--loglevel", "-l"},
						Description: `Amount of information outputted (debug, info, warn, error)`,
						Args: []model.Arg{{
							Name: "loglevel",
						}},
					}, {
						Name:        []string{"--output", "-o"},
						Description: `Output format (tty, plain, json)`,
						Args: []model.Arg{{
							Name: "output",
						}},
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for destroy`,
					}},
				}, {
					Name:        []string{"endpoints"},
					Description: `Show endpoints for a preview environment`,
					Options: []model.Option{{
						Name:        []string{"--loglevel", "-l"},
						Description: `Amount of information outputted (debug, info, warn, error)`,
						Args: []model.Arg{{
							Name: "loglevel",
						}},
					}, {
						Name:        []string{"--output", "-o"},
						Description: `Output format (tty, plain, json)`,
						Args: []model.Arg{{
							Name: "output",
						}},
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for endpoints`,
					}},
				}, {
					Name:        []string{"list"},
					Description: `List all preview environments`,
					Options: []model.Option{{
						Name:        []string{"--loglevel", "-l"},
						Description: `Amount of information outputted (debug, info, warn, error)`,
						Args: []model.Arg{{
							Name: "loglevel",
						}},
					}, {
						Name:        []string{"--output", "-o"},
						Description: `Output format (tty, plain, json)`,
						Args: []model.Arg{{
							Name: "output",
						}},
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for list`,
					}},
				}},
			}, {
				Name:        []string{"push"},
				Description: `Build, push and redeploy source code to the target app`,
				Options: []model.Option{{
					Name:        []string{"--loglevel", "-l"},
					Description: `Amount of information outputted (debug, info, warn, error)`,
					Args: []model.Arg{{
						Name: "loglevel",
					}},
				}, {
					Name:        []string{"--output", "-o"},
					Description: `Output format (tty, plain, json)`,
					Args: []model.Arg{{
						Name: "output",
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for push`,
				}},
			}, {
				Name:        []string{"restart"},
				Description: `Restart the deployments listed in the services field of the okteto manifest`,
				Options: []model.Option{{
					Name:        []string{"--loglevel", "-l"},
					Description: `Amount of information outputted (debug, info, warn, error)`,
					Args: []model.Arg{{
						Name: "loglevel",
					}},
				}, {
					Name:        []string{"--output", "-o"},
					Description: `Output format (tty, plain, json)`,
					Args: []model.Arg{{
						Name: "output",
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for restart`,
				}},
			}, {
				Name:        []string{"stack"},
				Description: `Stack management commands`,
				Options: []model.Option{{
					Name:        []string{"--loglevel", "-l"},
					Description: `Amount of information outputted (debug, info, warn, error)`,
					Args: []model.Arg{{
						Name: "loglevel",
					}},
				}, {
					Name:        []string{"--output", "-o"},
					Description: `Output format (tty, plain, json)`,
					Args: []model.Arg{{
						Name: "output",
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for stack`,
				}},
				Subcommands: []model.Subcommand{{
					Name:        []string{"deploy"},
					Description: `Deploy a stack`,
					Options: []model.Option{{
						Name:        []string{"--loglevel", "-l"},
						Description: `Amount of information outputted (debug, info, warn, error)`,
						Args: []model.Arg{{
							Name: "loglevel",
						}},
					}, {
						Name:        []string{"--output", "-o"},
						Description: `Output format (tty, plain, json)`,
						Args: []model.Arg{{
							Name: "output",
						}},
					}, {
						Name:        []string{"--build"},
						Description: `Build images before starting any Stack service`,
					}, {
						Name:        []string{"--file", "-f"},
						Description: `Path to the stack manifest files. If more than one is passed the latest will overwrite the fields from the previous`,
						Args: []model.Arg{{
							Name: "file",
						}},
					}, {
						Name:        []string{"--name"},
						Description: `Overwrites the stack name`,
						Args: []model.Arg{{
							Name: "name",
						}},
					}, {
						Name:        []string{"--namespace", "-n"},
						Description: `Overwrites the stack namespace where the stack is deployed`,
						Args: []model.Arg{{
							Name: "namespace",
						}},
					}, {
						Name:        []string{"--no-cache"},
						Description: `Do not use cache when building the image`,
					}, {
						Name:        []string{"--progress"},
						Description: `Show plain/tty build output (default "tty")`,
						Args: []model.Arg{{
							Name: "progress",
						}},
					}, {
						Name:        []string{"--timeout", "-t"},
						Description: `The length of time to wait for completion, zero means never. Any other values should contain a corresponding time unit e.g. 1s, 2m, 3h`,
						Args: []model.Arg{{
							Name: "timeout",
						}},
					}, {
						Name:        []string{"--wait"},
						Description: `Wait until a minimum number of containers are in a ready state for every service`,
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for deploy`,
					}},
				}, {
					Name:        []string{"destroy"},
					Description: `Destroy a stack`,
					Options: []model.Option{{
						Name:        []string{"--loglevel", "-l"},
						Description: `Amount of information outputted (debug, info, warn, error)`,
						Args: []model.Arg{{
							Name: "loglevel",
						}},
					}, {
						Name:        []string{"--output", "-o"},
						Description: `Output format (tty, plain, json)`,
						Args: []model.Arg{{
							Name: "output",
						}},
					}, {
						Name:        []string{"--file", "-f"},
						Description: `Path to the stack manifest file`,
						Args: []model.Arg{{
							Name: "file",
						}},
					}, {
						Name:        []string{"--name"},
						Description: `Overwrites the stack name`,
						Args: []model.Arg{{
							Name: "name",
						}},
					}, {
						Name:        []string{"--namespace", "-n"},
						Description: `Overwrites the stack namespace where the stack is destroyed`,
						Args: []model.Arg{{
							Name: "namespace",
						}},
					}, {
						Name:        []string{"--volumes", "-v"},
						Description: `Remove persistent volumes`,
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for destroy`,
					}},
				}, {
					Name:        []string{"endpoints"},
					Description: `Show endpoints for a stack`,
					Options: []model.Option{{
						Name:        []string{"--loglevel", "-l"},
						Description: `Amount of information outputted (debug, info, warn, error)`,
						Args: []model.Arg{{
							Name: "loglevel",
						}},
					}, {
						Name:        []string{"--output", "-o"},
						Description: `Output format (tty, plain, json)`,
						Args: []model.Arg{{
							Name: "output",
						}},
					}, {
						Name:        []string{"--file", "-f"},
						Description: `Path to the stack manifest files. If more than one is passed the latest will overwrite the fields from the previous`,
						Args: []model.Arg{{
							Name: "file",
						}},
					}, {
						Name:        []string{"--name"},
						Description: `Overwrites the stack name`,
						Args: []model.Arg{{
							Name: "name",
						}},
					}, {
						Name:        []string{"--namespace", "-n"},
						Description: `Overwrites the stack namespace where the stack is deployed`,
						Args: []model.Arg{{
							Name: "namespace",
						}},
					}, {
						Name:        []string{"--help", "-h"},
						Description: `Help for endpoints`,
					}},
				}},
			}, {
				Name:        []string{"status"},
				Description: `Status of the synchronization process`,
				Options: []model.Option{{
					Name:        []string{"--loglevel", "-l"},
					Description: `Amount of information outputted (debug, info, warn, error)`,
					Args: []model.Arg{{
						Name: "loglevel",
					}},
				}, {
					Name:        []string{"--output", "-o"},
					Description: `Output format (tty, plain, json)`,
					Args: []model.Arg{{
						Name: "output",
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for status`,
				}},
			}, {
				Name:        []string{"up"},
				Description: `Activate your development container`,
				Options: []model.Option{{
					Name:        []string{"--loglevel", "-l"},
					Description: `Amount of information outputted (debug, info, warn, error)`,
					Args: []model.Arg{{
						Name: "loglevel",
					}},
				}, {
					Name:        []string{"--output", "-o"},
					Description: `Output format (tty, plain, json)`,
					Args: []model.Arg{{
						Name: "output",
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for up`,
				}},
			}, {
				Name:        []string{"update"},
				Description: `Update okteto version`,
				Options: []model.Option{{
					Name:        []string{"--loglevel", "-l"},
					Description: `Amount of information outputted (debug, info, warn, error)`,
					Args: []model.Arg{{
						Name: "loglevel",
					}},
				}, {
					Name:        []string{"--output", "-o"},
					Description: `Output format (tty, plain, json)`,
					Args: []model.Arg{{
						Name: "output",
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for update`,
				}},
			}, {
				Name:        []string{"version"},
				Description: `View the version of the okteto binary`,
				Options: []model.Option{{
					Name:        []string{"--loglevel", "-l"},
					Description: `Amount of information outputted (debug, info, warn, error)`,
					Args: []model.Arg{{
						Name: "loglevel",
					}},
				}, {
					Name:        []string{"--output", "-o"},
					Description: `Output format (tty, plain, json)`,
					Args: []model.Arg{{
						Name: "output",
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for version`,
				}},
			}},
		}},
	}
}
