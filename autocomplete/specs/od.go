// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["od"] = model.Subcommand{
		Name:        []string{"od"},
		Description: `Octal, decimal, hex, ASCII dump`,
		Args: []model.Arg{{
			Name:        "[+]offset[.][Bb]",
			Description: `Offset`,
			Suggestions: []model.Suggestion{{Name: []string{`+0b`}}},
			IsOptional:  true,
		}, {
			Templates:   []model.Template{model.TemplateFilepaths},
			Name:        "file",
			Description: `File name`,
			IsOptional:  true,
			IsVariadic:  true,
		}},
		Options: []model.Option{{
			Name: []string{"-A"},
			Description: `Specify the input address base.  The argument base may be
one of d, o, x or n, which specify decimal, octal,
hexadecimal addresses or no address, respectively`,
			Args: []model.Arg{{
				Name:        "base",
				Suggestions: []model.Suggestion{{Name: []string{`d`}}, {Name: []string{`o`}}, {Name: []string{`x`}}, {Name: []string{`n`}}},
			}},
		}, {
			Name:        []string{"-a"},
			Description: `Output named characters.  Equivalent to -t a`,
		}, {
			Name:        []string{"-B", "-o"},
			Description: `Output octal shorts.  Equivalent to -t o2`,
		}, {
			Name:        []string{"-b"},
			Description: `Output octal bytes.  Equivalent to -t o1`,
		}, {
			Name:        []string{"-c"},
			Description: `Output C-style escaped characters.  Equivalent to -t c`,
		}, {
			Name:        []string{"-D"},
			Description: `Output unsigned decimal ints.  Equivalent to -t u4`,
		}, {
			Name:        []string{"-d"},
			Description: `Output unsigned decimal shorts.  Equivalent to -t u2`,
		}, {
			Name:        []string{"-e", "-F"},
			Description: `Output double-precision floating point numbers.  Equivalent to -t fD`,
		}, {
			Name:        []string{"-f"},
			Description: `Output single-precision floating point numbers.  Equivalent to -t fF`,
		}, {
			Name:        []string{"-H", "-X"},
			Description: `Output hexadecimal ints.  Equivalent to -t x4`,
		}, {
			Name:        []string{"-h", "-x"},
			Description: `Output hexadecimal shorts.  Equivalent to -t x2`,
		}, {
			Name:        []string{"-I", "-L", "-l"},
			Description: `Output signed decimal longs.  Equivalent to -t dL`,
		}, {
			Name:        []string{"-i"},
			Description: `Output signed decimal ints.  Equivalent to -t dI`,
		}, {
			Name: []string{"-j"},
			Description: `Skip skip bytes of the combined input before dumping.  The
number may be followed by one of b, k, m or g which
specify the units of the number as blocks (512 bytes),
kilobytes, megabytes and gigabytes, respectively`,
			Args: []model.Arg{{
				Name: "skip",
			}},
		}, {
			Name:        []string{"-N"},
			Description: `Dump at most length bytes of input`,
			Args: []model.Arg{{
				Name: "length",
			}},
		}, {
			Name:        []string{"-O"},
			Description: `Output octal ints.  Equivalent to -t o4`,
		}, {
			Name:        []string{"-s"},
			Description: `Output signed decimal shorts.  Equivalent to -t d2`,
		}, {
			Name: []string{"-t"},
			Description: `Specify the output format.  The type argument is a string
containing one or more of the following kinds of type specificers: a,
c, [d|o|u|x][C|S|I|L|n], or f[F|D|L|n]. See the man page for meanings`,
			Args: []model.Arg{{
				Name:        "type",
				Suggestions: []model.Suggestion{{Name: []string{`a`}}, {Name: []string{`c`}}, {Name: []string{`dC`}}, {Name: []string{`dS`}}, {Name: []string{`dI`}}, {Name: []string{`dL`}}, {Name: []string{`dn`}}, {Name: []string{`oC`}}, {Name: []string{`oS`}}, {Name: []string{`oI`}}, {Name: []string{`oL`}}, {Name: []string{`on`}}, {Name: []string{`uC`}}, {Name: []string{`uS`}}, {Name: []string{`uI`}}, {Name: []string{`uL`}}, {Name: []string{`un`}}, {Name: []string{`xC`}}, {Name: []string{`xS`}}, {Name: []string{`xI`}}, {Name: []string{`xL`}}, {Name: []string{`xn`}}, {Name: []string{`fF`}}, {Name: []string{`fD`}}, {Name: []string{`fL`}}, {Name: []string{`fn`}}},
			}},
		}, {
			Name:        []string{"-v"},
			Description: `Write all input data, instead of replacing lines of duplicate values with a '*'`,
		}},
	}
}
