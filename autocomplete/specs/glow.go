// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.
//
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

package specs

import (
	"github.com/microsoft/clac/autocomplete/model"
)

func init() {
	Specs["glow"] = model.Subcommand{
		Name:        []string{"glow"},
		Description: `Render markdown on the CLI, with pizzazz!`,
		Args: []model.Arg{{
			Name:       "source|dir",
			Generator:  nil, // TODO: port over generator
			IsOptional: true,
			IsVariadic: true,
		}},
		Options: []model.Option{{
			Name:        []string{"-a", "--all"},
			Description: `Show system files and directories (TUI-mode only)`,
		}, {
			Name:        []string{"--config"},
			Description: `Config file`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "path",
			}},
			IsPersistent: true,
		}, {
			Name:         []string{"-h", "--help"},
			Description:  `Help for glow`,
			IsPersistent: true,
		}, {
			Name:        []string{"-l", "--local"},
			Description: `Show local files only; no network (TUI-mode only)`,
		}, {
			Name:        []string{"-p", "--pager"},
			Description: `Display with pager`,
		}, {
			Name:        []string{"-s", "--style"},
			Description: `Style name or JSON path (default 'auto')`,
			Args: []model.Arg{{
				Templates:   []model.Template{model.TemplateFilepaths},
				Name:        "name",
				Suggestions: []model.Suggestion{{Name: []string{`auto`}}, {Name: []string{`light`}}, {Name: []string{`dark`}}, {Name: []string{`notty`}}},
			}},
		}, {
			Name:        []string{"-v", "--version"},
			Description: `Version for glow`,
		}, {
			Name:        []string{"-w", "--width"},
			Description: `Word-wrap at width`,
			Args: []model.Arg{{
				Name: "column",
			}},
		}},
		Subcommands: []model.Subcommand{{
			Name:        []string{"config"},
			Description: `Edit the glow config file`,
		}, {
			Name:        []string{"help"},
			Description: `Help about any command`,
			Args: []model.Arg{{
				Templates:  []model.Template{model.TemplateHelp},
				Name:       "command",
				IsOptional: true,
			}},
		}, {
			Name:        []string{"stash"},
			Description: `Manage your stash of markdown files`,
			Args: []model.Arg{{
				Name:       "path",
				Generator:  nil, // TODO: port over generator
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-m", "--memo"},
				Description: `Memo/note for stashing`,
				Args: []model.Arg{{
					Name: "note",
				}},
			}},
		}},
	}
}
