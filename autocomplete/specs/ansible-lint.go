// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["ansible-lint"] = model.Subcommand{
		Name:        []string{"ansible-lint"},
		Description: `Ansible static code analysis`,
		Args: []model.Arg{{
			Templates:   []model.Template{model.TemplateFilepaths},
			Name:        "lintables",
			Description: `Files to lint`,
			IsOptional:  true,
			IsVariadic:  true,
		}},
		Options: []model.Option{{
			Name:        []string{"--help", "-h"},
			Description: `Show help for ansible-lint`,
		}, {
			Name:        []string{"--list-rules", "-L"},
			Description: `List all the rules`,
			ExclusiveOn: []string{"-T"},
		}, {
			Name:        []string{"--list-tags", "-T"},
			Description: `List all the tags and the rules they cover`,
			ExclusiveOn: []string{"-L"},
		}, {
			Name:        []string{"--format", "-f"},
			Description: `Stdout formatting`,
			Args: []model.Arg{{
				Name:        "-f",
				Suggestions: []model.Suggestion{{Name: []string{`rich`}}, {Name: []string{`plain`}}, {Name: []string{`md`}}, {Name: []string{`json`}}, {Name: []string{`codeclimate`}}, {Name: []string{`quiet`}}, {Name: []string{`pep8`}}, {Name: []string{`sarif`}}},
			}},
		}, {
			Name:        []string{"-q"},
			Description: `Quieter, reduce verbosity, can be specified twice`,
		}, {
			Name:        []string{"-p"},
			Description: `Parseable output, same as '-f pep8'`,
		}, {
			Name:        []string{"--progressive"},
			Description: `Return success if it detects a reduction in number of violations compared with previous git commit. This feature works only in git repositories`,
		}, {
			Name:        []string{"--project-dir"},
			Description: `Location of project/repository, autodetected based on location of configuration file`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFolders},
				Name:      "PROJECT_DIR",
			}},
		}, {
			Name:        []string{"--rules-dir", "-r"},
			Description: `Specify custom rule directories`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFolders},
				Name:      "RULESDIR",
			}},
		}, {
			Name:        []string{"-R"},
			Description: `Keep using embedded rules when using '-r'`,
		}, {
			Name:        []string{"--write"},
			Description: `Allow ansible-lint to reformat YAML files and run rule transforms`,
			Args: []model.Arg{{
				Name:        "WRITE_LIST",
				Description: `Limit the effective rule transforms by passing a keywords 'all' or 'none' or a comma separated list of rule ids or rule tags`,
				Suggestions: []model.Suggestion{{Name: []string{`all`}}, {Name: []string{`none`}}, {Name: []string{`rule1,rule2,...`}}},
			}},
		}, {
			Name:        []string{"--show-relpath"},
			Description: `Display path relative to CWD`,
		}, {
			Name:        []string{"--tags", "-t"},
			Description: `Only check rules whose id/tags match these values`,
		}, {
			Name:        []string{"-v"},
			Description: `Increase verbosity level (-vv for more)`,
		}, {
			Name:        []string{"--skip-list", "-x"},
			Description: `Only check rules whose id/tags do not match these values`,
			Args: []model.Arg{{
				Name: "SKIP_LIST",
			}},
		}, {
			Name:        []string{"--warn-list", "-w"},
			Description: `Only warn about these rules, unless overridden in config file defaults to 'experimental'`,
			Args: []model.Arg{{
				Name: "WARN_LIST",
			}},
		}, {
			Name:        []string{"--enable-list"},
			Description: `Activate optional rules by their tag name`,
			Args: []model.Arg{{
				Name: "ENABLE_LIST",
			}},
		}, {
			Name:        []string{"--nocolor"},
			Description: `Disable colored output, same as NO_COLOR=1`,
		}, {
			Name:        []string{"--force-color"},
			Description: `Force colored output, same as FORCE_COLOR=1`,
		}, {
			Name:        []string{"--exclude-paths"},
			Description: `Path to directories or files to skip. This option is repeatable`,
			Args: []model.Arg{{
				Templates:  []model.Template{model.TemplateFolders},
				Name:       "EXCLUDE_PATHS",
				IsVariadic: true,
			}},
		}, {
			Name:        []string{"--config-file"},
			Description: `Specify configuration file to use. By default it will look for '.ansible-lint' or '.config/ansible-lint.yml'`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "CONFIG_FILE",
			}},
		}, {
			Name:        []string{"--offline"},
			Description: `Disable installation of requirements.yml`,
		}, {
			Name:        []string{"--version"},
			Description: `Show version of ansible-lint`,
		}},
	}
}
