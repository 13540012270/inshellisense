// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.
//
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

package specs

import (
	"github.com/microsoft/clac/autocomplete/model"
)

func init() {
	Specs["newman"] = model.Subcommand{
		Name:        []string{"newman"},
		Description: `Newman is a command-line collection runner for Postman`,
		Options: []model.Option{{
			Name:        []string{"-v", "--version"},
			Description: `Output the version number`,
		}, {
			Name:        []string{"-h", "--help"},
			Description: `Display help for command`,
		}},
		Subcommands: []model.Subcommand{{
			Name:        []string{"run"},
			Description: `Initiate a Postman Collection run from a given URL or path`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "collection",
			}},
			Options: []model.Option{{
				Name:        []string{"-e", "--environment"},
				Description: `Specify a URL or path to a Postman Environment`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "path",
				}},
			}, {
				Name:        []string{"-g", "--globals"},
				Description: `Specify a URL or path to a file containing Postman Globals`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "path",
				}},
			}, {
				Name:        []string{"-r", "--reporters"},
				Description: `Specify the reporters to use for this run`,
				Args: []model.Arg{{
					Name:       "reporters",
					IsOptional: true,
				}},
			}, {
				Name:        []string{"-n", "--iteration-count"},
				Description: `Define the number of iterations to run`,
				Args: []model.Arg{{
					Name: "n",
				}},
			}, {
				Name:        []string{"-d", "--iteration-data"},
				Description: `Specify a data file to use for iterations (either JSON or CSV)`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFilepaths},
					Name:        "path",
					Suggestions: []model.Suggestion{{Name: []string{`JSON`}}, {Name: []string{`CSV`}}},
				}},
			}, {
				Name:        []string{"--folder"},
				Description: `Specify the folder to run from a collection. Can be specified multiple times to run multiple folders`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--global-var"},
				Description: `Allows the specification of global variables via the command line, in a key=value format`,
				Args: []model.Arg{{
					Name: "value",
				}},
			}, {
				Name:        []string{"--env-var"},
				Description: `Allows the specification of environment variables via the command line, in a key=value format`,
				Args: []model.Arg{{
					Name: "value",
				}},
			}, {
				Name:        []string{"--export-environment"},
				Description: `Exports the final environment to a file after completing the run`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--export-globals"},
				Description: `Exports the final globals to a file after completing the run`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--export-collection"},
				Description: `Exports the executed collection to a file after completing the run`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--postman-api-key"},
				Description: `API Key used to load the resources from the Postman API`,
				Args: []model.Arg{{
					Name: "apiKey",
				}},
			}, {
				Name:        []string{"--bail"},
				Description: `Specify whether or not to gracefully stop a collection run on encountering an error and whether to end the run with an error based on the optional modifier`,
				Args: []model.Arg{{
					Name:       "modifiers",
					IsOptional: true,
				}},
			}, {
				Name:        []string{"--ignore-redirects"},
				Description: `Prevents Newman from automatically following 3XX redirect responses`,
			}, {
				Name:        []string{"-x", "--suppress-exit-code"},
				Description: `Specify whether or not to override the default exit code for the current run`,
			}, {
				Name:        []string{"--silent"},
				Description: `Prevents Newman from showing output to CLI`,
			}, {
				Name:        []string{"--disable-unicode"},
				Description: `Forces Unicode compliant symbols to be replaced by their plain text equivalents`,
			}, {
				Name:        []string{"--color"},
				Description: `Enable/Disable colored output (auto|on|off)`,
				Args: []model.Arg{{
					Name:        "value",
					Suggestions: []model.Suggestion{{Name: []string{`auto`}}, {Name: []string{`on`}}, {Name: []string{`off`}}},
				}},
			}, {
				Name:        []string{"--delay-request"},
				Description: `Specify the extent of delay between requests (milliseconds)`,
				Args: []model.Arg{{
					Name:       "n",
					IsOptional: true,
				}},
			}, {
				Name:        []string{"--timeout"},
				Description: `Specify a timeout for collection run (milliseconds)`,
				Args: []model.Arg{{
					Name:       "n",
					IsOptional: true,
				}},
			}, {
				Name:        []string{"--timeout-request"},
				Description: `Specify a timeout for requests (milliseconds)`,
				Args: []model.Arg{{
					Name:       "n",
					IsOptional: true,
				}},
			}, {
				Name:        []string{"--timeout-script"},
				Description: `Specify a timeout for scripts (milliseconds)`,
				Args: []model.Arg{{
					Name:       "n",
					IsOptional: true,
				}},
			}, {
				Name:        []string{"--working-dir"},
				Description: `Specify the path to the working directory`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--no-insecure-file-read"},
				Description: `Prevents reading the files situated outside of the working directory`,
			}, {
				Name:        []string{"-k", "--insecure"},
				Description: `Disables SSL validations`,
			}, {
				Name:        []string{"--ssl-client-cert-list"},
				Description: `Specify the path to a client certificates configurations (JSON)`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--ssl-client-cert"},
				Description: `Specify the path to a client certificate (PEM)`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--ssl-client-key"},
				Description: `Specify the path to a client certificate private key`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--ssl-client-passphrase"},
				Description: `Specify the client certificate passphrase (for protected key)`,
				Args: []model.Arg{{
					Name: "passphrase",
				}},
			}, {
				Name:        []string{"--ssl-extra-ca-certs"},
				Description: `Specify additionally trusted CA certificates (PEM)`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--cookie-jar"},
				Description: `Specify the path to a custom cookie jar (serialized tough-cookie JSON)`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--export-cookie-jar"},
				Description: `Exports the cookie jar to a file after completing the run`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--verbose"},
				Description: `Show detailed information of collection run and each request sent`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Display help for command`,
			}},
		}, {
			Name:        []string{"help"},
			Description: `Display help for command`,
			Args: []model.Arg{{
				Templates:  []model.Template{model.TemplateHelp},
				Name:       "command",
				IsOptional: true,
			}},
		}},
	}
}
