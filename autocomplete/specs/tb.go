// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.
//
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

package specs

import (
	"github.com/microsoft/clac/autocomplete/model"
)

func init() {
	Specs["tb"] = model.Subcommand{
		Name:        []string{"tb"},
		Description: `Tinybird CLI`,
		Options: []model.Option{{
			Name:        []string{"--debug"},
			Description: `Prints internal representation, can be combined with any command to get more information`,
			ExclusiveOn: []string{"--no-debug"},
		}, {
			Name:        []string{"--no-debug"},
			Description: `Prints internal representation, can be combined with any command to get more information`,
			ExclusiveOn: []string{"--debug"},
		}, {
			Name:        []string{"--token"},
			Description: `Use auth token, defaults to TB_TOKEN envvar, then to the .tinyb file`,
			Args: []model.Arg{{
				Name: "text",
			}},
		}, {
			Name:        []string{"--host"},
			Description: `Use custom host, defaults to TB_HOST envvar, then to https://api.tinybird.co`,
			Args: []model.Arg{{
				Name: "text",
			}},
		}, {
			Name:        []string{"--gcp-project-id"},
			Description: `The Google Cloud project ID`,
			Args: []model.Arg{{
				Name: "text",
			}},
		}, {
			Name:        []string{"--gcs-bucket"},
			Description: `The Google Cloud Storage bucket to write temp files when using the connectors`,
			Args: []model.Arg{{
				Name: "text",
			}},
		}, {
			Name:        []string{"--google-application-credentials"},
			Description: `Set GOOGLE_APPLICATION_CREDENTIALS`,
			Args: []model.Arg{{
				Name: "text",
			}},
		}, {
			Name:        []string{"--sf-account"},
			Description: `The Snowflake Account (e.g. your-domain.west-europe.azure)`,
			Args: []model.Arg{{
				Name: "text",
			}},
		}, {
			Name:        []string{"--sf-warehouse"},
			Description: `The Snowflake warehouse name`,
			Args: []model.Arg{{
				Name: "text",
			}},
		}, {
			Name:        []string{"--sf-database"},
			Description: `The Snowflake database name`,
			Args: []model.Arg{{
				Name: "text",
			}},
		}, {
			Name:        []string{"--sf-schema"},
			Description: `The Snowflake schema name`,
			Args: []model.Arg{{
				Name: "text",
			}},
		}, {
			Name:        []string{"--sf-role"},
			Description: `The Snowflake role name`,
			Args: []model.Arg{{
				Name: "text",
			}},
		}, {
			Name:        []string{"--sf-user"},
			Description: `The Snowflake user name`,
			Args: []model.Arg{{
				Name: "text",
			}},
		}, {
			Name:        []string{"--sf-password"},
			Description: `The Snowflake password`,
			Args: []model.Arg{{
				Name: "text",
			}},
		}, {
			Name:        []string{"--sf-storage-integration"},
			Description: `The Snowflake GCS storage integration name (leave empty to auto-generate one)`,
			Args: []model.Arg{{
				Name: "text",
			}},
		}, {
			Name:        []string{"--sf-stage"},
			Description: `The Snowflake GCS stage name (leave empty to auto-generate one)`,
			Args: []model.Arg{{
				Name: "text",
			}},
		}, {
			Name:        []string{"--with-headers"},
			Description: `Flag to enable connector to export with headers`,
		}, {
			Name:        []string{"--version-warning"},
			Description: `Don't print version warning message if there's a new available version. You can use TB_VERSION_WARNING envar`,
			ExclusiveOn: []string{"--no-version-warning"},
		}, {
			Name:        []string{"--no-version-warning"},
			Description: `Don't print version warning message if there's a new available version. You can use TB_VERSION_WARNING envar`,
			ExclusiveOn: []string{"--version-warning"},
		}, {
			Name:        []string{"--hide-tokens"},
			Description: `Disable the output of tokens`,
		}, {
			Name:        []string{"--version"},
			Description: `Show the version and exit`,
		}, {
			Name:        []string{"--help"},
			Description: `Show this message and exit`,
		}},
		Subcommands: []model.Subcommand{{
			Name:        []string{"check"},
			Description: `Check file syntax`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFolders, model.TemplateFilepaths},
				Name:      "path",
			}},
			Options: []model.Option{{
				Name:        []string{"--debug"},
				Description: `Print internal representation`,
			}, {
				Name:        []string{"--help"},
				Description: `Show this message and exit`,
			}},
		}, {
			Name:        []string{"dependencies"},
			Description: `Print all data sources dependencies`,
			Options: []model.Option{{
				Name:        []string{"--no-deps"},
				Description: `Print only data sources with no pipes using them`,
			}, {
				Name:        []string{"--match"},
				Description: `Retrieve any resource matching the pattern`,
				Args: []model.Arg{{
					Name: "text",
				}},
			}, {
				Name:        []string{"--pipe"},
				Description: `Retrieve any resource used by pipe`,
				Args: []model.Arg{{
					Name: "text",
				}},
			}, {
				Name:        []string{"--datasource"},
				Description: `Retrieve resources depending on this Data Source`,
				Args: []model.Arg{{
					Name: "text",
				}},
			}, {
				Name:        []string{"--check-for-partial-replace"},
				Description: `Retrieve dependant Data Sources that will have their data replaced if a partial replace is executed in the Data Source selected`,
			}, {
				Name:        []string{"--recursive"},
				Description: `Calculate recursive dependencies`,
			}, {
				Name:        []string{"--help"},
				Description: `Show this message and exit`,
			}},
		}, {
			Name:        []string{"diff"},
			Description: `Diffs local datafiles to the corresponding remote files in the workspace`,
			Args: []model.Arg{{
				Templates:  []model.Template{model.TemplateFolders, model.TemplateFilepaths},
				Name:       "path",
				IsVariadic: true,
			}},
			Options: []model.Option{{
				Name:        []string{"--fmt"},
				Description: `Format files before doing the diff, default is True so both files match the format`,
				ExclusiveOn: []string{"--no-fmt"},
			}, {
				Name:        []string{"--no-fmt"},
				Description: `Format files before doing the diff, default is True so both files match the format`,
				ExclusiveOn: []string{"--fmt"},
			}, {
				Name:        []string{"--no-color"},
				Description: `Don't colorize diff`,
			}, {
				Name:        []string{"--main"},
				Description: `Diffs local datafiles to the corresponding remote files in the main workspace. Only works when authenticated on a branch`,
			}, {
				Name:        []string{"--help"},
				Description: `Show this message and exit`,
			}},
		}, {
			Name:        []string{"drop-prefix"},
			Description: `Drop all the resources inside a project with prefix. This command is dangerous because it removes everything, use with care`,
			Args: []model.Arg{{
				Name: "text",
			}},
			Options: []model.Option{{
				Name:        []string{"--yes"},
				Description: `Do not ask for confirmation`,
			}, {
				Name:        []string{"--dry-run"},
				Description: `Run the command without removing anything`,
			}, {
				Name:        []string{"--help"},
				Description: `Show this message and exit`,
			}},
		}, {
			Name: []string{"fmt"},
			Description: `Formats a .datasource, .pipe or .incl file

This command removes comments starting with # from the file, use DESCRIPTION instead.

The format command tries to parse the datafile so syntax errors might rise.

.incl files must contain a NODE definition`,
			Args: []model.Arg{{
				Templates:  []model.Template{model.TemplateFolders, model.TemplateFilepaths},
				Name:       "path",
				IsVariadic: true,
			}},
			Options: []model.Option{{
				Name:        []string{"--line-length"},
				Description: `A number indicating the maximum characters per line in the node SQL, lines will be splitted based on the SQL syntax and the number of characters passed as a parameter`,
				Args: []model.Arg{{
					Name: "integer",
				}},
			}, {
				Name:        []string{"--dry-run"},
				Description: `Don't ask to override the local file`,
			}, {
				Name:        []string{"--yes"},
				Description: `Do not ask for confirmation to overwrite the local file`,
			}, {
				Name:        []string{"--help"},
				Description: `Show this message and exit`,
			}},
		}, {
			Name:        []string{"init"},
			Description: `Initialize folder layout`,
			Options: []model.Option{{
				Name:        []string{"--generate-datasources"},
				Description: `Generate datasources based on CSV, NDJSON and Parquet files in this folder`,
			}, {
				Name:        []string{"--folder"},
				Description: `Folder where files will be placed`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}, {
				Name:        []string{"--force"},
				Description: `Overrides existing files`,
			}, {
				Name:        []string{"--help"},
				Description: `Show this message and exit`,
			}},
		}, {
			Name: []string{"materialize"},
			Description: `[BETA] Given a local Pipe datafile path (FILENAME) and optionally a Materialized View name (TARGET_DATASOURCE), choose one of its nodes to materialize.

This command guides you to generate the Materialized View with name TARGET_DATASOURCE, the only requirement is having a valid Pipe datafile locally. Use "tb pull" to download resources from your workspace when needed.

Syntax: tb materialize path/to/pipe.pipe`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFolders, model.TemplateFilepaths},
				Name:      "path",
			}, {
				Name: "text",
			}},
			Options: []model.Option{{
				Name:        []string{"--prefix"},
				Description: `Use prefix for all the resources`,
				Args: []model.Arg{{
					Name: "text",
				}},
			}, {
				Name:        []string{"--push-deps"},
				Description: `Push dependencies, disabled by default`,
			}, {
				Name: []string{"--workspace_map"},
				Args: []model.Arg{{
					Name: "text",
				}, {
					Name: "text",
				}},
			}, {
				Name:        []string{"--workspace"},
				Description: `Add a workspace path to the list of external workspaces, usage: --workspace name path/to/folder`,
				Args: []model.Arg{{
					Name: "text",
				}, {
					Name: "text",
				}},
			}, {
				Name:        []string{"--no-versions"},
				Description: `When set, resource dependency versions are not used, it pushes the dependencies as-is`,
			}, {
				Name:        []string{"--verbose"},
				Description: `Prints more log`,
			}, {
				Name:        []string{"--force-populate"},
				Description: `Subset or full`,
				Args: []model.Arg{{
					Name: "text",
				}},
			}, {
				Name:        []string{"--unlink-on-populate-error"},
				Description: `If the populate job fails the Materialized View is unlinked and new data won't be ingested in the Materialized View. First time a populate job fails, the Materialized View is always unlinked`,
			}, {
				Name:        []string{"--override-pipe"},
				Description: `Override pipe if exists or prompt`,
			}, {
				Name:        []string{"--override-datasource"},
				Description: `Override data source if exists or prompt`,
			}, {
				Name:        []string{"--help"},
				Description: `Show this message and exit`,
			}},
		}, {
			Name:        []string{"prompt"},
			Description: `Learn how to include info about the CLI in your shell PROMPT`,
			Options: []model.Option{{
				Name:        []string{"--help"},
				Description: `Show this message and exit`,
			}},
		}, {
			Name:        []string{"pull"},
			Description: `Retrieve latest versions for project files from Tinybird`,
			Options: []model.Option{{
				Name:        []string{"--folder"},
				Description: `Folder where files will be placed`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}, {
				Name:        []string{"--auto"},
				Description: `Saves datafiles automatically into their default directories (/datasources or /pipes)`,
			}, {
				Name:        []string{"--match"},
				Description: `Retrieve any resourcing matching the pattern. eg --match _test`,
				Args: []model.Arg{{
					Name: "text",
				}},
			}, {
				Name:        []string{"--prefix"},
				Description: `Download only resources with this prefix`,
				Args: []model.Arg{{
					Name: "text",
				}},
			}, {
				Name:        []string{"--force"},
				Description: `Override existing files`,
			}, {
				Name:        []string{"--help"},
				Description: `Show this message and exit`,
			}},
		}, {
			Name: []string{"push"},
			Description: `Push files to Tinybird
`,
			Args: []model.Arg{{
				Templates:  []model.Template{model.TemplateFolders, model.TemplateFilepaths},
				Name:       "path",
				IsVariadic: true,
			}},
			Options: []model.Option{{
				Name:        []string{"--prefix"},
				Description: `Use prefix for all the resources`,
				Args: []model.Arg{{
					Name: "text",
				}},
			}, {
				Name:        []string{"--dry-run"},
				Description: `Run the command without creating resources on the Tinybird account or any side effect`,
			}, {
				Name:        []string{"--check"},
				Description: `Enable/Disable output checking, enabled by default`,
				ExclusiveOn: []string{"--no-check"},
			}, {
				Name:        []string{"--no-check"},
				Description: `Enable/Disable output checking, enabled by default`,
				ExclusiveOn: []string{"--check"},
			}, {
				Name:        []string{"--push-deps"},
				Description: `Push dependencies, disabled by default`,
			}, {
				Name:        []string{"--debug"},
				Description: `Prints internal representation, can be combined with any command to get more information`,
			}, {
				Name:        []string{"-f", "--force"},
				Description: `Override pipes when they already exist`,
			}, {
				Name:        []string{"--override-datasource"},
				Description: `When pushing a pipe with a Materialized node if the target Data Source exists it will try to override it`,
			}, {
				Name:        []string{"--populate"},
				Description: `Populate materialized nodes when pushing them`,
			}, {
				Name:        []string{"--subset"},
				Description: `Populate with a subset percent of the data (limited to a maximum of 2M rows), this is useful to quickly test a materialized node with some data. The subset must be greater than 0 and lower than 0.1. A subset of 0.1 means a 10 percent of the data in the source Data Source will be used to populate the materialized view. Use it together with --populate, it has precedence over --sql-condition`,
				Args: []model.Arg{{
					Name: "float",
				}},
			}, {
				Name:        []string{"--sql-condition"},
				Description: `Populate with a SQL condition to be applied to the trigger Data Source of the Materialized View. For instance, "--sql-condition='date == toYYYYMM(now())'" it'll populate taking all the rows from the trigger Data Source which "date" is the current month. Use it together with --populate. --sql-condition is not taken into account if the --subset param is present. Including in the ""sql_condition"" any column present in the Data Source ""engine_sorting_key"" will make the populate job process less data`,
				Args: []model.Arg{{
					Name: "text",
				}},
			}, {
				Name:        []string{"--unlink-on-populate-error"},
				Description: `If the populate job fails the Materialized View is unlinked and new data won't be ingested in the Materialized View. First time a populate job fails, the Materialized View is always unlinked`,
			}, {
				Name:        []string{"--fixtures"},
				Description: `Append fixtures to data sources`,
			}, {
				Name:        []string{"--wait"},
				Description: `To be used along with --populate command. Waits for populate jobs to finish, showing a progress bar. Disabled by default`,
			}, {
				Name:        []string{"--yes"},
				Description: `Do not ask for confirmation`,
			}, {
				Name:        []string{"--only-response-times"},
				Description: `Checks only response times, when --force push a pipe`,
			}, {
				Name: []string{"--workspace_map"},
				Args: []model.Arg{{
					Name: "text",
				}, {
					Name: "text",
				}},
			}, {
				Name:        []string{"--workspace"},
				Description: `Add a workspace path to the list of external workspaces, usage: --workspace name path/to/folder`,
				Args: []model.Arg{{
					Name: "text",
				}, {
					Name: "text",
				}},
			}, {
				Name:        []string{"--no-versions"},
				Description: `When set, resource dependency versions are not used, it pushes the dependencies as-is`,
			}, {
				Name:        []string{"--timeout"},
				Description: `Timeout you want to use for the job populate`,
				Args: []model.Arg{{
					Name: "float",
				}},
			}, {
				Name:        []string{"-l", "--limit"},
				Description: `Number of requests to validate`,
				Args: []model.Arg{{
					Name: "integer range",
				}},
			}, {
				Name:        []string{"--sample-by-params"},
				Description: `When set, we will aggregate the pipe_stats_rt requests by extractURLParameterNames(assumeNotNull(url)) and for each combination we will take a sample of N requests`,
				Args: []model.Arg{{
					Name: "integer range",
				}},
			}, {
				Name:        []string{"-ff", "--failfast"},
				Description: `When set, the checker will exit as soon one test fails`,
			}, {
				Name:        []string{"--ignore-order"},
				Description: `When set, the checker will ignore the order of list properties`,
			}, {
				Name:        []string{"--validate-processed-bytes"},
				Description: `When set, the checker will validate that the new version doesn't process more than 25% than the current version`,
			}, {
				Name:        []string{"--last-requests-from-main"},
				Description: `When set, the checker will get top requests requests from main`,
			}, {
				Name:        []string{"--help"},
				Description: `Show this message and exit`,
			}},
		}, {
			Name:        []string{"sql"},
			Description: `Run SQL query over data sources and pipes`,
			Args: []model.Arg{{
				Name: "text",
			}},
			Options: []model.Option{{
				Name:        []string{"--rows_limit"},
				Description: `Max number of rows retrieved`,
				Args: []model.Arg{{
					Name: "integer",
				}},
			}, {
				Name:        []string{"--pipeline"},
				Description: `The name of the Pipe to run the SQL Query`,
				Args: []model.Arg{{
					Name: "text",
				}},
			}, {
				Name:        []string{"--pipe"},
				Description: `The path to the .pipe file to run the SQL Query of a specific NODE`,
				Args: []model.Arg{{
					Name: "text",
				}},
			}, {
				Name:        []string{"--node"},
				Description: `The NODE name`,
				Args: []model.Arg{{
					Name: "text",
				}},
			}, {
				Name:        []string{"--format"},
				Description: `Output format`,
				Args: []model.Arg{{
					Name:        "choice",
					Suggestions: []model.Suggestion{{Name: []string{`json`}}, {Name: []string{`csv`}}, {Name: []string{`human`}}},
				}},
			}, {
				Name:        []string{"--stats"},
				Description: `Show query stats`,
				ExclusiveOn: []string{"--no-stats"},
			}, {
				Name:        []string{"--no-stats"},
				Description: `Show query stats`,
				ExclusiveOn: []string{"--stats"},
			}, {
				Name:        []string{"--help"},
				Description: `Show this message and exit`,
			}},
		}},
	}
}
