// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["cdk8s"] = model.Subcommand{
		Name:        []string{"cdk8s"},
		Description: `CDK for K8s`,
		Options: []model.Option{{
			Name:        []string{"--version"},
			Description: `The current version`,
		}, {
			Name:        []string{"--help"},
			Description: `Show help`,
		}, {
			Name:        []string{"--check-upgrade"},
			Description: `Check for cdk8s-cli upgrade`,
		}},
		Subcommands: []model.Subcommand{{
			Name:        []string{"init"},
			Description: `Create a new, empty CDK8S project`,
			Args: []model.Arg{{
				Name:        "type",
				Description: `Select language you are using`,
				Suggestions: []model.Suggestion{{
					Name: []string{`go-app`},
				}, {
					Name: []string{`java-app`},
				}, {
					Name: []string{`python-app`},
				}, {
					Name: []string{`typescript-app`},
				}},
			}},
		}, {
			Name:        []string{"import"},
			Description: `Import a CRD schema to generate generate resources`,
			Args: []model.Arg{{
				Templates:   []model.Template{model.TemplateFilepaths},
				Name:        "spec",
				Description: `Path to the CRD schema`,
			}},
			Options: []model.Option{{
				Name:        []string{"--language", "-l"},
				Description: `Output programming language`,
				Args: []model.Arg{{
					Name: "language",
					Suggestions: []model.Suggestion{{
						Name: []string{`typescript`},
					}, {
						Name: []string{`python`},
					}, {
						Name: []string{`java`},
					}, {
						Name: []string{`go`},
					}},
				}},
			}, {
				Name:        []string{"--class-prefix"},
				Description: `A prefix to add to all generated class names`,
				ExclusiveOn: []string{"--no-class-prefix"},
			}, {
				Name:        []string{"--no-class-prefix"},
				Description: `Does not add a prefix to generated class names`,
				ExclusiveOn: []string{"--class-prefix"},
			}, {
				Name:        []string{"--exclude"},
				Description: `Do not import types that match these regular expressions`,
				Args: []model.Arg{{
					Name: "regexp",
				}},
			}, {
				Name:        []string{"--output", "-o"},
				Description: `Output directory`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
				}},
			}},
		}, {
			Name:        []string{"synth"},
			Description: `Synthesizes Kubernetes manifests for all charts in your app`,
			Options: []model.Option{{
				Name:        []string{"--app", "-a"},
				Description: `Command to use in order to execute cdk8s app`,
			}, {
				Name:        []string{"--output", "-o"},
				Description: `Output directory`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
				}},
			}, {
				Name:        []string{"--stdout", "-s"},
				Description: `Write synthesized manifests to STDOUT instead of the output directory`,
			}, {
				Name:        []string{"--plugins-dir"},
				Description: `Directory to store cdk8s plugins`,
			}, {
				Name:        []string{"--validate"},
				Description: `Apply validation plugins on the resulting manifests`,
				ExclusiveOn: []string{"--no-validate"},
			}, {
				Name:        []string{"--no-validate"},
				Description: `Disable validation`,
				ExclusiveOn: []string{"--validate"},
			}, {
				Name:        []string{"--validation-reports-output-file"},
				Description: `File to write a JSON representation of the validation reports to`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
				}},
			}},
		}},
	}
}
