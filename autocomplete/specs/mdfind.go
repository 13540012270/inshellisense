// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["mdfind"] = model.Subcommand{
		Name:        []string{"mdfind"},
		Description: `Finds files matching a given query`,
		Args: []model.Arg{{
			Name: "query",
		}},
		Options: []model.Option{{
			Name:        []string{"--help", "-h"},
			Description: `Show help for mdfind`,
		}, {
			Name:        []string{"-0"},
			Description: `Prints an ASCII NUL character after each result path`,
		}, {
			Name:        []string{"-live"},
			Description: `Provide live-updates to the number of files matching the query`,
		}, {
			Name:        []string{"-count"},
			Description: `Output the total number of matches, instead of the path to the matching items`,
		}, {
			Name:        []string{"-onlyin"},
			Description: `Limit the scope of the search to <dir>`,
			Args: []model.Arg{{
				Templates:   []model.Template{model.TemplateFolders},
				Name:        "dir",
				Description: `Directory`,
			}},
		}, {
			Name:        []string{"-name"},
			Description: `Search for matching file names to <filename> only`,
			Args: []model.Arg{{
				Name: "filename",
			}},
		}, {
			Name:        []string{"-reprint"},
			Description: `Reprint results on live update`,
		}, {
			Name:        []string{"-s"},
			Description: `Show contents of smart folder ~/Library/Saved Searches/<folder>.savedSearch`,
			Args: []model.Arg{{
				Name:        "folder",
				Description: `Smart folder in  ~/Library/Saved Searches`,
				Generator:   nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"-literal"},
			Description: `Force the provided query string to be taken as a literal query string, without interpretation`,
		}, {
			Name:        []string{"-interpret"},
			Description: `Force the provided query string to be interpreted as if it had been typed into the Spotlight menu`,
		}},
	}
}
