// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["more"] = model.Subcommand{
		Name:        []string{"more"},
		Description: `Opposite of less`,
		Args: []model.Arg{{
			Templates:  []model.Template{model.TemplateFilepaths},
			IsVariadic: true,
		}},
		Options: []model.Option{{
			Name:        []string{"-d", "--silent"},
			Description: `Prompt with '[Press space to continue, 'q' to quit.]', and display '[Press 'h' for instructions.]' instead of ringing the bell when an illegal key is pressed`,
		}, {
			Name:        []string{"-l", "--logical"},
			Description: `Do not pause after any line containing a ^L (form feed)`,
		}, {
			Name:        []string{"-f", "--no-pause"},
			Description: `Count logical lines, rather than screen lines`,
		}, {
			Name:        []string{"-p", "--print-over"},
			Description: `Instead, clear the whole screen and then display the text`,
		}, {
			Name:        []string{"-c", "--clean-print"},
			Description: `Instead, paint each screen from the top, clearing the remainder of each line as it is displayed`,
		}, {
			Name:        []string{"-s", "--squeeze"},
			Description: `Squeeze multiple blank lines into one`,
		}, {
			Name:        []string{"-u", "--plain"},
			Description: `Silently ignored as backwards compatibility`,
		}, {
			Name:        []string{"-n", "--lines"},
			Description: `Specify the number of lines per screenful`,
			Args: []model.Arg{{
				Name: "n",
			}},
		}, {
			Name:        []string{"--help"},
			Description: `Display help text`,
		}, {
			Name:        []string{"-V", "--version"},
			Description: `Display version information`,
		}},
	}
}
