// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["hexo"] = model.Subcommand{
		Name:        []string{"hexo"},
		Description: `Command line interface for Hexo, a static site generator`,
		Options: []model.Option{{
			Name:        []string{"--config"},
			Description: `Uses a custom config file (instead of "_config.yml"). Also accepts a comma-separated list (no spaces) of JSON or YAML config files that will combine the files into a single "_multiconfig.yml"`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "config file",
			}},
			IsPersistent: true,
		}, {
			Name:         []string{"--safe"},
			Description:  `Disable loading plugins and scripts`,
			IsPersistent: true,
		}, {
			Name:         []string{"--debug"},
			Description:  `Log verbose messages to the terminal and to "debug.log"`,
			IsPersistent: true,
		}, {
			Name:         []string{"--silent"},
			Description:  `Silence output to the terminal`,
			IsPersistent: true,
		}, {
			Name:         []string{"--draft"},
			Description:  `Display draft posts (stored in the "source/_drafts" folder)`,
			IsPersistent: true,
		}, {
			Name:        []string{"--cwd"},
			Description: `Customize the path of current working directory`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFolders},
				Name:      "directory",
			}},
			IsPersistent: true,
		}},
		Subcommands: []model.Subcommand{{
			Name:        []string{"config"},
			Description: `Get or set configurations`,
			Args: []model.Arg{{
				Name:        "name",
				Description: `Setting name. Leave it blank if you want to show all configurations`,
				IsOptional:  true,
			}, {
				Name:        "value",
				Description: `New value of a setting. Leave it blank if you just want to show a single configuration`,
				IsOptional:  true,
			}},
		}, {
			Name:        []string{"help"},
			Description: `Displays a help for each command`,
			Args: []model.Arg{{
				Templates:   []model.Template{model.TemplateHelp},
				Name:        "command",
				Description: `The command to display help for`,
				IsOptional:  true,
			}},
		}, {
			Name:        []string{"init"},
			Description: `Create a new Hexo folder`,
			Args: []model.Arg{{
				Templates:   []model.Template{model.TemplateFolders},
				Name:        "destination",
				Description: `Folder path. Initialize in current folder if not specified`,
				IsOptional:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"--no-clone"},
				Description: `Copy files instead of cloning from GitHub`,
			}, {
				Name:        []string{"--no-install"},
				Description: `Skip npm install`,
			}},
		}, {
			Name:        []string{"new"},
			Description: `Create a new article`,
			Args: []model.Arg{{
				Name:        "layout",
				Description: `The layout to use`,
				Suggestions: []model.Suggestion{{Name: []string{`post`}}, {Name: []string{`page`}}, {Name: []string{`draft`}}},
				IsOptional:  true,
			}, {
				Name:        "title",
				Description: `The title of the post`,
			}},
			Options: []model.Option{{
				Name:        []string{"-p", "--path"},
				Description: `Post path. Customize the path of the post`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFilepaths},
					Name:        "path",
					Description: `The path of the post`,
				}},
			}, {
				Name:        []string{"-r", "--replace"},
				Description: `Replace the current post if it existed`,
			}, {
				Name:        []string{"-s", "--slug"},
				Description: `Post slug. Customize the URL of the post`,
				Args: []model.Arg{{
					Name:        "slug",
					Description: `The slug of the post`,
				}},
			}},
		}, {
			Name:        []string{"generate"},
			Description: `Generate static files`,
			Options: []model.Option{{
				Name:        []string{"-d", "--deploy"},
				Description: `Deploy after generation finishes`,
			}, {
				Name:        []string{"-f", "--force"},
				Description: `Force regenerate`,
			}, {
				Name:        []string{"-w", "--watch"},
				Description: `Watch file changes`,
			}, {
				Name:        []string{"-b", "--bail"},
				Description: `Raise an error if any unhandled exception is thrown during generation`,
			}, {
				Name:        []string{"-c", "--concurrency"},
				Description: `Maximum number of files to be generated in parallel. Default is infinity`,
				Args: []model.Arg{{
					Name:        "concurrency",
					Description: `The number of files to generate in parallel`,
					IsOptional:  true,
				}},
			}},
		}, {
			Name:        []string{"publish"},
			Description: `Publish a draft`,
			Args: []model.Arg{{
				Name:        "layout",
				Description: `The layout to use`,
				Suggestions: []model.Suggestion{{Name: []string{`post`}}, {Name: []string{`page`}}, {Name: []string{`draft`}}},
				IsOptional:  true,
			}, {
				Name:        "filename",
				Description: `The name of the post`,
				Generator:   nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"server"},
			Description: `Start a local server. By default, this is at http://localhost:4000/`,
			Options: []model.Option{{
				Name:        []string{"-i", "--ip"},
				Description: `Override the default server IP. Bind to all IP address by default`,
				Args: []model.Arg{{
					Name:        "ip",
					Description: `The IP address to bind to`,
				}},
			}, {
				Name:        []string{"-p", "--port"},
				Description: `Override default port`,
				Args: []model.Arg{{
					Name:        "port",
					Description: `Only serve static files`,
				}},
			}, {
				Name:        []string{"-s", "--static"},
				Description: `Serve static files from the given directory`,
			}, {
				Name:        []string{"-l", "--log"},
				Description: `Enable logger. Override logger format`,
				Args: []model.Arg{{
					Name:        "format",
					Description: `The morgan logger format. Can be predefined or customized`,
					Suggestions: []model.Suggestion{{Name: []string{`combined`}}, {Name: []string{`common`}}, {Name: []string{`tiny`}}, {Name: []string{`dev`}}, {Name: []string{`short`}}},
					IsOptional:  true,
				}},
			}, {
				Name:        []string{"-o", "--open"},
				Description: `Immediately open the server url in your default web browser`,
			}},
		}, {
			Name:        []string{"deploy"},
			Description: `Deploy your website`,
			Options: []model.Option{{
				Name:        []string{"--setup"},
				Description: `Setup without deployment`,
			}, {
				Name:        []string{"-g", "--generate"},
				Description: `Generate static files before deploying`,
			}},
		}, {
			Name:        []string{"render"},
			Description: `Render files with renderer plugins (e.g. Markdown) and save them at the specified path`,
			Args: []model.Arg{{
				Templates:   []model.Template{model.TemplateFilepaths},
				Name:        "file",
				Description: `The file to render`,
				IsVariadic:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"--engine"},
				Description: `Specify render engine`,
			}, {
				Name:        []string{"-o", "--output"},
				Description: `Output destination. Result will be printed in the terminal if the output destination is not set`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFolders},
					Name:        "output directory",
					Description: `The path to output directory`,
				}},
			}, {
				Name:        []string{"--pretty"},
				Description: `Prettify JSON output`,
			}},
		}, {
			Name:        []string{"migrate"},
			Description: `Migrate content from other blog systems`,
			Args: []model.Arg{{
				Name:        "type",
				Description: `The type of migration. check https://hexo.io/docs/migration for more details`,
			}},
		}, {
			Name:        []string{"clean"},
			Description: `Clean the cache file ("db.json") and generated files ("public")`,
		}, {
			Name:        []string{"list"},
			Description: `List all routes`,
			Args: []model.Arg{{
				Name:        "type",
				Description: `The type of routes to list`,
				Suggestions: []model.Suggestion{{Name: []string{`post`}}, {Name: []string{`route`}}, {Name: []string{`page`}}, {Name: []string{`tag`}}, {Name: []string{`category`}}},
			}},
		}, {
			Name:        []string{"version"},
			Description: `Display version information`,
		}},
	}
}
