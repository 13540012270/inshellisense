// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["vale"] = model.Subcommand{
		Name:        []string{"vale"},
		Description: `A syntax-aware linter for prose built with speed and extensibility in mind`,
		Args: []model.Arg{{
			Templates:  []model.Template{model.TemplateFilepaths, model.TemplateFolders},
			IsVariadic: true,
		}},
		Options: []model.Option{{
			Name:        []string{"--help", "-h"},
			Description: `Show help for vale`,
		}, {
			Name:        []string{"--version", "-v"},
			Description: `Print the current version`,
		}, {
			Name:        []string{"--ignore-syntax"},
			Description: `Lint all files line-by-line`,
		}, {
			Name:        []string{"--no-exit"},
			Description: `Don't return a nonzero exit code on errors`,
		}, {
			Name:        []string{"--no-wrap"},
			Description: `Don't wrap CLI output`,
		}, {
			Name:        []string{"--ext"},
			Description: `An extension to associate with stdin`,
			Args: []model.Arg{{
				Name:        "ext",
				Suggestions: []model.Suggestion{{Name: []string{`.md`}}, {Name: []string{`.rst`}}, {Name: []string{`.adoc`}}, {Name: []string{`.html`}}},
			}},
		}, {
			Name:        []string{"--glob"},
			Description: `A glob pattern`,
			Args: []model.Arg{{
				Name: "glob",
			}},
		}, {
			Name:        []string{"--minAlertLevel"},
			Description: `The minimum level to display`,
			Args: []model.Arg{{
				Name:        "level",
				Suggestions: []model.Suggestion{{Name: []string{`suggestion`}}, {Name: []string{`warning`}}, {Name: []string{`error`}}},
			}},
		}, {
			Name:        []string{"--output"},
			Description: `The alert output style to use`,
			Args: []model.Arg{{
				Name:        "style",
				Suggestions: []model.Suggestion{{Name: []string{`line`}}, {Name: []string{`JSON`}}},
			}},
		}, {
			Name:        []string{"--config"},
			Description: `A path to a .vale.ini file`,
			Args: []model.Arg{{
				Name: "path",
			}},
		}},
		Subcommands: []model.Subcommand{{
			Name:        []string{"ls-config"},
			Description: `Print the current configuration to stdout`,
		}, {
			Name:        []string{"ls-metrics"},
			Description: `Print the given file's internal metrics to stdout`,
			Args: []model.Arg{{
				Name:        "file",
				Description: `The path to a file you want to analyze`,
			}},
		}},
	}
}
