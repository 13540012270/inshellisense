// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.
//
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

package specs

import (
	"github.com/microsoft/clac/autocomplete/model"
)

func init() {
	Specs["micro"] = model.Subcommand{
		Name:        []string{"micro"},
		Description: `A modern and intuitive terminal-based text editor`,
		Args: []model.Arg{{
			Templates:  []model.Template{model.TemplateFilepaths},
			Name:       "file",
			IsOptional: true,
		}},
		Options: []model.Option{{
			Name:        []string{"--clean"},
			Description: `Cleans the configuration directory`,
		}, {
			Name:        []string{"--config-dir"},
			Description: `Specify a custom location for the configuration directory`,
			Args: []model.Arg{{
				Name: "dir",
			}},
		}, {
			Name:        []string{"--options"},
			Description: `Show all option help`,
		}, {
			Name:        []string{"--debug"},
			Description: `Enable debug mode`,
		}, {
			Name:        []string{"--version"},
			Description: `Show the version number and information`,
		}, {
			Name:        []string{"--autoindent"},
			Description: `When creating a new line, use the same indentation as the previous line`,
			Args: []model.Arg{{
				Name:        "bool",
				Description: `True/false`,
				Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
			}},
		}, {
			Name:        []string{"--autosave"},
			Description: `Automatically save the buffer every <n> seconds. If set to 0, no autosaving is performed`,
			Args: []model.Arg{{
				Name:        "n",
				Description: `Seconds`,
				Suggestions: []model.Suggestion{{Name: []string{`0`}}, {Name: []string{`60`}}, {Name: []string{`120`}}, {Name: []string{`300`}}, {Name: []string{`600`}}, {Name: []string{`1800`}}},
			}},
		}, {
			Name:        []string{"--autosu"},
			Description: `Automatically attempt to use super user privileges to save without asking`,
			Args: []model.Arg{{
				Name:        "bool",
				Description: `True/false`,
				Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
			}},
		}, {
			Name:        []string{"--backup"},
			Description: `Automatically keep backups of all open buffers`,
			Args: []model.Arg{{
				Name:        "bool",
				Description: `True/false`,
				Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
			}},
		}, {
			Name:        []string{"--backupdir"},
			Description: `The directory to place backups in`,
			Args: []model.Arg{{
				Templates:   []model.Template{model.TemplateFolders},
				Name:        "dir",
				Suggestions: []model.Suggestion{{Name: []string{`~/.config/micro.backups`}}},
			}},
		}, {
			Name:        []string{"--basename"},
			Description: `In the infobar and tabbar, show only the basename of the file being edited rather than the full path`,
			Args: []model.Arg{{
				Name:        "bool",
				Description: `True/false`,
				Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
			}},
		}, {
			Name:        []string{"--clipboard"},
			Description: `Apecifies how the system clipboard should be accessed`,
			Args: []model.Arg{{
				Name: "type",
				Suggestions: []model.Suggestion{{
					Name:        []string{`external`},
					Description: `Accesses clipboard via an external tool, such as xclip/xsel or wl-clipboard on Linux, pbcopy/pbpaste on MacOS, and system calls on Windows`,
				}, {
					Name:        []string{`terminal`},
					Description: `Accesses the clipboard via your terminal emulator`,
				}, {
					Name:        []string{`internal`},
					Description: `Uses an internal clipboard`,
				}},
			}},
		}, {
			Name:        []string{"--colorcolumn"},
			Description: `Display a color at the specified column if not set to 0`,
			Args: []model.Arg{{
				Name:        "value",
				Suggestions: []model.Suggestion{{Name: []string{`0`}}, {Name: []string{`1`}}},
			}},
		}, {
			Name:        []string{"--colorscheme"},
			Description: `Loads the colorscheme stored in $(configDir)/colorschemes/<scheme>.micro`,
			Args: []model.Arg{{
				Name:        "scheme",
				Suggestions: []model.Suggestion{{Name: []string{`default`}}},
			}},
		}, {
			Name:        []string{"--cursorline"},
			Description: `Highlight the line that the cursor is on in a different color`,
			Args: []model.Arg{{
				Name:        "bool",
				Description: `True/false`,
				Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
			}},
		}, {
			Name:        []string{"--diffgutter"},
			Description: `Display diff indicators before lines`,
			Args: []model.Arg{{
				Name:        "bool",
				Description: `True/false`,
				Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
			}},
		}, {
			Name:        []string{"--divchars"},
			Description: `Specifies the divider characters used for the dividing line between vertical/horizontal splits (the first character is for vertical dividers, and the second is for horizontal dividers)`,
			Args: []model.Arg{{
				Name:        "chars",
				Suggestions: []model.Suggestion{{Name: []string{`|-`}}},
			}},
		}, {
			Name:        []string{"--divreverse"},
			Description: `Reverse colors specified by the colorscheme`,
			Args: []model.Arg{{
				Name:        "bool",
				Description: `True/false`,
				Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
			}},
		}, {
			Name:        []string{"--encoding"},
			Description: `The encoding to open and save files with`,
			Args: []model.Arg{{
				Name:        "encoding",
				Suggestions: []model.Suggestion{{Name: []string{`utf-8`}}},
			}},
		}, {
			Name:        []string{"--eofnewline"},
			Description: `Automatically add a newline to the end of the file if one does not exist`,
			Args: []model.Arg{{
				Name:        "bool",
				Description: `True/false`,
				Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
			}},
		}, {
			Name:        []string{"--fastdirty"},
			Description: `Use 'fast dirty' algorithm to determine if a buffer is modified or not`,
			Args: []model.Arg{{
				Name:        "bool",
				Description: `True/false`,
				Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
			}},
		}, {
			Name:        []string{"--fileformat"},
			Description: `Type of line endings to be used for the file`,
			Args: []model.Arg{{
				Name:        "format",
				Suggestions: []model.Suggestion{{Name: []string{`unix`}}, {Name: []string{`dos`}}},
			}},
		}, {
			Name:        []string{"--filetype"},
			Description: `File type for the current buffer`,
			Args: []model.Arg{{
				Name: "type",
				Suggestions: []model.Suggestion{{
					Name:        []string{`unknown`},
					Description: `Automatically overridden depending on type of file opened`,
				}, {
					Name:        []string{`off`},
					Description: `Disable file type detection`,
				}},
			}},
		}, {
			Name:        []string{"--ignorecase"},
			Description: `Perform case-insensitive searches`,
			Args: []model.Arg{{
				Name:        "bool",
				Description: `True/false`,
				Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
			}},
		}, {
			Name:        []string{"--incsearch"},
			Description: `Enable incremental search in "Find" prompt`,
			Args: []model.Arg{{
				Name:        "bool",
				Description: `True/false`,
				Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
			}},
		}, {
			Name:        []string{"--indentchar"},
			Description: `Sets the indentation character`,
			Args: []model.Arg{{
				Name: "character",
				Suggestions: []model.Suggestion{{
					Name: []string{` `},
				}, {
					Name: []string{`\\t`},
				}},
			}},
		}, {
			Name:        []string{"--infobar"},
			Description: `Enables the line at the bottom of the editor where messages are printed`,
			Args: []model.Arg{{
				Name:        "bool",
				Description: `True/false`,
				Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
			}},
		}, {
			Name:        []string{"--keepautoindent"},
			Description: `Remove trailing whitespace from a line with no insertions when moving to the next line`,
			Args: []model.Arg{{
				Name:        "bool",
				Description: `True/false`,
				Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
			}},
		}, {
			Name:        []string{"--keymenu"},
			Description: `Display the nano-style key menu at the bottom of the screen`,
			Args: []model.Arg{{
				Name:        "bool",
				Description: `True/false`,
				Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
			}},
		}, {
			Name:        []string{"--matchbrace"},
			Description: `Underline matching braces for '()', '{}', '[]' when the cursor is on a brace character`,
			Args: []model.Arg{{
				Name:        "bool",
				Description: `True/false`,
				Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
			}},
		}, {
			Name:        []string{"--mkparents"},
			Description: `Allow parent directories to be created automatically when opening a file on a path that doesn't exist`,
			Args: []model.Arg{{
				Name:        "bool",
				Description: `True/false`,
				Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
			}},
		}, {
			Name:        []string{"--mouse"},
			Description: `Enable mouse support`,
			Args: []model.Arg{{
				Name:        "bool",
				Description: `True/false`,
				Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
			}},
		}, {
			Name:        []string{"--paste"},
			Description: `Treat characters sent from the terminal in a single chunk as a paste event rather than a series of manual key presses`,
			Args: []model.Arg{{
				Name:        "bool",
				Description: `True/false`,
				Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
			}},
		}, {
			Name:        []string{"--parsecursor"},
			Description: `Parse filenames such as file.txt:10:5 as requesting to open file.txt with the cursor at line 10 and column 5`,
			Args: []model.Arg{{
				Name:        "bool",
				Description: `True/false`,
				Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
			}},
		}, {
			Name:        []string{"--permbackup"},
			Description: `Cause backups to be permanently saved`,
			Args: []model.Arg{{
				Name:        "bool",
				Description: `True/false`,
				Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
			}},
		}, {
			Name:        []string{"--pluginchannels"},
			Description: `List of URLs pointing to plugin channels for downloading and installing plugins`,
			Args: []model.Arg{{
				Name:        "url",
				Suggestions: []model.Suggestion{{Name: []string{`https://raw.githubusercontent.com/micro-editor/plugin-channel/master/channel.json`}}},
				IsVariadic:  true,
			}},
		}, {
			Name:        []string{"--pluginrepos"},
			Description: `A list of links to plugin repositories`,
			Args: []model.Arg{{
				Name:       "link",
				IsVariadic: true,
			}},
		}, {
			Name:        []string{"--readonly"},
			Description: `Disallow edits to the buffer`,
			Args: []model.Arg{{
				Name:        "bool",
				Description: `True/false`,
				Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
			}},
		}, {
			Name:        []string{"--relativeruler"},
			Description: `Make line numbers display relatively`,
			Args: []model.Arg{{
				Name:        "bool",
				Description: `True/false`,
				Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
			}},
		}, {
			Name:        []string{"--rmtrailingws"},
			Description: `Automatically trim trailing whitespaces at ends of lines`,
			Args: []model.Arg{{
				Name:        "bool",
				Description: `True/false`,
				Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
			}},
		}, {
			Name:        []string{"--ruler"},
			Description: `Display line numbers`,
			Args: []model.Arg{{
				Name:        "bool",
				Description: `True/false`,
				Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
			}},
		}, {
			Name:        []string{"--savecursor"},
			Description: `Remember where the cursor was last time the file was opened and put it there when re-opened`,
			Args: []model.Arg{{
				Name:        "bool",
				Description: `True/false`,
				Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
			}},
		}, {
			Name:        []string{"--savehistory"},
			Description: `Remember command history between closing and re-opening micro`,
			Args: []model.Arg{{
				Name:        "bool",
				Description: `True/false`,
				Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
			}},
		}, {
			Name:        []string{"--saveundo"},
			Description: `Remember undo state between closing and re-opening a file`,
			Args: []model.Arg{{
				Name:        "bool",
				Description: `True/false`,
				Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
			}},
		}, {
			Name:        []string{"--scrollbar"},
			Description: `Display a scroll bar`,
			Args: []model.Arg{{
				Name:        "bool",
				Description: `True/false`,
				Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
			}},
		}, {
			Name:        []string{"--scrollmargin"},
			Description: `Margin at which the view starts scrolling when the cursor approaches the edge of the view`,
			Args: []model.Arg{{
				Name:        "margin",
				Suggestions: []model.Suggestion{{Name: []string{`0`}}, {Name: []string{`1`}}, {Name: []string{`2`}}, {Name: []string{`3`}}, {Name: []string{`5`}}, {Name: []string{`10`}}},
			}},
		}, {
			Name:        []string{"--scrollspeed"},
			Description: `Number of lines to scroll for one scroll event`,
			Args: []model.Arg{{
				Name:        "number",
				Suggestions: []model.Suggestion{{Name: []string{`1`}}, {Name: []string{`2`}}, {Name: []string{`3`}}, {Name: []string{`4`}}, {Name: []string{`5`}}},
			}},
		}, {
			Name:        []string{"--smartpaste"},
			Description: `Add leading whitespace when pasting multiple lines`,
			Args: []model.Arg{{
				Name:        "bool",
				Description: `True/false`,
				Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
			}},
		}, {
			Name:        []string{"--softwrap"},
			Description: `Wrap lines that are too long to fit on the screen`,
			Args: []model.Arg{{
				Name:        "bool",
				Description: `True/false`,
				Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
			}},
		}, {
			Name:        []string{"--splitbottom"},
			Description: `When a horizontal split is created, create it below the current split`,
			Args: []model.Arg{{
				Name:        "bool",
				Description: `True/false`,
				Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
			}},
		}, {
			Name:        []string{"--splitright"},
			Description: `When a vertical split is created, create it to the right of the current split`,
			Args: []model.Arg{{
				Name:        "bool",
				Description: `True/false`,
				Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
			}},
		}, {
			Name:        []string{"--statusformatl"},
			Description: `Format string definition for the left-justified part of the statusline`,
			Args: []model.Arg{{
				Name: "format",
			}},
		}, {
			Name:        []string{"--statusformatr"},
			Description: `Format string definition for the right-justified part of the statusline`,
			Args: []model.Arg{{
				Name: "format",
			}},
		}, {
			Name:        []string{"--statusline"},
			Description: `Display the status line at the bottom of the screen`,
			Args: []model.Arg{{
				Name:        "bool",
				Description: `True/false`,
				Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
			}},
		}, {
			Name:        []string{"--sucmd"},
			Description: `The super user command`,
			Args: []model.Arg{{
				Name:        "command",
				Suggestions: []model.Suggestion{{Name: []string{`sudo`}}, {Name: []string{`doas`}}},
			}},
		}, {
			Name:        []string{"--syntax"},
			Description: `Enables syntax highlighting`,
			Args: []model.Arg{{
				Name:        "bool",
				Description: `True/false`,
				Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
			}},
		}, {
			Name:        []string{"--tabmovement"},
			Description: `Navigate spaces at the beginning of lines as if they are tabs`,
			Args: []model.Arg{{
				Name:        "bool",
				Description: `True/false`,
				Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
			}},
		}, {
			Name:        []string{"--tabsize"},
			Description: `The size in spaces that a tab character should be displayed with`,
			Args: []model.Arg{{
				Name:        "size",
				Suggestions: []model.Suggestion{{Name: []string{`2`}}, {Name: []string{`4`}}, {Name: []string{`8`}}, {Name: []string{`16`}}},
			}},
		}, {
			Name:        []string{"--tabstospaces"},
			Description: `Use spaces instead of tabs`,
			Args: []model.Arg{{
				Name:        "bool",
				Description: `True/false`,
				Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
			}},
		}, {
			Name:        []string{"--useprimary"},
			Description: `Use the primary clipboard to copy selections in the background`,
			Args: []model.Arg{{
				Name:        "bool",
				Description: `True/false`,
				Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
			}},
		}, {
			Name:        []string{"--wordwrap"},
			Description: `Wrap long lines by words`,
			Args: []model.Arg{{
				Name:        "bool",
				Description: `True/false`,
				Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
			}},
		}, {
			Name:        []string{"--xterm"},
			Description: `Assume that the terminal conforms to xterm-256color regardless of what the $TERM variable actually contains`,
			Args: []model.Arg{{
				Name:        "bool",
				Description: `True/false`,
				Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
			}},
		}},
		Subcommands: []model.Subcommand{{
			Name:        []string{"--plugin"},
			Description: `Manage plugins`,
			Options: []model.Option{{
				Name:        []string{"remove"},
				Description: `Remove plugin(s)`,
				Args: []model.Arg{{
					Name:       "plugin",
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"update"},
				Description: `Update plugin(s) (if no argument is given, updates all plugins)`,
				Args: []model.Arg{{
					Name:       "plugin",
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"search"},
				Description: `Search for a plugin`,
				Args: []model.Arg{{
					Name: "plugin",
				}},
			}, {
				Name:        []string{"list"},
				Description: `List installed plugins`,
			}, {
				Name:        []string{"available"},
				Description: `List available plugins`,
			}},
		}},
	}
}
