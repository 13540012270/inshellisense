// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.
//
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

package specs

import (
	"github.com/microsoft/clac/autocomplete/model"
)

func init() {
	Specs["xcrun"] = model.Subcommand{
		Name:        []string{"xcrun"},
		Description: `Find and execute the named command line tool from the active xCode developer directory`,
		Options: []model.Option{{
			Name:        []string{"-h", "--help"},
			Description: `Help message`,
		}, {
			Name:        []string{"--version"},
			Description: `Show the xcrun version`,
		}, {
			Name:        []string{"-v", "--verbose"},
			Description: `Show verbose logging output`,
		}, {
			Name:        []string{"--sdk"},
			Description: `Find the tool for the given SDK name`,
			Args: []model.Arg{{
				Name: "sdk name",
			}},
		}, {
			Name:        []string{"--toolchain"},
			Description: `Find the tool for the given toolchain`,
			Args: []model.Arg{{
				Name: "name",
			}},
		}, {
			Name:        []string{"-l", "--log"},
			Description: `Show command path to be executed (and --run)`,
		}, {
			Name:        []string{"-f", "--find"},
			Description: `Find and print the tool path`,
		}, {
			Name:        []string{"--run"},
			Description: `(Default) find and execute the tool`,
		}, {
			Name:        []string{"-n", "--no-cache"},
			Description: `Do not use the lookup cache`,
		}, {
			Name:        []string{"-k", "--kill-cache"},
			Description: `Invalidate all existing cache entries`,
		}, {
			Name:        []string{"--show-sdk-path"},
			Description: `Show selected SDK install path`,
		}, {
			Name:        []string{"--show-sdk-version"},
			Description: `Show selected SDK version`,
		}, {
			Name:        []string{"--show-sdk-build-version"},
			Description: `Show selected SDK build version`,
		}, {
			Name:        []string{"--show-sdk-platform-path"},
			Description: `Show selected SDK platform path`,
		}, {
			Name:        []string{"--show-sdk-platform-version"},
			Description: `Show selected SDK platform version`,
		}},
		Subcommands: []model.Subcommand{{
			Name:        []string{"scntool"},
			Description: `SceneKit CLI utilities`,
			Options: []model.Option{{
				Name:        []string{"--convert"},
				Description: `File to convert`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"--format"},
				Description: `Format to convert to`,
				Args: []model.Arg{{
					Name:        "format",
					Suggestions: []model.Suggestion{{Name: []string{`scn`}}, {Name: []string{`dae`}}, {Name: []string{`c3d`}}},
				}},
			}, {
				Name:        []string{"--output"},
				Description: `Path to the output file`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"--force-y-up"},
				Description: `Convert objects to use y axis up`,
			}, {
				Name:        []string{"--force-interleaved"},
				Description: `Interleave the vertex data for multiple semantics in the same array to achieve better rendering performance`,
			}, {
				Name:        []string{"--prefer-compressed-textures"},
				Description: `Use .ktx, .astc and .pvrtc files for textures if available in the asset catalog`,
			}, {
				Name:        []string{"--verbose"},
				Description: `Get pretty error message`,
			}},
		}, {
			Name: []string{"xcodebuild"},
		}, {
			Name: []string{"simctl"},
		}},
	}
}
