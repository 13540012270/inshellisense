// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["cargo"] = model.Subcommand{
		Name:        []string{"cargo"},
		Description: `CLI Interface for Cargo`,
		Options: []model.Option{{
			Name:        []string{"--explain"},
			Description: `Run "rustc --explain CODE"`,
			Args: []model.Arg{{
				Name: "explain",
			}},
		}, {
			Name:        []string{"--color"},
			Description: `Coloring: auto, always, never`,
			Args: []model.Arg{{
				Name:        "color",
				Suggestions: []model.Suggestion{{Name: []string{`always`}}, {Name: []string{`never`}}, {Name: []string{`auto`}}},
			}},
		}, {
			Name:        []string{"--config"},
			Description: `Override a configuration value`,
			Args: []model.Arg{{
				Name:      "config",
				Generator: nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"-Z"},
			Description: `Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details`,
			Args: []model.Arg{{
				Name: "unstable-features",
			}},
		}, {
			Name:        []string{"-h", "--help"},
			Description: `Print help information`,
		}, {
			Name:        []string{"-V", "--version"},
			Description: `Print version info and exit`,
		}, {
			Name:        []string{"--list"},
			Description: `List installed commands`,
		}, {
			Name:        []string{"-v", "--verbose"},
			Description: `Use verbose output (-vv very verbose/build.rs output)`,
		}, {
			Name:        []string{"-q", "--quiet"},
			Description: `Do not print cargo log messages`,
		}, {
			Name:        []string{"--frozen"},
			Description: `Require Cargo.lock and cache are up to date`,
		}, {
			Name:        []string{"--locked"},
			Description: `Require Cargo.lock is up to date`,
		}, {
			Name:        []string{"--offline"},
			Description: `Run without accessing the network`,
		}},
		Subcommands: []model.Subcommand{{
			Name:        []string{"bench"},
			Description: `Execute all benchmarks of a local package`,
			Args: []model.Arg{{
				Name: "BENCHNAME",
			}, {
				Name:       "args",
				IsVariadic: true,
			}},
			Options: []model.Option{{
				Name:        []string{"--bin"},
				Description: `Benchmark only the specified binary`,
				Args: []model.Arg{{
					Name:           "bin",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"--example"},
				Description: `Benchmark only the specified example`,
				Args: []model.Arg{{
					Name:           "example",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"--test"},
				Description: `Benchmark only the specified test target`,
				Args: []model.Arg{{
					Name:           "test",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"--bench"},
				Description: `Benchmark only the specified bench target`,
				Args: []model.Arg{{
					Name:           "bench",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"-p", "--package"},
				Description: `Package to run benchmarks for`,
				Args: []model.Arg{{
					Name:           "package",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"--exclude"},
				Description: `Exclude packages from the benchmark`,
				Args: []model.Arg{{
					Name:           "exclude",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-j", "--jobs"},
				Description: `Number of parallel jobs, defaults to # of CPUs`,
				Args: []model.Arg{{
					Name: "jobs",
				}},
			}, {
				Name:        []string{"--profile"},
				Description: `Build artifacts with the specified profile`,
				Args: []model.Arg{{
					Name: "profile",
				}},
			}, {
				Name:        []string{"--features"},
				Description: `Space or comma separated list of features to activate`,
				Args: []model.Arg{{
					Name:       "features",
					Generator:  nil, // TODO: port over generator
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"--target"},
				Description: `Build for the target triple`,
				Args: []model.Arg{{
					Name:           "target",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--target-dir"},
				Description: `Directory for all generated artifacts`,
				Args: []model.Arg{{
					Name: "target-dir",
				}},
			}, {
				Name:        []string{"--manifest-path"},
				Description: `Path to Cargo.toml`,
				Args: []model.Arg{{
					Name:      "manifest-path",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--message-format"},
				Description: `Error format`,
				Args: []model.Arg{{
					Name: "message-format",
				}},
			}, {
				Name:        []string{"--color"},
				Description: `Coloring: auto, always, never`,
				Args: []model.Arg{{
					Name:        "color",
					Suggestions: []model.Suggestion{{Name: []string{`auto`}}, {Name: []string{`always`}}, {Name: []string{`never`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Override a configuration value`,
				Args: []model.Arg{{
					Name:      "config",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-Z"},
				Description: `Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details`,
				Args: []model.Arg{{
					Name: "unstable-features",
				}},
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Do not print cargo log messages`,
			}, {
				Name:        []string{"--lib"},
				Description: `Benchmark only this package's library`,
			}, {
				Name:        []string{"--bins"},
				Description: `Benchmark all binaries`,
			}, {
				Name:        []string{"--examples"},
				Description: `Benchmark all examples`,
			}, {
				Name:        []string{"--tests"},
				Description: `Benchmark all tests`,
			}, {
				Name:        []string{"--benches"},
				Description: `Benchmark all benches`,
			}, {
				Name:        []string{"--all-targets"},
				Description: `Benchmark all targets`,
			}, {
				Name:        []string{"--no-run"},
				Description: `Compile, but don't run benchmarks`,
			}, {
				Name:        []string{"--workspace"},
				Description: `Benchmark all packages in the workspace`,
			}, {
				Name:        []string{"--all"},
				Description: `Alias for --workspace (deprecated)`,
			}, {
				Name:        []string{"--all-features"},
				Description: `Activate all available features`,
			}, {
				Name:        []string{"--no-default-features"},
				Description: `Do not activate the "default" feature`,
			}, {
				Name:        []string{"--ignore-rust-version"},
				Description: `Ignore "rust-version" specification in packages`,
			}, {
				Name:        []string{"--no-fail-fast"},
				Description: `Run all benchmarks regardless of failure`,
			}, {
				Name:        []string{"--unit-graph"},
				Description: `Output build graph in JSON (unstable)`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Print help information`,
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Use verbose output (-vv very verbose/build.rs output)`,
			}, {
				Name:        []string{"--frozen"},
				Description: `Require Cargo.lock and cache are up to date`,
			}, {
				Name:        []string{"--locked"},
				Description: `Require Cargo.lock is up to date`,
			}, {
				Name:        []string{"--offline"},
				Description: `Run without accessing the network`,
			}, {
				Name:        []string{"--timings"},
				Description: `Timing output formats (unstable)`,
			}},
		}, {
			Name:        []string{"build", "b"},
			Description: `Compile a local package and all of its dependencies`,
			Options: []model.Option{{
				Name:        []string{"-p", "--package"},
				Description: `Package to build (see "cargo help pkgid")`,
				Args: []model.Arg{{
					Name:           "package",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"--exclude"},
				Description: `Exclude packages from the build`,
				Args: []model.Arg{{
					Name:           "exclude",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-j", "--jobs"},
				Description: `Number of parallel jobs, defaults to # of CPUs`,
				Args: []model.Arg{{
					Name: "jobs",
				}},
			}, {
				Name:        []string{"--bin"},
				Description: `Build only the specified binary`,
				Args: []model.Arg{{
					Name:           "bin",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"--example"},
				Description: `Build only the specified example`,
				Args: []model.Arg{{
					Name:           "example",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"--test"},
				Description: `Build only the specified test target`,
				Args: []model.Arg{{
					Name:           "test",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"--bench"},
				Description: `Build only the specified bench target`,
				Args: []model.Arg{{
					Name:           "bench",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"--profile"},
				Description: `Build artifacts with the specified profile`,
				Args: []model.Arg{{
					Name: "profile",
				}},
			}, {
				Name:        []string{"--features"},
				Description: `Space or comma separated list of features to activate`,
				Args: []model.Arg{{
					Name:       "features",
					Generator:  nil, // TODO: port over generator
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"--target"},
				Description: `Build for the target triple`,
				Args: []model.Arg{{
					Name:           "target",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--target-dir"},
				Description: `Directory for all generated artifacts`,
				Args: []model.Arg{{
					Name: "target-dir",
				}},
			}, {
				Name:        []string{"--out-dir"},
				Description: `Copy final artifacts to this directory (unstable)`,
				Args: []model.Arg{{
					Name: "out-dir",
				}},
			}, {
				Name:        []string{"--manifest-path"},
				Description: `Path to Cargo.toml`,
				Args: []model.Arg{{
					Name:      "manifest-path",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--message-format"},
				Description: `Error format`,
				Args: []model.Arg{{
					Name: "message-format",
				}},
			}, {
				Name:        []string{"--color"},
				Description: `Coloring: auto, always, never`,
				Args: []model.Arg{{
					Name:        "color",
					Suggestions: []model.Suggestion{{Name: []string{`auto`}}, {Name: []string{`always`}}, {Name: []string{`never`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Override a configuration value`,
				Args: []model.Arg{{
					Name:      "config",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-Z"},
				Description: `Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details`,
				Args: []model.Arg{{
					Name: "unstable-features",
				}},
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Do not print cargo log messages`,
			}, {
				Name:        []string{"--workspace"},
				Description: `Build all packages in the workspace`,
			}, {
				Name:        []string{"--all"},
				Description: `Alias for --workspace (deprecated)`,
			}, {
				Name:        []string{"--lib"},
				Description: `Build only this package's library`,
			}, {
				Name:        []string{"--bins"},
				Description: `Build all binaries`,
			}, {
				Name:        []string{"--examples"},
				Description: `Build all examples`,
			}, {
				Name:        []string{"--tests"},
				Description: `Build all tests`,
			}, {
				Name:        []string{"--benches"},
				Description: `Build all benches`,
			}, {
				Name:        []string{"--all-targets"},
				Description: `Build all targets`,
			}, {
				Name:        []string{"-r", "--release"},
				Description: `Build artifacts in release mode, with optimizations`,
			}, {
				Name:        []string{"--all-features"},
				Description: `Activate all available features`,
			}, {
				Name:        []string{"--no-default-features"},
				Description: `Do not activate the "default" feature`,
			}, {
				Name:        []string{"--ignore-rust-version"},
				Description: `Ignore "rust-version" specification in packages`,
			}, {
				Name:        []string{"--build-plan"},
				Description: `Output the build plan in JSON (unstable)`,
			}, {
				Name:        []string{"--unit-graph"},
				Description: `Output build graph in JSON (unstable)`,
			}, {
				Name:        []string{"--future-incompat-report"},
				Description: `Outputs a future incompatibility report at the end of the build`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Print help information`,
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Use verbose output (-vv very verbose/build.rs output)`,
			}, {
				Name:        []string{"--frozen"},
				Description: `Require Cargo.lock and cache are up to date`,
			}, {
				Name:        []string{"--locked"},
				Description: `Require Cargo.lock is up to date`,
			}, {
				Name:        []string{"--offline"},
				Description: `Run without accessing the network`,
			}, {
				Name:        []string{"--timings"},
				Description: `Timing output formats (unstable)`,
			}},
		}, {
			Name:        []string{"check", "c"},
			Description: `Check a local package and all of its dependencies for errors`,
			Options: []model.Option{{
				Name:        []string{"-p", "--package"},
				Description: `Package(s) to check`,
				Args: []model.Arg{{
					Name:           "package",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"--exclude"},
				Description: `Exclude packages from the check`,
				Args: []model.Arg{{
					Name:           "exclude",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-j", "--jobs"},
				Description: `Number of parallel jobs, defaults to # of CPUs`,
				Args: []model.Arg{{
					Name: "jobs",
				}},
			}, {
				Name:        []string{"--bin"},
				Description: `Check only the specified binary`,
				Args: []model.Arg{{
					Name:           "bin",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"--example"},
				Description: `Check only the specified example`,
				Args: []model.Arg{{
					Name:           "example",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"--test"},
				Description: `Check only the specified test target`,
				Args: []model.Arg{{
					Name:           "test",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"--bench"},
				Description: `Check only the specified bench target`,
				Args: []model.Arg{{
					Name:           "bench",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"--profile"},
				Description: `Check artifacts with the specified profile`,
				Args: []model.Arg{{
					Name: "profile",
				}},
			}, {
				Name:        []string{"--features"},
				Description: `Space or comma separated list of features to activate`,
				Args: []model.Arg{{
					Name:       "features",
					Generator:  nil, // TODO: port over generator
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"--target"},
				Description: `Check for the target triple`,
				Args: []model.Arg{{
					Name:           "target",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--target-dir"},
				Description: `Directory for all generated artifacts`,
				Args: []model.Arg{{
					Name: "target-dir",
				}},
			}, {
				Name:        []string{"--manifest-path"},
				Description: `Path to Cargo.toml`,
				Args: []model.Arg{{
					Name:      "manifest-path",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--message-format"},
				Description: `Error format`,
				Args: []model.Arg{{
					Name: "message-format",
				}},
			}, {
				Name:        []string{"--color"},
				Description: `Coloring: auto, always, never`,
				Args: []model.Arg{{
					Name:        "color",
					Suggestions: []model.Suggestion{{Name: []string{`auto`}}, {Name: []string{`always`}}, {Name: []string{`never`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Override a configuration value`,
				Args: []model.Arg{{
					Name:      "config",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-Z"},
				Description: `Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details`,
				Args: []model.Arg{{
					Name: "unstable-features",
				}},
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Do not print cargo log messages`,
			}, {
				Name:        []string{"--workspace"},
				Description: `Check all packages in the workspace`,
			}, {
				Name:        []string{"--all"},
				Description: `Alias for --workspace (deprecated)`,
			}, {
				Name:        []string{"--lib"},
				Description: `Check only this package's library`,
			}, {
				Name:        []string{"--bins"},
				Description: `Check all binaries`,
			}, {
				Name:        []string{"--examples"},
				Description: `Check all examples`,
			}, {
				Name:        []string{"--tests"},
				Description: `Check all tests`,
			}, {
				Name:        []string{"--benches"},
				Description: `Check all benches`,
			}, {
				Name:        []string{"--all-targets"},
				Description: `Check all targets`,
			}, {
				Name:        []string{"-r", "--release"},
				Description: `Check artifacts in release mode, with optimizations`,
			}, {
				Name:        []string{"--all-features"},
				Description: `Activate all available features`,
			}, {
				Name:        []string{"--no-default-features"},
				Description: `Do not activate the "default" feature`,
			}, {
				Name:        []string{"--ignore-rust-version"},
				Description: `Ignore "rust-version" specification in packages`,
			}, {
				Name:        []string{"--unit-graph"},
				Description: `Output build graph in JSON (unstable)`,
			}, {
				Name:        []string{"--future-incompat-report"},
				Description: `Outputs a future incompatibility report at the end of the build`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Print help information`,
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Use verbose output (-vv very verbose/build.rs output)`,
			}, {
				Name:        []string{"--frozen"},
				Description: `Require Cargo.lock and cache are up to date`,
			}, {
				Name:        []string{"--locked"},
				Description: `Require Cargo.lock is up to date`,
			}, {
				Name:        []string{"--offline"},
				Description: `Run without accessing the network`,
			}, {
				Name:        []string{"--timings"},
				Description: `Timing output formats (unstable)`,
			}},
		}, {
			Name:        []string{"clean"},
			Description: `Remove artifacts that cargo has generated in the past`,
			Options: []model.Option{{
				Name:        []string{"-p", "--package"},
				Description: `Package to clean artifacts for`,
				Args: []model.Arg{{
					Name:           "package",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"--manifest-path"},
				Description: `Path to Cargo.toml`,
				Args: []model.Arg{{
					Name:      "manifest-path",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--target"},
				Description: `Target triple to clean output for`,
				Args: []model.Arg{{
					Name:           "target",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--target-dir"},
				Description: `Directory for all generated artifacts`,
				Args: []model.Arg{{
					Name: "target-dir",
				}},
			}, {
				Name:        []string{"--profile"},
				Description: `Clean artifacts of the specified profile`,
				Args: []model.Arg{{
					Name: "profile",
				}},
			}, {
				Name:        []string{"--color"},
				Description: `Coloring: auto, always, never`,
				Args: []model.Arg{{
					Name:        "color",
					Suggestions: []model.Suggestion{{Name: []string{`auto`}}, {Name: []string{`always`}}, {Name: []string{`never`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Override a configuration value`,
				Args: []model.Arg{{
					Name:      "config",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-Z"},
				Description: `Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details`,
				Args: []model.Arg{{
					Name: "unstable-features",
				}},
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Do not print cargo log messages`,
			}, {
				Name:        []string{"-r", "--release"},
				Description: `Whether or not to clean release artifacts`,
			}, {
				Name:        []string{"--doc"},
				Description: `Whether or not to clean just the documentation directory`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Print help information`,
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Use verbose output (-vv very verbose/build.rs output)`,
			}, {
				Name:        []string{"--frozen"},
				Description: `Require Cargo.lock and cache are up to date`,
			}, {
				Name:        []string{"--locked"},
				Description: `Require Cargo.lock is up to date`,
			}, {
				Name:        []string{"--offline"},
				Description: `Run without accessing the network`,
			}},
		}, {
			Name:        []string{"config"},
			Description: `Inspect configuration values`,
			Options: []model.Option{{
				Name:        []string{"--color"},
				Description: `Coloring: auto, always, never`,
				Args: []model.Arg{{
					Name:        "color",
					Suggestions: []model.Suggestion{{Name: []string{`auto`}}, {Name: []string{`always`}}, {Name: []string{`never`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Override a configuration value`,
				Args: []model.Arg{{
					Name:      "config",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-Z"},
				Description: `Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details`,
				Args: []model.Arg{{
					Name: "unstable-features",
				}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Print help information`,
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Use verbose output (-vv very verbose/build.rs output)`,
			}, {
				Name:        []string{"--frozen"},
				Description: `Require Cargo.lock and cache are up to date`,
			}, {
				Name:        []string{"--locked"},
				Description: `Require Cargo.lock is up to date`,
			}, {
				Name:        []string{"--offline"},
				Description: `Run without accessing the network`,
			}},
			Subcommands: []model.Subcommand{{
				Name: []string{"get"},
				Options: []model.Option{{
					Name:        []string{"--format"},
					Description: `Display format`,
					Args: []model.Arg{{
						Name:        "format",
						Suggestions: []model.Suggestion{{Name: []string{`toml`}}, {Name: []string{`json`}}, {Name: []string{`json-value`}}},
					}},
				}, {
					Name:        []string{"--merged"},
					Description: `Whether or not to merge config values`,
					Args: []model.Arg{{
						Name:        "merged",
						Suggestions: []model.Suggestion{{Name: []string{`yes`}}, {Name: []string{`no`}}},
					}},
				}, {
					Name:        []string{"--color"},
					Description: `Coloring: auto, always, never`,
					Args: []model.Arg{{
						Name:        "color",
						Suggestions: []model.Suggestion{{Name: []string{`auto`}}, {Name: []string{`always`}}, {Name: []string{`never`}}},
					}},
				}, {
					Name:        []string{"--config"},
					Description: `Override a configuration value`,
					Args: []model.Arg{{
						Name:      "config",
						Generator: nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"-Z"},
					Description: `Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details`,
					Args: []model.Arg{{
						Name: "unstable-features",
					}},
				}, {
					Name:        []string{"--version"},
					Description: `Print version information`,
				}, {
					Name:        []string{"--show-origin"},
					Description: `Display where the config value is defined`,
				}, {
					Name:        []string{"-h", "--help"},
					Description: `Print help information`,
				}, {
					Name:        []string{"-v", "--verbose"},
					Description: `Use verbose output (-vv very verbose/build.rs output)`,
				}, {
					Name:        []string{"--frozen"},
					Description: `Require Cargo.lock and cache are up to date`,
				}, {
					Name:        []string{"--locked"},
					Description: `Require Cargo.lock is up to date`,
				}, {
					Name:        []string{"--offline"},
					Description: `Run without accessing the network`,
				}},
			}, {
				Name:        []string{"help"},
				Description: `Print this message or the help of the given subcommand(s)`,
				Args: []model.Arg{{
					Name: "subcommand",
				}},
				Options: []model.Option{{
					Name:        []string{"--color"},
					Description: `Coloring: auto, always, never`,
					Args: []model.Arg{{
						Name:        "color",
						Suggestions: []model.Suggestion{{Name: []string{`auto`}}, {Name: []string{`always`}}, {Name: []string{`never`}}},
					}},
				}, {
					Name:        []string{"--config"},
					Description: `Override a configuration value`,
					Args: []model.Arg{{
						Name:      "config",
						Generator: nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"-Z"},
					Description: `Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details`,
					Args: []model.Arg{{
						Name: "unstable-features",
					}},
				}, {
					Name:        []string{"--version"},
					Description: `Print version information`,
				}, {
					Name:        []string{"-h", "--help"},
					Description: `Print help information`,
				}, {
					Name:        []string{"-v", "--verbose"},
					Description: `Use verbose output (-vv very verbose/build.rs output)`,
				}, {
					Name:        []string{"--frozen"},
					Description: `Require Cargo.lock and cache are up to date`,
				}, {
					Name:        []string{"--locked"},
					Description: `Require Cargo.lock is up to date`,
				}, {
					Name:        []string{"--offline"},
					Description: `Run without accessing the network`,
				}},
			}},
		}, {
			Name:        []string{"doc", "d"},
			Description: `Build a package's documentation`,
			Options: []model.Option{{
				Name:        []string{"-p", "--package"},
				Description: `Package to document`,
				Args: []model.Arg{{
					Name:           "package",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"--exclude"},
				Description: `Exclude packages from the build`,
				Args: []model.Arg{{
					Name:           "exclude",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-j", "--jobs"},
				Description: `Number of parallel jobs, defaults to # of CPUs`,
				Args: []model.Arg{{
					Name: "jobs",
				}},
			}, {
				Name:        []string{"--bin"},
				Description: `Document only the specified binary`,
				Args: []model.Arg{{
					Name:           "bin",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"--example"},
				Description: `Document only the specified example`,
				Args: []model.Arg{{
					Name:           "example",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"--profile"},
				Description: `Build artifacts with the specified profile`,
				Args: []model.Arg{{
					Name: "profile",
				}},
			}, {
				Name:        []string{"--features"},
				Description: `Space or comma separated list of features to activate`,
				Args: []model.Arg{{
					Name:       "features",
					Generator:  nil, // TODO: port over generator
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"--target"},
				Description: `Build for the target triple`,
				Args: []model.Arg{{
					Name:           "target",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--target-dir"},
				Description: `Directory for all generated artifacts`,
				Args: []model.Arg{{
					Name: "target-dir",
				}},
			}, {
				Name:        []string{"--manifest-path"},
				Description: `Path to Cargo.toml`,
				Args: []model.Arg{{
					Name:      "manifest-path",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--message-format"},
				Description: `Error format`,
				Args: []model.Arg{{
					Name: "message-format",
				}},
			}, {
				Name:        []string{"--color"},
				Description: `Coloring: auto, always, never`,
				Args: []model.Arg{{
					Name: "color",
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Override a configuration value`,
				Args: []model.Arg{{
					Name:      "config",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-Z"},
				Description: `Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details`,
				Args: []model.Arg{{
					Name: "unstable-features",
				}},
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Do not print cargo log messages`,
			}, {
				Name:        []string{"--open"},
				Description: `Opens the docs in a browser after the operation`,
			}, {
				Name:        []string{"--workspace"},
				Description: `Document all packages in the workspace`,
			}, {
				Name:        []string{"--all"},
				Description: `Alias for --workspace (deprecated)`,
			}, {
				Name:        []string{"--no-deps"},
				Description: `Don't build documentation for dependencies`,
			}, {
				Name:        []string{"--document-private-items"},
				Description: `Document private items`,
			}, {
				Name:        []string{"--lib"},
				Description: `Document only this package's library`,
			}, {
				Name:        []string{"--bins"},
				Description: `Document all binaries`,
			}, {
				Name:        []string{"--examples"},
				Description: `Document all examples`,
			}, {
				Name:        []string{"-r", "--release"},
				Description: `Build artifacts in release mode, with optimizations`,
			}, {
				Name:        []string{"--all-features"},
				Description: `Activate all available features`,
			}, {
				Name:        []string{"--no-default-features"},
				Description: `Do not activate the "default" feature`,
			}, {
				Name:        []string{"--ignore-rust-version"},
				Description: `Ignore "rust-version" specification in packages`,
			}, {
				Name:        []string{"--unit-graph"},
				Description: `Output build graph in JSON (unstable)`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Print help information`,
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Use verbose output (-vv very verbose/build.rs output)`,
			}, {
				Name:        []string{"--frozen"},
				Description: `Require Cargo.lock and cache are up to date`,
			}, {
				Name:        []string{"--locked"},
				Description: `Require Cargo.lock is up to date`,
			}, {
				Name:        []string{"--offline"},
				Description: `Run without accessing the network`,
			}, {
				Name:        []string{"--timings"},
				Description: `Timing output formats (unstable)`,
			}},
		}, {
			Name:        []string{"fetch"},
			Description: `Fetch dependencies of a package from the network`,
			Options: []model.Option{{
				Name:        []string{"--manifest-path"},
				Description: `Path to Cargo.toml`,
				Args: []model.Arg{{
					Name:      "manifest-path",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--target"},
				Description: `Fetch dependencies for the target triple`,
				Args: []model.Arg{{
					Name:           "target",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--color"},
				Description: `Coloring: auto, always, never`,
				Args: []model.Arg{{
					Name:        "color",
					Suggestions: []model.Suggestion{{Name: []string{`always`}}, {Name: []string{`never`}}, {Name: []string{`auto`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Override a configuration value`,
				Args: []model.Arg{{
					Name:      "config",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-Z"},
				Description: `Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details`,
				Args: []model.Arg{{
					Name: "unstable-features",
				}},
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Do not print cargo log messages`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Print help information`,
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Use verbose output (-vv very verbose/build.rs output)`,
			}, {
				Name:        []string{"--frozen"},
				Description: `Require Cargo.lock and cache are up to date`,
			}, {
				Name:        []string{"--locked"},
				Description: `Require Cargo.lock is up to date`,
			}, {
				Name:        []string{"--offline"},
				Description: `Run without accessing the network`,
			}},
		}, {
			Name:        []string{"fix"},
			Description: `Automatically fix lint warnings reported by rustc`,
			Options: []model.Option{{
				Name:        []string{"-p", "--package"},
				Description: `Package(s) to fix`,
				Args: []model.Arg{{
					Name:           "package",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"--exclude"},
				Description: `Exclude packages from the fixes`,
				Args: []model.Arg{{
					Name:           "exclude",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-j", "--jobs"},
				Description: `Number of parallel jobs, defaults to # of CPUs`,
				Args: []model.Arg{{
					Name: "jobs",
				}},
			}, {
				Name:        []string{"--bin"},
				Description: `Fix only the specified binary`,
				Args: []model.Arg{{
					Name:           "bin",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"--example"},
				Description: `Fix only the specified example`,
				Args: []model.Arg{{
					Name:           "example",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"--test"},
				Description: `Fix only the specified test target`,
				Args: []model.Arg{{
					Name:           "test",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"--bench"},
				Description: `Fix only the specified bench target`,
				Args: []model.Arg{{
					Name:           "bench",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"--profile"},
				Description: `Build artifacts with the specified profile`,
				Args: []model.Arg{{
					Name: "profile",
				}},
			}, {
				Name:        []string{"--features"},
				Description: `Space or comma separated list of features to activate`,
				Args: []model.Arg{{
					Name:       "features",
					Generator:  nil, // TODO: port over generator
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"--target"},
				Description: `Fix for the target triple`,
				Args: []model.Arg{{
					Name:           "target",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--target-dir"},
				Description: `Directory for all generated artifacts`,
				Args: []model.Arg{{
					Name: "target-dir",
				}},
			}, {
				Name:        []string{"--manifest-path"},
				Description: `Path to Cargo.toml`,
				Args: []model.Arg{{
					Name:      "manifest-path",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--message-format"},
				Description: `Error format`,
				Args: []model.Arg{{
					Name: "message-format",
				}},
			}, {
				Name:        []string{"--color"},
				Description: `Coloring: auto, always, never`,
				Args: []model.Arg{{
					Name:        "color",
					Suggestions: []model.Suggestion{{Name: []string{`always`}}, {Name: []string{`never`}}, {Name: []string{`auto`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Override a configuration value`,
				Args: []model.Arg{{
					Name:      "config",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-Z"},
				Description: `Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details`,
				Args: []model.Arg{{
					Name: "unstable-features",
				}},
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Do not print cargo log messages`,
			}, {
				Name:        []string{"--workspace"},
				Description: `Fix all packages in the workspace`,
			}, {
				Name:        []string{"--all"},
				Description: `Alias for --workspace (deprecated)`,
			}, {
				Name:        []string{"--lib"},
				Description: `Fix only this package's library`,
			}, {
				Name:        []string{"--bins"},
				Description: `Fix all binaries`,
			}, {
				Name:        []string{"--examples"},
				Description: `Fix all examples`,
			}, {
				Name:        []string{"--tests"},
				Description: `Fix all tests`,
			}, {
				Name:        []string{"--benches"},
				Description: `Fix all benches`,
			}, {
				Name:        []string{"--all-targets"},
				Description: `Fix all targets (default)`,
			}, {
				Name:        []string{"-r", "--release"},
				Description: `Fix artifacts in release mode, with optimizations`,
			}, {
				Name:        []string{"--all-features"},
				Description: `Activate all available features`,
			}, {
				Name:        []string{"--no-default-features"},
				Description: `Do not activate the "default" feature`,
			}, {
				Name:        []string{"--broken-code"},
				Description: `Fix code even if it already has compiler errors`,
			}, {
				Name:        []string{"--edition"},
				Description: `Fix in preparation for the next edition`,
			}, {
				Name:        []string{"--edition-idioms"},
				Description: `Fix warnings to migrate to the idioms of an edition`,
			}, {
				Name:        []string{"--allow-no-vcs"},
				Description: `Fix code even if a VCS was not detected`,
			}, {
				Name:        []string{"--allow-dirty"},
				Description: `Fix code even if the working directory is dirty`,
			}, {
				Name:        []string{"--allow-staged"},
				Description: `Fix code even if the working directory has staged changes`,
			}, {
				Name:        []string{"--ignore-rust-version"},
				Description: `Ignore "rust-version" specification in packages`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Print help information`,
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Use verbose output (-vv very verbose/build.rs output)`,
			}, {
				Name:        []string{"--frozen"},
				Description: `Require Cargo.lock and cache are up to date`,
			}, {
				Name:        []string{"--locked"},
				Description: `Require Cargo.lock is up to date`,
			}, {
				Name:        []string{"--offline"},
				Description: `Run without accessing the network`,
			}, {
				Name:        []string{"--timings"},
				Description: `Timing output formats (unstable)`,
			}},
		}, {
			Name:        []string{"generate-lockfile"},
			Description: `Generate the lockfile for a package`,
			Options: []model.Option{{
				Name:        []string{"--manifest-path"},
				Description: `Path to Cargo.toml`,
				Args: []model.Arg{{
					Name:      "manifest-path",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--color"},
				Description: `Coloring: auto, always, never`,
				Args: []model.Arg{{
					Name:        "color",
					Suggestions: []model.Suggestion{{Name: []string{`always`}}, {Name: []string{`never`}}, {Name: []string{`auto`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Override a configuration value`,
				Args: []model.Arg{{
					Name:      "config",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-Z"},
				Description: `Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details`,
				Args: []model.Arg{{
					Name: "unstable-features",
				}},
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Do not print cargo log messages`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Print help information`,
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Use verbose output (-vv very verbose/build.rs output)`,
			}, {
				Name:        []string{"--frozen"},
				Description: `Require Cargo.lock and cache are up to date`,
			}, {
				Name:        []string{"--locked"},
				Description: `Require Cargo.lock is up to date`,
			}, {
				Name:        []string{"--offline"},
				Description: `Run without accessing the network`,
			}},
		}, {
			Name:        []string{"git-checkout"},
			Description: `This subcommand has been removed`,
			Options: []model.Option{{
				Name:        []string{"--color"},
				Description: `Coloring: auto, always, never`,
				Args: []model.Arg{{
					Name:        "color",
					Suggestions: []model.Suggestion{{Name: []string{`always`}}, {Name: []string{`never`}}, {Name: []string{`auto`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Override a configuration value`,
				Args: []model.Arg{{
					Name:      "config",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-Z"},
				Description: `Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details`,
				Args: []model.Arg{{
					Name: "unstable-features",
				}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Print help information`,
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Use verbose output (-vv very verbose/build.rs output)`,
			}, {
				Name:        []string{"--frozen"},
				Description: `Require Cargo.lock and cache are up to date`,
			}, {
				Name:        []string{"--locked"},
				Description: `Require Cargo.lock is up to date`,
			}, {
				Name:        []string{"--offline"},
				Description: `Run without accessing the network`,
			}},
		}, {
			Name:        []string{"init"},
			Description: `Create a new cargo package in an existing directory`,
			Args: []model.Arg{{
				Name: "path",
			}},
			Options: []model.Option{{
				Name:        []string{"--registry"},
				Description: `Registry to use`,
				Args: []model.Arg{{
					Name: "registry",
				}},
			}, {
				Name:        []string{"--vcs"},
				Description: `Initialize a new repository for the given version control system (git, hg, pijul, or fossil) or do not initialize any version control at all (none), overriding a global configuration`,
				Args: []model.Arg{{
					Name: "vcs",
					Suggestions: []model.Suggestion{{
						Name:        []string{`git`},
						Description: `Initialize with Git`,
					}, {
						Name:        []string{`hg`},
						Description: `Initialize with Mercurial`,
					}, {
						Name:        []string{`pijul`},
						Description: `Initialize with Pijul`,
					}, {
						Name:        []string{`fossil`},
						Description: `Initialize with Fossil`,
					}, {
						Name:        []string{`none`},
						Description: `Initialize with no VCS`,
					}},
				}},
			}, {
				Name:        []string{"--edition"},
				Description: `Edition to set for the crate generated`,
				Args: []model.Arg{{
					Name: "edition",
					Suggestions: []model.Suggestion{{
						Name:        []string{`2015`},
						Description: `2015 edition`,
					}, {
						Name:        []string{`2018`},
						Description: `2018 edition`,
					}, {
						Name:        []string{`2021`},
						Description: `2021 edition`,
					}},
				}},
			}, {
				Name:        []string{"--name"},
				Description: `Set the resulting package name, defaults to the directory name`,
				Args: []model.Arg{{
					Name: "name",
				}},
			}, {
				Name:        []string{"--color"},
				Description: `Coloring: auto, always, never`,
				Args: []model.Arg{{
					Name:        "color",
					Suggestions: []model.Suggestion{{Name: []string{`always`}}, {Name: []string{`never`}}, {Name: []string{`auto`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Override a configuration value`,
				Args: []model.Arg{{
					Name:      "config",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-Z"},
				Description: `Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details`,
				Args: []model.Arg{{
					Name: "unstable-features",
				}},
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Do not print cargo log messages`,
			}, {
				Name:        []string{"--bin"},
				Description: `Use a binary (application) template [default]`,
			}, {
				Name:        []string{"--lib"},
				Description: `Use a library template`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Print help information`,
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Use verbose output (-vv very verbose/build.rs output)`,
			}, {
				Name:        []string{"--frozen"},
				Description: `Require Cargo.lock and cache are up to date`,
			}, {
				Name:        []string{"--locked"},
				Description: `Require Cargo.lock is up to date`,
			}, {
				Name:        []string{"--offline"},
				Description: `Run without accessing the network`,
			}},
		}, {
			Name:        []string{"install"},
			Description: `Install a Rust binary. Default location is $HOME/.cargo/bin`,
			Args: []model.Arg{{
				Name:           "crate",
				FilterStrategy: model.FilterStrategyFuzzy,
				Generator:      nil, // TODO: port over generator
				IsVariadic:     true,
			}},
			Options: []model.Option{{
				Name:        []string{"--version"},
				Description: `Specify a version to install`,
				Args: []model.Arg{{
					Name: "version",
				}},
			}, {
				Name:        []string{"--git"},
				Description: `Git URL to install the specified crate from`,
				Args: []model.Arg{{
					Name: "git",
				}},
				ExclusiveOn: []string{"--path", "--index", "--registry"},
			}, {
				Name:        []string{"--branch"},
				Description: `Branch to use when installing from git`,
				Args: []model.Arg{{
					Name: "branch",
				}},
			}, {
				Name:        []string{"--tag"},
				Description: `Tag to use when installing from git`,
				Args: []model.Arg{{
					Name: "tag",
				}},
			}, {
				Name:        []string{"--rev"},
				Description: `Specific commit to use when installing from git`,
				Args: []model.Arg{{
					Name: "rev",
				}},
			}, {
				Name:        []string{"--path"},
				Description: `Filesystem path to local crate to install`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
				ExclusiveOn: []string{"--git", "--index", "--registry"},
			}, {
				Name:        []string{"-j", "--jobs"},
				Description: `Number of parallel jobs, defaults to # of CPUs`,
				Args: []model.Arg{{
					Name: "jobs",
				}},
			}, {
				Name:        []string{"--features"},
				Description: `Space or comma separated list of features to activate`,
				Args: []model.Arg{{
					Name:       "features",
					Generator:  nil, // TODO: port over generator
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"--profile"},
				Description: `Install artifacts with the specified profile`,
				Args: []model.Arg{{
					Name: "profile",
				}},
			}, {
				Name:        []string{"--bin"},
				Description: `Install only the specified binary`,
				Args: []model.Arg{{
					Name:           "bin",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"--example"},
				Description: `Install only the specified example`,
				Args: []model.Arg{{
					Name:           "example",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"--target"},
				Description: `Build for the target triple`,
				Args: []model.Arg{{
					Name:           "target",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--target-dir"},
				Description: `Directory for all generated artifacts`,
				Args: []model.Arg{{
					Name: "target-dir",
				}},
			}, {
				Name:        []string{"--root"},
				Description: `Directory to install packages into`,
				Args: []model.Arg{{
					Name: "root",
				}},
			}, {
				Name:        []string{"--index"},
				Description: `Registry index to install from`,
				Args: []model.Arg{{
					Name: "index",
				}},
				ExclusiveOn: []string{"--git", "--path", "--registry"},
			}, {
				Name:        []string{"--registry"},
				Description: `Registry to use`,
				Args: []model.Arg{{
					Name: "registry",
				}},
				ExclusiveOn: []string{"--git", "--path", "--index"},
			}, {
				Name:        []string{"--message-format"},
				Description: `Error format`,
				Args: []model.Arg{{
					Name: "message-format",
				}},
			}, {
				Name:        []string{"--color"},
				Description: `Coloring: auto, always, never`,
				Args: []model.Arg{{
					Name:        "color",
					Suggestions: []model.Suggestion{{Name: []string{`always`}}, {Name: []string{`never`}}, {Name: []string{`auto`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Override a configuration value`,
				Args: []model.Arg{{
					Name:      "config",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-Z"},
				Description: `Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details`,
				Args: []model.Arg{{
					Name: "unstable-features",
				}},
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Do not print cargo log messages`,
			}, {
				Name:        []string{"--list"},
				Description: `List all installed packages and their versions`,
			}, {
				Name:        []string{"-f", "--force"},
				Description: `Force overwriting existing crates or binaries`,
			}, {
				Name:        []string{"--no-track"},
				Description: `Do not save tracking information`,
			}, {
				Name:        []string{"--all-features"},
				Description: `Activate all available features`,
			}, {
				Name:        []string{"--no-default-features"},
				Description: `Do not activate the "default" feature`,
			}, {
				Name:        []string{"--debug"},
				Description: `Build in debug mode instead of release mode`,
			}, {
				Name:        []string{"--bins"},
				Description: `Install all binaries`,
			}, {
				Name:        []string{"--examples"},
				Description: `Install all examples`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Print help information`,
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Use verbose output (-vv very verbose/build.rs output)`,
			}, {
				Name:        []string{"--frozen"},
				Description: `Require Cargo.lock and cache are up to date`,
			}, {
				Name:        []string{"--locked"},
				Description: `Require Cargo.lock is up to date`,
			}, {
				Name:        []string{"--offline"},
				Description: `Run without accessing the network`,
			}, {
				Name:        []string{"--timings"},
				Description: `Timing output formats (unstable)`,
			}},
		}, {
			Name:        []string{"locate-project"},
			Description: `Print a JSON representation of a Cargo.toml file's location`,
			Options: []model.Option{{
				Name:        []string{"--manifest-path"},
				Description: `Path to Cargo.toml`,
				Args: []model.Arg{{
					Name:      "manifest-path",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--message-format"},
				Description: `Output representation [possible values: json, plain]`,
				Args: []model.Arg{{
					Name: "message-format",
				}},
			}, {
				Name:        []string{"--color"},
				Description: `Coloring: auto, always, never`,
				Args: []model.Arg{{
					Name:        "color",
					Suggestions: []model.Suggestion{{Name: []string{`always`}}, {Name: []string{`never`}}, {Name: []string{`auto`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Override a configuration value`,
				Args: []model.Arg{{
					Name:      "config",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-Z"},
				Description: `Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details`,
				Args: []model.Arg{{
					Name: "unstable-features",
				}},
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Do not print cargo log messages`,
			}, {
				Name:        []string{"--workspace"},
				Description: `Locate Cargo.toml of the workspace root`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Print help information`,
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Use verbose output (-vv very verbose/build.rs output)`,
			}, {
				Name:        []string{"--frozen"},
				Description: `Require Cargo.lock and cache are up to date`,
			}, {
				Name:        []string{"--locked"},
				Description: `Require Cargo.lock is up to date`,
			}, {
				Name:        []string{"--offline"},
				Description: `Run without accessing the network`,
			}},
		}, {
			Name:        []string{"login"},
			Description: `Save an api token from the registry locally. If token is not specified, it will be read from stdin`,
			Args: []model.Arg{{
				Name: "token",
			}},
			Options: []model.Option{{
				Name:        []string{"--registry"},
				Description: `Registry to use`,
				Args: []model.Arg{{
					Name: "registry",
				}},
			}, {
				Name:        []string{"--color"},
				Description: `Coloring: auto, always, never`,
				Args: []model.Arg{{
					Name:        "color",
					Suggestions: []model.Suggestion{{Name: []string{`always`}}, {Name: []string{`never`}}, {Name: []string{`auto`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Override a configuration value`,
				Args: []model.Arg{{
					Name:      "config",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-Z"},
				Description: `Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details`,
				Args: []model.Arg{{
					Name: "unstable-features",
				}},
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Do not print cargo log messages`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Print help information`,
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Use verbose output (-vv very verbose/build.rs output)`,
			}, {
				Name:        []string{"--frozen"},
				Description: `Require Cargo.lock and cache are up to date`,
			}, {
				Name:        []string{"--locked"},
				Description: `Require Cargo.lock is up to date`,
			}, {
				Name:        []string{"--offline"},
				Description: `Run without accessing the network`,
			}},
		}, {
			Name:        []string{"logout"},
			Description: `Remove an API token from the registry locally`,
			Options: []model.Option{{
				Name:        []string{"--registry"},
				Description: `Registry to use`,
				Args: []model.Arg{{
					Name: "registry",
				}},
			}, {
				Name:        []string{"--color"},
				Description: `Coloring: auto, always, never`,
				Args: []model.Arg{{
					Name:        "color",
					Suggestions: []model.Suggestion{{Name: []string{`always`}}, {Name: []string{`never`}}, {Name: []string{`auto`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Override a configuration value`,
				Args: []model.Arg{{
					Name:      "config",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-Z"},
				Description: `Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details`,
				Args: []model.Arg{{
					Name: "unstable-features",
				}},
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Do not print cargo log messages`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Print help information`,
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Use verbose output (-vv very verbose/build.rs output)`,
			}, {
				Name:        []string{"--frozen"},
				Description: `Require Cargo.lock and cache are up to date`,
			}, {
				Name:        []string{"--locked"},
				Description: `Require Cargo.lock is up to date`,
			}, {
				Name:        []string{"--offline"},
				Description: `Run without accessing the network`,
			}},
		}, {
			Name:        []string{"metadata"},
			Description: `Output the resolved dependencies of a package, the concrete used versions including overrides, in machine-readable format`,
			Options: []model.Option{{
				Name:        []string{"--features"},
				Description: `Space or comma separated list of features to activate`,
				Args: []model.Arg{{
					Name:       "features",
					Generator:  nil, // TODO: port over generator
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"--filter-platform"},
				Description: `Only include resolve dependencies matching the given target-triple`,
				Args: []model.Arg{{
					Name: "filter-platform",
				}},
			}, {
				Name:        []string{"--manifest-path"},
				Description: `Path to Cargo.toml`,
				Args: []model.Arg{{
					Name:      "manifest-path",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--format-version"},
				Description: `Format version`,
				Args: []model.Arg{{
					Name:        "format-version",
					Suggestions: []model.Suggestion{{Name: []string{`1`}}},
				}},
			}, {
				Name:        []string{"--color"},
				Description: `Coloring: auto, always, never`,
				Args: []model.Arg{{
					Name:        "color",
					Suggestions: []model.Suggestion{{Name: []string{`always`}}, {Name: []string{`never`}}, {Name: []string{`auto`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Override a configuration value`,
				Args: []model.Arg{{
					Name:      "config",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-Z"},
				Description: `Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details`,
				Args: []model.Arg{{
					Name: "unstable-features",
				}},
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Do not print cargo log messages`,
			}, {
				Name:        []string{"--all-features"},
				Description: `Activate all available features`,
			}, {
				Name:        []string{"--no-default-features"},
				Description: `Do not activate the "default" feature`,
			}, {
				Name:        []string{"--no-deps"},
				Description: `Output information only about the workspace members and don't fetch dependencies`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Print help information`,
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Use verbose output (-vv very verbose/build.rs output)`,
			}, {
				Name:        []string{"--frozen"},
				Description: `Require Cargo.lock and cache are up to date`,
			}, {
				Name:        []string{"--locked"},
				Description: `Require Cargo.lock is up to date`,
			}, {
				Name:        []string{"--offline"},
				Description: `Run without accessing the network`,
			}},
		}, {
			Name:        []string{"new"},
			Description: `Create a new cargo package at <path>`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFolders},
				Name:      "path",
			}},
			Options: []model.Option{{
				Name:        []string{"--registry"},
				Description: `Registry to use`,
				Args: []model.Arg{{
					Name: "registry",
				}},
			}, {
				Name:        []string{"--vcs"},
				Description: `Initialize a new repository for the given version control system (git, hg, pijul, or fossil) or do not initialize any version control at all (none), overriding a global configuration`,
				Args: []model.Arg{{
					Name: "vcs",
					Suggestions: []model.Suggestion{{
						Name:        []string{`git`},
						Description: `Initialize with Git`,
					}, {
						Name:        []string{`hg`},
						Description: `Initialize with Mercurial`,
					}, {
						Name:        []string{`pijul`},
						Description: `Initialize with Pijul`,
					}, {
						Name:        []string{`fossil`},
						Description: `Initialize with Fossil`,
					}, {
						Name:        []string{`none`},
						Description: `Initialize with no VCS`,
					}},
				}},
			}, {
				Name:        []string{"--edition"},
				Description: `Edition to set for the crate generated`,
				Args: []model.Arg{{
					Name: "edition",
					Suggestions: []model.Suggestion{{
						Name:        []string{`2015`},
						Description: `2015 edition`,
					}, {
						Name:        []string{`2018`},
						Description: `2018 edition`,
					}, {
						Name:        []string{`2021`},
						Description: `2021 edition`,
					}},
				}},
			}, {
				Name:        []string{"--name"},
				Description: `Set the resulting package name, defaults to the directory name`,
				Args: []model.Arg{{
					Name: "name",
				}},
			}, {
				Name:        []string{"--color"},
				Description: `Coloring: auto, always, never`,
				Args: []model.Arg{{
					Name:        "color",
					Suggestions: []model.Suggestion{{Name: []string{`always`}}, {Name: []string{`never`}}, {Name: []string{`auto`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Override a configuration value`,
				Args: []model.Arg{{
					Name:      "config",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-Z"},
				Description: `Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details`,
				Args: []model.Arg{{
					Name: "unstable-features",
				}},
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Do not print cargo log messages`,
			}, {
				Name:        []string{"--bin"},
				Description: `Use a binary (application) template [default]`,
			}, {
				Name:        []string{"--lib"},
				Description: `Use a library template`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Print help information`,
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Use verbose output (-vv very verbose/build.rs output)`,
			}, {
				Name:        []string{"--frozen"},
				Description: `Require Cargo.lock and cache are up to date`,
			}, {
				Name:        []string{"--locked"},
				Description: `Require Cargo.lock is up to date`,
			}, {
				Name:        []string{"--offline"},
				Description: `Run without accessing the network`,
			}},
		}, {
			Name:        []string{"owner"},
			Description: `Manage the owners of a crate on the registry`,
			Args: []model.Arg{{
				Name: "crate",
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--add"},
				Description: `Name of a user or team to invite as an owner`,
				Args: []model.Arg{{
					Name: "add",
				}},
			}, {
				Name:        []string{"-r", "--remove"},
				Description: `Name of a user or team to remove as an owner`,
				Args: []model.Arg{{
					Name: "remove",
				}},
			}, {
				Name:        []string{"--index"},
				Description: `Registry index to modify owners for`,
				Args: []model.Arg{{
					Name: "index",
				}},
			}, {
				Name:        []string{"--token"},
				Description: `API token to use when authenticating`,
				Args: []model.Arg{{
					Name: "token",
				}},
			}, {
				Name:        []string{"--registry"},
				Description: `Registry to use`,
				Args: []model.Arg{{
					Name: "registry",
				}},
			}, {
				Name:        []string{"--color"},
				Description: `Coloring: auto, always, never`,
				Args: []model.Arg{{
					Name:        "color",
					Suggestions: []model.Suggestion{{Name: []string{`always`}}, {Name: []string{`never`}}, {Name: []string{`auto`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Override a configuration value`,
				Args: []model.Arg{{
					Name:      "config",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-Z"},
				Description: `Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details`,
				Args: []model.Arg{{
					Name: "unstable-features",
				}},
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Do not print cargo log messages`,
			}, {
				Name:        []string{"-l", "--list"},
				Description: `List owners of a crate`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Print help information`,
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Use verbose output (-vv very verbose/build.rs output)`,
			}, {
				Name:        []string{"--frozen"},
				Description: `Require Cargo.lock and cache are up to date`,
			}, {
				Name:        []string{"--locked"},
				Description: `Require Cargo.lock is up to date`,
			}, {
				Name:        []string{"--offline"},
				Description: `Run without accessing the network`,
			}},
		}, {
			Name:        []string{"package"},
			Description: `Assemble the local package into a distributable tarball`,
			Options: []model.Option{{
				Name:        []string{"--target"},
				Description: `Build for the target triple`,
				Args: []model.Arg{{
					Name:           "target",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--target-dir"},
				Description: `Directory for all generated artifacts`,
				Args: []model.Arg{{
					Name: "target-dir",
				}},
			}, {
				Name:        []string{"--features"},
				Description: `Space or comma separated list of features to activate`,
				Args: []model.Arg{{
					Name:       "features",
					Generator:  nil, // TODO: port over generator
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"-p", "--package"},
				Description: `Package(s) to assemble`,
				Args: []model.Arg{{
					Name:           "package",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"--exclude"},
				Description: `Don't assemble specified packages`,
				Args: []model.Arg{{
					Name:           "exclude",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--manifest-path"},
				Description: `Path to Cargo.toml`,
				Args: []model.Arg{{
					Name:      "manifest-path",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-j", "--jobs"},
				Description: `Number of parallel jobs, defaults to # of CPUs`,
				Args: []model.Arg{{
					Name: "jobs",
				}},
			}, {
				Name:        []string{"--color"},
				Description: `Coloring: auto, always, never`,
				Args: []model.Arg{{
					Name:        "color",
					Suggestions: []model.Suggestion{{Name: []string{`always`}}, {Name: []string{`never`}}, {Name: []string{`auto`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Override a configuration value`,
				Args: []model.Arg{{
					Name:      "config",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-Z"},
				Description: `Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details`,
				Args: []model.Arg{{
					Name: "unstable-features",
				}},
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Do not print cargo log messages`,
			}, {
				Name:        []string{"-l", "--list"},
				Description: `Print files included in a package without making one`,
			}, {
				Name:        []string{"--no-verify"},
				Description: `Don't verify the contents by building them`,
			}, {
				Name:        []string{"--no-metadata"},
				Description: `Ignore warnings about a lack of human-usable metadata`,
			}, {
				Name:        []string{"--allow-dirty"},
				Description: `Allow dirty working directories to be packaged`,
			}, {
				Name:        []string{"--all-features"},
				Description: `Activate all available features`,
			}, {
				Name:        []string{"--no-default-features"},
				Description: `Do not activate the "default" feature`,
			}, {
				Name:        []string{"--workspace"},
				Description: `Assemble all packages in the workspace`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Print help information`,
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Use verbose output (-vv very verbose/build.rs output)`,
			}, {
				Name:        []string{"--frozen"},
				Description: `Require Cargo.lock and cache are up to date`,
			}, {
				Name:        []string{"--locked"},
				Description: `Require Cargo.lock is up to date`,
			}, {
				Name:        []string{"--offline"},
				Description: `Run without accessing the network`,
			}},
		}, {
			Name:        []string{"pkgid"},
			Description: `Print a fully qualified package specification`,
			Args: []model.Arg{{
				Name:           "SPEC",
				FilterStrategy: model.FilterStrategyFuzzy,
				Generator:      nil, // TODO: port over generator
			}},
			Options: []model.Option{{
				Name:        []string{"-p", "--package"},
				Description: `Argument to get the package ID specifier for`,
				Args: []model.Arg{{
					Name:           "package",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"--manifest-path"},
				Description: `Path to Cargo.toml`,
				Args: []model.Arg{{
					Name:      "manifest-path",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--color"},
				Description: `Coloring: auto, always, never`,
				Args: []model.Arg{{
					Name:        "color",
					Suggestions: []model.Suggestion{{Name: []string{`always`}}, {Name: []string{`never`}}, {Name: []string{`auto`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Override a configuration value`,
				Args: []model.Arg{{
					Name:      "config",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-Z"},
				Description: `Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details`,
				Args: []model.Arg{{
					Name: "unstable-features",
				}},
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Do not print cargo log messages`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Print help information`,
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Use verbose output (-vv very verbose/build.rs output)`,
			}, {
				Name:        []string{"--frozen"},
				Description: `Require Cargo.lock and cache are up to date`,
			}, {
				Name:        []string{"--locked"},
				Description: `Require Cargo.lock is up to date`,
			}, {
				Name:        []string{"--offline"},
				Description: `Run without accessing the network`,
			}},
		}, {
			Name:        []string{"publish"},
			Description: `Upload a package to the registry`,
			Options: []model.Option{{
				Name:        []string{"--index"},
				Description: `Registry index URL to upload the package to`,
				Args: []model.Arg{{
					Name: "index",
				}},
			}, {
				Name:        []string{"--token"},
				Description: `Token to use when uploading`,
				Args: []model.Arg{{
					Name: "token",
				}},
			}, {
				Name:        []string{"--target"},
				Description: `Build for the target triple`,
				Args: []model.Arg{{
					Name:           "target",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--target-dir"},
				Description: `Directory for all generated artifacts`,
				Args: []model.Arg{{
					Name: "target-dir",
				}},
			}, {
				Name:        []string{"-p", "--package"},
				Description: `Package to publish`,
				Args: []model.Arg{{
					Name:           "package",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"--manifest-path"},
				Description: `Path to Cargo.toml`,
				Args: []model.Arg{{
					Name:      "manifest-path",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--features"},
				Description: `Space or comma separated list of features to activate`,
				Args: []model.Arg{{
					Name:       "features",
					Generator:  nil, // TODO: port over generator
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"-j", "--jobs"},
				Description: `Number of parallel jobs, defaults to # of CPUs`,
				Args: []model.Arg{{
					Name: "jobs",
				}},
			}, {
				Name:        []string{"--registry"},
				Description: `Registry to publish to`,
				Args: []model.Arg{{
					Name: "registry",
				}},
			}, {
				Name:        []string{"--color"},
				Description: `Coloring: auto, always, never`,
				Args: []model.Arg{{
					Name:        "color",
					Suggestions: []model.Suggestion{{Name: []string{`always`}}, {Name: []string{`never`}}, {Name: []string{`auto`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Override a configuration value`,
				Args: []model.Arg{{
					Name:      "config",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-Z"},
				Description: `Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details`,
				Args: []model.Arg{{
					Name: "unstable-features",
				}},
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Do not print cargo log messages`,
			}, {
				Name:        []string{"--no-verify"},
				Description: `Don't verify the contents by building them`,
			}, {
				Name:        []string{"--allow-dirty"},
				Description: `Allow dirty working directories to be packaged`,
			}, {
				Name:        []string{"--all-features"},
				Description: `Activate all available features`,
			}, {
				Name:        []string{"--no-default-features"},
				Description: `Do not activate the "default" feature`,
			}, {
				Name:        []string{"--dry-run"},
				Description: `Perform all checks without uploading`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Print help information`,
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Use verbose output (-vv very verbose/build.rs output)`,
			}, {
				Name:        []string{"--frozen"},
				Description: `Require Cargo.lock and cache are up to date`,
			}, {
				Name:        []string{"--locked"},
				Description: `Require Cargo.lock is up to date`,
			}, {
				Name:        []string{"--offline"},
				Description: `Run without accessing the network`,
			}},
		}, {
			Name:        []string{"read-manifest"},
			Description: `Print a JSON representation of a Cargo.toml manifest. Deprecated, use "cargo metadata --no-deps" instead`,
			Options: []model.Option{{
				Name:        []string{"--manifest-path"},
				Description: `Path to Cargo.toml`,
				Args: []model.Arg{{
					Name:      "manifest-path",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--color"},
				Description: `Coloring: auto, always, never`,
				Args: []model.Arg{{
					Name:        "color",
					Suggestions: []model.Suggestion{{Name: []string{`always`}}, {Name: []string{`never`}}, {Name: []string{`auto`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Override a configuration value`,
				Args: []model.Arg{{
					Name:      "config",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-Z"},
				Description: `Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details`,
				Args: []model.Arg{{
					Name: "unstable-features",
				}},
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Do not print cargo log messages`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Print help information`,
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Use verbose output (-vv very verbose/build.rs output)`,
			}, {
				Name:        []string{"--frozen"},
				Description: `Require Cargo.lock and cache are up to date`,
			}, {
				Name:        []string{"--locked"},
				Description: `Require Cargo.lock is up to date`,
			}, {
				Name:        []string{"--offline"},
				Description: `Run without accessing the network`,
			}},
		}, {
			Name:        []string{"report"},
			Description: `Generate and display various kinds of reports`,
			Options: []model.Option{{
				Name:        []string{"--color"},
				Description: `Coloring: auto, always, never`,
				Args: []model.Arg{{
					Name:        "color",
					Suggestions: []model.Suggestion{{Name: []string{`always`}}, {Name: []string{`never`}}, {Name: []string{`auto`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Override a configuration value`,
				Args: []model.Arg{{
					Name:      "config",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-Z"},
				Description: `Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details`,
				Args: []model.Arg{{
					Name: "unstable-features",
				}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Print help information`,
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Use verbose output (-vv very verbose/build.rs output)`,
			}, {
				Name:        []string{"--frozen"},
				Description: `Require Cargo.lock and cache are up to date`,
			}, {
				Name:        []string{"--locked"},
				Description: `Require Cargo.lock is up to date`,
			}, {
				Name:        []string{"--offline"},
				Description: `Run without accessing the network`,
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"future-incompatibilities"},
				Description: `Reports any crates which will eventually stop compiling`,
				Options: []model.Option{{
					Name:        []string{"--id"},
					Description: `Identifier of the report generated by a Cargo command invocation`,
					Args: []model.Arg{{
						Name: "id",
					}},
				}, {
					Name:        []string{"-p", "--package"},
					Description: `Package to display a report for`,
					Args: []model.Arg{{
						Name:           "package",
						FilterStrategy: model.FilterStrategyFuzzy,
						Generator:      nil, // TODO: port over generator
						IsVariadic:     true,
					}},
				}, {
					Name:        []string{"--color"},
					Description: `Coloring: auto, always, never`,
					Args: []model.Arg{{
						Name:        "color",
						Suggestions: []model.Suggestion{{Name: []string{`always`}}, {Name: []string{`never`}}, {Name: []string{`auto`}}},
					}},
				}, {
					Name:        []string{"--config"},
					Description: `Override a configuration value`,
					Args: []model.Arg{{
						Name:      "config",
						Generator: nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"-Z"},
					Description: `Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details`,
					Args: []model.Arg{{
						Name: "unstable-features",
					}},
				}, {
					Name:        []string{"--version"},
					Description: `Print version information`,
				}, {
					Name:        []string{"-h", "--help"},
					Description: `Print help information`,
				}, {
					Name:        []string{"-v", "--verbose"},
					Description: `Use verbose output (-vv very verbose/build.rs output)`,
				}, {
					Name:        []string{"--frozen"},
					Description: `Require Cargo.lock and cache are up to date`,
				}, {
					Name:        []string{"--locked"},
					Description: `Require Cargo.lock is up to date`,
				}, {
					Name:        []string{"--offline"},
					Description: `Run without accessing the network`,
				}},
			}, {
				Name:        []string{"help"},
				Description: `Print this message or the help of the given subcommand(s)`,
				Args: []model.Arg{{
					Name: "subcommand",
				}},
				Options: []model.Option{{
					Name:        []string{"--color"},
					Description: `Coloring: auto, always, never`,
					Args: []model.Arg{{
						Name:        "color",
						Suggestions: []model.Suggestion{{Name: []string{`always`}}, {Name: []string{`never`}}, {Name: []string{`auto`}}},
					}},
				}, {
					Name:        []string{"--config"},
					Description: `Override a configuration value`,
					Args: []model.Arg{{
						Name:      "config",
						Generator: nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"-Z"},
					Description: `Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details`,
					Args: []model.Arg{{
						Name: "unstable-features",
					}},
				}, {
					Name:        []string{"--version"},
					Description: `Print version information`,
				}, {
					Name:        []string{"-h", "--help"},
					Description: `Print help information`,
				}, {
					Name:        []string{"-v", "--verbose"},
					Description: `Use verbose output (-vv very verbose/build.rs output)`,
				}, {
					Name:        []string{"--frozen"},
					Description: `Require Cargo.lock and cache are up to date`,
				}, {
					Name:        []string{"--locked"},
					Description: `Require Cargo.lock is up to date`,
				}, {
					Name:        []string{"--offline"},
					Description: `Run without accessing the network`,
				}},
			}},
		}, {
			Name:        []string{"run", "r"},
			Description: `Run a binary or example of the local package`,
			Args: []model.Arg{{
				Name:       "args",
				IsVariadic: true,
			}},
			Options: []model.Option{{
				Name:        []string{"--bin"},
				Description: `Name of the bin target to run`,
				Args: []model.Arg{{
					Name:           "bin",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"--example"},
				Description: `Name of the example target to run`,
				Args: []model.Arg{{
					Name:           "example",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"-p", "--package"},
				Description: `Package with the target to run`,
				Args: []model.Arg{{
					Name:           "package",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"-j", "--jobs"},
				Description: `Number of parallel jobs, defaults to # of CPUs`,
				Args: []model.Arg{{
					Name: "jobs",
				}},
			}, {
				Name:        []string{"--profile"},
				Description: `Build artifacts with the specified profile`,
				Args: []model.Arg{{
					Name: "profile",
				}},
			}, {
				Name:        []string{"--features"},
				Description: `Space or comma separated list of features to activate`,
				Args: []model.Arg{{
					Name:       "features",
					Generator:  nil, // TODO: port over generator
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"--target"},
				Description: `Build for the target triple`,
				Args: []model.Arg{{
					Name:           "target",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--target-dir"},
				Description: `Directory for all generated artifacts`,
				Args: []model.Arg{{
					Name: "target-dir",
				}},
			}, {
				Name:        []string{"--manifest-path"},
				Description: `Path to Cargo.toml`,
				Args: []model.Arg{{
					Name:      "manifest-path",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--message-format"},
				Description: `Error format`,
				Args: []model.Arg{{
					Name: "message-format",
				}},
			}, {
				Name:        []string{"--color"},
				Description: `Coloring: auto, always, never`,
				Args: []model.Arg{{
					Name:        "color",
					Suggestions: []model.Suggestion{{Name: []string{`always`}}, {Name: []string{`never`}}, {Name: []string{`auto`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Override a configuration value`,
				Args: []model.Arg{{
					Name:      "config",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-Z"},
				Description: `Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details`,
				Args: []model.Arg{{
					Name: "unstable-features",
				}},
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Do not print cargo log messages`,
			}, {
				Name:        []string{"-r", "--release"},
				Description: `Build artifacts in release mode, with optimizations`,
			}, {
				Name:        []string{"--all-features"},
				Description: `Activate all available features`,
			}, {
				Name:        []string{"--no-default-features"},
				Description: `Do not activate the "default" feature`,
			}, {
				Name:        []string{"--unit-graph"},
				Description: `Output build graph in JSON (unstable)`,
			}, {
				Name:        []string{"--ignore-rust-version"},
				Description: `Ignore "rust-version" specification in packages`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Print help information`,
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Use verbose output (-vv very verbose/build.rs output)`,
			}, {
				Name:        []string{"--frozen"},
				Description: `Require Cargo.lock and cache are up to date`,
			}, {
				Name:        []string{"--locked"},
				Description: `Require Cargo.lock is up to date`,
			}, {
				Name:        []string{"--offline"},
				Description: `Run without accessing the network`,
			}, {
				Name:        []string{"--timings"},
				Description: `Timing output formats (unstable)`,
			}},
		}, {
			Name:        []string{"rustc"},
			Description: `Compile a package, and pass extra options to the compiler`,
			Args: []model.Arg{{
				Name:       "args",
				IsVariadic: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-p", "--package"},
				Description: `Package to build`,
				Args: []model.Arg{{
					Name:           "package",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"-j", "--jobs"},
				Description: `Number of parallel jobs, defaults to # of CPUs`,
				Args: []model.Arg{{
					Name: "jobs",
				}},
			}, {
				Name:        []string{"--bin"},
				Description: `Build only the specified binary`,
				Args: []model.Arg{{
					Name:           "bin",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"--example"},
				Description: `Build only the specified example`,
				Args: []model.Arg{{
					Name:           "example",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"--test"},
				Description: `Build only the specified test target`,
				Args: []model.Arg{{
					Name:           "test",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"--bench"},
				Description: `Build only the specified bench target`,
				Args: []model.Arg{{
					Name:           "bench",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"--profile"},
				Description: `Build artifacts with the specified profile`,
				Args: []model.Arg{{
					Name: "profile",
				}},
			}, {
				Name:        []string{"--features"},
				Description: `Space or comma separated list of features to activate`,
				Args: []model.Arg{{
					Name:       "features",
					Generator:  nil, // TODO: port over generator
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"--target"},
				Description: `Target triple which compiles will be for`,
				Args: []model.Arg{{
					Name:           "target",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--print"},
				Description: `Output compiler information without compiling`,
				Args: []model.Arg{{
					Name: "print",
				}},
			}, {
				Name:        []string{"--crate-type"},
				Description: `Comma separated list of types of crates for the compiler to emit`,
				Args: []model.Arg{{
					Name: "crate-type",
				}},
			}, {
				Name:        []string{"--target-dir"},
				Description: `Directory for all generated artifacts`,
				Args: []model.Arg{{
					Name: "target-dir",
				}},
			}, {
				Name:        []string{"--manifest-path"},
				Description: `Path to Cargo.toml`,
				Args: []model.Arg{{
					Name:      "manifest-path",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--message-format"},
				Description: `Error format`,
				Args: []model.Arg{{
					Name: "message-format",
				}},
			}, {
				Name:        []string{"--color"},
				Description: `Coloring: auto, always, never`,
				Args: []model.Arg{{
					Name:        "color",
					Suggestions: []model.Suggestion{{Name: []string{`always`}}, {Name: []string{`never`}}, {Name: []string{`auto`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Override a configuration value`,
				Args: []model.Arg{{
					Name:      "config",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-Z"},
				Description: `Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details`,
				Args: []model.Arg{{
					Name: "unstable-features",
				}},
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Do not print cargo log messages`,
			}, {
				Name:        []string{"--lib"},
				Description: `Build only this package's library`,
			}, {
				Name:        []string{"--bins"},
				Description: `Build all binaries`,
			}, {
				Name:        []string{"--examples"},
				Description: `Build all examples`,
			}, {
				Name:        []string{"--tests"},
				Description: `Build all tests`,
			}, {
				Name:        []string{"--benches"},
				Description: `Build all benches`,
			}, {
				Name:        []string{"--all-targets"},
				Description: `Build all targets`,
			}, {
				Name:        []string{"-r", "--release"},
				Description: `Build artifacts in release mode, with optimizations`,
			}, {
				Name:        []string{"--all-features"},
				Description: `Activate all available features`,
			}, {
				Name:        []string{"--no-default-features"},
				Description: `Do not activate the "default" feature`,
			}, {
				Name:        []string{"--unit-graph"},
				Description: `Output build graph in JSON (unstable)`,
			}, {
				Name:        []string{"--ignore-rust-version"},
				Description: `Ignore "rust-version" specification in packages`,
			}, {
				Name:        []string{"--future-incompat-report"},
				Description: `Outputs a future incompatibility report at the end of the build`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Print help information`,
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Use verbose output (-vv very verbose/build.rs output)`,
			}, {
				Name:        []string{"--frozen"},
				Description: `Require Cargo.lock and cache are up to date`,
			}, {
				Name:        []string{"--locked"},
				Description: `Require Cargo.lock is up to date`,
			}, {
				Name:        []string{"--offline"},
				Description: `Run without accessing the network`,
			}, {
				Name:        []string{"--timings"},
				Description: `Timing output formats (unstable)`,
			}},
		}, {
			Name:        []string{"rustdoc"},
			Description: `Build a package's documentation, using specified custom flags`,
			Args: []model.Arg{{
				Name:       "args",
				IsVariadic: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-p", "--package"},
				Description: `Package to document`,
				Args: []model.Arg{{
					Name:           "package",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"-j", "--jobs"},
				Description: `Number of parallel jobs, defaults to # of CPUs`,
				Args: []model.Arg{{
					Name: "jobs",
				}},
			}, {
				Name:        []string{"--bin"},
				Description: `Build only the specified binary`,
				Args: []model.Arg{{
					Name:           "bin",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"--example"},
				Description: `Build only the specified example`,
				Args: []model.Arg{{
					Name:           "example",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"--test"},
				Description: `Build only the specified test target`,
				Args: []model.Arg{{
					Name:           "test",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"--bench"},
				Description: `Build only the specified bench target`,
				Args: []model.Arg{{
					Name:           "bench",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"--profile"},
				Description: `Build artifacts with the specified profile`,
				Args: []model.Arg{{
					Name: "profile",
				}},
			}, {
				Name:        []string{"--features"},
				Description: `Space or comma separated list of features to activate`,
				Args: []model.Arg{{
					Name:       "features",
					Generator:  nil, // TODO: port over generator
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"--target"},
				Description: `Build for the target triple`,
				Args: []model.Arg{{
					Name:           "target",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--target-dir"},
				Description: `Directory for all generated artifacts`,
				Args: []model.Arg{{
					Name: "target-dir",
				}},
			}, {
				Name:        []string{"--manifest-path"},
				Description: `Path to Cargo.toml`,
				Args: []model.Arg{{
					Name:      "manifest-path",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--message-format"},
				Description: `Error format`,
				Args: []model.Arg{{
					Name: "message-format",
				}},
			}, {
				Name:        []string{"--color"},
				Description: `Coloring: auto, always, never`,
				Args: []model.Arg{{
					Name:        "color",
					Suggestions: []model.Suggestion{{Name: []string{`always`}}, {Name: []string{`never`}}, {Name: []string{`auto`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Override a configuration value`,
				Args: []model.Arg{{
					Name:      "config",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-Z"},
				Description: `Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details`,
				Args: []model.Arg{{
					Name: "unstable-features",
				}},
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Do not print cargo log messages`,
			}, {
				Name:        []string{"--open"},
				Description: `Opens the docs in a browser after the operation`,
			}, {
				Name:        []string{"--lib"},
				Description: `Build only this package's library`,
			}, {
				Name:        []string{"--bins"},
				Description: `Build all binaries`,
			}, {
				Name:        []string{"--examples"},
				Description: `Build all examples`,
			}, {
				Name:        []string{"--tests"},
				Description: `Build all tests`,
			}, {
				Name:        []string{"--benches"},
				Description: `Build all benches`,
			}, {
				Name:        []string{"--all-targets"},
				Description: `Build all targets`,
			}, {
				Name:        []string{"-r", "--release"},
				Description: `Build artifacts in release mode, with optimizations`,
			}, {
				Name:        []string{"--all-features"},
				Description: `Activate all available features`,
			}, {
				Name:        []string{"--no-default-features"},
				Description: `Do not activate the "default" feature`,
			}, {
				Name:        []string{"--unit-graph"},
				Description: `Output build graph in JSON (unstable)`,
			}, {
				Name:        []string{"--ignore-rust-version"},
				Description: `Ignore "rust-version" specification in packages`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Print help information`,
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Use verbose output (-vv very verbose/build.rs output)`,
			}, {
				Name:        []string{"--frozen"},
				Description: `Require Cargo.lock and cache are up to date`,
			}, {
				Name:        []string{"--locked"},
				Description: `Require Cargo.lock is up to date`,
			}, {
				Name:        []string{"--offline"},
				Description: `Run without accessing the network`,
			}, {
				Name:        []string{"--timings"},
				Description: `Timing output formats (unstable)`,
			}},
		}, {
			Name:        []string{"search"},
			Description: `Search packages in crates.io`,
			Args: []model.Arg{{
				Name:           "query",
				FilterStrategy: model.FilterStrategyFuzzy,
				Generator:      nil, // TODO: port over generator
				IsVariadic:     true,
			}},
			Options: []model.Option{{
				Name:        []string{"--index"},
				Description: `Registry index URL to upload the package to`,
				Args: []model.Arg{{
					Name: "index",
				}},
			}, {
				Name:        []string{"--limit"},
				Description: `Limit the number of results (default: 10, max: 100)`,
				Args: []model.Arg{{
					Name: "limit",
				}},
			}, {
				Name:        []string{"--registry"},
				Description: `Registry to use`,
				Args: []model.Arg{{
					Name: "registry",
				}},
			}, {
				Name:        []string{"--color"},
				Description: `Coloring: auto, always, never`,
				Args: []model.Arg{{
					Name: "color",
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Override a configuration value`,
				Args: []model.Arg{{
					Name:      "config",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-Z"},
				Description: `Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details`,
				Args: []model.Arg{{
					Name: "unstable-features",
				}},
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Do not print cargo log messages`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Print help information`,
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Use verbose output (-vv very verbose/build.rs output)`,
			}, {
				Name:        []string{"--frozen"},
				Description: `Require Cargo.lock and cache are up to date`,
			}, {
				Name:        []string{"--locked"},
				Description: `Require Cargo.lock is up to date`,
			}, {
				Name:        []string{"--offline"},
				Description: `Run without accessing the network`,
			}},
		}, {
			Name:        []string{"test", "t"},
			Description: `Execute all unit and integration tests and build examples of a local package`,
			Args: []model.Arg{{
				Name:       "TESTNAME",
				IsOptional: true,
			}, {
				Name:       "args",
				Generator:  nil, // TODO: port over generator
				IsOptional: true,
				IsVariadic: true,
			}},
			Options: []model.Option{{
				Name:        []string{"--bin"},
				Description: `Test only the specified binary`,
				Args: []model.Arg{{
					Name:           "bin",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"--example"},
				Description: `Test only the specified example`,
				Args: []model.Arg{{
					Name:           "example",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"--test"},
				Description: `Test only the specified test target`,
				Args: []model.Arg{{
					Name:           "test",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"--bench"},
				Description: `Test only the specified bench target`,
				Args: []model.Arg{{
					Name:           "bench",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"-p", "--package"},
				Description: `Package to run tests for`,
				Args: []model.Arg{{
					Name:           "package",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"--exclude"},
				Description: `Exclude packages from the test`,
				Args: []model.Arg{{
					Name:           "exclude",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-j", "--jobs"},
				Description: `Number of parallel jobs, defaults to # of CPUs`,
				Args: []model.Arg{{
					Name: "jobs",
				}},
			}, {
				Name:        []string{"--profile"},
				Description: `Build artifacts with the specified profile`,
				Args: []model.Arg{{
					Name: "profile",
				}},
			}, {
				Name:        []string{"--features"},
				Description: `Space or comma separated list of features to activate`,
				Args: []model.Arg{{
					Name:       "features",
					Generator:  nil, // TODO: port over generator
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"--target"},
				Description: `Build for the target triple`,
				Args: []model.Arg{{
					Name:           "target",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--target-dir"},
				Description: `Directory for all generated artifacts`,
				Args: []model.Arg{{
					Name: "target-dir",
				}},
			}, {
				Name:        []string{"--manifest-path"},
				Description: `Path to Cargo.toml`,
				Args: []model.Arg{{
					Name:      "manifest-path",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--message-format"},
				Description: `Error format`,
				Args: []model.Arg{{
					Name: "message-format",
				}},
			}, {
				Name:        []string{"--color"},
				Description: `Coloring: auto, always, never`,
				Args: []model.Arg{{
					Name:        "color",
					Suggestions: []model.Suggestion{{Name: []string{`auto`}}, {Name: []string{`always`}}, {Name: []string{`never`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Override a configuration value`,
				Args: []model.Arg{{
					Name:      "config",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-Z"},
				Description: `Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details`,
				Args: []model.Arg{{
					Name: "unstable-features",
				}},
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Display one character per test instead of one line`,
			}, {
				Name:        []string{"--lib"},
				Description: `Test only this package's library unit tests`,
			}, {
				Name:        []string{"--bins"},
				Description: `Test all binaries`,
			}, {
				Name:        []string{"--examples"},
				Description: `Test all examples`,
			}, {
				Name:        []string{"--tests"},
				Description: `Test all tests`,
			}, {
				Name:        []string{"--benches"},
				Description: `Test all benches`,
			}, {
				Name:        []string{"--all-targets"},
				Description: `Test all targets`,
			}, {
				Name:        []string{"--doc"},
				Description: `Test only this library's documentation`,
			}, {
				Name:        []string{"--no-run"},
				Description: `Compile, but don't run tests`,
			}, {
				Name:        []string{"--no-fail-fast"},
				Description: `Run all tests regardless of failure`,
			}, {
				Name:        []string{"--workspace"},
				Description: `Test all packages in the workspace`,
			}, {
				Name:        []string{"--all"},
				Description: `Alias for --workspace (deprecated)`,
			}, {
				Name:        []string{"-r", "--release"},
				Description: `Build artifacts in release mode, with optimizations`,
			}, {
				Name:        []string{"--all-features"},
				Description: `Activate all available features`,
			}, {
				Name:        []string{"--no-default-features"},
				Description: `Do not activate the "default" feature`,
			}, {
				Name:        []string{"--ignore-rust-version"},
				Description: `Ignore "rust-version" specification in packages`,
			}, {
				Name:        []string{"--unit-graph"},
				Description: `Output build graph in JSON (unstable)`,
			}, {
				Name:        []string{"--future-incompat-report"},
				Description: `Outputs a future incompatibility report at the end of the build`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Print help information`,
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Use verbose output (-vv very verbose/build.rs output)`,
			}, {
				Name:        []string{"--frozen"},
				Description: `Require Cargo.lock and cache are up to date`,
			}, {
				Name:        []string{"--locked"},
				Description: `Require Cargo.lock is up to date`,
			}, {
				Name:        []string{"--offline"},
				Description: `Run without accessing the network`,
			}, {
				Name:        []string{"--timings"},
				Description: `Timing output formats (unstable)`,
			}},
		}, {
			Name:        []string{"tree"},
			Description: `Display a tree visualization of a dependency graph`,
			Options: []model.Option{{
				Name:        []string{"--manifest-path"},
				Description: `Path to Cargo.toml`,
				Args: []model.Arg{{
					Name:      "manifest-path",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-p", "--package"},
				Description: `Package to be used as the root of the tree`,
				Args: []model.Arg{{
					Name:           "package",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"--exclude"},
				Description: `Exclude specific workspace members`,
				Args: []model.Arg{{
					Name:           "exclude",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--features"},
				Description: `Space or comma separated list of features to activate`,
				Args: []model.Arg{{
					Name:       "features",
					Generator:  nil, // TODO: port over generator
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"--target"},
				Description: `Filter dependencies matching the given target-triple (default host platform). Pass "all" to include all targets`,
				Args: []model.Arg{{
					Name:           "target",
					Suggestions:    []model.Suggestion{{Name: []string{`all`}}},
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-e", "--edges"},
				Description: `The kinds of dependencies to display (features, normal, build, dev, all, no-normal, no-build, no-dev, no-proc-macro)`,
				Args: []model.Arg{{
					Name:        "edges",
					Suggestions: []model.Suggestion{{Name: []string{`features`}}, {Name: []string{`normal`}}, {Name: []string{`build`}}, {Name: []string{`dev`}}, {Name: []string{`all`}}, {Name: []string{`no-normal`}}, {Name: []string{`no-build`}}, {Name: []string{`no-dev`}}, {Name: []string{`no-proc-macro`}}},
				}},
			}, {
				Name:        []string{"-i", "--invert"},
				Description: `Invert the tree direction and focus on the given package`,
				Args: []model.Arg{{
					Name:           "invert",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"--prune"},
				Description: `Prune the given package from the display of the dependency tree`,
				Args: []model.Arg{{
					Name:           "prune",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--depth"},
				Description: `Maximum display depth of the dependency tree`,
				Args: []model.Arg{{
					Name: "depth",
				}},
			}, {
				Name:        []string{"--prefix"},
				Description: `Change the prefix (indentation) of how each entry is displayed`,
				Args: []model.Arg{{
					Name:        "prefix",
					Suggestions: []model.Suggestion{{Name: []string{`depth`}}, {Name: []string{`indent`}}, {Name: []string{`none`}}},
				}},
			}, {
				Name:        []string{"--charset"},
				Description: `Character set to use in output: utf8, ascii`,
				Args: []model.Arg{{
					Name:        "charset",
					Suggestions: []model.Suggestion{{Name: []string{`utf8`}}, {Name: []string{`ascii`}}},
				}},
			}, {
				Name:        []string{"-f", "--format"},
				Description: `Format string used for printing dependencies`,
				Args: []model.Arg{{
					Name: "format",
				}},
			}, {
				Name:        []string{"--color"},
				Description: `Coloring: auto, always, never`,
				Args: []model.Arg{{
					Name:        "color",
					Suggestions: []model.Suggestion{{Name: []string{`auto`}}, {Name: []string{`always`}}, {Name: []string{`never`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Override a configuration value`,
				Args: []model.Arg{{
					Name:      "config",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-Z"},
				Description: `Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details`,
				Args: []model.Arg{{
					Name: "unstable-features",
				}},
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Do not print cargo log messages`,
			}, {
				Name:        []string{"--workspace"},
				Description: `Display the tree for all packages in the workspace`,
			}, {
				Name: []string{"-a", "--all"},
			}, {
				Name: []string{"--all-targets"},
			}, {
				Name:        []string{"--all-features"},
				Description: `Activate all available features`,
			}, {
				Name:        []string{"--no-default-features"},
				Description: `Do not activate the "default" feature`,
			}, {
				Name: []string{"--no-dev-dependencies"},
			}, {
				Name: []string{"--no-indent"},
			}, {
				Name: []string{"--prefix-depth"},
			}, {
				Name:        []string{"--no-dedupe"},
				Description: `Do not de-duplicate (repeats all shared dependencies)`,
			}, {
				Name:        []string{"-d", "--duplicates"},
				Description: `Show only dependencies which come in multiple versions (implies -i)`,
			}, {
				Name: []string{"-V", "--version"},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Print help information`,
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Use verbose output (-vv very verbose/build.rs output)`,
			}, {
				Name:        []string{"--frozen"},
				Description: `Require Cargo.lock and cache are up to date`,
			}, {
				Name:        []string{"--locked"},
				Description: `Require Cargo.lock is up to date`,
			}, {
				Name:        []string{"--offline"},
				Description: `Run without accessing the network`,
			}},
		}, {
			Name:        []string{"uninstall"},
			Description: `Remove a Rust binary`,
			Args: []model.Arg{{
				Name:       "SPEC",
				Generator:  nil, // TODO: port over generator
				IsVariadic: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-p", "--package"},
				Description: `Package to uninstall`,
				Args: []model.Arg{{
					Name:       "package",
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"--bin"},
				Description: `Only uninstall the binary NAME`,
				Args: []model.Arg{{
					Name: "bin",
				}},
			}, {
				Name:        []string{"--root"},
				Description: `Directory to uninstall packages from`,
				Args: []model.Arg{{
					Name: "root",
				}},
			}, {
				Name:        []string{"--color"},
				Description: `Coloring: auto, always, never`,
				Args: []model.Arg{{
					Name:        "color",
					Suggestions: []model.Suggestion{{Name: []string{`auto`}}, {Name: []string{`always`}}, {Name: []string{`never`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Override a configuration value`,
				Args: []model.Arg{{
					Name:      "config",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-Z"},
				Description: `Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details`,
				Args: []model.Arg{{
					Name: "unstable-features",
				}},
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Do not print cargo log messages`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Print help information`,
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Use verbose output (-vv very verbose/build.rs output)`,
			}, {
				Name:        []string{"--frozen"},
				Description: `Require Cargo.lock and cache are up to date`,
			}, {
				Name:        []string{"--locked"},
				Description: `Require Cargo.lock is up to date`,
			}, {
				Name:        []string{"--offline"},
				Description: `Run without accessing the network`,
			}},
		}, {
			Name:        []string{"update"},
			Description: `Update dependencies as recorded in the local lock file`,
			Options: []model.Option{{
				Name:        []string{"-p", "--package"},
				Description: `Package to update`,
				Args: []model.Arg{{
					Name:           "package",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
			}, {
				Name:        []string{"--precise"},
				Description: `Update a single dependency to exactly PRECISE when used with -p`,
				Args: []model.Arg{{
					Name: "precise",
				}},
			}, {
				Name:        []string{"--manifest-path"},
				Description: `Path to Cargo.toml`,
				Args: []model.Arg{{
					Name:      "manifest-path",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--color"},
				Description: `Coloring: auto, always, never`,
				Args: []model.Arg{{
					Name:        "color",
					Suggestions: []model.Suggestion{{Name: []string{`always`}}, {Name: []string{`never`}}, {Name: []string{`auto`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Override a configuration value`,
				Args: []model.Arg{{
					Name:      "config",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-Z"},
				Description: `Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details`,
				Args: []model.Arg{{
					Name: "unstable-features",
				}},
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Do not print cargo log messages`,
			}, {
				Name:        []string{"-w", "--workspace"},
				Description: `Only update the workspace packages`,
			}, {
				Name:        []string{"--aggressive"},
				Description: `Force updating all dependencies of SPEC as well when used with -p`,
			}, {
				Name:        []string{"--dry-run"},
				Description: `Don't actually write the lockfile`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Print help information`,
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Use verbose output (-vv very verbose/build.rs output)`,
			}, {
				Name:        []string{"--frozen"},
				Description: `Require Cargo.lock and cache are up to date`,
			}, {
				Name:        []string{"--locked"},
				Description: `Require Cargo.lock is up to date`,
			}, {
				Name:        []string{"--offline"},
				Description: `Run without accessing the network`,
			}},
		}, {
			Name:        []string{"vendor"},
			Description: `Vendor all dependencies for a project locally`,
			Args: []model.Arg{{
				Name: "path",
			}},
			Options: []model.Option{{
				Name:        []string{"--manifest-path"},
				Description: `Path to Cargo.toml`,
				Args: []model.Arg{{
					Name:      "manifest-path",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-s", "--sync"},
				Description: `Additional "Cargo.toml" to sync and vendor`,
				Args: []model.Arg{{
					Name:       "tomls",
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"--color"},
				Description: `Coloring: auto, always, never`,
				Args: []model.Arg{{
					Name:        "color",
					Suggestions: []model.Suggestion{{Name: []string{`always`}}, {Name: []string{`never`}}, {Name: []string{`auto`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Override a configuration value`,
				Args: []model.Arg{{
					Name:      "config",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-Z"},
				Description: `Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details`,
				Args: []model.Arg{{
					Name: "unstable-features",
				}},
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Do not print cargo log messages`,
			}, {
				Name:        []string{"--no-delete"},
				Description: `Don't delete older crates in the vendor directory`,
			}, {
				Name:        []string{"--respect-source-config"},
				Description: `Respect "[source]" config in ".cargo/config"`,
			}, {
				Name:        []string{"--versioned-dirs"},
				Description: `Always include version in subdir name`,
			}, {
				Name: []string{"--no-merge-sources"},
			}, {
				Name: []string{"--relative-path"},
			}, {
				Name: []string{"--only-git-deps"},
			}, {
				Name: []string{"--disallow-duplicates"},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Print help information`,
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Use verbose output (-vv very verbose/build.rs output)`,
			}, {
				Name:        []string{"--frozen"},
				Description: `Require Cargo.lock and cache are up to date`,
			}, {
				Name:        []string{"--locked"},
				Description: `Require Cargo.lock is up to date`,
			}, {
				Name:        []string{"--offline"},
				Description: `Run without accessing the network`,
			}},
		}, {
			Name:        []string{"verify-project"},
			Description: `Check correctness of crate manifest`,
			Options: []model.Option{{
				Name:        []string{"--manifest-path"},
				Description: `Path to Cargo.toml`,
				Args: []model.Arg{{
					Name:      "manifest-path",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--color"},
				Description: `Coloring: auto, always, never`,
				Args: []model.Arg{{
					Name:        "color",
					Suggestions: []model.Suggestion{{Name: []string{`always`}}, {Name: []string{`never`}}, {Name: []string{`auto`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Override a configuration value`,
				Args: []model.Arg{{
					Name:      "config",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-Z"},
				Description: `Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details`,
				Args: []model.Arg{{
					Name: "unstable-features",
				}},
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Do not print cargo log messages`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Print help information`,
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Use verbose output (-vv very verbose/build.rs output)`,
			}, {
				Name:        []string{"--frozen"},
				Description: `Require Cargo.lock and cache are up to date`,
			}, {
				Name:        []string{"--locked"},
				Description: `Require Cargo.lock is up to date`,
			}, {
				Name:        []string{"--offline"},
				Description: `Run without accessing the network`,
			}},
		}, {
			Name:        []string{"version"},
			Description: `Show version information`,
			Options: []model.Option{{
				Name:        []string{"--color"},
				Description: `Coloring: auto, always, never`,
				Args: []model.Arg{{
					Name:        "color",
					Suggestions: []model.Suggestion{{Name: []string{`always`}}, {Name: []string{`never`}}, {Name: []string{`auto`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Override a configuration value`,
				Args: []model.Arg{{
					Name:      "config",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-Z"},
				Description: `Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details`,
				Args: []model.Arg{{
					Name: "unstable-features",
				}},
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Do not print cargo log messages`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Print help information`,
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Use verbose output (-vv very verbose/build.rs output)`,
			}, {
				Name:        []string{"--frozen"},
				Description: `Require Cargo.lock and cache are up to date`,
			}, {
				Name:        []string{"--locked"},
				Description: `Require Cargo.lock is up to date`,
			}, {
				Name:        []string{"--offline"},
				Description: `Run without accessing the network`,
			}},
		}, {
			Name:        []string{"yank"},
			Description: `Remove a pushed crate from the index`,
			Args: []model.Arg{{
				Name: "crate",
			}},
			Options: []model.Option{{
				Name:        []string{"--vers"},
				Description: `The version to yank or un-yank`,
				Args: []model.Arg{{
					Name: "vers",
				}},
			}, {
				Name:        []string{"--index"},
				Description: `Registry index to yank from`,
				Args: []model.Arg{{
					Name: "index",
				}},
			}, {
				Name:        []string{"--token"},
				Description: `API token to use when authenticating`,
				Args: []model.Arg{{
					Name: "token",
				}},
			}, {
				Name:        []string{"--registry"},
				Description: `Registry to use`,
				Args: []model.Arg{{
					Name: "registry",
				}},
			}, {
				Name:        []string{"--color"},
				Description: `Coloring: auto, always, never`,
				Args: []model.Arg{{
					Name:        "color",
					Suggestions: []model.Suggestion{{Name: []string{`always`}}, {Name: []string{`never`}}, {Name: []string{`auto`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Override a configuration value`,
				Args: []model.Arg{{
					Name:      "config",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-Z"},
				Description: `Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details`,
				Args: []model.Arg{{
					Name: "unstable-features",
				}},
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Do not print cargo log messages`,
			}, {
				Name:        []string{"--undo"},
				Description: `Undo a yank, putting a version back into the index`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Print help information`,
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Use verbose output (-vv very verbose/build.rs output)`,
			}, {
				Name:        []string{"--frozen"},
				Description: `Require Cargo.lock and cache are up to date`,
			}, {
				Name:        []string{"--locked"},
				Description: `Require Cargo.lock is up to date`,
			}, {
				Name:        []string{"--offline"},
				Description: `Run without accessing the network`,
			}},
		}, {
			Name:        []string{"help"},
			Description: `Print this message or the help of the given subcommand(s)`,
			Args: []model.Arg{{
				Name: "subcommand",
			}},
			Options: []model.Option{{
				Name:        []string{"--color"},
				Description: `Coloring: auto, always, never`,
				Args: []model.Arg{{
					Name:        "color",
					Suggestions: []model.Suggestion{{Name: []string{`always`}}, {Name: []string{`never`}}, {Name: []string{`auto`}}},
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Override a configuration value`,
				Args: []model.Arg{{
					Name:      "config",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-Z"},
				Description: `Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details`,
				Args: []model.Arg{{
					Name: "unstable-features",
				}},
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Use verbose output (-vv very verbose/build.rs output)`,
			}, {
				Name:        []string{"--frozen"},
				Description: `Require Cargo.lock and cache are up to date`,
			}, {
				Name:        []string{"--locked"},
				Description: `Require Cargo.lock is up to date`,
			}, {
				Name:        []string{"--offline"},
				Description: `Run without accessing the network`,
			}},
		}, {
			Name:        []string{"add"},
			Description: `Add dependencies to a Cargo.toml manifest file`,
			Args: []model.Arg{{
				Name:           "DEP_ID",
				FilterStrategy: model.FilterStrategyFuzzy,
				Generator:      nil, // TODO: port over generator
				IsVariadic:     true,
			}},
			Options: []model.Option{{
				Name:        []string{"--no-default-features"},
				Description: `Disable the default features`,
			}, {
				Name:        []string{"--default-features"},
				Description: `Re-enable the default features`,
			}, {
				Name:        []string{"-F", "--features"},
				Description: `Space or comma separated list of features to activate`,
			}, {
				Name:        []string{"--optional"},
				Description: `Mark the dependency as optional`,
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Use verbose output`,
			}, {
				Name:        []string{"--no-optional"},
				Description: `Mark the dependency as required`,
			}, {
				Name: []string{"--color"},
				Args: []model.Arg{{
					Name:        "WHEN",
					Suggestions: []model.Suggestion{{Name: []string{`auto`}}, {Name: []string{`always`}}, {Name: []string{`never`}}},
				}},
			}, {
				Name:        []string{"--rename"},
				Description: `Rename the dependency`,
				Args: []model.Arg{{
					Name: "NAME",
				}},
			}, {
				Name:        []string{"--frozen"},
				Description: `Require Cargo.lock and cache are up to date`,
			}, {
				Name:        []string{"--manifest-path"},
				Description: `Path to Cargo.toml`,
			}, {
				Name:        []string{"--locked"},
				Description: `Require Cargo.lock is up to date`,
			}, {
				Name:        []string{"-p", "--package"},
				Description: `Package to modify`,
				Args: []model.Arg{{
					Name:           "SPEC",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--offline"},
				Description: `Run without accessing the network`,
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Do not print cargo log messages`,
			}, {
				Name:        []string{"--dry-run"},
				Description: `Don't actually write the manifest`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Print help information`,
			}, {
				Name:        []string{"--path"},
				Description: `Filesystem path to local crate to add`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "PATH",
				}},
			}, {
				Name:        []string{"--git"},
				Description: `Git repository location`,
				Args: []model.Arg{{
					Name: "URI",
				}},
			}, {
				Name:        []string{"--branch"},
				Description: `Git branch to download the crate from`,
				Args: []model.Arg{{
					Name: "BRANCH",
				}},
			}, {
				Name:        []string{"--tag"},
				Description: `Git tag to download the crate from`,
				Args: []model.Arg{{
					Name: "TAG",
				}},
			}, {
				Name:        []string{"--rev"},
				Description: `Git reference to download the crate from`,
				Args: []model.Arg{{
					Name: "REV",
				}},
			}, {
				Name:        []string{"--registry"},
				Description: `Package registry for this dependency`,
				Args: []model.Arg{{
					Name: "NAME",
				}},
			}, {
				Name:        []string{"--dev"},
				Description: `Add as development dependency`,
			}, {
				Name:        []string{"--build"},
				Description: `Add as build dependency`,
			}, {
				Name:        []string{"--target"},
				Description: `Add as dependency to the given target platform`,
				Args: []model.Arg{{
					Name:           "TARGET",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"remove", "rm"},
			Description: `Remove dependencies from a Cargo.toml manifest file`,
			Args: []model.Arg{{
				Name:           "DEP_ID",
				FilterStrategy: model.FilterStrategyFuzzy,
				Generator:      nil, // TODO: port over generator
				IsVariadic:     true,
			}},
			Options: []model.Option{{
				Name:        []string{"--dev"},
				Description: `Remove as development dependency`,
			}, {
				Name:        []string{"--build"},
				Description: `Remove as build dependency`,
			}, {
				Name:        []string{"--target"},
				Description: `Remove as dependency to the given target platform`,
				Args: []model.Arg{{
					Name:           "TARGET",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-p", "--package"},
				Description: `Package to remove from`,
				Args: []model.Arg{{
					Name:           "SPEC",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--manifest-path"},
				Description: `Path to Cargo.toml`,
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Do not print cargo log messages`,
			}, {
				Name:        []string{"--dry-run"},
				Description: `Don't actually write the manifest`,
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Use verbose output`,
			}, {
				Name: []string{"--color"},
				Args: []model.Arg{{
					Name:        "WHEN",
					Suggestions: []model.Suggestion{{Name: []string{`auto`}}, {Name: []string{`always`}}, {Name: []string{`never`}}},
				}},
			}, {
				Name:        []string{"--frozen"},
				Description: `Require Cargo.lock and cache are up to date`,
			}, {
				Name:        []string{"--locked"},
				Description: `Require Cargo.lock is up to date`,
			}, {
				Name:        []string{"--offline"},
				Description: `Run without accessing the network`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Print help information`,
			}},
		}},
	}
}
