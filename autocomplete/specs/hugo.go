// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.
//
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

package specs

import (
	"github.com/microsoft/clac/autocomplete/model"
)

func init() {
	Specs["hugo"] = model.Subcommand{
		Name:        []string{"hugo"},
		Description: `Hugo builds your site`,
		Options: []model.Option{{
			Name:        []string{"-h", "--help"},
			Description: `help for hugo`,
		}, {
			Name:        []string{"-b", "--baseURL"},
			Description: `Hostname (and path) to the root, e.g. http://spf13.com/`,
			Args: []model.Arg{{
				Name: "hostname and path",
			}},
		}, {
			Name:        []string{"-D", "--buildDrafts"},
			Description: `Include content marked as draft (default false)`,
			Args: []model.Arg{{
				Name: "boolean",
			}},
		}, {
			Name:        []string{"-E", "--buildExpired"},
			Description: `Include expired content (default false)`,
			Args: []model.Arg{{
				Name: "boolean",
			}},
		}, {
			Name:        []string{"-F", "--buildFuture"},
			Description: `Include content with publishdate in the future (default false)`,
			Args: []model.Arg{{
				Name: "boolean",
			}},
		}, {
			Name:        []string{"--cacheDir"},
			Description: `Filesystem path to cache directory. Defaults: $TMPDIR/hugo_cache/`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFolders},
				Name:      "path",
			}},
		}, {
			Name:        []string{"--cleanDestinationDir"},
			Description: `Remove files from destination not found in static directories (default false)`,
			Args: []model.Arg{{
				Name: "boolean",
			}},
		}, {
			Name:        []string{"-c", "--contentDir"},
			Description: `Filesystem path to content directory`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFolders},
				Name:      "path",
			}},
		}, {
			Name:        []string{"-d", "--destination"},
			Description: `Filesystem path to write files to`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFolders},
				Name:      "path",
			}},
		}, {
			Name:        []string{"--disableKinds"},
			Description: `Disable different kind of pages (home, RSS etc.)`,
			Args: []model.Arg{{
				Name:        "kind,kind",
				Suggestions: []model.Suggestion{{Name: []string{`page`}}, {Name: []string{`home`}}, {Name: []string{`section`}}, {Name: []string{`taxonomy`}}, {Name: []string{`term`}}, {Name: []string{`RSS`}}, {Name: []string{`sitemap`}}, {Name: []string{`robotsTXT`}}, {Name: []string{`404`}}},
			}},
		}, {
			Name:        []string{"--enableGitInfo"},
			Description: `Add Git revision, date and author info to the pages (default false)`,
			Args: []model.Arg{{
				Name: "boolean",
			}},
		}, {
			Name:        []string{"--forceSyncStatic"},
			Description: `Copy all files when static is changed (default false)`,
			Args: []model.Arg{{
				Name: "boolean",
			}},
		}, {
			Name:        []string{"--gc"},
			Description: `Enable to run some cleanup tasks (remove unused cache files) after the build (default false)`,
			Args: []model.Arg{{
				Name: "boolean",
			}},
		}, {
			Name:        []string{"--i18n-warnings"},
			Description: `Print missing translations (default false)`,
			Args: []model.Arg{{
				Name: "boolean",
			}},
		}, {
			Name:        []string{"--ignoreCache"},
			Description: `Ignores the cache directory (default false)`,
			Args: []model.Arg{{
				Name: "boolean",
			}},
		}, {
			Name:        []string{"-l", "--layoutDir"},
			Description: `Filesystem path to layout directory`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFolders},
				Name:      "path",
			}},
		}, {
			Name:        []string{"--minify"},
			Description: `Minify any supported output format (HTML, XML etc.) (default false)`,
			Args: []model.Arg{{
				Name: "boolean",
			}},
		}, {
			Name:        []string{"--noChmod"},
			Description: `Don't sync permission mode of files (default false)`,
			Args: []model.Arg{{
				Name: "boolean",
			}},
		}, {
			Name:        []string{"--noTimes"},
			Description: `Don't sync modification time of files (default false)`,
			Args: []model.Arg{{
				Name: "boolean",
			}},
		}, {
			Name:        []string{"--path-warnings"},
			Description: `Print warnings on duplicate target paths etc (default false)`,
			Args: []model.Arg{{
				Name: "boolean",
			}},
		}, {
			Name:        []string{"--poll"},
			Description: `Set this to a poll interval, e.g --poll 700ms, to use a poll based approach to watch for file system changes`,
			Args: []model.Arg{{
				Name: "milliseconds",
			}},
		}, {
			Name:        []string{"--print-mem"},
			Description: `Print memory usage to screen at intervals (default false)`,
			Args: []model.Arg{{
				Name: "boolean",
			}},
		}, {
			Name:        []string{"--templateMetrics"},
			Description: `Display metrics about template executions (default false)`,
			Args: []model.Arg{{
				Name: "boolean",
			}},
		}, {
			Name:        []string{"--templateMetricsHints"},
			Description: `Calculate some improvement hints when combined with --templateMetrics (default false)`,
			Args: []model.Arg{{
				Name: "boolean",
			}},
		}, {
			Name:        []string{"-t", "--theme"},
			Description: `Themes to use (located in /themes/THEMENAME/)`,
			Args: []model.Arg{{
				Name: "theme name",
			}},
		}, {
			Name:        []string{"--trace"},
			Description: `Write trace to file (not useful in general)`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "file",
			}},
		}, {
			Name:        []string{"--config"},
			Description: `Config file (default is path/config.yaml|json|toml)`,
			Args: []model.Arg{{
				Templates:   []model.Template{model.TemplateFilepaths},
				Name:        "file",
				Description: `Default is path/config.yaml|json|toml`,
			}},
		}, {
			Name:        []string{"--configDir"},
			Description: `Config dir (default 'config')`,
			Args: []model.Arg{{
				Templates:   []model.Template{model.TemplateFolders},
				Name:        "directory path",
				Description: `Default is 'config'`,
			}},
		}, {
			Name:        []string{"--debug"},
			Description: `Debug output (default false)`,
			Args: []model.Arg{{
				Name: "boolean",
			}},
		}, {
			Name:        []string{"-e", "--environment"},
			Description: `Build environment`,
			Args: []model.Arg{{
				Name: "environment",
			}},
		}, {
			Name:        []string{"--ignoreVendor"},
			Description: `Ignores any _vendor directory (default false)`,
			Args: []model.Arg{{
				Name: "boolean",
			}},
		}, {
			Name:        []string{"--ignoreVendorPaths"},
			Description: `Ignores any _vendor for module paths matching the given Glob pattern`,
			Args: []model.Arg{{
				Name: "glob pattern",
			}},
		}, {
			Name:        []string{"--log"},
			Description: `Enable Logging (default false)`,
			Args: []model.Arg{{
				Name: "boolean",
			}},
		}, {
			Name:        []string{"--logFile"},
			Description: `Log File path (if set, logging enabled automatically)`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "file",
			}},
		}, {
			Name:        []string{"--quiet"},
			Description: `Build in quiet mode (default false)`,
			Args: []model.Arg{{
				Name: "boolean",
			}},
		}, {
			Name:        []string{"-s", "--source"},
			Description: `Filesystem path to read files relative from`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "file",
			}},
		}, {
			Name:        []string{"--themesDir"},
			Description: `Filesystem path to themes directory`,
			Args: []model.Arg{{
				Templates:   []model.Template{model.TemplateFilepaths},
				Name:        "file",
				Description: `Default is path/config.yaml|json|toml`,
			}},
		}, {
			Name:        []string{"-v", "--verbose"},
			Description: `Verbose output (default false)`,
			Args: []model.Arg{{
				Name: "boolean",
			}},
		}, {
			Name:        []string{"--verboseLog"},
			Description: `Verbose logging (default false)`,
			Args: []model.Arg{{
				Name: "boolean",
			}},
		}, {
			Name:        []string{"-w", "--watch"},
			Description: `Watch filesystem for changes and recreate as needed (default true)`,
			Args: []model.Arg{{
				Name: "boolean",
			}},
		}, {
			Name:        []string{"--renderToMemory"},
			Description: `Render to memory (only useful for benchmark testing)`,
		}},
		Subcommands: []model.Subcommand{{
			Name:        []string{"check"},
			Description: `Contains some verification checks`,
			Args: []model.Arg{{
				Name: "command",
			}},
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `help for check`,
			}, {
				Name:        []string{"--config"},
				Description: `Config file (default is path/config.yaml|json|toml)`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFilepaths},
					Name:        "file",
					Description: `Default is path/config.yaml|json|toml`,
				}},
			}, {
				Name:        []string{"--configDir"},
				Description: `Config dir (default 'config')`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFolders},
					Name:        "directory path",
					Description: `Default is 'config'`,
				}},
			}, {
				Name:        []string{"--debug"},
				Description: `Debug output (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"-e", "--environment"},
				Description: `Build environment`,
				Args: []model.Arg{{
					Name: "environment",
				}},
			}, {
				Name:        []string{"--ignoreVendor"},
				Description: `Ignores any _vendor directory (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--ignoreVendorPaths"},
				Description: `Ignores any _vendor for module paths matching the given Glob pattern`,
				Args: []model.Arg{{
					Name: "glob pattern",
				}},
			}, {
				Name:        []string{"--log"},
				Description: `Enable Logging (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--logFile"},
				Description: `Log File path (if set, logging enabled automatically)`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"--quiet"},
				Description: `Build in quiet mode (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"-s", "--source"},
				Description: `Filesystem path to read files relative from`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"--themesDir"},
				Description: `Filesystem path to themes directory`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFilepaths},
					Name:        "file",
					Description: `Default is path/config.yaml|json|toml`,
				}},
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Verbose output (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--verboseLog"},
				Description: `Verbose logging (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"ulimit"},
				Description: `Check system ulimit settings`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `help for ulimit`,
				}},
			}},
		}, {
			Name:        []string{"config"},
			Description: `Print the site configuration`,
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `help for config`,
			}, {
				Name:        []string{"--config"},
				Description: `Config file (default is path/config.yaml|json|toml)`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFilepaths},
					Name:        "file",
					Description: `Default is path/config.yaml|json|toml`,
				}},
			}, {
				Name:        []string{"--configDir"},
				Description: `Config dir (default 'config')`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFolders},
					Name:        "directory path",
					Description: `Default is 'config'`,
				}},
			}, {
				Name:        []string{"--debug"},
				Description: `Debug output (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"-e", "--environment"},
				Description: `Build environment`,
				Args: []model.Arg{{
					Name: "environment",
				}},
			}, {
				Name:        []string{"--ignoreVendor"},
				Description: `Ignores any _vendor directory (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--ignoreVendorPaths"},
				Description: `Ignores any _vendor for module paths matching the given Glob pattern`,
				Args: []model.Arg{{
					Name: "glob pattern",
				}},
			}, {
				Name:        []string{"--log"},
				Description: `Enable Logging (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--logFile"},
				Description: `Log File path (if set, logging enabled automatically)`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"--quiet"},
				Description: `Build in quiet mode (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"-s", "--source"},
				Description: `Filesystem path to read files relative from`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"--themesDir"},
				Description: `Filesystem path to themes directory`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFilepaths},
					Name:        "file",
					Description: `Default is path/config.yaml|json|toml`,
				}},
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Verbose output (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--verboseLog"},
				Description: `Verbose logging (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"mounts"},
				Description: `Print the configured file mounts`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `help for mounts`,
				}},
			}},
		}, {
			Name:        []string{"convert"},
			Description: `Convert your content to different formats`,
			Args: []model.Arg{{
				Name: "command",
			}},
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `help for convert`,
			}, {
				Name:        []string{"--config"},
				Description: `Config file (default is path/config.yaml|json|toml)`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFilepaths},
					Name:        "file",
					Description: `Default is path/config.yaml|json|toml`,
				}},
			}, {
				Name:        []string{"--configDir"},
				Description: `Config dir (default 'config')`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFolders},
					Name:        "directory path",
					Description: `Default is 'config'`,
				}},
			}, {
				Name:        []string{"--debug"},
				Description: `Debug output (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"-e", "--environment"},
				Description: `Build environment`,
				Args: []model.Arg{{
					Name: "environment",
				}},
			}, {
				Name:        []string{"--ignoreVendor"},
				Description: `Ignores any _vendor directory (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--ignoreVendorPaths"},
				Description: `Ignores any _vendor for module paths matching the given Glob pattern`,
				Args: []model.Arg{{
					Name: "glob pattern",
				}},
			}, {
				Name:        []string{"--log"},
				Description: `Enable Logging (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--logFile"},
				Description: `Log File path (if set, logging enabled automatically)`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"--quiet"},
				Description: `Build in quiet mode (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"-s", "--source"},
				Description: `Filesystem path to read files relative from`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"--themesDir"},
				Description: `Filesystem path to themes directory`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFilepaths},
					Name:        "file",
					Description: `Default is path/config.yaml|json|toml`,
				}},
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Verbose output (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--verboseLog"},
				Description: `Verbose logging (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"toJSON"},
				Description: `Convert front matter to JSON`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `help for toJSON`,
				}, {
					Name:        []string{"-o", "--output"},
					Description: `Filesystem path to write files to`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFolders},
						Name:      "path",
					}},
				}, {
					Name:        []string{"--unsafe"},
					Description: `Enable less safe operations, please backup first`,
				}},
			}, {
				Name:        []string{"toTOML"},
				Description: `Convert front matter to TOML`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `help for toTOML`,
				}, {
					Name:        []string{"-o", "--output"},
					Description: `Filesystem path to write files to`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFolders},
						Name:      "path",
					}},
				}, {
					Name:        []string{"--unsafe"},
					Description: `Enable less safe operations, please backup first`,
				}},
			}, {
				Name:        []string{"toYAML"},
				Description: `Convert front matter to YAML`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `help for toYAML`,
				}, {
					Name:        []string{"-o", "--output"},
					Description: `Filesystem path to write files to`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFolders},
						Name:      "path",
					}},
				}, {
					Name:        []string{"--unsafe"},
					Description: `Enable less safe operations, please backup first`,
				}},
			}},
		}, {
			Name:        []string{"deploy"},
			Description: `Deploy your site to a Cloud provider`,
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `help for deploy`,
			}, {
				Name:        []string{"--config"},
				Description: `Config file (default is path/config.yaml|json|toml)`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFilepaths},
					Name:        "file",
					Description: `Default is path/config.yaml|json|toml`,
				}},
			}, {
				Name:        []string{"--configDir"},
				Description: `Config dir (default 'config')`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFolders},
					Name:        "directory path",
					Description: `Default is 'config'`,
				}},
			}, {
				Name:        []string{"--debug"},
				Description: `Debug output (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"-e", "--environment"},
				Description: `Build environment`,
				Args: []model.Arg{{
					Name: "environment",
				}},
			}, {
				Name:        []string{"--ignoreVendor"},
				Description: `Ignores any _vendor directory (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--ignoreVendorPaths"},
				Description: `Ignores any _vendor for module paths matching the given Glob pattern`,
				Args: []model.Arg{{
					Name: "glob pattern",
				}},
			}, {
				Name:        []string{"--log"},
				Description: `Enable Logging (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--logFile"},
				Description: `Log File path (if set, logging enabled automatically)`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"--quiet"},
				Description: `Build in quiet mode (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"-s", "--source"},
				Description: `Filesystem path to read files relative from`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"--themesDir"},
				Description: `Filesystem path to themes directory`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFilepaths},
					Name:        "file",
					Description: `Default is path/config.yaml|json|toml`,
				}},
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Verbose output (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--verboseLog"},
				Description: `Verbose logging (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--confirm"},
				Description: `Ask for confirmation before making changes to the target`,
			}, {
				Name:        []string{"--dryRun"},
				Description: `Dry run`,
			}, {
				Name:        []string{"--force"},
				Description: `Force upload of all files`,
			}, {
				Name:        []string{"--invalidateCDN"},
				Description: `Invalidate the CDN cache listed in the deployment target (default true)`,
			}, {
				Name:        []string{"--maxDeletes"},
				Description: `Maximum # of files to delete, or -1 to disable (default 256)`,
				Args: []model.Arg{{
					Name: "int",
				}},
			}, {
				Name:        []string{"--target"},
				Description: `Target deployment from deployments section in config file; defaults to the first one`,
				Args: []model.Arg{{
					Name: "target",
				}},
			}},
		}, {
			Name:        []string{"env"},
			Description: `Print Hugo version and environment info`,
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `help for env`,
			}, {
				Name:        []string{"--config"},
				Description: `Config file (default is path/config.yaml|json|toml)`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFilepaths},
					Name:        "file",
					Description: `Default is path/config.yaml|json|toml`,
				}},
			}, {
				Name:        []string{"--configDir"},
				Description: `Config dir (default 'config')`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFolders},
					Name:        "directory path",
					Description: `Default is 'config'`,
				}},
			}, {
				Name:        []string{"--debug"},
				Description: `Debug output (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"-e", "--environment"},
				Description: `Build environment`,
				Args: []model.Arg{{
					Name: "environment",
				}},
			}, {
				Name:        []string{"--ignoreVendor"},
				Description: `Ignores any _vendor directory (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--ignoreVendorPaths"},
				Description: `Ignores any _vendor for module paths matching the given Glob pattern`,
				Args: []model.Arg{{
					Name: "glob pattern",
				}},
			}, {
				Name:        []string{"--log"},
				Description: `Enable Logging (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--logFile"},
				Description: `Log File path (if set, logging enabled automatically)`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"--quiet"},
				Description: `Build in quiet mode (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"-s", "--source"},
				Description: `Filesystem path to read files relative from`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"--themesDir"},
				Description: `Filesystem path to themes directory`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFilepaths},
					Name:        "file",
					Description: `Default is path/config.yaml|json|toml`,
				}},
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Verbose output (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--verboseLog"},
				Description: `Verbose logging (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"-v"},
				Description: `Get a full dependency list`,
			}},
		}, {
			Name:        []string{"gen"},
			Description: `A collection of several useful generators`,
			Args: []model.Arg{{
				Name: "command",
			}},
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `help for gen`,
			}, {
				Name:        []string{"--config"},
				Description: `Config file (default is path/config.yaml|json|toml)`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFilepaths},
					Name:        "file",
					Description: `Default is path/config.yaml|json|toml`,
				}},
			}, {
				Name:        []string{"--configDir"},
				Description: `Config dir (default 'config')`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFolders},
					Name:        "directory path",
					Description: `Default is 'config'`,
				}},
			}, {
				Name:        []string{"--debug"},
				Description: `Debug output (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"-e", "--environment"},
				Description: `Build environment`,
				Args: []model.Arg{{
					Name: "environment",
				}},
			}, {
				Name:        []string{"--ignoreVendor"},
				Description: `Ignores any _vendor directory (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--ignoreVendorPaths"},
				Description: `Ignores any _vendor for module paths matching the given Glob pattern`,
				Args: []model.Arg{{
					Name: "glob pattern",
				}},
			}, {
				Name:        []string{"--log"},
				Description: `Enable Logging (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--logFile"},
				Description: `Log File path (if set, logging enabled automatically)`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"--quiet"},
				Description: `Build in quiet mode (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"-s", "--source"},
				Description: `Filesystem path to read files relative from`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"--themesDir"},
				Description: `Filesystem path to themes directory`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFilepaths},
					Name:        "file",
					Description: `Default is path/config.yaml|json|toml`,
				}},
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Verbose output (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--verboseLog"},
				Description: `Verbose logging (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"autocomplete"},
				Description: `Generate shell autocompletion script for Hugo (default outputs to stdout)`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `help for autocomplete`,
				}, {
					Name:        []string{"-f", "--completionfile"},
					Description: `Autocompletion file, defaults to stdout`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "file",
					}},
				}, {
					Name:        []string{"-t", "--type"},
					Description: `Autocompletion type (bash, zsh, fish, or powershell) (default 'bash')`,
					Args: []model.Arg{{
						Name: "type",
						Suggestions: []model.Suggestion{{
							Name:        []string{`bash`},
							Description: `Default`,
						}, {
							Name: []string{`zsh`},
						}, {
							Name: []string{`fish`},
						}, {
							Name: []string{`powershell`},
						}},
					}},
				}},
			}, {
				Name:        []string{"chromastyles"},
				Description: `Generate CSS stylesheet for the Chroma code highlighter (default outputs to stdout)`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `help for chromastyles`,
				}, {
					Name:        []string{"--highlightStyle"},
					Description: `Style used for highlighting lines (see https://github.com/alecthomas/chroma) (default 'bg:#ffffcc')`,
					Args: []model.Arg{{
						Name: "hex triplet",
					}},
				}, {
					Name:        []string{"--linesStyle"},
					Description: `Style used for line numbers (see https://github.com/alecthomas/chroma)`,
					Args: []model.Arg{{
						Name: "hex triplet",
					}},
				}, {
					Name:        []string{"--style"},
					Description: `Highlighter style (see https://help.farbox.com/pygments.html) (default 'friendly')`,
					Args: []model.Arg{{
						Name: "style name",
						Suggestions: []model.Suggestion{{
							Name:        []string{`friendly`},
							Description: `Default`,
						}, {
							Name: []string{`abap`},
						}, {
							Name: []string{`algol`},
						}, {
							Name: []string{`algol_nu`},
						}, {
							Name: []string{`api`},
						}, {
							Name: []string{`arduino`},
						}, {
							Name: []string{`autumn`},
						}, {
							Name: []string{`base16-snazzy`},
						}, {
							Name: []string{`borland`},
						}, {
							Name: []string{`bw`},
						}, {
							Name: []string{`colorful`},
						}, {
							Name: []string{`doom-one`},
						}, {
							Name: []string{`doom-one2`},
						}, {
							Name: []string{`dracula`},
						}, {
							Name: []string{`emacs`},
						}, {
							Name: []string{`fruity`},
						}, {
							Name: []string{`github`},
						}, {
							Name: []string{`hr_dark`},
						}, {
							Name: []string{`hr_high_contrast`},
						}, {
							Name: []string{`igor`},
						}, {
							Name: []string{`lovelace`},
						}, {
							Name: []string{`manni`},
						}, {
							Name: []string{`monokai`},
						}, {
							Name: []string{`monokailight`},
						}, {
							Name: []string{`murphy`},
						}, {
							Name: []string{`native`},
						}, {
							Name: []string{`nord`},
						}, {
							Name: []string{`paraiso-dark`},
						}, {
							Name: []string{`paraiso-light`},
						}, {
							Name: []string{`pastie`},
						}, {
							Name: []string{`perldoc`},
						}, {
							Name: []string{`pygments`},
						}, {
							Name: []string{`rainbow_dash`},
						}, {
							Name: []string{`rrt`},
						}, {
							Name: []string{`solarized-dark`},
						}, {
							Name: []string{`solarized-dark256`},
						}, {
							Name: []string{`solarized-light`},
						}, {
							Name: []string{`swapoff`},
						}, {
							Name: []string{`tango`},
						}, {
							Name: []string{`trac`},
						}, {
							Name: []string{`vim`},
						}, {
							Name: []string{`vs`},
						}, {
							Name: []string{`vulcan`},
						}, {
							Name: []string{`xcode-dark`},
						}, {
							Name: []string{`xcode`},
						}},
					}},
				}},
			}, {
				Name:        []string{"doc"},
				Description: `Generate Markdown documentation for the Hugo CLI (default '/tmp/hugodoc/')`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `help for doc`,
				}, {
					Name:        []string{"--dir"},
					Description: `The directory to write the doc. (default '/tmp/hugodoc/')`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFolders},
						Name:      "path",
					}},
				}},
			}, {
				Name:        []string{"man"},
				Description: `Generate man pages for the Hugo CLI (default 'man/')`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `help for man`,
				}, {
					Name:        []string{"--dir"},
					Description: `The directory to write the man pages. (default 'man/')`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFolders},
						Name:      "path",
					}},
				}},
			}},
		}, {
			Name:        []string{"help"},
			Description: `Help about any command`,
			Args: []model.Arg{{
				Name: "command",
				Suggestions: []model.Suggestion{{
					Name: []string{`check`},
				}, {
					Name: []string{`config`},
				}, {
					Name: []string{`convert`},
				}, {
					Name: []string{`deploy`},
				}, {
					Name: []string{`env`},
				}, {
					Name: []string{`gen`},
				}, {
					Name: []string{`help`},
				}, {
					Name: []string{`import`},
				}, {
					Name: []string{`list`},
				}, {
					Name: []string{`mod`},
				}, {
					Name: []string{`new`},
				}, {
					Name: []string{`server`},
				}, {
					Name: []string{`version`},
				}},
			}},
		}, {
			Name:        []string{"import"},
			Description: `Import your site from others`,
			Args: []model.Arg{{
				Name: "command",
			}},
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `help for import`,
			}, {
				Name:        []string{"--config"},
				Description: `Config file (default is path/config.yaml|json|toml)`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFilepaths},
					Name:        "file",
					Description: `Default is path/config.yaml|json|toml`,
				}},
			}, {
				Name:        []string{"--configDir"},
				Description: `Config dir (default 'config')`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFolders},
					Name:        "directory path",
					Description: `Default is 'config'`,
				}},
			}, {
				Name:        []string{"--debug"},
				Description: `Debug output (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"-e", "--environment"},
				Description: `Build environment`,
				Args: []model.Arg{{
					Name: "environment",
				}},
			}, {
				Name:        []string{"--ignoreVendor"},
				Description: `Ignores any _vendor directory (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--ignoreVendorPaths"},
				Description: `Ignores any _vendor for module paths matching the given Glob pattern`,
				Args: []model.Arg{{
					Name: "glob pattern",
				}},
			}, {
				Name:        []string{"--log"},
				Description: `Enable Logging (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--logFile"},
				Description: `Log File path (if set, logging enabled automatically)`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"--quiet"},
				Description: `Build in quiet mode (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"-s", "--source"},
				Description: `Filesystem path to read files relative from`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"--themesDir"},
				Description: `Filesystem path to themes directory`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFilepaths},
					Name:        "file",
					Description: `Default is path/config.yaml|json|toml`,
				}},
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Verbose output (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--verboseLog"},
				Description: `Verbose logging (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"jekyll"},
				Description: `Import from Jekyll requires two paths, e.g. " + "hugo import jekyll jekyll_root_path target_path"`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "jekyll_root_path",
				}, {
					Templates: []model.Template{model.TemplateFolders},
					Name:      "target_path",
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `help for jekyll`,
				}, {
					Name:        []string{"--force"},
					Description: `Allow import into non-empty target directory`,
				}},
			}},
		}, {
			Name:        []string{"list"},
			Description: `Listing out various types of content`,
			Args: []model.Arg{{
				Name: "command",
			}},
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `help for list`,
			}, {
				Name:        []string{"--config"},
				Description: `Config file (default is path/config.yaml|json|toml)`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFilepaths},
					Name:        "file",
					Description: `Default is path/config.yaml|json|toml`,
				}},
			}, {
				Name:        []string{"--configDir"},
				Description: `Config dir (default 'config')`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFolders},
					Name:        "directory path",
					Description: `Default is 'config'`,
				}},
			}, {
				Name:        []string{"--debug"},
				Description: `Debug output (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"-e", "--environment"},
				Description: `Build environment`,
				Args: []model.Arg{{
					Name: "environment",
				}},
			}, {
				Name:        []string{"--ignoreVendor"},
				Description: `Ignores any _vendor directory (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--ignoreVendorPaths"},
				Description: `Ignores any _vendor for module paths matching the given Glob pattern`,
				Args: []model.Arg{{
					Name: "glob pattern",
				}},
			}, {
				Name:        []string{"--log"},
				Description: `Enable Logging (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--logFile"},
				Description: `Log File path (if set, logging enabled automatically)`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"--quiet"},
				Description: `Build in quiet mode (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"-s", "--source"},
				Description: `Filesystem path to read files relative from`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"--themesDir"},
				Description: `Filesystem path to themes directory`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFilepaths},
					Name:        "file",
					Description: `Default is path/config.yaml|json|toml`,
				}},
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Verbose output (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--verboseLog"},
				Description: `Verbose logging (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"drafts"},
				Description: `List all drafts`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `help for drafts`,
				}},
			}, {
				Name:        []string{"future"},
				Description: `List all posts dated in the future`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `help for future`,
				}},
			}, {
				Name:        []string{"expired"},
				Description: `List all posts already expired`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `help for expired`,
				}},
			}, {
				Name:        []string{"all"},
				Description: `List all posts`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `help for all`,
				}},
			}},
		}, {
			Name:        []string{"mod"},
			Description: `Various Hugo Modules helpers`,
			Args: []model.Arg{{
				Name: "command",
			}},
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `help for mod`,
			}, {
				Name:        []string{"-b", "--baseURL"},
				Description: `Hostname (and path) to the root, e.g. http://spf13.com/`,
				Args: []model.Arg{{
					Name: "hostname and path",
				}},
			}, {
				Name:        []string{"-D", "--buildDrafts"},
				Description: `Include content marked as draft (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"-E", "--buildExpired"},
				Description: `Include expired content (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"-F", "--buildFuture"},
				Description: `Include content with publishdate in the future (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--cacheDir"},
				Description: `Filesystem path to cache directory. Defaults: $TMPDIR/hugo_cache/`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--cleanDestinationDir"},
				Description: `Remove files from destination not found in static directories (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"-c", "--contentDir"},
				Description: `Filesystem path to content directory`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"-d", "--destination"},
				Description: `Filesystem path to write files to`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--disableKinds"},
				Description: `Disable different kind of pages (home, RSS etc.)`,
				Args: []model.Arg{{
					Name:        "kind,kind",
					Suggestions: []model.Suggestion{{Name: []string{`page`}}, {Name: []string{`home`}}, {Name: []string{`section`}}, {Name: []string{`taxonomy`}}, {Name: []string{`term`}}, {Name: []string{`RSS`}}, {Name: []string{`sitemap`}}, {Name: []string{`robotsTXT`}}, {Name: []string{`404`}}},
				}},
			}, {
				Name:        []string{"--enableGitInfo"},
				Description: `Add Git revision, date and author info to the pages (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--forceSyncStatic"},
				Description: `Copy all files when static is changed (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--gc"},
				Description: `Enable to run some cleanup tasks (remove unused cache files) after the build (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--i18n-warnings"},
				Description: `Print missing translations (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--ignoreCache"},
				Description: `Ignores the cache directory (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"-l", "--layoutDir"},
				Description: `Filesystem path to layout directory`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--minify"},
				Description: `Minify any supported output format (HTML, XML etc.) (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--noChmod"},
				Description: `Don't sync permission mode of files (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--noTimes"},
				Description: `Don't sync modification time of files (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--path-warnings"},
				Description: `Print warnings on duplicate target paths etc (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--poll"},
				Description: `Set this to a poll interval, e.g --poll 700ms, to use a poll based approach to watch for file system changes`,
				Args: []model.Arg{{
					Name: "milliseconds",
				}},
			}, {
				Name:        []string{"--print-mem"},
				Description: `Print memory usage to screen at intervals (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--templateMetrics"},
				Description: `Display metrics about template executions (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--templateMetricsHints"},
				Description: `Calculate some improvement hints when combined with --templateMetrics (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"-t", "--theme"},
				Description: `Themes to use (located in /themes/THEMENAME/)`,
				Args: []model.Arg{{
					Name: "theme name",
				}},
			}, {
				Name:        []string{"--trace"},
				Description: `Write trace to file (not useful in general)`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Config file (default is path/config.yaml|json|toml)`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFilepaths},
					Name:        "file",
					Description: `Default is path/config.yaml|json|toml`,
				}},
			}, {
				Name:        []string{"--configDir"},
				Description: `Config dir (default 'config')`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFolders},
					Name:        "directory path",
					Description: `Default is 'config'`,
				}},
			}, {
				Name:        []string{"--debug"},
				Description: `Debug output (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"-e", "--environment"},
				Description: `Build environment`,
				Args: []model.Arg{{
					Name: "environment",
				}},
			}, {
				Name:        []string{"--ignoreVendor"},
				Description: `Ignores any _vendor directory (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--ignoreVendorPaths"},
				Description: `Ignores any _vendor for module paths matching the given Glob pattern`,
				Args: []model.Arg{{
					Name: "glob pattern",
				}},
			}, {
				Name:        []string{"--log"},
				Description: `Enable Logging (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--logFile"},
				Description: `Log File path (if set, logging enabled automatically)`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"--quiet"},
				Description: `Build in quiet mode (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"-s", "--source"},
				Description: `Filesystem path to read files relative from`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"--themesDir"},
				Description: `Filesystem path to themes directory`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFilepaths},
					Name:        "file",
					Description: `Default is path/config.yaml|json|toml`,
				}},
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Verbose output (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--verboseLog"},
				Description: `Verbose logging (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"clean"},
				Description: `Delete the Hugo Module cache for the current project`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `help for clean`,
				}, {
					Name:        []string{"--all"},
					Description: `Clean entire module cache`,
				}, {
					Name:        []string{"--pattern"},
					Description: `Pattern matching module paths to clean (all if not set)", "e.g. "**hugo*"`,
					Args: []model.Arg{{
						Name: "path",
					}},
				}},
			}, {
				Name:        []string{"get"},
				Description: `Resolves dependencies in your current Hugo Project`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `help for get`,
				}, {
					Name:        []string{"-d"},
					Description: `Download packages only and do not install`,
				}, {
					Name:        []string{"-f"},
					Description: `Valid only when -u is set, forces get -u not to verify that each package has been checked out from the source control repository implied by its import path. This can be useful if the source is a local fork of the original`,
				}, {
					Name:        []string{"-fix"},
					Description: `Run the fix tool on downloaded packages before resolving dependencies or building the code`,
				}, {
					Name:        []string{"-insecure"},
					Description: `Permits fetching from repositories and resolving custom domains using insecure schemes such as HTTP. Use with caution`,
				}, {
					Name:        []string{"-t"},
					Description: `Also download the packages required to build the tests for the specified packages`,
				}, {
					Name:        []string{"-u"},
					Description: `Recursively update modules. Use network to update the named packages and their dependencies. By default, get uses the network to check out missing packages but does not use it to look for updates to existing packages`,
				}, {
					Name:        []string{"-v"},
					Description: `Enables verbose progress and debug output`,
				}},
			}, {
				Name:        []string{"graph"},
				Description: `Use "hugo mod graph" from the relevant module directory and it will print the dependency graph, including vendoring, module replacement or disabled status`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `help for graph`,
				}},
			}, {
				Name:        []string{"init"},
				Description: `Initialize this project as a Hugo Module`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `help for init`,
				}},
			}, {
				Name:        []string{"npm"},
				Description: `Various npm helpers`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `help for npm`,
				}},
				Subcommands: []model.Subcommand{{
					Name:        []string{"pack"},
					Description: `Experimental: Prepares and writes a composite package.json file for your project`,
					Options: []model.Option{{
						Name:        []string{"-h", "--help"},
						Description: `help for pack`,
					}},
				}},
			}, {
				Name:        []string{"tidy"},
				Description: `Remove unused entries in go.mod and go.sum`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `help for tidy`,
				}},
			}, {
				Name:        []string{"vendor"},
				Description: `Vendor all module dependencies into the _vendor directory`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `help for vendor`,
				}},
			}, {
				Name:        []string{"verify"},
				Description: `Verify dependencies`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `help for verify`,
				}, {
					Name:        []string{"--clean"},
					Description: `Delete module cache for dependencies that fail verification`,
				}},
			}},
		}, {
			Name:        []string{"new"},
			Description: `Create new content for your site`,
			Args: []model.Arg{{
				Name: "content-section/file-name.md",
			}},
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `help for new`,
			}, {
				Name:        []string{"-b", "--baseURL"},
				Description: `Hostname (and path) to the root, e.g. http://spf13.com/`,
				Args: []model.Arg{{
					Name: "hostname and path",
				}},
			}, {
				Name:        []string{"-D", "--buildDrafts"},
				Description: `Include content marked as draft (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"-E", "--buildExpired"},
				Description: `Include expired content (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"-F", "--buildFuture"},
				Description: `Include content with publishdate in the future (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--cacheDir"},
				Description: `Filesystem path to cache directory. Defaults: $TMPDIR/hugo_cache/`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--cleanDestinationDir"},
				Description: `Remove files from destination not found in static directories (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"-c", "--contentDir"},
				Description: `Filesystem path to content directory`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"-d", "--destination"},
				Description: `Filesystem path to write files to`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--disableKinds"},
				Description: `Disable different kind of pages (home, RSS etc.)`,
				Args: []model.Arg{{
					Name:        "kind,kind",
					Suggestions: []model.Suggestion{{Name: []string{`page`}}, {Name: []string{`home`}}, {Name: []string{`section`}}, {Name: []string{`taxonomy`}}, {Name: []string{`term`}}, {Name: []string{`RSS`}}, {Name: []string{`sitemap`}}, {Name: []string{`robotsTXT`}}, {Name: []string{`404`}}},
				}},
			}, {
				Name:        []string{"--enableGitInfo"},
				Description: `Add Git revision, date and author info to the pages (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--forceSyncStatic"},
				Description: `Copy all files when static is changed (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--gc"},
				Description: `Enable to run some cleanup tasks (remove unused cache files) after the build (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--i18n-warnings"},
				Description: `Print missing translations (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--ignoreCache"},
				Description: `Ignores the cache directory (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"-l", "--layoutDir"},
				Description: `Filesystem path to layout directory`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--minify"},
				Description: `Minify any supported output format (HTML, XML etc.) (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--noChmod"},
				Description: `Don't sync permission mode of files (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--noTimes"},
				Description: `Don't sync modification time of files (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--path-warnings"},
				Description: `Print warnings on duplicate target paths etc (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--poll"},
				Description: `Set this to a poll interval, e.g --poll 700ms, to use a poll based approach to watch for file system changes`,
				Args: []model.Arg{{
					Name: "milliseconds",
				}},
			}, {
				Name:        []string{"--print-mem"},
				Description: `Print memory usage to screen at intervals (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--templateMetrics"},
				Description: `Display metrics about template executions (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--templateMetricsHints"},
				Description: `Calculate some improvement hints when combined with --templateMetrics (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"-t", "--theme"},
				Description: `Themes to use (located in /themes/THEMENAME/)`,
				Args: []model.Arg{{
					Name: "theme name",
				}},
			}, {
				Name:        []string{"--trace"},
				Description: `Write trace to file (not useful in general)`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Config file (default is path/config.yaml|json|toml)`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFilepaths},
					Name:        "file",
					Description: `Default is path/config.yaml|json|toml`,
				}},
			}, {
				Name:        []string{"--configDir"},
				Description: `Config dir (default 'config')`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFolders},
					Name:        "directory path",
					Description: `Default is 'config'`,
				}},
			}, {
				Name:        []string{"--debug"},
				Description: `Debug output (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"-e", "--environment"},
				Description: `Build environment`,
				Args: []model.Arg{{
					Name: "environment",
				}},
			}, {
				Name:        []string{"--ignoreVendor"},
				Description: `Ignores any _vendor directory (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--ignoreVendorPaths"},
				Description: `Ignores any _vendor for module paths matching the given Glob pattern`,
				Args: []model.Arg{{
					Name: "glob pattern",
				}},
			}, {
				Name:        []string{"--log"},
				Description: `Enable Logging (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--logFile"},
				Description: `Log File path (if set, logging enabled automatically)`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"--quiet"},
				Description: `Build in quiet mode (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"-s", "--source"},
				Description: `Filesystem path to read files relative from`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"--themesDir"},
				Description: `Filesystem path to themes directory`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFilepaths},
					Name:        "file",
					Description: `Default is path/config.yaml|json|toml`,
				}},
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Verbose output (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--verboseLog"},
				Description: `Verbose logging (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"-k", "--kind"},
				Description: `Content type to create`,
				Args: []model.Arg{{
					Name:      "archetype|default",
					Generator: nil, // TODO: port over generator
				}, {
					Name: "content-section/file-name.md",
				}},
			}, {
				Name:        []string{"--editor"},
				Description: `Edit new content with this editor, if provided`,
				Args: []model.Arg{{
					Name: "editor",
				}},
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"site"},
				Description: `Create a new site (skeleton)`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `help for site`,
				}, {
					Name:        []string{"--force"},
					Description: `Init inside non-empty directory`,
				}, {
					Name:        []string{"-f", "--format"},
					Description: `Config & frontmatter format (default "toml")`,
					Args: []model.Arg{{
						Name: "format",
						Suggestions: []model.Suggestion{{
							Name:        []string{`toml`},
							Description: `Default`,
						}, {
							Name: []string{`yaml`},
						}, {
							Name: []string{`json`},
						}},
					}},
				}},
			}, {
				Name:        []string{"theme"},
				Description: `Create a new theme`,
				Args: []model.Arg{{
					Name: "name",
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `help for theme`,
				}},
			}},
		}, {
			Name:        []string{"server"},
			Description: `A high performance webserver`,
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `help for server`,
			}, {
				Name:        []string{"-b", "--baseURL"},
				Description: `Hostname (and path) to the root, e.g. http://spf13.com/`,
				Args: []model.Arg{{
					Name: "hostname and path",
				}},
			}, {
				Name:        []string{"-D", "--buildDrafts"},
				Description: `Include content marked as draft (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"-E", "--buildExpired"},
				Description: `Include expired content (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"-F", "--buildFuture"},
				Description: `Include content with publishdate in the future (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--cacheDir"},
				Description: `Filesystem path to cache directory. Defaults: $TMPDIR/hugo_cache/`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--cleanDestinationDir"},
				Description: `Remove files from destination not found in static directories (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"-c", "--contentDir"},
				Description: `Filesystem path to content directory`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"-d", "--destination"},
				Description: `Filesystem path to write files to`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--disableKinds"},
				Description: `Disable different kind of pages (home, RSS etc.)`,
				Args: []model.Arg{{
					Name:        "kind,kind",
					Suggestions: []model.Suggestion{{Name: []string{`page`}}, {Name: []string{`home`}}, {Name: []string{`section`}}, {Name: []string{`taxonomy`}}, {Name: []string{`term`}}, {Name: []string{`RSS`}}, {Name: []string{`sitemap`}}, {Name: []string{`robotsTXT`}}, {Name: []string{`404`}}},
				}},
			}, {
				Name:        []string{"--enableGitInfo"},
				Description: `Add Git revision, date and author info to the pages (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--forceSyncStatic"},
				Description: `Copy all files when static is changed (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--gc"},
				Description: `Enable to run some cleanup tasks (remove unused cache files) after the build (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--i18n-warnings"},
				Description: `Print missing translations (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--ignoreCache"},
				Description: `Ignores the cache directory (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"-l", "--layoutDir"},
				Description: `Filesystem path to layout directory`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--minify"},
				Description: `Minify any supported output format (HTML, XML etc.) (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--noChmod"},
				Description: `Don't sync permission mode of files (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--noTimes"},
				Description: `Don't sync modification time of files (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--path-warnings"},
				Description: `Print warnings on duplicate target paths etc (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--poll"},
				Description: `Set this to a poll interval, e.g --poll 700ms, to use a poll based approach to watch for file system changes`,
				Args: []model.Arg{{
					Name: "milliseconds",
				}},
			}, {
				Name:        []string{"--print-mem"},
				Description: `Print memory usage to screen at intervals (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--templateMetrics"},
				Description: `Display metrics about template executions (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--templateMetricsHints"},
				Description: `Calculate some improvement hints when combined with --templateMetrics (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"-t", "--theme"},
				Description: `Themes to use (located in /themes/THEMENAME/)`,
				Args: []model.Arg{{
					Name: "theme name",
				}},
			}, {
				Name:        []string{"--trace"},
				Description: `Write trace to file (not useful in general)`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"--config"},
				Description: `Config file (default is path/config.yaml|json|toml)`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFilepaths},
					Name:        "file",
					Description: `Default is path/config.yaml|json|toml`,
				}},
			}, {
				Name:        []string{"--configDir"},
				Description: `Config dir (default 'config')`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFolders},
					Name:        "directory path",
					Description: `Default is 'config'`,
				}},
			}, {
				Name:        []string{"--debug"},
				Description: `Debug output (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"-e", "--environment"},
				Description: `Build environment`,
				Args: []model.Arg{{
					Name: "environment",
				}},
			}, {
				Name:        []string{"--ignoreVendor"},
				Description: `Ignores any _vendor directory (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--ignoreVendorPaths"},
				Description: `Ignores any _vendor for module paths matching the given Glob pattern`,
				Args: []model.Arg{{
					Name: "glob pattern",
				}},
			}, {
				Name:        []string{"--log"},
				Description: `Enable Logging (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--logFile"},
				Description: `Log File path (if set, logging enabled automatically)`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"--quiet"},
				Description: `Build in quiet mode (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"-s", "--source"},
				Description: `Filesystem path to read files relative from`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"--themesDir"},
				Description: `Filesystem path to themes directory`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFilepaths},
					Name:        "file",
					Description: `Default is path/config.yaml|json|toml`,
				}},
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Verbose output (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--verboseLog"},
				Description: `Verbose logging (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"-w", "--watch"},
				Description: `Watch filesystem for changes and recreate as needed (default true)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--appendPort"},
				Description: `Append port to baseURL (default true)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--bind"},
				Description: `Interface to which the server will bind (default '127.0.0.1')`,
				Args: []model.Arg{{
					Name: "ip address",
				}},
			}, {
				Name:        []string{"--disableBrowserError"},
				Description: `Do not show build errors in the browser (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--disableFastRender"},
				Description: `Enables full re-renders on changes (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--disableLiveReload"},
				Description: `Watch without enabling live browser reload on rebuild (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--liveReloadPort"},
				Description: `Port for live reloading (i.e. 443 in HTTPS proxy situations) (default -1)`,
				Args: []model.Arg{{
					Name: "port",
				}},
			}, {
				Name:        []string{"--meminterval"},
				Description: `Interval to poll memory usage (requires --memstats), valid time units are 'ns', 'us' (or 'µs'), 'ms', 's', 'm', 'h'. (default '100ms')`,
				Args: []model.Arg{{
					Name: "time unit",
				}},
			}, {
				Name:        []string{"--memstats"},
				Description: `Log memory usage to this file`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"--navigateToChanged"},
				Description: `Navigate to changed content file on live browser reload (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--noHTTPCache"},
				Description: `Prevent HTTP caching (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"-p", "--port"},
				Description: `Port on which the server will listen (default 1313)`,
				Args: []model.Arg{{
					Name: "port",
				}},
			}, {
				Name:        []string{"--renderToDisk"},
				Description: `Render to Destination path (default is false: render to memory & serve from there)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}},
		}, {
			Name:        []string{"version"},
			Description: `Print the version number of Hugo`,
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `help for version`,
			}, {
				Name:        []string{"--config"},
				Description: `Config file (default is path/config.yaml|json|toml)`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFilepaths},
					Name:        "file",
					Description: `Default is path/config.yaml|json|toml`,
				}},
			}, {
				Name:        []string{"--configDir"},
				Description: `Config dir (default 'config')`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFolders},
					Name:        "directory path",
					Description: `Default is 'config'`,
				}},
			}, {
				Name:        []string{"--debug"},
				Description: `Debug output (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"-e", "--environment"},
				Description: `Build environment`,
				Args: []model.Arg{{
					Name: "environment",
				}},
			}, {
				Name:        []string{"--ignoreVendor"},
				Description: `Ignores any _vendor directory (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--ignoreVendorPaths"},
				Description: `Ignores any _vendor for module paths matching the given Glob pattern`,
				Args: []model.Arg{{
					Name: "glob pattern",
				}},
			}, {
				Name:        []string{"--log"},
				Description: `Enable Logging (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--logFile"},
				Description: `Log File path (if set, logging enabled automatically)`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"--quiet"},
				Description: `Build in quiet mode (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"-s", "--source"},
				Description: `Filesystem path to read files relative from`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"--themesDir"},
				Description: `Filesystem path to themes directory`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFilepaths},
					Name:        "file",
					Description: `Default is path/config.yaml|json|toml`,
				}},
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Verbose output (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}, {
				Name:        []string{"--verboseLog"},
				Description: `Verbose logging (default false)`,
				Args: []model.Arg{{
					Name: "boolean",
				}},
			}},
		}},
	}
}
