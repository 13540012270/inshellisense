// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["pageres"] = model.Subcommand{
		Name:        []string{"pageres"},
		Description: `Capture website screenshots`,
		Args: []model.Arg{{
			Templates:  []model.Template{model.TemplateFilepaths},
			Name:       "url | filepath",
			IsVariadic: true,
		}, {
			Name:       "resolution",
			IsVariadic: true,
		}},
		Options: []model.Option{{
			Name:        []string{"--verbose", "-v"},
			Description: `Verbose output to see errors if you need to troubleshoot`,
		}, {
			Name:        []string{"--crop", "-c"},
			Description: `Crop to the set height`,
			ExclusiveOn: []string{"--no-crop"},
		}, {
			Name:        []string{"--delay", "-d"},
			Description: `Delay screenshot capture`,
			Args: []model.Arg{{
				Name: "time",
			}},
		}, {
			Name:        []string{"--filename"},
			Description: `Custom filename`,
			Args: []model.Arg{{
				Name:        "template",
				Description: `--filename='<%= date %> - <%= url %>'`,
			}},
		}, {
			Name:        []string{"--overwrite"},
			Description: `Overwrite destination file if it exists. Defaults to appending (n) to the file name if --overwrite is not set`,
		}, {
			Name:        []string{"--selector"},
			Description: `Capture DOM element`,
			Args: []model.Arg{{
				Name: "element",
			}},
		}, {
			Name:        []string{"--hide"},
			Description: `Hide DOM element. Can be set multiple times`,
			Args: []model.Arg{{
				Name: "element",
			}},
		}, {
			Name:        []string{"--no-crop"},
			Description: `Override a global crop option within a group`,
			ExclusiveOn: []string{"--crop", "-c"},
		}, {
			Name:        []string{"--css"},
			Description: `Apply custom CSS to the webpage. Specify some CSS or the path to a CSS file`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "string",
			}},
		}, {
			Name:        []string{"--cookie"},
			Description: `Browser cookie. Can be set multiple times`,
			Args: []model.Arg{{
				Name: "cookie",
			}},
		}, {
			Name:        []string{"--header"},
			Description: `Custom HTTP request header. Can be set multiple times`,
			Args: []model.Arg{{
				Name: "header",
			}},
		}, {
			Name:        []string{"--username"},
			Description: `Username for HTTP auth`,
			Args: []model.Arg{{
				Name: "username",
			}},
		}, {
			Name:        []string{"--password"},
			Description: `Password for HTTP auth`,
			Args: []model.Arg{{
				Name: "password",
			}},
		}, {
			Name:        []string{"--scale"},
			Description: `Scale webpage n of times`,
			Args: []model.Arg{{
				Name: "number",
			}},
		}, {
			Name:        []string{"--format"},
			Description: `Image format. Either png (default) or jpg`,
			Args: []model.Arg{{
				Name:        "format",
				Suggestions: []model.Suggestion{{Name: []string{`png`}}, {Name: []string{`jpg`}}},
			}},
		}, {
			Name:        []string{"--user-agent"},
			Description: `Custom user agent`,
			Args: []model.Arg{{
				Name: "string",
			}},
		}, {
			Name:        []string{"--transparent"},
			Description: `Set background color to transparent instead of white if no background is set`,
		}, {
			Name:        []string{"--darkMode"},
			Description: `Emulate preference of dark color scheme`,
		}},
	}
}
