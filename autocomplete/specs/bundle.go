// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.
//
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

package specs

import (
	"github.com/microsoft/clac/autocomplete/model"
)

func init() {
	Specs["bundle"] = model.Subcommand{
		Name:        []string{"bundle"},
		Description: `Ruby Dependency Management`,
		Options: []model.Option{{
			Name:        []string{"--no-color"},
			Description: `Print all output without color`,
		}, {
			Name:        []string{"--retry", "-r"},
			Description: `Specify the number of times you wish to attempt network commands`,
		}, {
			Name:        []string{"--verbose", "-V"},
			Description: `Print out additional logging information`,
		}},
		Subcommands: []model.Subcommand{{
			Name:        []string{"install"},
			Description: `Install the gems specified by the Gemfile or Gemfile.lock`,
			Options: []model.Option{{
				Name:        []string{"--binstubs"},
				Description: `Create binstubs in dir`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
				}},
			}, {
				Name:        []string{"--clean"},
				Description: `Remove unused gems after install`,
			}, {
				Name:        []string{"--deployment"},
				Description: `For Production and CI use`,
			}, {
				Name:        []string{"--force", "--redownload"},
				Description: `Redownload all gems`,
			}, {
				Name:        []string{"--frozen"},
				Description: `Do not allow lock file to update`,
			}, {
				Name:        []string{"--full-index"},
				Description: `Cache the full index locally`,
			}, {
				Name:        []string{"--gemfile"},
				Description: `The gemfile to use`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
				}},
			}, {
				Name:        []string{"--jobs"},
				Description: `Maximum number of parallel installs`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--local"},
				Description: `Use only gems already downloaded or cached`,
			}, {
				Name:        []string{"--no-cache"},
				Description: `Do not use vendor/cache`,
			}, {
				Name:        []string{"--no-prune"},
				Description: `Do not remove stale gems`,
			}, {
				Name:        []string{"--path"},
				Description: `Path the install gems too`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
				}},
			}, {
				Name:        []string{"--quiet"},
				Description: `Do not print to stdout`,
			}, {
				Name:        []string{"--retry"},
				Description: `Retry failed network requests N times`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--shebang"},
				Description: `Uses the specified ruby executable for binstubs`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--standalone"},
				Description: `Makes a bundle that can work without depending on Rubygems or Bundler at runtime`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--system"},
				Description: `Use system Rubygems location`,
			}, {
				Name:        []string{"--trust-policy"},
				Description: `Apply the Rubygems security policy`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--with"},
				Description: `Groups to install`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--without"},
				Description: `Groups to NOT install`,
				Args:        []model.Arg{{}},
			}},
		}, {
			Name:        []string{"update"},
			Description: `Update dependencies to their latest versions`,
			Options: []model.Option{{
				Name:        []string{"--all"},
				Description: `Update all gems specified in Gemfile`,
			}, {
				Name:        []string{"--group", "-g"},
				Description: `Only update the gems in the specified group`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--source"},
				Description: `The name of a :git or :path source used in the Gemfile`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--local"},
				Description: `Use only gems already downloaded or cached`,
			}, {
				Name:        []string{"--ruby"},
				Description: `Update the locked version of Ruby to the current version of Ruby`,
			}, {
				Name:        []string{"--bundler"},
				Description: `Update the locked version of bundler to the invoked bundler version`,
			}, {
				Name:        []string{"--full-index"},
				Description: `Fall back to using the single-file index of all gems`,
			}, {
				Name:        []string{"--jobs", "-j"},
				Description: `Specify the number of jobs to run in parallel. The default is 1`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--retry"},
				Description: `Retry failed network or git requests for number times`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--quiet"},
				Description: `Only output warnings and errors`,
			}, {
				Name:        []string{"--force", "--redownload"},
				Description: `Force downloading every gem`,
			}, {
				Name:        []string{"--patch"},
				Description: `Prefer updating only to next patch version`,
			}, {
				Name:        []string{"--minor"},
				Description: `Prefer updating only to next minor version`,
			}, {
				Name:        []string{"--major"},
				Description: `Prefer updating to next major version (default)`,
			}, {
				Name:        []string{"--strict"},
				Description: `Do not allow any gem to be updated past latest --patch | --minor | --major`,
			}, {
				Name:        []string{"--conservative"},
				Description: `Do not allow shared dependencies to be updated`,
			}},
		}, {
			Name:        []string{"package"},
			Description: `Package the .gem files required by your application into the vendor/cache directory`,
		}, {
			Name:        []string{"exec"},
			Description: `Execute a command in the context of the bundle`,
			Args: []model.Arg{{
				IsCommand: true,
			}},
			Options: []model.Option{{
				Name:        []string{"--keep-file-descriptors"},
				Description: `Pass all file descriptors to the new process`,
			}},
		}, {
			Name: []string{"config"},
			Args: []model.Arg{{}},
		}, {
			Name: []string{"help"},
		}, {
			Name:        []string{"add"},
			Description: `Add gem to the Gemfile and run bundle install`,
			Args:        []model.Arg{{}},
			Options: []model.Option{{
				Name:        []string{"--version", "-v"},
				Description: `Specify version requirements`,
			}, {
				Name:        []string{"--group", "-g"},
				Description: `Specify the group(s) for the added gem`,
			}, {
				Name:        []string{"--source", "-s"},
				Description: `Specify the source`,
			}, {
				Name:        []string{"--skip-install"},
				Description: `Adds the gem to the Gemfile but does not install it`,
			}, {
				Name:        []string{"--optimistic"},
				Description: `Adds optimistic declaration of version`,
			}, {
				Name:        []string{"--strict"},
				Description: `Adds strict declaration of version`,
			}},
		}, {
			Name:        []string{"binstubs"},
			Description: `Install the binstubs of the listed gems`,
			Args:        []model.Arg{{}},
			Options: []model.Option{{
				Name:        []string{"--force"},
				Description: `Overwrite existing binstubs`,
			}, {
				Name:        []string{"--path"},
				Description: `The location to install the specified binstubs to`,
			}, {
				Name:        []string{"--standalone"},
				Description: `Makes binstubs that can work without depending on Rubygems or Bundler at runtime`,
			}, {
				Name:        []string{"--shebang"},
				Description: `Specify a different shebang executable name than the default`,
			}},
		}, {
			Name:        []string{"check"},
			Description: `Determine whether the requirements for your application are installed and available to Bundler`,
			Options: []model.Option{{
				Name:        []string{"--dry-run"},
				Description: `Locks the Gemfile before running the command`,
			}, {
				Name:        []string{"--gemfile"},
				Description: `Use the specified gemfile instead of the Gemfile`,
			}, {
				Name:        []string{"--path"},
				Description: `Specify a different path than the system default`,
			}},
		}, {
			Name:        []string{"show"},
			Description: `Show the source location of a particular gem in the bundle`,
			Options: []model.Option{{
				Name:        []string{"--paths"},
				Description: `List the paths of all gems that are required by your Gemfile`,
			}},
		}, {
			Name:        []string{"outdated"},
			Description: `Show all of the outdated gems in the current bundle`,
			Options: []model.Option{{
				Name:        []string{"--local"},
				Description: `Do not attempt to fetch gems remotely and use the gem cache instead`,
			}, {
				Name:        []string{"--pre"},
				Description: `Check for newer pre-release gems`,
			}, {
				Name:        []string{"--source"},
				Description: `Check against a specific source`,
			}, {
				Name:        []string{"--strict"},
				Description: `Only list newer versions allowed by your Gemfile requirements`,
			}, {
				Name:        []string{"--parseable", "--porcelain"},
				Description: `Use minimal formatting for more parseable output`,
			}, {
				Name:        []string{"--group"},
				Description: `List gems from a specific group`,
			}, {
				Name:        []string{"--groups"},
				Description: `List gems organized by groups`,
			}, {
				Name:        []string{"--update-strict"},
				Description: `Strict conservative resolution, do not allow any gem to be updated past latest --patch | --minor| --major`,
			}, {
				Name:        []string{"--minor"},
				Description: `Prefer updating only to next minor version`,
			}, {
				Name:        []string{"--major"},
				Description: `Prefer updating to next major version (default)`,
			}, {
				Name:        []string{"--patch"},
				Description: `Prefer updating only to next patch version`,
			}, {
				Name:        []string{"--filter-major"},
				Description: `Only list major newer versions`,
			}, {
				Name:        []string{"--filter-minor"},
				Description: `Only list minor newer versions`,
			}, {
				Name:        []string{"--filter-patch"},
				Description: `Only list patch newer versions`,
			}, {
				Name:        []string{"--only-explicit"},
				Description: `Only list gems specified in your Gemfile, not their dependencies`,
			}},
		}, {
			Name:        []string{"console"},
			Description: `Start an IRB session in the current bundle`,
		}, {
			Name:        []string{"open"},
			Description: `Open an installed gem in the editor`,
			Args:        []model.Arg{{}},
		}, {
			Name:        []string{"lock"},
			Description: `Generate a lockfile for your dependencies`,
			Options: []model.Option{{
				Name:        []string{"--update"},
				Description: `Ignores the existing lockfile`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--local"},
				Description: `Do not attempt to connect to rubygems.org`,
			}, {
				Name: []string{"--print"},
				Description: `Prints the lockfile to STDOUT instead of writing to the file
 system`,
			}, {
				Name:        []string{"--lockfile"},
				Description: `The path where the lockfile should be written to`,
				Args: []model.Arg{{
					Name: "path",
				}},
			}, {
				Name:        []string{"--full-index"},
				Description: `Fall back to using the single-file index of all gems`,
			}, {
				Name: []string{"--add-platform"},
				Description: `Add a new platform to the lockfile, re-resolving for the addi-
 tion of that platform`,
			}, {
				Name:        []string{"--remove-platform"},
				Description: `Remove a platform from the lockfile`,
			}, {
				Name:        []string{"--patch"},
				Description: `If updating, prefer updating only to next patch version`,
			}, {
				Name:        []string{"--minor"},
				Description: `If updating, prefer updating only to next minor version`,
			}, {
				Name:        []string{"--major"},
				Description: `If updating, prefer updating to next major version (default)`,
			}, {
				Name:        []string{"--strict"},
				Description: `If updating, do not allow any gem to be updated past latest --patch | --minor | --major`,
			}, {
				Name:        []string{"--conservative"},
				Description: `If updating, use bundle install conservative update behavior and do not allow shared dependencies to be updated`,
			}},
		}, {
			Name:        []string{"viz"},
			Description: `Generate a visual representation of your dependencies`,
			Options: []model.Option{{
				Name:        []string{"--file", "-f"},
				Description: `The name to use for the generated file. See --format option`,
			}, {
				Name:        []string{"--format", "-F"},
				Description: `This is output format option`,
			}, {
				Name:        []string{"--requirements", "-R"},
				Description: `Set to show the version of each required dependency`,
			}, {
				Name:        []string{"--version", "-v"},
				Description: `Set to show each gem version`,
			}, {
				Name:        []string{"--without", "-W"},
				Description: `Exclude gems that are part of the specified named group`,
			}},
		}, {
			Name:        []string{"init"},
			Description: `Generate a simple Gemfile, placed in the current directory`,
			Options: []model.Option{{
				Name:        []string{"--gemspec"},
				Description: `Use the specified .gemspec to create the Gemfile`,
			}},
		}, {
			Name:        []string{"gem"},
			Description: `Create a simple gem, suitable for development with Bundler`,
			Options: []model.Option{{
				Name:        []string{"--exe", "-b", "--bin"},
				Description: `Specify that Bundler should create a binary executable`,
			}, {
				Name:        []string{"--no-exe"},
				Description: `Do not create a binary`,
			}, {
				Name:        []string{"--coc"},
				Description: `Add a CODE_OF_CONDUCT.md file to the root of the generated project`,
			}, {
				Name:        []string{"--no-coc"},
				Description: `Do not create a CODE_OF_CONDUCT.md`,
			}, {
				Name:        []string{"--ext"},
				Description: `Add boilerplate for C extension code to the generated project`,
			}, {
				Name:        []string{"--no-ext"},
				Description: `Do not add C extension code`,
			}, {
				Name:        []string{"--mit"},
				Description: `Add an MIT license`,
			}, {
				Name:        []string{"--no-mit"},
				Description: `Do not create a LICENSE.txt`,
			}, {
				Name:        []string{"-t", "--test"},
				Description: `Specify the test framework that Bundler should use`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-e", "--edit"},
				Description: `Open the resulting gemspec in EDITOR`,
				Args:        []model.Arg{{}},
			}},
		}, {
			Name:        []string{"platform"},
			Description: `Display platform compatibility information`,
			Options: []model.Option{{
				Name:        []string{"--ruby"},
				Description: `It will display the ruby directive information so you don't have to parse it from the Gemfile`,
			}},
		}, {
			Name:        []string{"clean"},
			Description: `Clean up unused gems in your Bundler directory`,
			Options: []model.Option{{
				Name:        []string{"--dry-run"},
				Description: `Print the changes, but do not clean the unused gems`,
			}, {
				Name:        []string{"--force"},
				Description: `Force a clean even if --path is not set`,
			}},
		}, {
			Name:        []string{"doctor"},
			Description: `Display warnings about common problems`,
			Options: []model.Option{{
				Name:        []string{"--quiet"},
				Description: `Only output warnings and errors`,
			}, {
				Name:        []string{"--gemfile"},
				Description: `The location of the Gemfile which Bundler should use`,
				Args:        []model.Arg{{}},
			}},
		}},
	}
}
