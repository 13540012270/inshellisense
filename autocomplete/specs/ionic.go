// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.
//
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

package specs

import (
	"github.com/microsoft/clac/autocomplete/model"
)

func init() {
	Specs["ionic"] = model.Subcommand{
		Name:        []string{"ionic"},
		Description: `The Ionic command-line interface (CLI) is the go-to tool for developing Ionic apps`,
		Subcommands: []model.Subcommand{{
			Name:        []string{"build"},
			Description: `Build web assets and prepare your app for any platform targets`,
			Options: []model.Option{{
				Name:        []string{"--engine"},
				Description: `Target engine (e.g. browser, cordova)`,
				Args: []model.Arg{{
					Name:        "engine",
					Suggestions: []model.Suggestion{{Name: []string{`browser`}}, {Name: []string{`cordova`}}},
				}},
			}, {
				Name:        []string{"--platform"},
				Description: `Target platform on chosen engine (e.g. ios, android)`,
				Args: []model.Arg{{
					Name:        "platform",
					Suggestions: []model.Suggestion{{Name: []string{`ios`}}, {Name: []string{`android`}}},
				}},
			}, {
				Name:        []string{"--prod"},
				Description: `Flag to use the production configuration`,
			}, {
				Name:        []string{"--configuration", "-c"},
				Description: `Specify the configuration to use`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths, model.TemplateFolders},
					Name:      "conf",
				}},
			}, {
				Name:        []string{"--source-map"},
				Description: `Output source maps`,
			}, {
				Name:        []string{"--watch"},
				Description: `Rebuild when files change`,
			}},
		}, {
			Name:        []string{"completion"},
			Description: `Enables tab-completion for Ionic CLI commands`,
		}, {
			Name:        []string{"docs"},
			Description: `Open the Ionic documentation website`,
			Options: []model.Option{{
				Name:        []string{"--browser", "-w"},
				Description: `Specifies the browser to use (safari, firefox, google chrome)`,
				Args: []model.Arg{{
					Name:        "browser",
					Suggestions: []model.Suggestion{{Name: []string{`safari`}}, {Name: []string{`firefox`}}, {Name: []string{`google chrome`}}},
				}},
			}},
		}, {
			Name:        []string{"info"},
			Description: `Print project, system, and environment information`,
			Options: []model.Option{{
				Name:        []string{"--json"},
				Description: `Print system/environment info in JSON format`,
			}},
		}, {
			Name:        []string{"init"},
			Description: `Initialize existing projects with Ionic`,
			Args: []model.Arg{{
				Name:        "name",
				Description: `The name of your project (e.g. myApp, "My App")`,
				IsOptional:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"--type"},
				Description: `Type of project (e.g. angular, react, vue, custom)`,
				Args: []model.Arg{{
					Name:        "type",
					Suggestions: []model.Suggestion{{Name: []string{`angular`}}, {Name: []string{`react`}}, {Name: []string{`vue`}}, {Name: []string{`custom`}}},
				}},
			}, {
				Name:        []string{"--force", "-f"},
				Description: `Initialize even if a project already exists`,
			}, {
				Name:        []string{"--multi-app"},
				Description: `Initialize a multi-app project`,
			}, {
				Name:        []string{"--project-id"},
				Description: `Specify a slug for your app`,
				Args: []model.Arg{{
					Name: "slug",
				}},
			}, {
				Name:        []string{"--default"},
				Description: `Mark the initialized app as the default project`,
			}},
		}, {
			Name:        []string{"link"},
			Description: `Connect local apps to Ionic`,
			Args: []model.Arg{{
				Name:        "id",
				Description: `The Appflow ID of the app to link (e.g. a1b2c3d4)`,
				IsOptional:  true,
			}},
		}, {
			Name:        []string{"login"},
			Description: `Log in to Ionic`,
			Args: []model.Arg{{
				Name:        "email",
				Description: `Your email address`,
				IsOptional:  true,
			}, {
				Name:        "password",
				Description: `Your password`,
				IsOptional:  true,
			}},
		}, {
			Name:        []string{"logout"},
			Description: `Log out of Ionic`,
		}, {
			Name:        []string{"repair"},
			Description: `Remove and recreate dependencies and generated files`,
			Options: []model.Option{{
				Name:        []string{"--cordova"},
				Description: `Only perform the repair steps for Cordova platforms and plugins`,
			}},
		}, {
			Name:        []string{"serve"},
			Description: `Start a local dev server for app dev/testing`,
			Options: []model.Option{{
				Name:        []string{"--external"},
				Description: `Host dev server on all network interfaces (i.e. --host=0.0.0.0)`,
			}, {
				Name:        []string{"--host"},
				Description: `Use specific host for the dev server`,
				Args: []model.Arg{{
					Name: "host",
				}},
			}, {
				Name:        []string{"--port", "-p"},
				Description: `Use specific port for the dev server`,
				Args: []model.Arg{{
					Name: "port",
				}},
			}, {
				Name:        []string{"--public-host"},
				Description: `The host used for the browser or web view`,
				Args: []model.Arg{{
					Name: "host",
				}},
			}, {
				Name:        []string{"--no-livereload"},
				Description: `Do not spin up dev server--just serve files`,
			}, {
				Name:        []string{"--lab-host"},
				Description: `Use specific host for Ionic Lab server`,
				Args: []model.Arg{{
					Name: "host",
				}},
			}, {
				Name:        []string{"--lab-port"},
				Description: `Use specific port for Ionic Lab server`,
				Args: []model.Arg{{
					Name: "port",
				}},
			}, {
				Name:        []string{"--no-open"},
				Description: `Do not open a browser window`,
			}, {
				Name:        []string{"--browser", "-w"},
				Description: `Specifies the browser to use (safari, firefox, google chrome)`,
				Args: []model.Arg{{
					Name:        "browser",
					Suggestions: []model.Suggestion{{Name: []string{`safari`}}, {Name: []string{`firefox`}}, {Name: []string{`google chrome`}}},
				}},
			}, {
				Name:        []string{"--browseroption", "-o"},
				Description: `Specifies a path to open to (/#/tab/dash)`,
				Args: []model.Arg{{
					Name: "path",
				}},
			}, {
				Name:        []string{"--lab", "-l"},
				Description: `Test your apps on multiple platform types in the browser`,
			}, {
				Name:        []string{"--ssl"},
				Description: `Use HTTPS for the dev server`,
			}, {
				Name:        []string{"--prod"},
				Description: `Flag to use the production configuration`,
			}, {
				Name:        []string{"--consolelogs"},
				Description: `Print app console logs to the terminal`,
			}, {
				Name:        []string{"--consolelogs-port"},
				Description: `Use specific port for console logs server`,
				Args: []model.Arg{{
					Name: "port",
				}},
			}, {
				Name:        []string{"--configuration", "-c"},
				Description: `Specify the configuration to use`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths, model.TemplateFolders},
					Name:      "conf",
				}},
			}, {
				Name:        []string{"--source-map"},
				Description: `Output sourcemaps`,
			}},
		}, {
			Name:        []string{"signup"},
			Description: `Create an Ionic account`,
		}, {
			Name:        []string{"start"},
			Description: `Create a new project`,
			Args: []model.Arg{{
				Name:        "name",
				Description: `The name of your new project (e.g. myApp, "My App")`,
			}, {
				Name:        "template",
				Description: `The starter template to use (e.g. blank, tabs; use --list to see all)`,
			}},
			Options: []model.Option{{
				Name:        []string{"--list", "-l"},
				Description: `List available starter templates`,
			}, {
				Name:        []string{"--type"},
				Description: `Type of project to start (e.g. vue, angular, react, ionic-angular, ionic1)`,
				Args: []model.Arg{{
					Name:        "type",
					Suggestions: []model.Suggestion{{Name: []string{`vue`}}, {Name: []string{`angular`}}, {Name: []string{`react`}}, {Name: []string{`ionic-angular`}}, {Name: []string{`ionic1`}}},
				}},
			}, {
				Name:        []string{"--cordova"},
				Description: `Include Cordova integration`,
			}, {
				Name:        []string{"--capacitor"},
				Description: `Include Capacitor integration`,
			}, {
				Name:        []string{"--no-deps"},
				Description: `Do not install npm/yarn dependencies`,
			}, {
				Name:        []string{"--no-git"},
				Description: `Do not initialize a git repo`,
			}, {
				Name:        []string{"--link"},
				Description: `Connect your new app to Ionic`,
			}, {
				Name:        []string{"--id"},
				Description: `Specify an Ionic App ID to link`,
				Args: []model.Arg{{
					Name: "id",
				}},
			}, {
				Name:        []string{"--project-id"},
				Description: `Specify a slug for your app (used for the directory name and package name)`,
				Args: []model.Arg{{
					Name: "slug",
				}},
			}, {
				Name:        []string{"--package-id"},
				Description: `Specify the bundle ID/application ID for your app (reverse-DNS notation)`,
				Args: []model.Arg{{
					Name: "id",
				}},
			}},
		}, {
			Name:        []string{"config"},
			Description: `Config commands for Ionic`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"get"},
				Description: `Print config values`,
				Args: []model.Arg{{
					Name:        "property",
					Description: `The property name you wish to get`,
					IsOptional:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"--global", "-g"},
					Description: `Use global CLI config`,
				}, {
					Name:        []string{"--json"},
					Description: `Output config values in JSON`,
				}, {
					Name:        []string{"--root"},
					Description: `Operate on root of ionic.config.json`,
				}},
			}, {
				Name:        []string{"set"},
				Description: `Set config values`,
				Args: []model.Arg{{
					Name:        "property",
					Description: `The property name you wish to set`,
				}, {
					Name:        "value",
					Description: `The new value of the given property`,
				}},
				Options: []model.Option{{
					Name:        []string{"--global", "-g"},
					Description: `Use global CLI config`,
				}, {
					Name:        []string{"--json"},
					Description: `Always interpret value as JSON`,
				}, {
					Name:        []string{"--force"},
					Description: `Always overwrite existing values`,
				}, {
					Name:        []string{"--root"},
					Description: `Operate on root of ./ionic.config.json`,
				}},
			}, {
				Name:        []string{"unset"},
				Description: `Delete config values`,
				Args: []model.Arg{{
					Name:        "property",
					Description: `The property name you wish to delete`,
				}},
				Options: []model.Option{{
					Name:        []string{"--global", "-g"},
					Description: `Use global CLI config`,
				}, {
					Name:        []string{"--root"},
					Description: `Operate on root of ./ionic.config.json`,
				}},
			}},
		}, {
			Name:        []string{"capacitor"},
			Description: `Capacitor commands Ionic`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"add"},
				Description: `Add a native platform to your Ionic project`,
				Args: []model.Arg{{
					Name:        "platform",
					Description: `The platform to add (e.g. android, ios)`,
					Suggestions: []model.Suggestion{{Name: []string{`ios`}}, {Name: []string{`android`}}},
				}},
			}, {
				Name:        []string{"build"},
				Description: `Build an Ionic project for a given platform`,
				Args: []model.Arg{{
					Name:        "platform",
					Description: `The platform to build for (e.g. android, ios)`,
					Suggestions: []model.Suggestion{{Name: []string{`ios`}}, {Name: []string{`android`}}},
				}},
				Options: []model.Option{{
					Name:        []string{"--no-build"},
					Description: `Do not invoke Ionic build`,
				}, {
					Name:        []string{"--no-open"},
					Description: `Do not invoke Capacitor open`,
				}, {
					Name:        []string{"--prod"},
					Description: `Flag to use the production configuration`,
				}, {
					Name:        []string{"configuration", "-c"},
					Description: `Specify the configuration to use`,
				}, {
					Name:        []string{"--source-map"},
					Description: `Output source maps`,
				}, {
					Name:        []string{"--watch"},
					Description: `Rebuild when files change`,
				}},
			}, {
				Name:        []string{"copy"},
				Description: `Copy web assets to native platforms`,
				Args: []model.Arg{{
					Name:        "platform",
					Description: `The platform to copy (e.g. android, ios)`,
					IsOptional:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"--no-build"},
					Description: `Do not invoke an Ionic build`,
				}, {
					Name:        []string{"--prod"},
					Description: `Flag to use the production configuration`,
				}, {
					Name:        []string{"configuration", "-c"},
					Description: `Specify the configuration to use`,
				}, {
					Name:        []string{"--source-map"},
					Description: `Output source maps`,
				}, {
					Name:        []string{"--watch"},
					Description: `Rebuild when files change`,
				}},
			}, {
				Name:        []string{"open"},
				Description: `Open the IDE for a given native platform project`,
				Args: []model.Arg{{
					Name:        "platform",
					Description: `The platform to open (e.g. android, ios)`,
					Suggestions: []model.Suggestion{{Name: []string{`ios`}}, {Name: []string{`android`}}},
				}},
			}, {
				Name:        []string{"run"},
				Description: `Run an Ionic project on a connected device`,
				Args: []model.Arg{{
					Name:        "platform",
					Description: `The platform to run (e.g. android, ios)`,
					Suggestions: []model.Suggestion{{Name: []string{`ios`}}, {Name: []string{`android`}}},
				}},
				Options: []model.Option{{
					Name:        []string{"--list"},
					Description: `List all available targets`,
				}, {
					Name:        []string{"--target"},
					Description: `Deploy to a specific device by its ID (use --list to see all)`,
					Args: []model.Arg{{
						Name: "target",
					}},
				}, {
					Name:        []string{"--open"},
					Description: `Open native IDE instead of using capacitor run`,
				}, {
					Name:        []string{"--no-build"},
					Description: `Do not invoke Ionic build`,
				}, {
					Name:        []string{"--external"},
					Description: `Host dev server on all network interfaces (i.e. --host=0.0.0.0)`,
				}, {
					Name:        []string{"--host"},
					Description: `Use specific host for the dev server`,
					Args: []model.Arg{{
						Name: "host",
					}},
				}, {
					Name:        []string{"--port", "-p"},
					Description: `Use specific port for the dev server`,
					Args: []model.Arg{{
						Name: "port",
					}},
				}, {
					Name:        []string{"--public-host"},
					Description: `The host used for the browser or web view`,
					Args: []model.Arg{{
						Name: "host",
					}},
				}, {
					Name:        []string{"--livereload", "-l"},
					Description: `Spin up dev server to live-reload www files`,
				}, {
					Name:        []string{"--livereload-url"},
					Description: `Provide a custom URL to the dev server`,
					Args: []model.Arg{{
						Name: "url",
					}},
				}, {
					Name:        []string{"--prod"},
					Description: `Flag to use the production configuration`,
				}, {
					Name:        []string{"--configuration", "-c"},
					Description: `Specify the configuration to use`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths, model.TemplateFolders},
						Name:      "conf",
					}},
				}, {
					Name:        []string{"--source-map"},
					Description: `Output source maps`,
				}, {
					Name:        []string{"--watch"},
					Description: `Rebuild when files change`,
				}},
			}, {
				Name:        []string{"sync"},
				Description: `Sync (copy + update) an Ionic project`,
				Args: []model.Arg{{
					Name:        "platform",
					Description: `The platform to sync (e.g. android, ios)`,
					Suggestions: []model.Suggestion{{Name: []string{`ios`}}, {Name: []string{`android`}}},
					IsOptional:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"--no-build"},
					Description: `Do not invoke an Ionic build`,
				}, {
					Name:        []string{"--prod"},
					Description: `Flag to use the production configuration`,
				}, {
					Name:        []string{"--configuration", "-c"},
					Description: `Specify the configuration to use`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths, model.TemplateFolders},
						Name:      "conf",
					}},
				}, {
					Name:        []string{"--source-map"},
					Description: `Output source maps`,
				}, {
					Name:        []string{"--watch"},
					Description: `Rebuild when files change`,
				}},
			}, {
				Name:        []string{"update"},
				Description: `Update Capacitor native platforms, install Capacitor/Cordova plugins`,
				Args: []model.Arg{{
					Name:        "platform",
					Description: `The platform to update (e.g. android, ios)`,
					Suggestions: []model.Suggestion{{Name: []string{`ios`}}, {Name: []string{`android`}}},
					IsOptional:  true,
				}},
			}},
		}, {
			Name:        []string{"deploy"},
			Description: `AppFlow deploy commands for Ionic`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"add"},
				Description: `Adds Appflow Deploy to the project`,
				Options: []model.Option{{
					Name:        []string{"--app-id"},
					Description: `Your Appflow app ID`,
					Args: []model.Arg{{
						Name: "id",
					}},
				}, {
					Name:        []string{"--channel-name"},
					Description: `The channel to check for updates from`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--update-method"},
					Description: `The update method that dictates the behavior of the plugin`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--max-store"},
					Description: `The maximum number of downloaded versions to store on the device`,
					Args: []model.Arg{{
						Name: "quantity",
					}},
				}, {
					Name:        []string{"--min-background-duration"},
					Description: `The minimum duration after which the app checks for an update in the background`,
					Args: []model.Arg{{
						Name: "seconds",
					}},
				}},
			}, {
				Name:        []string{"build"},
				Description: `Create a deploy build on Appflow`,
				Options: []model.Option{{
					Name:        []string{"--environment"},
					Description: `The group of environment variables exposed to your build`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--channel"},
					Description: `The channel you want to auto deploy the build to. This can be repeated multiple times if multiple channels need to be specified`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--commit"},
					Description: `Commit (defaults to HEAD)`,
					Args: []model.Arg{{
						Name: "sha1",
					}},
				}, {
					Name:        []string{"--skip-download"},
					Description: `Skip downloading build artifacts after command succeeds`,
				}},
			}, {
				Name:        []string{"configure"},
				Description: `Overrides Appflow Deploy configuration`,
				Args: []model.Arg{{
					Name:        "platform",
					Description: `The native platform (e.g. ios, android)`,
					IsOptional:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"--app-id"},
					Description: `Your Appflow app ID`,
					Args: []model.Arg{{
						Name: "id",
					}},
				}, {
					Name:        []string{"--channel-name"},
					Description: `The channel to check for updates from`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--update-method"},
					Description: `The update method that dictates the behavior of the plugin`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--max-store"},
					Description: `The maximum number of downloaded versions to store on the device`,
					Args: []model.Arg{{
						Name: "quantity",
					}},
				}, {
					Name:        []string{"--min-background-duration"},
					Description: `The minimum duration after which the app checks for an update in the background`,
					Args: []model.Arg{{
						Name: "seconds",
					}},
				}},
			}, {
				Name:        []string{"manifest"},
				Description: `Generates a manifest file for the deploy service from a built app directory`,
			}},
		}, {
			Name:        []string{"git"},
			Description: `Git commands for Ionic`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"remote"},
				Description: `Adds/updates the Appflow git remote to your local Ionic app`,
			}},
		}, {
			Name:        []string{"package"},
			Description: `Package commands for Ionic`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"build"},
				Description: `Create a package build on Appflow`,
				Args: []model.Arg{{
					Name:        "platform",
					Description: `The platform to package (android, ios)`,
					Suggestions: []model.Suggestion{{Name: []string{`ios`}}, {Name: []string{`android`}}},
				}, {
					Name:        "type",
					Description: `The build type (debug, release, development, ad-hoc, app-store, enterprise)`,
					Suggestions: []model.Suggestion{{Name: []string{`debug`}}, {Name: []string{`release`}}, {Name: []string{`development`}}, {Name: []string{`ad-hoc`}}, {Name: []string{`app-stpre`}}, {Name: []string{`enterprise`}}},
				}},
				Options: []model.Option{{
					Name:        []string{"--signing-certificate"},
					Description: `Signing certificate`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--environment"},
					Description: `The group of environment variables exposed to your build`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--native-config"},
					Description: `The group of native config variables exposed to your build`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--destination"},
					Description: `The configuration to deploy the build artifact to the app store`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--commit"},
					Description: `Commit (defaults to HEAD)`,
					Args: []model.Arg{{
						Name: "sha1",
					}},
				}, {
					Name:        []string{"--build-stack"},
					Description: `Target platform ("Android", "iOS - Xcode 11 (Preferred)", "iOS - Xcode 10")`,
					Args: []model.Arg{{
						Name:        "name",
						Suggestions: []model.Suggestion{{Name: []string{`Android`}}, {Name: []string{`iOS - Xcode 11 (Preferred)`}}, {Name: []string{`iOS - Xcode 10`}}},
					}},
				}, {
					Name:        []string{"--build-file-name"},
					Description: `The name for the downloaded build file`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--ipa-name"},
					Description: `The name for the downloaded ipa file`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--dsym-name"},
					Description: `The name for the downloaded dsym file`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--apk-name"},
					Description: `The name for the downloaded apk file`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--aab-name"},
					Description: `The name for the downloaded aab file`,
					Args: []model.Arg{{
						Name: "name",
					}},
				}, {
					Name:        []string{"--artifact-type"},
					Description: `The artifact type (aab, apk, ipa, dsym)`,
					Args: []model.Arg{{
						Name:        "name",
						Suggestions: []model.Suggestion{{Name: []string{`aab`}}, {Name: []string{`apl`}}, {Name: []string{`ipa`}}, {Name: []string{`dysm`}}},
					}},
				}, {
					Name:        []string{"--skip-download"},
					Description: `Skip downloading build artifacts after command succeeds`,
				}},
			}, {
				Name:        []string{"deploy"},
				Description: `Deploys a binary to a destination, such as an app store using Appflow`,
				Args: []model.Arg{{
					Name:        "build-id",
					Description: `The build id of the desired successful package build`,
				}, {
					Name:        "destination",
					Description: `The destination to deploy the build artifact to the app store`,
				}},
			}},
		}, {
			Name:        []string{"ssl"},
			Description: `SSL commands for Ionic`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"generate"},
				Description: `Generates an SSL key & certificate`,
				Options: []model.Option{{
					Name:        []string{"--key-path"},
					Description: `Destination of private key file`,
					Args: []model.Arg{{
						Name: "path",
					}},
				}, {
					Name:        []string{"--cert-path"},
					Description: `Destination of certificate file`,
					Args: []model.Arg{{
						Name: "path",
					}},
				}, {
					Name:        []string{"--country-name"},
					Description: `The country name (C) of the SSL certificate`,
					Args: []model.Arg{{
						Name: "C",
					}},
				}, {
					Name:        []string{"--state-or-province-name"},
					Description: `The state or province name (ST) of the SSL certificate`,
					Args: []model.Arg{{
						Name: "ST",
					}},
				}, {
					Name:        []string{"--locality-name"},
					Description: `The locality name (L) of the SSL certificate`,
					Args: []model.Arg{{
						Name: "L",
					}},
				}, {
					Name:        []string{"--organization-name"},
					Description: `The organization name (O) of the SSL certificate`,
					Args: []model.Arg{{
						Name: "O",
					}},
				}, {
					Name:        []string{"--common-name"},
					Description: `The common name (CN) of the SSL certificate`,
					Args: []model.Arg{{
						Name: "CN",
					}},
				}, {
					Name:        []string{"--bits", "-b"},
					Description: `Number of bits in the key`,
					Args: []model.Arg{{
						Name: "bits",
					}},
				}},
			}},
		}, {
			Name:        []string{"ssh"},
			Description: `SSH commands for Ionic`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"add"},
				Description: `Add an SSH public key to Ionic`,
				Args: []model.Arg{{
					Name:        "pubkey-path",
					Description: `Location of public key file to add to Ionic`,
				}},
				Options: []model.Option{{
					Name:        []string{"--use"},
					Description: `Use the newly added key as your default SSH key for Ionic`,
				}},
			}, {
				Name:        []string{"delete"},
				Description: `Delete an SSH public key from Ionic`,
				Args: []model.Arg{{
					Name:        "key-id",
					Description: `The ID of the public key to delete`,
				}},
			}, {
				Name:        []string{"generate"},
				Description: `Generates a private and public SSH key pair`,
				Args: []model.Arg{{
					Name:        "key-path",
					Description: `Destination of private key file`,
					IsOptional:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"--type", "-t"},
					Description: `The type of key to generate: ecdsa, ed25519, rsa`,
					Args: []model.Arg{{
						Name:        "type",
						Suggestions: []model.Suggestion{{Name: []string{`ecdsa`}}, {Name: []string{`ed25519`}}, {Name: []string{`rsa`}}},
					}},
				}, {
					Name:        []string{"--bits", "-b"},
					Description: `Number of bits in the key`,
					Args: []model.Arg{{
						Name: "bits",
					}},
				}, {
					Name:        []string{"--annotation", "-C"},
					Description: `Annotation (comment) in public key. Your Ionic email address will be used`,
					Args: []model.Arg{{
						Name: "annotation",
					}},
				}},
			}, {
				Name:        []string{"list"},
				Description: `List your SSH public keys on Ionic`,
				Options: []model.Option{{
					Name:        []string{"--json"},
					Description: `Output SSH keys in JSON`,
				}},
			}, {
				Name:        []string{"setup"},
				Description: `Setup your Ionic SSH keys automatically`,
			}, {
				Name:        []string{"use"},
				Description: `Set your active Ionic SSH key`,
				Args: []model.Arg{{
					Name:        "key-path",
					Description: `Location of private key file to use`,
				}},
			}},
		}, {
			Name:        []string{"doctor"},
			Description: `Doctor commands for Ionic`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"check"},
				Description: `Check the health of your Ionic project`,
				Args: []model.Arg{{
					Name:        "id",
					Description: `The issue identifier`,
					IsOptional:  true,
				}},
			}, {
				Name:        []string{"list"},
				Description: `List all issues and their identifiers`,
			}, {
				Name:        []string{"treat"},
				Description: `Attempt to fix issues in your Ionic project`,
				Args: []model.Arg{{
					Name:        "id",
					Description: `The issue identifier`,
					IsOptional:  true,
				}},
			}},
		}, {
			Name:        []string{"integrations"},
			Description: `Integration commands for Ionic`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"disable"},
				Description: `Disable an integration`,
				Args: []model.Arg{{
					Name:        "name",
					Description: `The integration to disable (e.g. capacitor, cordova, enterprise)`,
					Suggestions: []model.Suggestion{{Name: []string{`capacitor`}}, {Name: []string{`cordova`}}, {Name: []string{`enterprise`}}},
				}},
			}, {
				Name:        []string{"enable"},
				Description: `Add & enable integrations to your app`,
				Args: []model.Arg{{
					Name:        "name",
					Description: `The integration to enable (e.g. capacitor, cordova, enterprise)`,
					Suggestions: []model.Suggestion{{Name: []string{`capacitor`}}, {Name: []string{`cordova`}}, {Name: []string{`enterprise`}}},
				}},
				Options: []model.Option{{
					Name:        []string{"--add"},
					Description: `Download and add the integration even if enabled`,
				}, {
					Name:        []string{"--root"},
					Description: `Specify an alternative destination to download into when adding`,
					Args: []model.Arg{{
						Name: "path",
					}},
				}, {
					Name:        []string{"--quiet"},
					Description: `Less verbose output, ignore integration errors`,
				}},
			}, {
				Name:        []string{"list"},
				Description: `List available and active integrations in your app`,
			}},
		}, {
			Name:        []string{"enterprise"},
			Description: `Enterprise commands for Ionic`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"register"},
				Description: `Register your Product Key with this app`,
				Options: []model.Option{{
					Name:        []string{"--app-id"},
					Description: `The Ionic App ID`,
					Args: []model.Arg{{
						Name: "id",
					}},
				}, {
					Name:        []string{"--key"},
					Description: `The Product Key`,
					Args: []model.Arg{{
						Name: "key",
					}},
				}},
			}},
		}, {
			Name:        []string{"cordova"},
			Description: `Cordova commands for Ionic`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"build"},
				Description: `Use Cordova to build for Android and iOS platform targets`,
				Args: []model.Arg{{
					Name:        "platform",
					Description: `The platform to build (e.g. android, ios)`,
					Suggestions: []model.Suggestion{{Name: []string{`ios`}}, {Name: []string{`android`}}},
				}},
				Options: []model.Option{{
					Name:        []string{"--no-build"},
					Description: `Do not invoke an Ionic build`,
				}, {
					Name:        []string{"--debug"},
					Description: `Mark as a debug build`,
				}, {
					Name:        []string{"--release"},
					Description: `Mark as a release build`,
				}, {
					Name:        []string{"--device"},
					Description: `Deploy build to a device`,
				}, {
					Name:        []string{"--emulator"},
					Description: `Deploy build to an emulator`,
				}, {
					Name:        []string{"--buildConfig"},
					Description: `Use the specified build configuration`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths, model.TemplateFolders},
						Name:      "file",
					}},
				}, {
					Name:        []string{"--prod"},
					Description: `Flag to use the production configuration`,
				}, {
					Name:        []string{"--configuration", "-c"},
					Description: `Specify the configuration to use`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths, model.TemplateFolders},
						Name:      "conf",
					}},
				}, {
					Name:        []string{"--source-map"},
					Description: `Output source maps`,
				}},
			}, {
				Name:        []string{"compile"},
				Description: `Compile native platform code`,
				Args: []model.Arg{{
					Name:        "platform",
					Description: `The platform to compile (android, ios)`,
					Suggestions: []model.Suggestion{{Name: []string{`ios`}}, {Name: []string{`android`}}},
				}},
				Options: []model.Option{{
					Name:        []string{"--debug"},
					Description: `Mark as a debug build`,
				}, {
					Name:        []string{"--release"},
					Description: `Mark as a release build`,
				}, {
					Name:        []string{"--device"},
					Description: `Deploy build to a device`,
				}, {
					Name:        []string{"--emulator"},
					Description: `Deploy build to an emulator`,
				}, {
					Name:        []string{"--buildConfig"},
					Description: `Use the specified build configuration`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths, model.TemplateFolders},
						Name:      "file",
					}},
				}},
			}, {
				Name:        []string{"emulate"},
				Description: `Emulate an Ionic project on a simulator/emulator`,
				Args: []model.Arg{{
					Name:        "platform",
					Description: `The platform to run (e.g. android, ios)`,
					Suggestions: []model.Suggestion{{Name: []string{`ios`}}, {Name: []string{`android`}}},
				}},
				Options: []model.Option{{
					Name:        []string{"--list"},
					Description: `List all available targets`,
				}, {
					Name:        []string{"--no-build"},
					Description: `Do not invoke Ionic build`,
				}, {
					Name:        []string{"--external"},
					Description: `Host dev server on all network interfaces (i.e. --host=0.0.0.0)`,
				}, {
					Name:        []string{"--host"},
					Description: `Use specific host for the dev server`,
					Args: []model.Arg{{
						Name: "host",
					}},
				}, {
					Name:        []string{"--port", "-p"},
					Description: `Use specific port for the dev server`,
					Args: []model.Arg{{
						Name: "port",
					}},
				}, {
					Name:        []string{"--public-host"},
					Description: `The host used for the browser or web view`,
					Args: []model.Arg{{
						Name: "host",
					}},
				}, {
					Name:        []string{"--livereload", "-l"},
					Description: `Spin up dev server to live-reload www files`,
				}, {
					Name:        []string{"--livereload-url"},
					Description: `Provide a custom URL to the dev server`,
					Args: []model.Arg{{
						Name: "url",
					}},
				}, {
					Name:        []string{"--debug"},
					Description: `Mark as a debug build`,
				}, {
					Name:        []string{"--release"},
					Description: `Mark as a release build`,
				}, {
					Name:        []string{"--device"},
					Description: `Deploy build to a device`,
				}, {
					Name:        []string{"--emulator"},
					Description: `Deploy build to an emulator`,
				}, {
					Name:        []string{"--buildConfig"},
					Description: `Use the specified build configuration`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths, model.TemplateFolders},
						Name:      "file",
					}},
				}, {
					Name:        []string{"--target"},
					Description: `Deploy build to a device (use --list to see all)`,
					Args: []model.Arg{{
						Name: "target",
					}},
				}, {
					Name:        []string{"--no-native-run"},
					Description: `Do not use native-run to run the app; use Cordova instead`,
				}, {
					Name:        []string{"--connect"},
					Description: `Tie the running app to the process`,
				}, {
					Name:        []string{"--json"},
					Description: `Output targets in JSON`,
				}, {
					Name:        []string{"--ssl"},
					Description: `Use HTTPS for the dev serve`,
				}, {
					Name:        []string{"--prod"},
					Description: `Flag to use the production configuration`,
				}, {
					Name:        []string{"--consolelogs"},
					Description: `Print app console logs to the terminal`,
				}, {
					Name:        []string{"--consolelogs-port"},
					Description: `Use specific port for console logs server`,
					Args: []model.Arg{{
						Name: "port",
					}},
				}, {
					Name:        []string{"--configuration", "-c"},
					Description: `Specify the configuration to use`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths, model.TemplateFolders},
						Name:      "conf",
					}},
				}, {
					Name:        []string{"--source-map"},
					Description: `Output source maps`,
				}, {
					Name:        []string{"--buildconfig"},
					Description: `Use the specified build configuration`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths, model.TemplateFolders},
						Name:      "file",
					}},
				}},
			}, {
				Name:        []string{"platform"},
				Description: `Manage Cordova platform targets`,
				Args: []model.Arg{{
					Name:        "action",
					Description: `Add, remove, or update a platform; ls, check, or save all project platforms`,
					Suggestions: []model.Suggestion{{Name: []string{`add`}}, {Name: []string{`remove`}}, {Name: []string{`update`}}, {Name: []string{`ls`}}, {Name: []string{`check`}}, {Name: []string{`save`}}},
					IsOptional:  true,
				}, {
					Name:        "platform",
					Description: `The platform that you would like to add (android, ios)`,
					Suggestions: []model.Suggestion{{Name: []string{`ios`}}, {Name: []string{`android`}}},
					IsOptional:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"--no-resources"},
					Description: `Do not pregenerate icons and splash screen resources (corresponds to add)`,
				}},
			}, {
				Name:        []string{"plugin"},
				Description: `Manage Cordova plugins`,
				Args: []model.Arg{{
					Name:        "action",
					Description: `Add or remove a plugin; ls or save all project plugins`,
					Suggestions: []model.Suggestion{{Name: []string{`add`}}, {Name: []string{`remove`}}, {Name: []string{`ls`}}, {Name: []string{`save`}}},
					IsOptional:  true,
				}, {
					Name:        "plugin",
					Description: `The name of the plugin (corresponds to add and remove)`,
					IsOptional:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"--force"},
					Description: `Force overwrite the plugin if it exists (corresponds to add)`,
				}, {
					Name:        []string{"--variable"},
					Description: `Specify plugin variables`,
					Args: []model.Arg{{
						Name: "KEY=VALUE",
					}},
				}},
			}, {
				Name:        []string{"prepare"},
				Description: `Copies assets to Cordova platforms, preparing them for native builds`,
				Args: []model.Arg{{
					Name:        "platform",
					Description: `The platform you would like to prepare (e.g. android, ios)`,
					Suggestions: []model.Suggestion{{Name: []string{`ios`}}, {Name: []string{`android`}}},
					IsOptional:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"--no-build"},
					Description: `Do not invoke an Ionic build`,
				}, {
					Name:        []string{"--prod"},
					Description: `Flag to use the production configuration`,
				}, {
					Name:        []string{"--configuration", "-c"},
					Description: `Specify the configuration to use`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths, model.TemplateFolders},
						Name:      "conf",
					}},
				}, {
					Name:        []string{"--source-map"},
					Description: `Output source maps`,
				}, {
					Name:        []string{"--watch"},
					Description: `Rebuild when files change`,
				}},
			}, {
				Name:        []string{"requirements"},
				Description: `Checks and print out all the requirements for platforms`,
				Args: []model.Arg{{
					Name:        "platform",
					Description: `The platform for which you would like to gather requirements (android, ios)`,
					Suggestions: []model.Suggestion{{Name: []string{`ios`}}, {Name: []string{`android`}}},
					IsOptional:  true,
				}},
			}, {
				Name:        []string{"resources"},
				Description: `Automatically create icon and splash screen resources`,
				Args: []model.Arg{{
					Name:        "platform",
					Description: `The platform for which you would like to generate resources (ios, android)`,
					Suggestions: []model.Suggestion{{Name: []string{`ios`}}, {Name: []string{`android`}}},
					IsOptional:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"--icon", "-i"},
					Description: `Generate icon resources`,
				}, {
					Name:        []string{"--splash", "-s"},
					Description: `Generate splash screen resources`,
				}},
			}, {
				Name:        []string{"run"},
				Description: `Run an Ionic project on a connected device`,
				Args: []model.Arg{{
					Name:        "platform",
					Description: `The platform to run (e.g. android, ios)`,
					Suggestions: []model.Suggestion{{Name: []string{`ios`}}, {Name: []string{`android`}}},
				}},
				Options: []model.Option{{
					Name:        []string{"--list"},
					Description: `List all available targets`,
				}, {
					Name:        []string{"--no-build"},
					Description: `Do not invoke Ionic build`,
				}, {
					Name:        []string{"--external"},
					Description: `Host dev server on all network interfaces (i.e. --host=0.0.0.0)`,
				}, {
					Name:        []string{"--host"},
					Description: `Use specific host for the dev server`,
					Args: []model.Arg{{
						Name: "host",
					}},
				}, {
					Name:        []string{"--port", "-p"},
					Description: `Use specific port for the dev server`,
					Args: []model.Arg{{
						Name: "port",
					}},
				}, {
					Name:        []string{"--public-host"},
					Description: `The host used for the browser or web view`,
					Args: []model.Arg{{
						Name: "host",
					}},
				}, {
					Name:        []string{"--livereload", "-l"},
					Description: `Spin up dev server to live-reload www files`,
				}, {
					Name:        []string{"--livereload-url"},
					Description: `Provide a custom URL to the dev server`,
					Args: []model.Arg{{
						Name: "url",
					}},
				}, {
					Name:        []string{"--debug"},
					Description: `Mark as a debug build`,
				}, {
					Name:        []string{"--release"},
					Description: `Mark as a release build`,
				}, {
					Name:        []string{"--device"},
					Description: `Deploy build to a device`,
				}, {
					Name:        []string{"--emulator"},
					Description: `Deploy build to an emulator`,
				}, {
					Name:        []string{"--buildConfig"},
					Description: `Use the specified build configuration`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths, model.TemplateFolders},
						Name:      "file",
					}},
				}, {
					Name:        []string{"--target"},
					Description: `Deploy build to a device (use --list to see all)`,
					Args: []model.Arg{{
						Name: "target",
					}},
				}, {
					Name:        []string{"--no-native-run"},
					Description: `Do not use native-run to run the app; use Cordova instead`,
				}, {
					Name:        []string{"--connect"},
					Description: `Tie the running app to the process`,
				}, {
					Name:        []string{"--json"},
					Description: `Output targets in JSON`,
				}, {
					Name:        []string{"--ssl"},
					Description: `Use HTTPS for the dev server`,
				}, {
					Name:        []string{"--prod"},
					Description: `Flag to use the production configuration`,
				}, {
					Name:        []string{"--consolelogs"},
					Description: `Print app console logs to the terminal`,
				}, {
					Name:        []string{"--consolelogs-port"},
					Description: `Use specific port for console logs server`,
					Args: []model.Arg{{
						Name: "port",
					}},
				}, {
					Name:        []string{"--configuration", "-c"},
					Description: `Specify the configuration to use`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths, model.TemplateFolders},
						Name:      "conf",
					}},
				}},
			}},
		}},
	}
}
