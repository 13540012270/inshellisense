// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.
//
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

package specs

import (
	"github.com/microsoft/clac/autocomplete/model"
)

func init() {
	Specs["yarn"] = model.Subcommand{
		Name:        []string{"yarn"},
		Description: `Manage packages and run scripts`,
		Args: []model.Arg{{
			FilterStrategy: model.FilterStrategyFuzzy,
			Generator:      nil, // TODO: port over generator
			IsOptional:     true,
			IsCommand:      true,
		}},
		Options: []model.Option{{
			Name:        []string{"--disable-pnp"},
			Description: `Disable the Plug'n'Play installation`,
		}, {
			Name:        []string{"--emoji"},
			Description: `Enable emoji in output (default: true)`,
			Args: []model.Arg{{
				Name: "bool",
				Suggestions: []model.Suggestion{{
					Name: []string{`true`},
				}, {
					Name: []string{`false`},
				}},
			}},
		}, {
			Name:        []string{"--enable-pnp", "--pnp"},
			Description: `Enable the Plug'n'Play installation`,
		}, {
			Name:        []string{"--flat"},
			Description: `Only allow one version of a package`,
		}, {
			Name:        []string{"--focus"},
			Description: `Focus on a single workspace by installing remote copies of its sibling workspaces`,
		}, {
			Name:        []string{"--force"},
			Description: `Install and build packages even if they were built before, overwrite lockfile`,
		}, {
			Name:        []string{"--frozen-lockfile"},
			Description: `Don't generate a lockfile and fail if an update is needed`,
		}, {
			Name:        []string{"--global-folder"},
			Description: `Specify a custom folder to store global packages`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFolders},
			}},
		}, {
			Name:        []string{"--har"},
			Description: `Save HAR output of network traffic`,
		}, {
			Name:        []string{"--https-proxy"},
			Description: ``,
			Args: []model.Arg{{
				Name: "path",
				Suggestions: []model.Suggestion{{
					Name: []string{`https://`},
				}},
			}},
		}, {
			Name:        []string{"--ignore-engines"},
			Description: `Ignore engines check`,
		}, {
			Name:        []string{"--ignore-optional"},
			Description: `Ignore optional dependencies`,
		}, {
			Name:        []string{"--ignore-platform"},
			Description: `Ignore platform checks`,
		}, {
			Name:        []string{"--ignore-scripts"},
			Description: `Don't run lifecycle scripts`,
		}, {
			Name:        []string{"--json"},
			Description: `Format Yarn log messages as lines of JSON (see jsonlines.org)`,
		}, {
			Name:        []string{"--link-duplicates"},
			Description: `Create hardlinks to the repeated modules in node_modules`,
		}, {
			Name:        []string{"--link-folder"},
			Description: `Specify a custom folder to store global links`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFolders},
			}},
		}, {
			Name:        []string{"--modules-folder"},
			Description: `Rather than installing modules into the node_modules folder relative to the cwd, output them here`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFolders},
			}},
		}, {
			Name:        []string{"--mutex"},
			Description: `Use a mutex to ensure only one yarn instance is executing`,
			Args: []model.Arg{{
				Name: "type",
				Suggestions: []model.Suggestion{{
					Name: []string{`:`},
				}},
			}, {
				Name: "specifier",
				Suggestions: []model.Suggestion{{
					Name: []string{`:`},
				}},
			}},
		}, {
			Name:        []string{"--network-concurrency"},
			Description: `Maximum number of concurrent network requests`,
			Args: []model.Arg{{
				Name: "number",
			}},
		}, {
			Name:        []string{"--network-timeout"},
			Description: `TCP timeout for network requests`,
			Args: []model.Arg{{
				Name: "milliseconds",
			}},
		}, {
			Name:        []string{"--no-bin-links"},
			Description: `Don't generate bin links when setting up packages`,
		}, {
			Name:        []string{"--no-default-rc"},
			Description: `Prevent Yarn from automatically detecting yarnrc and npmrc files`,
		}, {
			Name:        []string{"--no-lockfile"},
			Description: `Don't read or generate a lockfile`,
		}, {
			Name:        []string{"--non-interactive"},
			Description: `Do not show interactive prompts`,
		}, {
			Name:        []string{"--no-node-version-check"},
			Description: `Do not warn when using a potentially unsupported Node version`,
		}, {
			Name:        []string{"--no-progress"},
			Description: `Disable progress bar`,
		}, {
			Name:        []string{"--offline"},
			Description: `Trigger an error if any required dependencies are not available in local cache`,
		}, {
			Name:        []string{"--otp"},
			Description: `One-time password for two factor authentication`,
			Args: []model.Arg{{
				Name: "otpcode",
			}},
		}, {
			Name:        []string{"--prefer-offline"},
			Description: `Use network only if dependencies are not available in local cache`,
		}, {
			Name:        []string{"--preferred-cache-folder"},
			Description: `Specify a custom folder to store the yarn cache if possible`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFolders},
			}},
		}, {
			Name:        []string{"--prod", "--production"},
			Description: ``,
			Args:        []model.Arg{{}},
		}, {
			Name:        []string{"--proxy"},
			Description: ``,
			Args: []model.Arg{{
				Name: "host",
			}},
		}, {
			Name:        []string{"--pure-lockfile"},
			Description: `Don't generate a lockfile`,
		}, {
			Name:        []string{"--registry"},
			Description: `Override configuration registry`,
			Args: []model.Arg{{
				Name: "url",
			}},
		}, {
			Name:        []string{"-s", "--silent"},
			Description: `Skip Yarn console logs, other types of logs (script output) will be printed`,
		}, {
			Name:        []string{"--scripts-prepend-node-path"},
			Description: `Prepend the node executable dir to the PATH in scripts`,
			Args: []model.Arg{{
				Suggestions: []model.Suggestion{{
					Name: []string{`true`},
				}, {
					Name: []string{`false`},
				}},
			}},
		}, {
			Name:        []string{"--skip-integrity-check"},
			Description: `Run install without checking if node_modules is installed`,
		}, {
			Name:        []string{"--strict-semver"},
			Description: ``,
		}, {
			Name:        []string{"-s", "--silent"},
			Description: `Skip Yarn console logs`,
		}, {
			Name:        []string{"--no-default-rc"},
			Description: `Prevent Yarn from automatically detecting yarnrc and npmrc files`,
		}, {
			Name:        []string{"--use-yarnrc"},
			Description: `Specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "path",
			}},
		}, {
			Name:        []string{"--verbose"},
			Description: `Output verbose messages on internal operations`,
		}, {
			Name:        []string{"--offline"},
			Description: `Trigger an error if any required dependencies are not available in local cache`,
		}, {
			Name:        []string{"--prefer-offline"},
			Description: `Use network only if dependencies are not available in local cache`,
		}, {
			Name:        []string{"--enable-pnp", "--pnp"},
			Description: `Enable the Plug'n'Play installation`,
		}, {
			Name:        []string{"--json"},
			Description: `Format Yarn log messages as lines of JSON`,
		}, {
			Name:        []string{"--ignore-scripts"},
			Description: `Don't run lifecycle scripts`,
		}, {
			Name:        []string{"--har"},
			Description: `Save HAR output of network traffic`,
		}, {
			Name:        []string{"--ignore-platform"},
			Description: `Ignore platform checks`,
		}, {
			Name:        []string{"--ignore-engines"},
			Description: `Ignore engines check`,
		}, {
			Name:        []string{"--ignore-optional"},
			Description: `Ignore optional dependencies`,
		}, {
			Name:        []string{"--force"},
			Description: `Install and build packages even if they were built before, overwrite lockfile`,
		}, {
			Name:        []string{"--skip-integrity-check"},
			Description: `Run install without checking if node_modules is installed`,
		}, {
			Name:        []string{"--check-files"},
			Description: `Install will verify file tree of packages for consistency`,
		}, {
			Name:        []string{"--no-bin-links"},
			Description: `Don't generate bin links when setting up packages`,
		}, {
			Name:        []string{"--flat"},
			Description: `Only allow one version of a package`,
		}, {
			Name:        []string{"--prod", "--production"},
			Description: `Instruct Yarn to ignore NODE_ENV and take its production-or-not status from this flag instead`,
		}, {
			Name:        []string{"--no-lockfile"},
			Description: `Don't read or generate a lockfile`,
		}, {
			Name:        []string{"--pure-lockfile"},
			Description: `Don't generate a lockfile`,
		}, {
			Name:        []string{"--frozen-lockfile"},
			Description: `Don't generate a lockfile and fail if an update is needed`,
		}, {
			Name:        []string{"--update-checksums"},
			Description: `Update package checksums from current repository`,
		}, {
			Name:        []string{"--link-duplicates"},
			Description: `Create hardlinks to the repeated modules in node_modules`,
		}, {
			Name:        []string{"--link-folder"},
			Description: `Specify a custom folder to store global links`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFolders},
				Name:      "path",
			}},
		}, {
			Name:        []string{"--global-folder"},
			Description: `Specify a custom folder to store global packages`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFolders},
				Name:      "path",
			}},
		}, {
			Name:        []string{"--modules-folder"},
			Description: `Rather than installing modules into the node_modules folder relative to the cwd, output them here`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFolders},
				Name:      "path",
			}},
		}, {
			Name:        []string{"--preferred-cache-folder"},
			Description: `Specify a custom folder to store the yarn cache if possible`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFolders},
				Name:      "path",
			}},
		}, {
			Name:        []string{"--cache-folder"},
			Description: `Specify a custom folder that must be used to store the yarn cache`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFolders},
				Name:      "path",
			}},
		}, {
			Name:        []string{"--mutex"},
			Description: `Use a mutex to ensure only one yarn instance is executing`,
			Args: []model.Arg{{
				Name: "type[:specifier]",
			}},
		}, {
			Name:        []string{"--emoji"},
			Description: `Enables emoji in output`,
			Args: []model.Arg{{
				Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
			}},
		}, {
			Name:        []string{"--cwd"},
			Description: `Working directory to use`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFolders},
				Name:      "cwd",
			}},
		}, {
			Name:        []string{"--proxy", "--https-proxy"},
			Description: ``,
			Args: []model.Arg{{
				Name: "host",
			}},
		}, {
			Name:        []string{"--registry"},
			Description: `Override configuration registry`,
			Args: []model.Arg{{
				Name: "url",
			}},
		}, {
			Name:        []string{"--no-progress"},
			Description: `Disable progress bar`,
		}, {
			Name:        []string{"--network-concurrency"},
			Description: `Maximum number of concurrent network requests`,
			Args: []model.Arg{{
				Name: "number",
			}},
		}, {
			Name:        []string{"--network-timeout"},
			Description: `TCP timeout for network requests`,
			Args: []model.Arg{{
				Name: "milliseconds",
			}},
		}, {
			Name:        []string{"--non-interactive"},
			Description: `Do not show interactive prompts`,
		}, {
			Name:        []string{"--scripts-prepend-node-path"},
			Description: `Prepend the node executable dir to the PATH in scripts`,
		}, {
			Name:        []string{"--no-node-version-check"},
			Description: `Do not warn when using a potentially unsupported Node version`,
		}, {
			Name:        []string{"--focus"},
			Description: `Focus on a single workspace by installing remote copies of its sibling workspaces`,
		}, {
			Name:        []string{"--otp"},
			Description: `One-time password for two factor authentication`,
			Args: []model.Arg{{
				Name: "otpcode",
			}},
		}, {
			Name:        []string{"-v", "--version"},
			Description: `Output the version number`,
		}, {
			Name:        []string{"-h", "--help"},
			Description: `Output usage information`,
		}},
		Subcommands: []model.Subcommand{{
			Name:        []string{"add"},
			Description: `Installs a package and any packages that it depends on`,
			Args: []model.Arg{{
				Name:       "package",
				Generator:  nil, // TODO: port over generator
				IsVariadic: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-s", "--silent"},
				Description: `Skip Yarn console logs`,
			}, {
				Name:        []string{"--no-default-rc"},
				Description: `Prevent Yarn from automatically detecting yarnrc and npmrc files`,
			}, {
				Name:        []string{"--use-yarnrc"},
				Description: `Specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--verbose"},
				Description: `Output verbose messages on internal operations`,
			}, {
				Name:        []string{"--offline"},
				Description: `Trigger an error if any required dependencies are not available in local cache`,
			}, {
				Name:        []string{"--prefer-offline"},
				Description: `Use network only if dependencies are not available in local cache`,
			}, {
				Name:        []string{"--enable-pnp", "--pnp"},
				Description: `Enable the Plug'n'Play installation`,
			}, {
				Name:        []string{"--json"},
				Description: `Format Yarn log messages as lines of JSON`,
			}, {
				Name:        []string{"--ignore-scripts"},
				Description: `Don't run lifecycle scripts`,
			}, {
				Name:        []string{"--har"},
				Description: `Save HAR output of network traffic`,
			}, {
				Name:        []string{"--ignore-platform"},
				Description: `Ignore platform checks`,
			}, {
				Name:        []string{"--ignore-engines"},
				Description: `Ignore engines check`,
			}, {
				Name:        []string{"--ignore-optional"},
				Description: `Ignore optional dependencies`,
			}, {
				Name:        []string{"--force"},
				Description: `Install and build packages even if they were built before, overwrite lockfile`,
			}, {
				Name:        []string{"--skip-integrity-check"},
				Description: `Run install without checking if node_modules is installed`,
			}, {
				Name:        []string{"--check-files"},
				Description: `Install will verify file tree of packages for consistency`,
			}, {
				Name:        []string{"--no-bin-links"},
				Description: `Don't generate bin links when setting up packages`,
			}, {
				Name:        []string{"--flat"},
				Description: `Only allow one version of a package`,
			}, {
				Name:        []string{"--prod", "--production"},
				Description: `Instruct Yarn to ignore NODE_ENV and take its production-or-not status from this flag instead`,
			}, {
				Name:        []string{"--no-lockfile"},
				Description: `Don't read or generate a lockfile`,
			}, {
				Name:        []string{"--pure-lockfile"},
				Description: `Don't generate a lockfile`,
			}, {
				Name:        []string{"--frozen-lockfile"},
				Description: `Don't generate a lockfile and fail if an update is needed`,
			}, {
				Name:        []string{"--update-checksums"},
				Description: `Update package checksums from current repository`,
			}, {
				Name:        []string{"--link-duplicates"},
				Description: `Create hardlinks to the repeated modules in node_modules`,
			}, {
				Name:        []string{"--link-folder"},
				Description: `Specify a custom folder to store global links`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--global-folder"},
				Description: `Specify a custom folder to store global packages`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--modules-folder"},
				Description: `Rather than installing modules into the node_modules folder relative to the cwd, output them here`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--preferred-cache-folder"},
				Description: `Specify a custom folder to store the yarn cache if possible`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--cache-folder"},
				Description: `Specify a custom folder that must be used to store the yarn cache`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--mutex"},
				Description: `Use a mutex to ensure only one yarn instance is executing`,
				Args: []model.Arg{{
					Name: "type[:specifier]",
				}},
			}, {
				Name:        []string{"--emoji"},
				Description: `Enables emoji in output`,
				Args: []model.Arg{{
					Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
				}},
			}, {
				Name:        []string{"--cwd"},
				Description: `Working directory to use`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "cwd",
				}},
			}, {
				Name:        []string{"--proxy", "--https-proxy"},
				Description: ``,
				Args: []model.Arg{{
					Name: "host",
				}},
			}, {
				Name:        []string{"--registry"},
				Description: `Override configuration registry`,
				Args: []model.Arg{{
					Name: "url",
				}},
			}, {
				Name:        []string{"--no-progress"},
				Description: `Disable progress bar`,
			}, {
				Name:        []string{"--network-concurrency"},
				Description: `Maximum number of concurrent network requests`,
				Args: []model.Arg{{
					Name: "number",
				}},
			}, {
				Name:        []string{"--network-timeout"},
				Description: `TCP timeout for network requests`,
				Args: []model.Arg{{
					Name: "milliseconds",
				}},
			}, {
				Name:        []string{"--non-interactive"},
				Description: `Do not show interactive prompts`,
			}, {
				Name:        []string{"--scripts-prepend-node-path"},
				Description: `Prepend the node executable dir to the PATH in scripts`,
			}, {
				Name:        []string{"--no-node-version-check"},
				Description: `Do not warn when using a potentially unsupported Node version`,
			}, {
				Name:        []string{"--focus"},
				Description: `Focus on a single workspace by installing remote copies of its sibling workspaces`,
			}, {
				Name:        []string{"--otp"},
				Description: `One-time password for two factor authentication`,
				Args: []model.Arg{{
					Name: "otpcode",
				}},
			}, {
				Name:        []string{"-W", "--ignore-workspace-root-check"},
				Description: `Required to run yarn add inside a workspace root`,
			}, {
				Name:        []string{"-D", "--dev"},
				Description: `Save package to your "devDependencies"`,
			}, {
				Name:        []string{"-P", "--peer"},
				Description: `Save package to your "peerDependencies"`,
			}, {
				Name:        []string{"-O", "--optional"},
				Description: `Save package to your "optionalDependencies"`,
			}, {
				Name:        []string{"-E", "--exact"},
				Description: `Install exact version`,
			}, {
				Name:        []string{"-T", "--tilde"},
				Description: `Install most recent release with the same minor version`,
			}, {
				Name:        []string{"-A", "--audit"},
				Description: `Run vulnerability audit on installed packages`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"audit"},
			Description: `Perform a vulnerability audit against the installed packages`,
			Options: []model.Option{{
				Name:        []string{"--summary"},
				Description: `Only print the summary`,
			}, {
				Name:        []string{"--groups"},
				Description: `Only audit dependencies from listed groups. Default: devDependencies, dependencies, optionalDependencies`,
				Args: []model.Arg{{
					Name:       "group_name",
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"--level"},
				Description: `Only print advisories with severity greater than or equal to one of the following: info|low|moderate|high|critical. Default: info`,
				Args: []model.Arg{{
					Name: "severity",
					Suggestions: []model.Suggestion{{
						Name: []string{`info`},
					}, {
						Name: []string{`low`},
					}, {
						Name: []string{`moderate`},
					}, {
						Name: []string{`high`},
					}, {
						Name: []string{`critical`},
					}},
				}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"autoclean"},
			Description: `Cleans and removes unnecessary files from package dependencies`,
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}, {
				Name:        []string{"-i", "--init"},
				Description: `Creates the .yarnclean file if it does not exist, and adds the default entries`,
			}, {
				Name:        []string{"-f", "--force"},
				Description: `If a .yarnclean file exists, run the clean process`,
			}},
		}, {
			Name:        []string{"bin"},
			Description: `Displays the location of the yarn bin folder`,
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"cache"},
			Description: `Yarn cache list will print out every cached package`,
			Options: []model.Option{{
				Name:        []string{"-s", "--silent"},
				Description: `Skip Yarn console logs`,
			}, {
				Name:        []string{"--no-default-rc"},
				Description: `Prevent Yarn from automatically detecting yarnrc and npmrc files`,
			}, {
				Name:        []string{"--use-yarnrc"},
				Description: `Specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--verbose"},
				Description: `Output verbose messages on internal operations`,
			}, {
				Name:        []string{"--offline"},
				Description: `Trigger an error if any required dependencies are not available in local cache`,
			}, {
				Name:        []string{"--prefer-offline"},
				Description: `Use network only if dependencies are not available in local cache`,
			}, {
				Name:        []string{"--enable-pnp", "--pnp"},
				Description: `Enable the Plug'n'Play installation`,
			}, {
				Name:        []string{"--json"},
				Description: `Format Yarn log messages as lines of JSON`,
			}, {
				Name:        []string{"--ignore-scripts"},
				Description: `Don't run lifecycle scripts`,
			}, {
				Name:        []string{"--har"},
				Description: `Save HAR output of network traffic`,
			}, {
				Name:        []string{"--ignore-platform"},
				Description: `Ignore platform checks`,
			}, {
				Name:        []string{"--ignore-engines"},
				Description: `Ignore engines check`,
			}, {
				Name:        []string{"--ignore-optional"},
				Description: `Ignore optional dependencies`,
			}, {
				Name:        []string{"--force"},
				Description: `Install and build packages even if they were built before, overwrite lockfile`,
			}, {
				Name:        []string{"--skip-integrity-check"},
				Description: `Run install without checking if node_modules is installed`,
			}, {
				Name:        []string{"--check-files"},
				Description: `Install will verify file tree of packages for consistency`,
			}, {
				Name:        []string{"--no-bin-links"},
				Description: `Don't generate bin links when setting up packages`,
			}, {
				Name:        []string{"--flat"},
				Description: `Only allow one version of a package`,
			}, {
				Name:        []string{"--prod", "--production"},
				Description: `Instruct Yarn to ignore NODE_ENV and take its production-or-not status from this flag instead`,
			}, {
				Name:        []string{"--no-lockfile"},
				Description: `Don't read or generate a lockfile`,
			}, {
				Name:        []string{"--pure-lockfile"},
				Description: `Don't generate a lockfile`,
			}, {
				Name:        []string{"--frozen-lockfile"},
				Description: `Don't generate a lockfile and fail if an update is needed`,
			}, {
				Name:        []string{"--update-checksums"},
				Description: `Update package checksums from current repository`,
			}, {
				Name:        []string{"--link-duplicates"},
				Description: `Create hardlinks to the repeated modules in node_modules`,
			}, {
				Name:        []string{"--link-folder"},
				Description: `Specify a custom folder to store global links`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--global-folder"},
				Description: `Specify a custom folder to store global packages`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--modules-folder"},
				Description: `Rather than installing modules into the node_modules folder relative to the cwd, output them here`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--preferred-cache-folder"},
				Description: `Specify a custom folder to store the yarn cache if possible`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--cache-folder"},
				Description: `Specify a custom folder that must be used to store the yarn cache`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--mutex"},
				Description: `Use a mutex to ensure only one yarn instance is executing`,
				Args: []model.Arg{{
					Name: "type[:specifier]",
				}},
			}, {
				Name:        []string{"--emoji"},
				Description: `Enables emoji in output`,
				Args: []model.Arg{{
					Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
				}},
			}, {
				Name:        []string{"--cwd"},
				Description: `Working directory to use`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "cwd",
				}},
			}, {
				Name:        []string{"--proxy", "--https-proxy"},
				Description: ``,
				Args: []model.Arg{{
					Name: "host",
				}},
			}, {
				Name:        []string{"--registry"},
				Description: `Override configuration registry`,
				Args: []model.Arg{{
					Name: "url",
				}},
			}, {
				Name:        []string{"--no-progress"},
				Description: `Disable progress bar`,
			}, {
				Name:        []string{"--network-concurrency"},
				Description: `Maximum number of concurrent network requests`,
				Args: []model.Arg{{
					Name: "number",
				}},
			}, {
				Name:        []string{"--network-timeout"},
				Description: `TCP timeout for network requests`,
				Args: []model.Arg{{
					Name: "milliseconds",
				}},
			}, {
				Name:        []string{"--non-interactive"},
				Description: `Do not show interactive prompts`,
			}, {
				Name:        []string{"--scripts-prepend-node-path"},
				Description: `Prepend the node executable dir to the PATH in scripts`,
			}, {
				Name:        []string{"--no-node-version-check"},
				Description: `Do not warn when using a potentially unsupported Node version`,
			}, {
				Name:        []string{"--focus"},
				Description: `Focus on a single workspace by installing remote copies of its sibling workspaces`,
			}, {
				Name:        []string{"--otp"},
				Description: `One-time password for two factor authentication`,
				Args: []model.Arg{{
					Name: "otpcode",
				}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"clean"},
				Description: `Clear global cache`,
			}, {
				Name:        []string{"dir"},
				Description: `Print yarn’s global cache path`,
			}, {
				Name:        []string{"list"},
				Description: `Print out every cached package`,
				Options: []model.Option{{
					Name:        []string{"--pattern"},
					Description: `Filter cached packages by pattern`,
					Args: []model.Arg{{
						Name: "pattern",
					}},
				}},
			}},
		}, {
			Name:        []string{"config"},
			Description: `Configure yarn`,
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"set"},
				Description: `Sets the config key to a certain value`,
				Options: []model.Option{{
					Name:        []string{"-g", "--global"},
					Description: `Set global config`,
				}},
			}, {
				Name:        []string{"get"},
				Description: `Print the value for a given key`,
				Args: []model.Arg{{
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"delete"},
				Description: `Deletes a given key from the config`,
				Args: []model.Arg{{
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"list"},
				Description: `Displays the current configuration`,
			}},
		}, {
			Name:        []string{"create"},
			Description: `Creates new projects from any create-* starter kits`,
			Args: []model.Arg{{
				Name:      "cli",
				Generator: nil, // TODO: port over generator
				IsCommand: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-s", "--silent"},
				Description: `Skip Yarn console logs`,
			}, {
				Name:        []string{"--no-default-rc"},
				Description: `Prevent Yarn from automatically detecting yarnrc and npmrc files`,
			}, {
				Name:        []string{"--use-yarnrc"},
				Description: `Specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--verbose"},
				Description: `Output verbose messages on internal operations`,
			}, {
				Name:        []string{"--offline"},
				Description: `Trigger an error if any required dependencies are not available in local cache`,
			}, {
				Name:        []string{"--prefer-offline"},
				Description: `Use network only if dependencies are not available in local cache`,
			}, {
				Name:        []string{"--enable-pnp", "--pnp"},
				Description: `Enable the Plug'n'Play installation`,
			}, {
				Name:        []string{"--json"},
				Description: `Format Yarn log messages as lines of JSON`,
			}, {
				Name:        []string{"--ignore-scripts"},
				Description: `Don't run lifecycle scripts`,
			}, {
				Name:        []string{"--har"},
				Description: `Save HAR output of network traffic`,
			}, {
				Name:        []string{"--ignore-platform"},
				Description: `Ignore platform checks`,
			}, {
				Name:        []string{"--ignore-engines"},
				Description: `Ignore engines check`,
			}, {
				Name:        []string{"--ignore-optional"},
				Description: `Ignore optional dependencies`,
			}, {
				Name:        []string{"--force"},
				Description: `Install and build packages even if they were built before, overwrite lockfile`,
			}, {
				Name:        []string{"--skip-integrity-check"},
				Description: `Run install without checking if node_modules is installed`,
			}, {
				Name:        []string{"--check-files"},
				Description: `Install will verify file tree of packages for consistency`,
			}, {
				Name:        []string{"--no-bin-links"},
				Description: `Don't generate bin links when setting up packages`,
			}, {
				Name:        []string{"--flat"},
				Description: `Only allow one version of a package`,
			}, {
				Name:        []string{"--prod", "--production"},
				Description: `Instruct Yarn to ignore NODE_ENV and take its production-or-not status from this flag instead`,
			}, {
				Name:        []string{"--no-lockfile"},
				Description: `Don't read or generate a lockfile`,
			}, {
				Name:        []string{"--pure-lockfile"},
				Description: `Don't generate a lockfile`,
			}, {
				Name:        []string{"--frozen-lockfile"},
				Description: `Don't generate a lockfile and fail if an update is needed`,
			}, {
				Name:        []string{"--update-checksums"},
				Description: `Update package checksums from current repository`,
			}, {
				Name:        []string{"--link-duplicates"},
				Description: `Create hardlinks to the repeated modules in node_modules`,
			}, {
				Name:        []string{"--link-folder"},
				Description: `Specify a custom folder to store global links`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--global-folder"},
				Description: `Specify a custom folder to store global packages`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--modules-folder"},
				Description: `Rather than installing modules into the node_modules folder relative to the cwd, output them here`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--preferred-cache-folder"},
				Description: `Specify a custom folder to store the yarn cache if possible`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--cache-folder"},
				Description: `Specify a custom folder that must be used to store the yarn cache`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--mutex"},
				Description: `Use a mutex to ensure only one yarn instance is executing`,
				Args: []model.Arg{{
					Name: "type[:specifier]",
				}},
			}, {
				Name:        []string{"--emoji"},
				Description: `Enables emoji in output`,
				Args: []model.Arg{{
					Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
				}},
			}, {
				Name:        []string{"--cwd"},
				Description: `Working directory to use`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "cwd",
				}},
			}, {
				Name:        []string{"--proxy", "--https-proxy"},
				Description: ``,
				Args: []model.Arg{{
					Name: "host",
				}},
			}, {
				Name:        []string{"--registry"},
				Description: `Override configuration registry`,
				Args: []model.Arg{{
					Name: "url",
				}},
			}, {
				Name:        []string{"--no-progress"},
				Description: `Disable progress bar`,
			}, {
				Name:        []string{"--network-concurrency"},
				Description: `Maximum number of concurrent network requests`,
				Args: []model.Arg{{
					Name: "number",
				}},
			}, {
				Name:        []string{"--network-timeout"},
				Description: `TCP timeout for network requests`,
				Args: []model.Arg{{
					Name: "milliseconds",
				}},
			}, {
				Name:        []string{"--non-interactive"},
				Description: `Do not show interactive prompts`,
			}, {
				Name:        []string{"--scripts-prepend-node-path"},
				Description: `Prepend the node executable dir to the PATH in scripts`,
			}, {
				Name:        []string{"--no-node-version-check"},
				Description: `Do not warn when using a potentially unsupported Node version`,
			}, {
				Name:        []string{"--focus"},
				Description: `Focus on a single workspace by installing remote copies of its sibling workspaces`,
			}, {
				Name:        []string{"--otp"},
				Description: `One-time password for two factor authentication`,
				Args: []model.Arg{{
					Name: "otpcode",
				}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"exec"},
			Description: ``,
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"generate-lock-entry"},
			Description: `Generates a lock file entry`,
			Options: []model.Option{{
				Name:        []string{"--use-manifest"},
				Description: `Specify which manifest file to use for generating lock entry`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
				}},
			}, {
				Name:        []string{"--resolved"},
				Description: `Generate from <*.tgz>#<hash>`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
				}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"global"},
			Description: `Manage yarn globally`,
			Options: []model.Option{{
				Name:        []string{"-s", "--silent"},
				Description: `Skip Yarn console logs`,
			}, {
				Name:        []string{"--no-default-rc"},
				Description: `Prevent Yarn from automatically detecting yarnrc and npmrc files`,
			}, {
				Name:        []string{"--use-yarnrc"},
				Description: `Specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--verbose"},
				Description: `Output verbose messages on internal operations`,
			}, {
				Name:        []string{"--offline"},
				Description: `Trigger an error if any required dependencies are not available in local cache`,
			}, {
				Name:        []string{"--prefer-offline"},
				Description: `Use network only if dependencies are not available in local cache`,
			}, {
				Name:        []string{"--enable-pnp", "--pnp"},
				Description: `Enable the Plug'n'Play installation`,
			}, {
				Name:        []string{"--json"},
				Description: `Format Yarn log messages as lines of JSON`,
			}, {
				Name:        []string{"--ignore-scripts"},
				Description: `Don't run lifecycle scripts`,
			}, {
				Name:        []string{"--har"},
				Description: `Save HAR output of network traffic`,
			}, {
				Name:        []string{"--ignore-platform"},
				Description: `Ignore platform checks`,
			}, {
				Name:        []string{"--ignore-engines"},
				Description: `Ignore engines check`,
			}, {
				Name:        []string{"--ignore-optional"},
				Description: `Ignore optional dependencies`,
			}, {
				Name:        []string{"--force"},
				Description: `Install and build packages even if they were built before, overwrite lockfile`,
			}, {
				Name:        []string{"--skip-integrity-check"},
				Description: `Run install without checking if node_modules is installed`,
			}, {
				Name:        []string{"--check-files"},
				Description: `Install will verify file tree of packages for consistency`,
			}, {
				Name:        []string{"--no-bin-links"},
				Description: `Don't generate bin links when setting up packages`,
			}, {
				Name:        []string{"--flat"},
				Description: `Only allow one version of a package`,
			}, {
				Name:        []string{"--prod", "--production"},
				Description: `Instruct Yarn to ignore NODE_ENV and take its production-or-not status from this flag instead`,
			}, {
				Name:        []string{"--no-lockfile"},
				Description: `Don't read or generate a lockfile`,
			}, {
				Name:        []string{"--pure-lockfile"},
				Description: `Don't generate a lockfile`,
			}, {
				Name:        []string{"--frozen-lockfile"},
				Description: `Don't generate a lockfile and fail if an update is needed`,
			}, {
				Name:        []string{"--update-checksums"},
				Description: `Update package checksums from current repository`,
			}, {
				Name:        []string{"--link-duplicates"},
				Description: `Create hardlinks to the repeated modules in node_modules`,
			}, {
				Name:        []string{"--link-folder"},
				Description: `Specify a custom folder to store global links`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--global-folder"},
				Description: `Specify a custom folder to store global packages`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--modules-folder"},
				Description: `Rather than installing modules into the node_modules folder relative to the cwd, output them here`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--preferred-cache-folder"},
				Description: `Specify a custom folder to store the yarn cache if possible`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--cache-folder"},
				Description: `Specify a custom folder that must be used to store the yarn cache`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--mutex"},
				Description: `Use a mutex to ensure only one yarn instance is executing`,
				Args: []model.Arg{{
					Name: "type[:specifier]",
				}},
			}, {
				Name:        []string{"--emoji"},
				Description: `Enables emoji in output`,
				Args: []model.Arg{{
					Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
				}},
			}, {
				Name:        []string{"--cwd"},
				Description: `Working directory to use`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "cwd",
				}},
			}, {
				Name:        []string{"--proxy", "--https-proxy"},
				Description: ``,
				Args: []model.Arg{{
					Name: "host",
				}},
			}, {
				Name:        []string{"--registry"},
				Description: `Override configuration registry`,
				Args: []model.Arg{{
					Name: "url",
				}},
			}, {
				Name:        []string{"--no-progress"},
				Description: `Disable progress bar`,
			}, {
				Name:        []string{"--network-concurrency"},
				Description: `Maximum number of concurrent network requests`,
				Args: []model.Arg{{
					Name: "number",
				}},
			}, {
				Name:        []string{"--network-timeout"},
				Description: `TCP timeout for network requests`,
				Args: []model.Arg{{
					Name: "milliseconds",
				}},
			}, {
				Name:        []string{"--non-interactive"},
				Description: `Do not show interactive prompts`,
			}, {
				Name:        []string{"--scripts-prepend-node-path"},
				Description: `Prepend the node executable dir to the PATH in scripts`,
			}, {
				Name:        []string{"--no-node-version-check"},
				Description: `Do not warn when using a potentially unsupported Node version`,
			}, {
				Name:        []string{"--focus"},
				Description: `Focus on a single workspace by installing remote copies of its sibling workspaces`,
			}, {
				Name:        []string{"--otp"},
				Description: `One-time password for two factor authentication`,
				Args: []model.Arg{{
					Name: "otpcode",
				}},
			}, {
				Name:        []string{"--prefix"},
				Description: `Bin prefix to use to install binaries`,
				Args: []model.Arg{{
					Name: "prefix",
				}},
			}, {
				Name:        []string{"--latest"},
				Description: `Bin prefix to use to install binaries`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"add"},
				Description: `Install globally packages on your operating system`,
				Args: []model.Arg{{
					Name:       "package",
					Generator:  nil, // TODO: port over generator
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"bin"},
				Description: `Displays the location of the yarn global bin folder`,
			}, {
				Name:        []string{"dir"},
				Description: `Displays the location of the global installation folder`,
			}, {
				Name:        []string{"ls"},
				Description: `List globally installed packages (deprecated)`,
			}, {
				Name:        []string{"list"},
				Description: `List globally installed packages`,
			}, {
				Name:        []string{"remove"},
				Description: `Remove globally installed packages`,
				Args: []model.Arg{{
					Name:           "package",
					FilterStrategy: model.FilterStrategyFuzzy,
					Generator:      nil, // TODO: port over generator
					IsVariadic:     true,
				}},
				Options: []model.Option{{
					Name:        []string{"-s", "--silent"},
					Description: `Skip Yarn console logs`,
				}, {
					Name:        []string{"--no-default-rc"},
					Description: `Prevent Yarn from automatically detecting yarnrc and npmrc files`,
				}, {
					Name:        []string{"--use-yarnrc"},
					Description: `Specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "path",
					}},
				}, {
					Name:        []string{"--verbose"},
					Description: `Output verbose messages on internal operations`,
				}, {
					Name:        []string{"--offline"},
					Description: `Trigger an error if any required dependencies are not available in local cache`,
				}, {
					Name:        []string{"--prefer-offline"},
					Description: `Use network only if dependencies are not available in local cache`,
				}, {
					Name:        []string{"--enable-pnp", "--pnp"},
					Description: `Enable the Plug'n'Play installation`,
				}, {
					Name:        []string{"--json"},
					Description: `Format Yarn log messages as lines of JSON`,
				}, {
					Name:        []string{"--ignore-scripts"},
					Description: `Don't run lifecycle scripts`,
				}, {
					Name:        []string{"--har"},
					Description: `Save HAR output of network traffic`,
				}, {
					Name:        []string{"--ignore-platform"},
					Description: `Ignore platform checks`,
				}, {
					Name:        []string{"--ignore-engines"},
					Description: `Ignore engines check`,
				}, {
					Name:        []string{"--ignore-optional"},
					Description: `Ignore optional dependencies`,
				}, {
					Name:        []string{"--force"},
					Description: `Install and build packages even if they were built before, overwrite lockfile`,
				}, {
					Name:        []string{"--skip-integrity-check"},
					Description: `Run install without checking if node_modules is installed`,
				}, {
					Name:        []string{"--check-files"},
					Description: `Install will verify file tree of packages for consistency`,
				}, {
					Name:        []string{"--no-bin-links"},
					Description: `Don't generate bin links when setting up packages`,
				}, {
					Name:        []string{"--flat"},
					Description: `Only allow one version of a package`,
				}, {
					Name:        []string{"--prod", "--production"},
					Description: `Instruct Yarn to ignore NODE_ENV and take its production-or-not status from this flag instead`,
				}, {
					Name:        []string{"--no-lockfile"},
					Description: `Don't read or generate a lockfile`,
				}, {
					Name:        []string{"--pure-lockfile"},
					Description: `Don't generate a lockfile`,
				}, {
					Name:        []string{"--frozen-lockfile"},
					Description: `Don't generate a lockfile and fail if an update is needed`,
				}, {
					Name:        []string{"--update-checksums"},
					Description: `Update package checksums from current repository`,
				}, {
					Name:        []string{"--link-duplicates"},
					Description: `Create hardlinks to the repeated modules in node_modules`,
				}, {
					Name:        []string{"--link-folder"},
					Description: `Specify a custom folder to store global links`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFolders},
						Name:      "path",
					}},
				}, {
					Name:        []string{"--global-folder"},
					Description: `Specify a custom folder to store global packages`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFolders},
						Name:      "path",
					}},
				}, {
					Name:        []string{"--modules-folder"},
					Description: `Rather than installing modules into the node_modules folder relative to the cwd, output them here`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFolders},
						Name:      "path",
					}},
				}, {
					Name:        []string{"--preferred-cache-folder"},
					Description: `Specify a custom folder to store the yarn cache if possible`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFolders},
						Name:      "path",
					}},
				}, {
					Name:        []string{"--cache-folder"},
					Description: `Specify a custom folder that must be used to store the yarn cache`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFolders},
						Name:      "path",
					}},
				}, {
					Name:        []string{"--mutex"},
					Description: `Use a mutex to ensure only one yarn instance is executing`,
					Args: []model.Arg{{
						Name: "type[:specifier]",
					}},
				}, {
					Name:        []string{"--emoji"},
					Description: `Enables emoji in output`,
					Args: []model.Arg{{
						Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
					}},
				}, {
					Name:        []string{"--cwd"},
					Description: `Working directory to use`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFolders},
						Name:      "cwd",
					}},
				}, {
					Name:        []string{"--proxy", "--https-proxy"},
					Description: ``,
					Args: []model.Arg{{
						Name: "host",
					}},
				}, {
					Name:        []string{"--registry"},
					Description: `Override configuration registry`,
					Args: []model.Arg{{
						Name: "url",
					}},
				}, {
					Name:        []string{"--no-progress"},
					Description: `Disable progress bar`,
				}, {
					Name:        []string{"--network-concurrency"},
					Description: `Maximum number of concurrent network requests`,
					Args: []model.Arg{{
						Name: "number",
					}},
				}, {
					Name:        []string{"--network-timeout"},
					Description: `TCP timeout for network requests`,
					Args: []model.Arg{{
						Name: "milliseconds",
					}},
				}, {
					Name:        []string{"--non-interactive"},
					Description: `Do not show interactive prompts`,
				}, {
					Name:        []string{"--scripts-prepend-node-path"},
					Description: `Prepend the node executable dir to the PATH in scripts`,
				}, {
					Name:        []string{"--no-node-version-check"},
					Description: `Do not warn when using a potentially unsupported Node version`,
				}, {
					Name:        []string{"--focus"},
					Description: `Focus on a single workspace by installing remote copies of its sibling workspaces`,
				}, {
					Name:        []string{"--otp"},
					Description: `One-time password for two factor authentication`,
					Args: []model.Arg{{
						Name: "otpcode",
					}},
				}, {
					Name:        []string{"-W", "--ignore-workspace-root-check"},
					Description: `Required to run yarn remove inside a workspace root`,
				}, {
					Name:        []string{"-h", "--help"},
					Description: `Output usage information`,
				}},
			}, {
				Name:        []string{"upgrade"},
				Description: `Upgrade globally installed packages`,
				Options: []model.Option{{
					Name:        []string{"-s", "--silent"},
					Description: `Skip Yarn console logs`,
				}, {
					Name:        []string{"--no-default-rc"},
					Description: `Prevent Yarn from automatically detecting yarnrc and npmrc files`,
				}, {
					Name:        []string{"--use-yarnrc"},
					Description: `Specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "path",
					}},
				}, {
					Name:        []string{"--verbose"},
					Description: `Output verbose messages on internal operations`,
				}, {
					Name:        []string{"--offline"},
					Description: `Trigger an error if any required dependencies are not available in local cache`,
				}, {
					Name:        []string{"--prefer-offline"},
					Description: `Use network only if dependencies are not available in local cache`,
				}, {
					Name:        []string{"--enable-pnp", "--pnp"},
					Description: `Enable the Plug'n'Play installation`,
				}, {
					Name:        []string{"--json"},
					Description: `Format Yarn log messages as lines of JSON`,
				}, {
					Name:        []string{"--ignore-scripts"},
					Description: `Don't run lifecycle scripts`,
				}, {
					Name:        []string{"--har"},
					Description: `Save HAR output of network traffic`,
				}, {
					Name:        []string{"--ignore-platform"},
					Description: `Ignore platform checks`,
				}, {
					Name:        []string{"--ignore-engines"},
					Description: `Ignore engines check`,
				}, {
					Name:        []string{"--ignore-optional"},
					Description: `Ignore optional dependencies`,
				}, {
					Name:        []string{"--force"},
					Description: `Install and build packages even if they were built before, overwrite lockfile`,
				}, {
					Name:        []string{"--skip-integrity-check"},
					Description: `Run install without checking if node_modules is installed`,
				}, {
					Name:        []string{"--check-files"},
					Description: `Install will verify file tree of packages for consistency`,
				}, {
					Name:        []string{"--no-bin-links"},
					Description: `Don't generate bin links when setting up packages`,
				}, {
					Name:        []string{"--flat"},
					Description: `Only allow one version of a package`,
				}, {
					Name:        []string{"--prod", "--production"},
					Description: `Instruct Yarn to ignore NODE_ENV and take its production-or-not status from this flag instead`,
				}, {
					Name:        []string{"--no-lockfile"},
					Description: `Don't read or generate a lockfile`,
				}, {
					Name:        []string{"--pure-lockfile"},
					Description: `Don't generate a lockfile`,
				}, {
					Name:        []string{"--frozen-lockfile"},
					Description: `Don't generate a lockfile and fail if an update is needed`,
				}, {
					Name:        []string{"--update-checksums"},
					Description: `Update package checksums from current repository`,
				}, {
					Name:        []string{"--link-duplicates"},
					Description: `Create hardlinks to the repeated modules in node_modules`,
				}, {
					Name:        []string{"--link-folder"},
					Description: `Specify a custom folder to store global links`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFolders},
						Name:      "path",
					}},
				}, {
					Name:        []string{"--global-folder"},
					Description: `Specify a custom folder to store global packages`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFolders},
						Name:      "path",
					}},
				}, {
					Name:        []string{"--modules-folder"},
					Description: `Rather than installing modules into the node_modules folder relative to the cwd, output them here`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFolders},
						Name:      "path",
					}},
				}, {
					Name:        []string{"--preferred-cache-folder"},
					Description: `Specify a custom folder to store the yarn cache if possible`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFolders},
						Name:      "path",
					}},
				}, {
					Name:        []string{"--cache-folder"},
					Description: `Specify a custom folder that must be used to store the yarn cache`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFolders},
						Name:      "path",
					}},
				}, {
					Name:        []string{"--mutex"},
					Description: `Use a mutex to ensure only one yarn instance is executing`,
					Args: []model.Arg{{
						Name: "type[:specifier]",
					}},
				}, {
					Name:        []string{"--emoji"},
					Description: `Enables emoji in output`,
					Args: []model.Arg{{
						Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
					}},
				}, {
					Name:        []string{"--cwd"},
					Description: `Working directory to use`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFolders},
						Name:      "cwd",
					}},
				}, {
					Name:        []string{"--proxy", "--https-proxy"},
					Description: ``,
					Args: []model.Arg{{
						Name: "host",
					}},
				}, {
					Name:        []string{"--registry"},
					Description: `Override configuration registry`,
					Args: []model.Arg{{
						Name: "url",
					}},
				}, {
					Name:        []string{"--no-progress"},
					Description: `Disable progress bar`,
				}, {
					Name:        []string{"--network-concurrency"},
					Description: `Maximum number of concurrent network requests`,
					Args: []model.Arg{{
						Name: "number",
					}},
				}, {
					Name:        []string{"--network-timeout"},
					Description: `TCP timeout for network requests`,
					Args: []model.Arg{{
						Name: "milliseconds",
					}},
				}, {
					Name:        []string{"--non-interactive"},
					Description: `Do not show interactive prompts`,
				}, {
					Name:        []string{"--scripts-prepend-node-path"},
					Description: `Prepend the node executable dir to the PATH in scripts`,
				}, {
					Name:        []string{"--no-node-version-check"},
					Description: `Do not warn when using a potentially unsupported Node version`,
				}, {
					Name:        []string{"--focus"},
					Description: `Focus on a single workspace by installing remote copies of its sibling workspaces`,
				}, {
					Name:        []string{"--otp"},
					Description: `One-time password for two factor authentication`,
					Args: []model.Arg{{
						Name: "otpcode",
					}},
				}, {
					Name:        []string{"-S", "--scope"},
					Description: `Upgrade packages under the specified scope`,
					Args: []model.Arg{{
						Name: "scope",
					}},
				}, {
					Name:        []string{"-L", "--latest"},
					Description: `List the latest version of packages`,
				}, {
					Name:        []string{"-E", "--exact"},
					Description: `Install exact version. Only used when --latest is specified`,
				}, {
					Name:        []string{"-P", "--pattern"},
					Description: `Upgrade packages that match pattern`,
					Args: []model.Arg{{
						Name: "pattern",
					}},
				}, {
					Name:        []string{"-T", "--tilde"},
					Description: `Install most recent release with the same minor version. Only used when --latest is specified`,
				}, {
					Name:        []string{"-C", "--caret"},
					Description: `Install most recent release with the same major version. Only used when --latest is specified`,
				}, {
					Name:        []string{"-A", "--audit"},
					Description: `Run vulnerability audit on installed packages`,
				}, {
					Name:        []string{"-h", "--help"},
					Description: `Output usage information`,
				}},
			}, {
				Name:        []string{"upgrade-interactive"},
				Description: `Display the outdated packages before performing any upgrade`,
				Options: []model.Option{{
					Name:        []string{"--latest"},
					Description: `Use the version tagged latest in the registry`,
				}},
			}},
		}, {
			Name:        []string{"help"},
			Description: `Output usage information`,
		}, {
			Name:        []string{"import"},
			Description: `Generates yarn.lock from an npm package-lock.json file`,
		}, {
			Name:        []string{"info"},
			Description: `Show information about a package`,
		}, {
			Name:        []string{"init"},
			Description: `Interactively creates or updates a package.json file`,
			Options: []model.Option{{
				Name:        []string{"-s", "--silent"},
				Description: `Skip Yarn console logs`,
			}, {
				Name:        []string{"--no-default-rc"},
				Description: `Prevent Yarn from automatically detecting yarnrc and npmrc files`,
			}, {
				Name:        []string{"--use-yarnrc"},
				Description: `Specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--verbose"},
				Description: `Output verbose messages on internal operations`,
			}, {
				Name:        []string{"--offline"},
				Description: `Trigger an error if any required dependencies are not available in local cache`,
			}, {
				Name:        []string{"--prefer-offline"},
				Description: `Use network only if dependencies are not available in local cache`,
			}, {
				Name:        []string{"--enable-pnp", "--pnp"},
				Description: `Enable the Plug'n'Play installation`,
			}, {
				Name:        []string{"--json"},
				Description: `Format Yarn log messages as lines of JSON`,
			}, {
				Name:        []string{"--ignore-scripts"},
				Description: `Don't run lifecycle scripts`,
			}, {
				Name:        []string{"--har"},
				Description: `Save HAR output of network traffic`,
			}, {
				Name:        []string{"--ignore-platform"},
				Description: `Ignore platform checks`,
			}, {
				Name:        []string{"--ignore-engines"},
				Description: `Ignore engines check`,
			}, {
				Name:        []string{"--ignore-optional"},
				Description: `Ignore optional dependencies`,
			}, {
				Name:        []string{"--force"},
				Description: `Install and build packages even if they were built before, overwrite lockfile`,
			}, {
				Name:        []string{"--skip-integrity-check"},
				Description: `Run install without checking if node_modules is installed`,
			}, {
				Name:        []string{"--check-files"},
				Description: `Install will verify file tree of packages for consistency`,
			}, {
				Name:        []string{"--no-bin-links"},
				Description: `Don't generate bin links when setting up packages`,
			}, {
				Name:        []string{"--flat"},
				Description: `Only allow one version of a package`,
			}, {
				Name:        []string{"--prod", "--production"},
				Description: `Instruct Yarn to ignore NODE_ENV and take its production-or-not status from this flag instead`,
			}, {
				Name:        []string{"--no-lockfile"},
				Description: `Don't read or generate a lockfile`,
			}, {
				Name:        []string{"--pure-lockfile"},
				Description: `Don't generate a lockfile`,
			}, {
				Name:        []string{"--frozen-lockfile"},
				Description: `Don't generate a lockfile and fail if an update is needed`,
			}, {
				Name:        []string{"--update-checksums"},
				Description: `Update package checksums from current repository`,
			}, {
				Name:        []string{"--link-duplicates"},
				Description: `Create hardlinks to the repeated modules in node_modules`,
			}, {
				Name:        []string{"--link-folder"},
				Description: `Specify a custom folder to store global links`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--global-folder"},
				Description: `Specify a custom folder to store global packages`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--modules-folder"},
				Description: `Rather than installing modules into the node_modules folder relative to the cwd, output them here`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--preferred-cache-folder"},
				Description: `Specify a custom folder to store the yarn cache if possible`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--cache-folder"},
				Description: `Specify a custom folder that must be used to store the yarn cache`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--mutex"},
				Description: `Use a mutex to ensure only one yarn instance is executing`,
				Args: []model.Arg{{
					Name: "type[:specifier]",
				}},
			}, {
				Name:        []string{"--emoji"},
				Description: `Enables emoji in output`,
				Args: []model.Arg{{
					Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
				}},
			}, {
				Name:        []string{"--cwd"},
				Description: `Working directory to use`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "cwd",
				}},
			}, {
				Name:        []string{"--proxy", "--https-proxy"},
				Description: ``,
				Args: []model.Arg{{
					Name: "host",
				}},
			}, {
				Name:        []string{"--registry"},
				Description: `Override configuration registry`,
				Args: []model.Arg{{
					Name: "url",
				}},
			}, {
				Name:        []string{"--no-progress"},
				Description: `Disable progress bar`,
			}, {
				Name:        []string{"--network-concurrency"},
				Description: `Maximum number of concurrent network requests`,
				Args: []model.Arg{{
					Name: "number",
				}},
			}, {
				Name:        []string{"--network-timeout"},
				Description: `TCP timeout for network requests`,
				Args: []model.Arg{{
					Name: "milliseconds",
				}},
			}, {
				Name:        []string{"--non-interactive"},
				Description: `Do not show interactive prompts`,
			}, {
				Name:        []string{"--scripts-prepend-node-path"},
				Description: `Prepend the node executable dir to the PATH in scripts`,
			}, {
				Name:        []string{"--no-node-version-check"},
				Description: `Do not warn when using a potentially unsupported Node version`,
			}, {
				Name:        []string{"--focus"},
				Description: `Focus on a single workspace by installing remote copies of its sibling workspaces`,
			}, {
				Name:        []string{"--otp"},
				Description: `One-time password for two factor authentication`,
				Args: []model.Arg{{
					Name: "otpcode",
				}},
			}, {
				Name:        []string{"-y", "--yes"},
				Description: `Use default options`,
			}, {
				Name:        []string{"-p", "--private"},
				Description: `Use default options and private true`,
			}, {
				Name:        []string{"-i", "--install"},
				Description: `Install a specific Yarn release`,
				Args: []model.Arg{{
					Name: "version",
				}},
			}, {
				Name:        []string{"-2"},
				Description: `Generates the project using Yarn 2`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"install"},
			Description: `Install all the dependencies listed within package.json`,
			Options: []model.Option{{
				Name:        []string{"-s", "--silent"},
				Description: `Skip Yarn console logs`,
			}, {
				Name:        []string{"--no-default-rc"},
				Description: `Prevent Yarn from automatically detecting yarnrc and npmrc files`,
			}, {
				Name:        []string{"--use-yarnrc"},
				Description: `Specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--verbose"},
				Description: `Output verbose messages on internal operations`,
			}, {
				Name:        []string{"--offline"},
				Description: `Trigger an error if any required dependencies are not available in local cache`,
			}, {
				Name:        []string{"--prefer-offline"},
				Description: `Use network only if dependencies are not available in local cache`,
			}, {
				Name:        []string{"--enable-pnp", "--pnp"},
				Description: `Enable the Plug'n'Play installation`,
			}, {
				Name:        []string{"--json"},
				Description: `Format Yarn log messages as lines of JSON`,
			}, {
				Name:        []string{"--ignore-scripts"},
				Description: `Don't run lifecycle scripts`,
			}, {
				Name:        []string{"--har"},
				Description: `Save HAR output of network traffic`,
			}, {
				Name:        []string{"--ignore-platform"},
				Description: `Ignore platform checks`,
			}, {
				Name:        []string{"--ignore-engines"},
				Description: `Ignore engines check`,
			}, {
				Name:        []string{"--ignore-optional"},
				Description: `Ignore optional dependencies`,
			}, {
				Name:        []string{"--force"},
				Description: `Install and build packages even if they were built before, overwrite lockfile`,
			}, {
				Name:        []string{"--skip-integrity-check"},
				Description: `Run install without checking if node_modules is installed`,
			}, {
				Name:        []string{"--check-files"},
				Description: `Install will verify file tree of packages for consistency`,
			}, {
				Name:        []string{"--no-bin-links"},
				Description: `Don't generate bin links when setting up packages`,
			}, {
				Name:        []string{"--flat"},
				Description: `Only allow one version of a package`,
			}, {
				Name:        []string{"--prod", "--production"},
				Description: `Instruct Yarn to ignore NODE_ENV and take its production-or-not status from this flag instead`,
			}, {
				Name:        []string{"--no-lockfile"},
				Description: `Don't read or generate a lockfile`,
			}, {
				Name:        []string{"--pure-lockfile"},
				Description: `Don't generate a lockfile`,
			}, {
				Name:        []string{"--frozen-lockfile"},
				Description: `Don't generate a lockfile and fail if an update is needed`,
			}, {
				Name:        []string{"--update-checksums"},
				Description: `Update package checksums from current repository`,
			}, {
				Name:        []string{"--link-duplicates"},
				Description: `Create hardlinks to the repeated modules in node_modules`,
			}, {
				Name:        []string{"--link-folder"},
				Description: `Specify a custom folder to store global links`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--global-folder"},
				Description: `Specify a custom folder to store global packages`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--modules-folder"},
				Description: `Rather than installing modules into the node_modules folder relative to the cwd, output them here`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--preferred-cache-folder"},
				Description: `Specify a custom folder to store the yarn cache if possible`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--cache-folder"},
				Description: `Specify a custom folder that must be used to store the yarn cache`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--mutex"},
				Description: `Use a mutex to ensure only one yarn instance is executing`,
				Args: []model.Arg{{
					Name: "type[:specifier]",
				}},
			}, {
				Name:        []string{"--emoji"},
				Description: `Enables emoji in output`,
				Args: []model.Arg{{
					Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
				}},
			}, {
				Name:        []string{"--cwd"},
				Description: `Working directory to use`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "cwd",
				}},
			}, {
				Name:        []string{"--proxy", "--https-proxy"},
				Description: ``,
				Args: []model.Arg{{
					Name: "host",
				}},
			}, {
				Name:        []string{"--registry"},
				Description: `Override configuration registry`,
				Args: []model.Arg{{
					Name: "url",
				}},
			}, {
				Name:        []string{"--no-progress"},
				Description: `Disable progress bar`,
			}, {
				Name:        []string{"--network-concurrency"},
				Description: `Maximum number of concurrent network requests`,
				Args: []model.Arg{{
					Name: "number",
				}},
			}, {
				Name:        []string{"--network-timeout"},
				Description: `TCP timeout for network requests`,
				Args: []model.Arg{{
					Name: "milliseconds",
				}},
			}, {
				Name:        []string{"--non-interactive"},
				Description: `Do not show interactive prompts`,
			}, {
				Name:        []string{"--scripts-prepend-node-path"},
				Description: `Prepend the node executable dir to the PATH in scripts`,
			}, {
				Name:        []string{"--no-node-version-check"},
				Description: `Do not warn when using a potentially unsupported Node version`,
			}, {
				Name:        []string{"--focus"},
				Description: `Focus on a single workspace by installing remote copies of its sibling workspaces`,
			}, {
				Name:        []string{"--otp"},
				Description: `One-time password for two factor authentication`,
				Args: []model.Arg{{
					Name: "otpcode",
				}},
			}, {
				Name:        []string{"-A", "--audit"},
				Description: `Run vulnerability audit on installed packages`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"licenses"},
			Description: ``,
			Subcommands: []model.Subcommand{{
				Name:        []string{"list"},
				Description: `List licenses for installed packages`,
			}, {
				Name:        []string{"generate-disclaimer"},
				Description: `List of licenses from all the packages`,
			}},
		}, {
			Name:        []string{"link"},
			Description: `Symlink a package folder during development`,
			Args: []model.Arg{{
				Name:       "package",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-s", "--silent"},
				Description: `Skip Yarn console logs`,
			}, {
				Name:        []string{"--no-default-rc"},
				Description: `Prevent Yarn from automatically detecting yarnrc and npmrc files`,
			}, {
				Name:        []string{"--use-yarnrc"},
				Description: `Specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--verbose"},
				Description: `Output verbose messages on internal operations`,
			}, {
				Name:        []string{"--offline"},
				Description: `Trigger an error if any required dependencies are not available in local cache`,
			}, {
				Name:        []string{"--prefer-offline"},
				Description: `Use network only if dependencies are not available in local cache`,
			}, {
				Name:        []string{"--enable-pnp", "--pnp"},
				Description: `Enable the Plug'n'Play installation`,
			}, {
				Name:        []string{"--json"},
				Description: `Format Yarn log messages as lines of JSON`,
			}, {
				Name:        []string{"--ignore-scripts"},
				Description: `Don't run lifecycle scripts`,
			}, {
				Name:        []string{"--har"},
				Description: `Save HAR output of network traffic`,
			}, {
				Name:        []string{"--ignore-platform"},
				Description: `Ignore platform checks`,
			}, {
				Name:        []string{"--ignore-engines"},
				Description: `Ignore engines check`,
			}, {
				Name:        []string{"--ignore-optional"},
				Description: `Ignore optional dependencies`,
			}, {
				Name:        []string{"--force"},
				Description: `Install and build packages even if they were built before, overwrite lockfile`,
			}, {
				Name:        []string{"--skip-integrity-check"},
				Description: `Run install without checking if node_modules is installed`,
			}, {
				Name:        []string{"--check-files"},
				Description: `Install will verify file tree of packages for consistency`,
			}, {
				Name:        []string{"--no-bin-links"},
				Description: `Don't generate bin links when setting up packages`,
			}, {
				Name:        []string{"--flat"},
				Description: `Only allow one version of a package`,
			}, {
				Name:        []string{"--prod", "--production"},
				Description: `Instruct Yarn to ignore NODE_ENV and take its production-or-not status from this flag instead`,
			}, {
				Name:        []string{"--no-lockfile"},
				Description: `Don't read or generate a lockfile`,
			}, {
				Name:        []string{"--pure-lockfile"},
				Description: `Don't generate a lockfile`,
			}, {
				Name:        []string{"--frozen-lockfile"},
				Description: `Don't generate a lockfile and fail if an update is needed`,
			}, {
				Name:        []string{"--update-checksums"},
				Description: `Update package checksums from current repository`,
			}, {
				Name:        []string{"--link-duplicates"},
				Description: `Create hardlinks to the repeated modules in node_modules`,
			}, {
				Name:        []string{"--link-folder"},
				Description: `Specify a custom folder to store global links`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--global-folder"},
				Description: `Specify a custom folder to store global packages`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--modules-folder"},
				Description: `Rather than installing modules into the node_modules folder relative to the cwd, output them here`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--preferred-cache-folder"},
				Description: `Specify a custom folder to store the yarn cache if possible`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--cache-folder"},
				Description: `Specify a custom folder that must be used to store the yarn cache`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--mutex"},
				Description: `Use a mutex to ensure only one yarn instance is executing`,
				Args: []model.Arg{{
					Name: "type[:specifier]",
				}},
			}, {
				Name:        []string{"--emoji"},
				Description: `Enables emoji in output`,
				Args: []model.Arg{{
					Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
				}},
			}, {
				Name:        []string{"--cwd"},
				Description: `Working directory to use`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "cwd",
				}},
			}, {
				Name:        []string{"--proxy", "--https-proxy"},
				Description: ``,
				Args: []model.Arg{{
					Name: "host",
				}},
			}, {
				Name:        []string{"--registry"},
				Description: `Override configuration registry`,
				Args: []model.Arg{{
					Name: "url",
				}},
			}, {
				Name:        []string{"--no-progress"},
				Description: `Disable progress bar`,
			}, {
				Name:        []string{"--network-concurrency"},
				Description: `Maximum number of concurrent network requests`,
				Args: []model.Arg{{
					Name: "number",
				}},
			}, {
				Name:        []string{"--network-timeout"},
				Description: `TCP timeout for network requests`,
				Args: []model.Arg{{
					Name: "milliseconds",
				}},
			}, {
				Name:        []string{"--non-interactive"},
				Description: `Do not show interactive prompts`,
			}, {
				Name:        []string{"--scripts-prepend-node-path"},
				Description: `Prepend the node executable dir to the PATH in scripts`,
			}, {
				Name:        []string{"--no-node-version-check"},
				Description: `Do not warn when using a potentially unsupported Node version`,
			}, {
				Name:        []string{"--focus"},
				Description: `Focus on a single workspace by installing remote copies of its sibling workspaces`,
			}, {
				Name:        []string{"--otp"},
				Description: `One-time password for two factor authentication`,
				Args: []model.Arg{{
					Name: "otpcode",
				}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"list"},
			Description: `Lists all dependencies for the current working directory`,
			Options: []model.Option{{
				Name:        []string{"--depth"},
				Description: `Restrict the depth of the dependencies`,
			}, {
				Name:        []string{"--pattern"},
				Description: `Filter the list of dependencies by the pattern`,
			}},
		}, {
			Name:        []string{"login"},
			Description: `Store registry username and email`,
		}, {
			Name:        []string{"logout"},
			Description: `Clear registry username and email`,
		}, {
			Name:        []string{"node"},
			Description: ``,
		}, {
			Name:        []string{"outdated"},
			Description: `Checks for outdated package dependencies`,
			Options: []model.Option{{
				Name:        []string{"-s", "--silent"},
				Description: `Skip Yarn console logs`,
			}, {
				Name:        []string{"--no-default-rc"},
				Description: `Prevent Yarn from automatically detecting yarnrc and npmrc files`,
			}, {
				Name:        []string{"--use-yarnrc"},
				Description: `Specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--verbose"},
				Description: `Output verbose messages on internal operations`,
			}, {
				Name:        []string{"--offline"},
				Description: `Trigger an error if any required dependencies are not available in local cache`,
			}, {
				Name:        []string{"--prefer-offline"},
				Description: `Use network only if dependencies are not available in local cache`,
			}, {
				Name:        []string{"--enable-pnp", "--pnp"},
				Description: `Enable the Plug'n'Play installation`,
			}, {
				Name:        []string{"--json"},
				Description: `Format Yarn log messages as lines of JSON`,
			}, {
				Name:        []string{"--ignore-scripts"},
				Description: `Don't run lifecycle scripts`,
			}, {
				Name:        []string{"--har"},
				Description: `Save HAR output of network traffic`,
			}, {
				Name:        []string{"--ignore-platform"},
				Description: `Ignore platform checks`,
			}, {
				Name:        []string{"--ignore-engines"},
				Description: `Ignore engines check`,
			}, {
				Name:        []string{"--ignore-optional"},
				Description: `Ignore optional dependencies`,
			}, {
				Name:        []string{"--force"},
				Description: `Install and build packages even if they were built before, overwrite lockfile`,
			}, {
				Name:        []string{"--skip-integrity-check"},
				Description: `Run install without checking if node_modules is installed`,
			}, {
				Name:        []string{"--check-files"},
				Description: `Install will verify file tree of packages for consistency`,
			}, {
				Name:        []string{"--no-bin-links"},
				Description: `Don't generate bin links when setting up packages`,
			}, {
				Name:        []string{"--flat"},
				Description: `Only allow one version of a package`,
			}, {
				Name:        []string{"--prod", "--production"},
				Description: `Instruct Yarn to ignore NODE_ENV and take its production-or-not status from this flag instead`,
			}, {
				Name:        []string{"--no-lockfile"},
				Description: `Don't read or generate a lockfile`,
			}, {
				Name:        []string{"--pure-lockfile"},
				Description: `Don't generate a lockfile`,
			}, {
				Name:        []string{"--frozen-lockfile"},
				Description: `Don't generate a lockfile and fail if an update is needed`,
			}, {
				Name:        []string{"--update-checksums"},
				Description: `Update package checksums from current repository`,
			}, {
				Name:        []string{"--link-duplicates"},
				Description: `Create hardlinks to the repeated modules in node_modules`,
			}, {
				Name:        []string{"--link-folder"},
				Description: `Specify a custom folder to store global links`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--global-folder"},
				Description: `Specify a custom folder to store global packages`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--modules-folder"},
				Description: `Rather than installing modules into the node_modules folder relative to the cwd, output them here`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--preferred-cache-folder"},
				Description: `Specify a custom folder to store the yarn cache if possible`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--cache-folder"},
				Description: `Specify a custom folder that must be used to store the yarn cache`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--mutex"},
				Description: `Use a mutex to ensure only one yarn instance is executing`,
				Args: []model.Arg{{
					Name: "type[:specifier]",
				}},
			}, {
				Name:        []string{"--emoji"},
				Description: `Enables emoji in output`,
				Args: []model.Arg{{
					Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
				}},
			}, {
				Name:        []string{"--cwd"},
				Description: `Working directory to use`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "cwd",
				}},
			}, {
				Name:        []string{"--proxy", "--https-proxy"},
				Description: ``,
				Args: []model.Arg{{
					Name: "host",
				}},
			}, {
				Name:        []string{"--registry"},
				Description: `Override configuration registry`,
				Args: []model.Arg{{
					Name: "url",
				}},
			}, {
				Name:        []string{"--no-progress"},
				Description: `Disable progress bar`,
			}, {
				Name:        []string{"--network-concurrency"},
				Description: `Maximum number of concurrent network requests`,
				Args: []model.Arg{{
					Name: "number",
				}},
			}, {
				Name:        []string{"--network-timeout"},
				Description: `TCP timeout for network requests`,
				Args: []model.Arg{{
					Name: "milliseconds",
				}},
			}, {
				Name:        []string{"--non-interactive"},
				Description: `Do not show interactive prompts`,
			}, {
				Name:        []string{"--scripts-prepend-node-path"},
				Description: `Prepend the node executable dir to the PATH in scripts`,
			}, {
				Name:        []string{"--no-node-version-check"},
				Description: `Do not warn when using a potentially unsupported Node version`,
			}, {
				Name:        []string{"--focus"},
				Description: `Focus on a single workspace by installing remote copies of its sibling workspaces`,
			}, {
				Name:        []string{"--otp"},
				Description: `One-time password for two factor authentication`,
				Args: []model.Arg{{
					Name: "otpcode",
				}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"owner"},
			Description: `Manage package owners`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"list"},
				Description: `Lists all of the owners of a package`,
				Args: []model.Arg{{
					Name: "package",
				}},
			}, {
				Name:        []string{"add"},
				Description: `Adds the user as an owner of the package`,
				Args: []model.Arg{{
					Name: "package",
				}},
			}, {
				Name:        []string{"remove"},
				Description: `Removes the user as an owner of the package`,
				Args: []model.Arg{{
					Name: "user",
				}, {
					Name: "package",
				}},
			}},
		}, {
			Name:        []string{"pack"},
			Description: `Creates a compressed gzip archive of package dependencies`,
			Options: []model.Option{{
				Name:        []string{"--filename"},
				Description: `Creates a compressed gzip archive of package dependencies and names the file filename`,
			}},
		}, {
			Name:        []string{"policies"},
			Description: `Defines project-wide policies for your project`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"set-version"},
				Description: `Will download the latest stable release`,
				Options: []model.Option{{
					Name:        []string{"--rc"},
					Description: `Download the latest rc release`,
				}},
			}},
		}, {
			Name:        []string{"publish"},
			Description: `Publishes a package to the npm registry`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFolders},
				Name:      "Tarball or Folder",
			}},
			Options: []model.Option{{
				Name:        []string{"-s", "--silent"},
				Description: `Skip Yarn console logs`,
			}, {
				Name:        []string{"--no-default-rc"},
				Description: `Prevent Yarn from automatically detecting yarnrc and npmrc files`,
			}, {
				Name:        []string{"--use-yarnrc"},
				Description: `Specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--verbose"},
				Description: `Output verbose messages on internal operations`,
			}, {
				Name:        []string{"--offline"},
				Description: `Trigger an error if any required dependencies are not available in local cache`,
			}, {
				Name:        []string{"--prefer-offline"},
				Description: `Use network only if dependencies are not available in local cache`,
			}, {
				Name:        []string{"--enable-pnp", "--pnp"},
				Description: `Enable the Plug'n'Play installation`,
			}, {
				Name:        []string{"--json"},
				Description: `Format Yarn log messages as lines of JSON`,
			}, {
				Name:        []string{"--ignore-scripts"},
				Description: `Don't run lifecycle scripts`,
			}, {
				Name:        []string{"--har"},
				Description: `Save HAR output of network traffic`,
			}, {
				Name:        []string{"--ignore-platform"},
				Description: `Ignore platform checks`,
			}, {
				Name:        []string{"--ignore-engines"},
				Description: `Ignore engines check`,
			}, {
				Name:        []string{"--ignore-optional"},
				Description: `Ignore optional dependencies`,
			}, {
				Name:        []string{"--force"},
				Description: `Install and build packages even if they were built before, overwrite lockfile`,
			}, {
				Name:        []string{"--skip-integrity-check"},
				Description: `Run install without checking if node_modules is installed`,
			}, {
				Name:        []string{"--check-files"},
				Description: `Install will verify file tree of packages for consistency`,
			}, {
				Name:        []string{"--no-bin-links"},
				Description: `Don't generate bin links when setting up packages`,
			}, {
				Name:        []string{"--flat"},
				Description: `Only allow one version of a package`,
			}, {
				Name:        []string{"--prod", "--production"},
				Description: `Instruct Yarn to ignore NODE_ENV and take its production-or-not status from this flag instead`,
			}, {
				Name:        []string{"--no-lockfile"},
				Description: `Don't read or generate a lockfile`,
			}, {
				Name:        []string{"--pure-lockfile"},
				Description: `Don't generate a lockfile`,
			}, {
				Name:        []string{"--frozen-lockfile"},
				Description: `Don't generate a lockfile and fail if an update is needed`,
			}, {
				Name:        []string{"--update-checksums"},
				Description: `Update package checksums from current repository`,
			}, {
				Name:        []string{"--link-duplicates"},
				Description: `Create hardlinks to the repeated modules in node_modules`,
			}, {
				Name:        []string{"--link-folder"},
				Description: `Specify a custom folder to store global links`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--global-folder"},
				Description: `Specify a custom folder to store global packages`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--modules-folder"},
				Description: `Rather than installing modules into the node_modules folder relative to the cwd, output them here`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--preferred-cache-folder"},
				Description: `Specify a custom folder to store the yarn cache if possible`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--cache-folder"},
				Description: `Specify a custom folder that must be used to store the yarn cache`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--mutex"},
				Description: `Use a mutex to ensure only one yarn instance is executing`,
				Args: []model.Arg{{
					Name: "type[:specifier]",
				}},
			}, {
				Name:        []string{"--emoji"},
				Description: `Enables emoji in output`,
				Args: []model.Arg{{
					Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
				}},
			}, {
				Name:        []string{"--cwd"},
				Description: `Working directory to use`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "cwd",
				}},
			}, {
				Name:        []string{"--proxy", "--https-proxy"},
				Description: ``,
				Args: []model.Arg{{
					Name: "host",
				}},
			}, {
				Name:        []string{"--registry"},
				Description: `Override configuration registry`,
				Args: []model.Arg{{
					Name: "url",
				}},
			}, {
				Name:        []string{"--no-progress"},
				Description: `Disable progress bar`,
			}, {
				Name:        []string{"--network-concurrency"},
				Description: `Maximum number of concurrent network requests`,
				Args: []model.Arg{{
					Name: "number",
				}},
			}, {
				Name:        []string{"--network-timeout"},
				Description: `TCP timeout for network requests`,
				Args: []model.Arg{{
					Name: "milliseconds",
				}},
			}, {
				Name:        []string{"--non-interactive"},
				Description: `Do not show interactive prompts`,
			}, {
				Name:        []string{"--scripts-prepend-node-path"},
				Description: `Prepend the node executable dir to the PATH in scripts`,
			}, {
				Name:        []string{"--no-node-version-check"},
				Description: `Do not warn when using a potentially unsupported Node version`,
			}, {
				Name:        []string{"--focus"},
				Description: `Focus on a single workspace by installing remote copies of its sibling workspaces`,
			}, {
				Name:        []string{"--otp"},
				Description: `One-time password for two factor authentication`,
				Args: []model.Arg{{
					Name: "otpcode",
				}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}, {
				Name:        []string{"--major"},
				Description: `Auto-increment major version number`,
			}, {
				Name:        []string{"--minor"},
				Description: `Auto-increment minor version number`,
			}, {
				Name:        []string{"--patch"},
				Description: `Auto-increment patch version number`,
			}, {
				Name:        []string{"--premajor"},
				Description: `Auto-increment premajor version number`,
			}, {
				Name:        []string{"--preminor"},
				Description: `Auto-increment preminor version number`,
			}, {
				Name:        []string{"--prepatch"},
				Description: `Auto-increment prepatch version number`,
			}, {
				Name:        []string{"--prerelease"},
				Description: `Auto-increment prerelease version number`,
			}, {
				Name:        []string{"--preid"},
				Description: `Add a custom identifier to the prerelease`,
				Args: []model.Arg{{
					Name: "preid",
				}},
			}, {
				Name:        []string{"--message"},
				Description: `Message`,
				Args: []model.Arg{{
					Name: "message",
				}},
			}, {
				Name:        []string{"--no-git-tag-version"},
				Description: `No git tag version`,
			}, {
				Name:        []string{"--no-commit-hooks"},
				Description: `Bypass git hooks when committing new version`,
			}, {
				Name:        []string{"--access"},
				Description: `Access`,
				Args: []model.Arg{{
					Name: "access",
				}},
			}, {
				Name:        []string{"--tag"},
				Description: `Tag`,
				Args: []model.Arg{{
					Name: "tag",
				}},
			}},
		}, {
			Name:        []string{"remove"},
			Description: `Remove installed package`,
			Args: []model.Arg{{
				FilterStrategy: model.FilterStrategyFuzzy,
				Generator:      nil, // TODO: port over generator
				IsVariadic:     true,
			}},
			Options: []model.Option{{
				Name:        []string{"-s", "--silent"},
				Description: `Skip Yarn console logs`,
			}, {
				Name:        []string{"--no-default-rc"},
				Description: `Prevent Yarn from automatically detecting yarnrc and npmrc files`,
			}, {
				Name:        []string{"--use-yarnrc"},
				Description: `Specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--verbose"},
				Description: `Output verbose messages on internal operations`,
			}, {
				Name:        []string{"--offline"},
				Description: `Trigger an error if any required dependencies are not available in local cache`,
			}, {
				Name:        []string{"--prefer-offline"},
				Description: `Use network only if dependencies are not available in local cache`,
			}, {
				Name:        []string{"--enable-pnp", "--pnp"},
				Description: `Enable the Plug'n'Play installation`,
			}, {
				Name:        []string{"--json"},
				Description: `Format Yarn log messages as lines of JSON`,
			}, {
				Name:        []string{"--ignore-scripts"},
				Description: `Don't run lifecycle scripts`,
			}, {
				Name:        []string{"--har"},
				Description: `Save HAR output of network traffic`,
			}, {
				Name:        []string{"--ignore-platform"},
				Description: `Ignore platform checks`,
			}, {
				Name:        []string{"--ignore-engines"},
				Description: `Ignore engines check`,
			}, {
				Name:        []string{"--ignore-optional"},
				Description: `Ignore optional dependencies`,
			}, {
				Name:        []string{"--force"},
				Description: `Install and build packages even if they were built before, overwrite lockfile`,
			}, {
				Name:        []string{"--skip-integrity-check"},
				Description: `Run install without checking if node_modules is installed`,
			}, {
				Name:        []string{"--check-files"},
				Description: `Install will verify file tree of packages for consistency`,
			}, {
				Name:        []string{"--no-bin-links"},
				Description: `Don't generate bin links when setting up packages`,
			}, {
				Name:        []string{"--flat"},
				Description: `Only allow one version of a package`,
			}, {
				Name:        []string{"--prod", "--production"},
				Description: `Instruct Yarn to ignore NODE_ENV and take its production-or-not status from this flag instead`,
			}, {
				Name:        []string{"--no-lockfile"},
				Description: `Don't read or generate a lockfile`,
			}, {
				Name:        []string{"--pure-lockfile"},
				Description: `Don't generate a lockfile`,
			}, {
				Name:        []string{"--frozen-lockfile"},
				Description: `Don't generate a lockfile and fail if an update is needed`,
			}, {
				Name:        []string{"--update-checksums"},
				Description: `Update package checksums from current repository`,
			}, {
				Name:        []string{"--link-duplicates"},
				Description: `Create hardlinks to the repeated modules in node_modules`,
			}, {
				Name:        []string{"--link-folder"},
				Description: `Specify a custom folder to store global links`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--global-folder"},
				Description: `Specify a custom folder to store global packages`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--modules-folder"},
				Description: `Rather than installing modules into the node_modules folder relative to the cwd, output them here`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--preferred-cache-folder"},
				Description: `Specify a custom folder to store the yarn cache if possible`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--cache-folder"},
				Description: `Specify a custom folder that must be used to store the yarn cache`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--mutex"},
				Description: `Use a mutex to ensure only one yarn instance is executing`,
				Args: []model.Arg{{
					Name: "type[:specifier]",
				}},
			}, {
				Name:        []string{"--emoji"},
				Description: `Enables emoji in output`,
				Args: []model.Arg{{
					Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
				}},
			}, {
				Name:        []string{"--cwd"},
				Description: `Working directory to use`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "cwd",
				}},
			}, {
				Name:        []string{"--proxy", "--https-proxy"},
				Description: ``,
				Args: []model.Arg{{
					Name: "host",
				}},
			}, {
				Name:        []string{"--registry"},
				Description: `Override configuration registry`,
				Args: []model.Arg{{
					Name: "url",
				}},
			}, {
				Name:        []string{"--no-progress"},
				Description: `Disable progress bar`,
			}, {
				Name:        []string{"--network-concurrency"},
				Description: `Maximum number of concurrent network requests`,
				Args: []model.Arg{{
					Name: "number",
				}},
			}, {
				Name:        []string{"--network-timeout"},
				Description: `TCP timeout for network requests`,
				Args: []model.Arg{{
					Name: "milliseconds",
				}},
			}, {
				Name:        []string{"--non-interactive"},
				Description: `Do not show interactive prompts`,
			}, {
				Name:        []string{"--scripts-prepend-node-path"},
				Description: `Prepend the node executable dir to the PATH in scripts`,
			}, {
				Name:        []string{"--no-node-version-check"},
				Description: `Do not warn when using a potentially unsupported Node version`,
			}, {
				Name:        []string{"--focus"},
				Description: `Focus on a single workspace by installing remote copies of its sibling workspaces`,
			}, {
				Name:        []string{"--otp"},
				Description: `One-time password for two factor authentication`,
				Args: []model.Arg{{
					Name: "otpcode",
				}},
			}, {
				Name:        []string{"-W", "--ignore-workspace-root-check"},
				Description: `Required to run yarn remove inside a workspace root`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"run"},
			Description: `Runs a defined package script`,
			Args: []model.Arg{{
				Name:           "script",
				Description:    `Script to run from your package.json`,
				FilterStrategy: model.FilterStrategyFuzzy,
				Generator:      nil, // TODO: port over generator
				IsCommand:      true,
			}, {
				Name:        "env",
				Description: `Lists environment variables available to scripts`,
				Suggestions: []model.Suggestion{{Name: []string{`env`}}},
				IsOptional:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"-s", "--silent"},
				Description: `Skip Yarn console logs`,
			}, {
				Name:        []string{"--no-default-rc"},
				Description: `Prevent Yarn from automatically detecting yarnrc and npmrc files`,
			}, {
				Name:        []string{"--use-yarnrc"},
				Description: `Specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--verbose"},
				Description: `Output verbose messages on internal operations`,
			}, {
				Name:        []string{"--offline"},
				Description: `Trigger an error if any required dependencies are not available in local cache`,
			}, {
				Name:        []string{"--prefer-offline"},
				Description: `Use network only if dependencies are not available in local cache`,
			}, {
				Name:        []string{"--enable-pnp", "--pnp"},
				Description: `Enable the Plug'n'Play installation`,
			}, {
				Name:        []string{"--json"},
				Description: `Format Yarn log messages as lines of JSON`,
			}, {
				Name:        []string{"--ignore-scripts"},
				Description: `Don't run lifecycle scripts`,
			}, {
				Name:        []string{"--har"},
				Description: `Save HAR output of network traffic`,
			}, {
				Name:        []string{"--ignore-platform"},
				Description: `Ignore platform checks`,
			}, {
				Name:        []string{"--ignore-engines"},
				Description: `Ignore engines check`,
			}, {
				Name:        []string{"--ignore-optional"},
				Description: `Ignore optional dependencies`,
			}, {
				Name:        []string{"--force"},
				Description: `Install and build packages even if they were built before, overwrite lockfile`,
			}, {
				Name:        []string{"--skip-integrity-check"},
				Description: `Run install without checking if node_modules is installed`,
			}, {
				Name:        []string{"--check-files"},
				Description: `Install will verify file tree of packages for consistency`,
			}, {
				Name:        []string{"--no-bin-links"},
				Description: `Don't generate bin links when setting up packages`,
			}, {
				Name:        []string{"--flat"},
				Description: `Only allow one version of a package`,
			}, {
				Name:        []string{"--prod", "--production"},
				Description: `Instruct Yarn to ignore NODE_ENV and take its production-or-not status from this flag instead`,
			}, {
				Name:        []string{"--no-lockfile"},
				Description: `Don't read or generate a lockfile`,
			}, {
				Name:        []string{"--pure-lockfile"},
				Description: `Don't generate a lockfile`,
			}, {
				Name:        []string{"--frozen-lockfile"},
				Description: `Don't generate a lockfile and fail if an update is needed`,
			}, {
				Name:        []string{"--update-checksums"},
				Description: `Update package checksums from current repository`,
			}, {
				Name:        []string{"--link-duplicates"},
				Description: `Create hardlinks to the repeated modules in node_modules`,
			}, {
				Name:        []string{"--link-folder"},
				Description: `Specify a custom folder to store global links`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--global-folder"},
				Description: `Specify a custom folder to store global packages`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--modules-folder"},
				Description: `Rather than installing modules into the node_modules folder relative to the cwd, output them here`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--preferred-cache-folder"},
				Description: `Specify a custom folder to store the yarn cache if possible`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--cache-folder"},
				Description: `Specify a custom folder that must be used to store the yarn cache`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--mutex"},
				Description: `Use a mutex to ensure only one yarn instance is executing`,
				Args: []model.Arg{{
					Name: "type[:specifier]",
				}},
			}, {
				Name:        []string{"--emoji"},
				Description: `Enables emoji in output`,
				Args: []model.Arg{{
					Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
				}},
			}, {
				Name:        []string{"--cwd"},
				Description: `Working directory to use`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "cwd",
				}},
			}, {
				Name:        []string{"--proxy", "--https-proxy"},
				Description: ``,
				Args: []model.Arg{{
					Name: "host",
				}},
			}, {
				Name:        []string{"--registry"},
				Description: `Override configuration registry`,
				Args: []model.Arg{{
					Name: "url",
				}},
			}, {
				Name:        []string{"--no-progress"},
				Description: `Disable progress bar`,
			}, {
				Name:        []string{"--network-concurrency"},
				Description: `Maximum number of concurrent network requests`,
				Args: []model.Arg{{
					Name: "number",
				}},
			}, {
				Name:        []string{"--network-timeout"},
				Description: `TCP timeout for network requests`,
				Args: []model.Arg{{
					Name: "milliseconds",
				}},
			}, {
				Name:        []string{"--non-interactive"},
				Description: `Do not show interactive prompts`,
			}, {
				Name:        []string{"--scripts-prepend-node-path"},
				Description: `Prepend the node executable dir to the PATH in scripts`,
			}, {
				Name:        []string{"--no-node-version-check"},
				Description: `Do not warn when using a potentially unsupported Node version`,
			}, {
				Name:        []string{"--focus"},
				Description: `Focus on a single workspace by installing remote copies of its sibling workspaces`,
			}, {
				Name:        []string{"--otp"},
				Description: `One-time password for two factor authentication`,
				Args: []model.Arg{{
					Name: "otpcode",
				}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"tag"},
			Description: `Add, remove, or list tags on a package`,
		}, {
			Name:        []string{"team"},
			Description: `Maintain team memberships`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"create"},
				Description: `Create a new team`,
				Args: []model.Arg{{
					Name: "<scope:team>",
				}},
			}, {
				Name:        []string{"destroy"},
				Description: `Destroys an existing team`,
				Args: []model.Arg{{
					Name: "<scope:team>",
				}},
			}, {
				Name:        []string{"add"},
				Description: `Add a user to an existing team`,
				Args: []model.Arg{{
					Name: "<scope:team>",
				}, {
					Name: "<user>",
				}},
			}, {
				Name:        []string{"remove"},
				Description: `Remove a user from a team they belong to`,
				Args: []model.Arg{{
					Name: "<scope:team> <user>",
				}},
			}, {
				Name:        []string{"list"},
				Description: `If performed on an organization name, will return a list of existing teams under that organization. If performed on a team, it will instead return a list of all users belonging to that particular team`,
				Args: []model.Arg{{
					Name: "<scope>|<scope:team>",
				}},
			}},
		}, {
			Name:        []string{"unlink"},
			Description: `Unlink a previously created symlink for a package`,
		}, {
			Name:        []string{"unplug"},
			Description: ``,
		}, {
			Name:        []string{"upgrade"},
			Description: `Upgrades packages to their latest version based on the specified range`,
			Args: []model.Arg{{
				Name:           "package",
				FilterStrategy: model.FilterStrategyFuzzy,
				Generator:      nil, // TODO: port over generator
				IsOptional:     true,
				IsVariadic:     true,
			}},
			Options: []model.Option{{
				Name:        []string{"-s", "--silent"},
				Description: `Skip Yarn console logs`,
			}, {
				Name:        []string{"--no-default-rc"},
				Description: `Prevent Yarn from automatically detecting yarnrc and npmrc files`,
			}, {
				Name:        []string{"--use-yarnrc"},
				Description: `Specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--verbose"},
				Description: `Output verbose messages on internal operations`,
			}, {
				Name:        []string{"--offline"},
				Description: `Trigger an error if any required dependencies are not available in local cache`,
			}, {
				Name:        []string{"--prefer-offline"},
				Description: `Use network only if dependencies are not available in local cache`,
			}, {
				Name:        []string{"--enable-pnp", "--pnp"},
				Description: `Enable the Plug'n'Play installation`,
			}, {
				Name:        []string{"--json"},
				Description: `Format Yarn log messages as lines of JSON`,
			}, {
				Name:        []string{"--ignore-scripts"},
				Description: `Don't run lifecycle scripts`,
			}, {
				Name:        []string{"--har"},
				Description: `Save HAR output of network traffic`,
			}, {
				Name:        []string{"--ignore-platform"},
				Description: `Ignore platform checks`,
			}, {
				Name:        []string{"--ignore-engines"},
				Description: `Ignore engines check`,
			}, {
				Name:        []string{"--ignore-optional"},
				Description: `Ignore optional dependencies`,
			}, {
				Name:        []string{"--force"},
				Description: `Install and build packages even if they were built before, overwrite lockfile`,
			}, {
				Name:        []string{"--skip-integrity-check"},
				Description: `Run install without checking if node_modules is installed`,
			}, {
				Name:        []string{"--check-files"},
				Description: `Install will verify file tree of packages for consistency`,
			}, {
				Name:        []string{"--no-bin-links"},
				Description: `Don't generate bin links when setting up packages`,
			}, {
				Name:        []string{"--flat"},
				Description: `Only allow one version of a package`,
			}, {
				Name:        []string{"--prod", "--production"},
				Description: `Instruct Yarn to ignore NODE_ENV and take its production-or-not status from this flag instead`,
			}, {
				Name:        []string{"--no-lockfile"},
				Description: `Don't read or generate a lockfile`,
			}, {
				Name:        []string{"--pure-lockfile"},
				Description: `Don't generate a lockfile`,
			}, {
				Name:        []string{"--frozen-lockfile"},
				Description: `Don't generate a lockfile and fail if an update is needed`,
			}, {
				Name:        []string{"--update-checksums"},
				Description: `Update package checksums from current repository`,
			}, {
				Name:        []string{"--link-duplicates"},
				Description: `Create hardlinks to the repeated modules in node_modules`,
			}, {
				Name:        []string{"--link-folder"},
				Description: `Specify a custom folder to store global links`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--global-folder"},
				Description: `Specify a custom folder to store global packages`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--modules-folder"},
				Description: `Rather than installing modules into the node_modules folder relative to the cwd, output them here`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--preferred-cache-folder"},
				Description: `Specify a custom folder to store the yarn cache if possible`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--cache-folder"},
				Description: `Specify a custom folder that must be used to store the yarn cache`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--mutex"},
				Description: `Use a mutex to ensure only one yarn instance is executing`,
				Args: []model.Arg{{
					Name: "type[:specifier]",
				}},
			}, {
				Name:        []string{"--emoji"},
				Description: `Enables emoji in output`,
				Args: []model.Arg{{
					Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
				}},
			}, {
				Name:        []string{"--cwd"},
				Description: `Working directory to use`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "cwd",
				}},
			}, {
				Name:        []string{"--proxy", "--https-proxy"},
				Description: ``,
				Args: []model.Arg{{
					Name: "host",
				}},
			}, {
				Name:        []string{"--registry"},
				Description: `Override configuration registry`,
				Args: []model.Arg{{
					Name: "url",
				}},
			}, {
				Name:        []string{"--no-progress"},
				Description: `Disable progress bar`,
			}, {
				Name:        []string{"--network-concurrency"},
				Description: `Maximum number of concurrent network requests`,
				Args: []model.Arg{{
					Name: "number",
				}},
			}, {
				Name:        []string{"--network-timeout"},
				Description: `TCP timeout for network requests`,
				Args: []model.Arg{{
					Name: "milliseconds",
				}},
			}, {
				Name:        []string{"--non-interactive"},
				Description: `Do not show interactive prompts`,
			}, {
				Name:        []string{"--scripts-prepend-node-path"},
				Description: `Prepend the node executable dir to the PATH in scripts`,
			}, {
				Name:        []string{"--no-node-version-check"},
				Description: `Do not warn when using a potentially unsupported Node version`,
			}, {
				Name:        []string{"--focus"},
				Description: `Focus on a single workspace by installing remote copies of its sibling workspaces`,
			}, {
				Name:        []string{"--otp"},
				Description: `One-time password for two factor authentication`,
				Args: []model.Arg{{
					Name: "otpcode",
				}},
			}, {
				Name:        []string{"-S", "--scope"},
				Description: `Upgrade packages under the specified scope`,
				Args: []model.Arg{{
					Name: "scope",
				}},
			}, {
				Name:        []string{"-L", "--latest"},
				Description: `List the latest version of packages`,
			}, {
				Name:        []string{"-E", "--exact"},
				Description: `Install exact version. Only used when --latest is specified`,
			}, {
				Name:        []string{"-P", "--pattern"},
				Description: `Upgrade packages that match pattern`,
				Args: []model.Arg{{
					Name: "pattern",
				}},
			}, {
				Name:        []string{"-T", "--tilde"},
				Description: `Install most recent release with the same minor version. Only used when --latest is specified`,
			}, {
				Name:        []string{"-C", "--caret"},
				Description: `Install most recent release with the same major version. Only used when --latest is specified`,
			}, {
				Name:        []string{"-A", "--audit"},
				Description: `Run vulnerability audit on installed packages`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"upgrade-interactive"},
			Description: `Upgrades packages in interactive mode`,
			Options: []model.Option{{
				Name:        []string{"--latest"},
				Description: `Use the version tagged latest in the registry`,
			}},
		}, {
			Name:        []string{"version"},
			Description: `Update version of your package`,
			Options: []model.Option{{
				Name:        []string{"-s", "--silent"},
				Description: `Skip Yarn console logs`,
			}, {
				Name:        []string{"--no-default-rc"},
				Description: `Prevent Yarn from automatically detecting yarnrc and npmrc files`,
			}, {
				Name:        []string{"--use-yarnrc"},
				Description: `Specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--verbose"},
				Description: `Output verbose messages on internal operations`,
			}, {
				Name:        []string{"--offline"},
				Description: `Trigger an error if any required dependencies are not available in local cache`,
			}, {
				Name:        []string{"--prefer-offline"},
				Description: `Use network only if dependencies are not available in local cache`,
			}, {
				Name:        []string{"--enable-pnp", "--pnp"},
				Description: `Enable the Plug'n'Play installation`,
			}, {
				Name:        []string{"--json"},
				Description: `Format Yarn log messages as lines of JSON`,
			}, {
				Name:        []string{"--ignore-scripts"},
				Description: `Don't run lifecycle scripts`,
			}, {
				Name:        []string{"--har"},
				Description: `Save HAR output of network traffic`,
			}, {
				Name:        []string{"--ignore-platform"},
				Description: `Ignore platform checks`,
			}, {
				Name:        []string{"--ignore-engines"},
				Description: `Ignore engines check`,
			}, {
				Name:        []string{"--ignore-optional"},
				Description: `Ignore optional dependencies`,
			}, {
				Name:        []string{"--force"},
				Description: `Install and build packages even if they were built before, overwrite lockfile`,
			}, {
				Name:        []string{"--skip-integrity-check"},
				Description: `Run install without checking if node_modules is installed`,
			}, {
				Name:        []string{"--check-files"},
				Description: `Install will verify file tree of packages for consistency`,
			}, {
				Name:        []string{"--no-bin-links"},
				Description: `Don't generate bin links when setting up packages`,
			}, {
				Name:        []string{"--flat"},
				Description: `Only allow one version of a package`,
			}, {
				Name:        []string{"--prod", "--production"},
				Description: `Instruct Yarn to ignore NODE_ENV and take its production-or-not status from this flag instead`,
			}, {
				Name:        []string{"--no-lockfile"},
				Description: `Don't read or generate a lockfile`,
			}, {
				Name:        []string{"--pure-lockfile"},
				Description: `Don't generate a lockfile`,
			}, {
				Name:        []string{"--frozen-lockfile"},
				Description: `Don't generate a lockfile and fail if an update is needed`,
			}, {
				Name:        []string{"--update-checksums"},
				Description: `Update package checksums from current repository`,
			}, {
				Name:        []string{"--link-duplicates"},
				Description: `Create hardlinks to the repeated modules in node_modules`,
			}, {
				Name:        []string{"--link-folder"},
				Description: `Specify a custom folder to store global links`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--global-folder"},
				Description: `Specify a custom folder to store global packages`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--modules-folder"},
				Description: `Rather than installing modules into the node_modules folder relative to the cwd, output them here`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--preferred-cache-folder"},
				Description: `Specify a custom folder to store the yarn cache if possible`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--cache-folder"},
				Description: `Specify a custom folder that must be used to store the yarn cache`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--mutex"},
				Description: `Use a mutex to ensure only one yarn instance is executing`,
				Args: []model.Arg{{
					Name: "type[:specifier]",
				}},
			}, {
				Name:        []string{"--emoji"},
				Description: `Enables emoji in output`,
				Args: []model.Arg{{
					Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
				}},
			}, {
				Name:        []string{"--cwd"},
				Description: `Working directory to use`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "cwd",
				}},
			}, {
				Name:        []string{"--proxy", "--https-proxy"},
				Description: ``,
				Args: []model.Arg{{
					Name: "host",
				}},
			}, {
				Name:        []string{"--registry"},
				Description: `Override configuration registry`,
				Args: []model.Arg{{
					Name: "url",
				}},
			}, {
				Name:        []string{"--no-progress"},
				Description: `Disable progress bar`,
			}, {
				Name:        []string{"--network-concurrency"},
				Description: `Maximum number of concurrent network requests`,
				Args: []model.Arg{{
					Name: "number",
				}},
			}, {
				Name:        []string{"--network-timeout"},
				Description: `TCP timeout for network requests`,
				Args: []model.Arg{{
					Name: "milliseconds",
				}},
			}, {
				Name:        []string{"--non-interactive"},
				Description: `Do not show interactive prompts`,
			}, {
				Name:        []string{"--scripts-prepend-node-path"},
				Description: `Prepend the node executable dir to the PATH in scripts`,
			}, {
				Name:        []string{"--no-node-version-check"},
				Description: `Do not warn when using a potentially unsupported Node version`,
			}, {
				Name:        []string{"--focus"},
				Description: `Focus on a single workspace by installing remote copies of its sibling workspaces`,
			}, {
				Name:        []string{"--otp"},
				Description: `One-time password for two factor authentication`,
				Args: []model.Arg{{
					Name: "otpcode",
				}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}, {
				Name:        []string{"--new-version"},
				Description: `New version`,
				Args: []model.Arg{{
					Name: "version",
				}},
			}, {
				Name:        []string{"--major"},
				Description: `Auto-increment major version number`,
			}, {
				Name:        []string{"--minor"},
				Description: `Auto-increment minor version number`,
			}, {
				Name:        []string{"--patch"},
				Description: `Auto-increment patch version number`,
			}, {
				Name:        []string{"--premajor"},
				Description: `Auto-increment premajor version number`,
			}, {
				Name:        []string{"--preminor"},
				Description: `Auto-increment preminor version number`,
			}, {
				Name:        []string{"--prepatch"},
				Description: `Auto-increment prepatch version number`,
			}, {
				Name:        []string{"--prerelease"},
				Description: `Auto-increment prerelease version number`,
			}, {
				Name:        []string{"--preid"},
				Description: `Add a custom identifier to the prerelease`,
				Args: []model.Arg{{
					Name: "preid",
				}},
			}, {
				Name:        []string{"--message"},
				Description: `Message`,
				Args: []model.Arg{{
					Name: "message",
				}},
			}, {
				Name:        []string{"--no-git-tag-version"},
				Description: `No git tag version`,
			}, {
				Name:        []string{"--no-commit-hooks"},
				Description: `Bypass git hooks when committing new version`,
			}, {
				Name:        []string{"--access"},
				Description: `Access`,
				Args: []model.Arg{{
					Name: "access",
				}},
			}, {
				Name:        []string{"--tag"},
				Description: `Tag`,
				Args: []model.Arg{{
					Name: "tag",
				}},
			}},
		}, {
			Name:        []string{"versions"},
			Description: `Displays version information of the currently installed Yarn, Node.js, and its dependencies`,
		}, {
			Name:        []string{"why"},
			Description: `Show information about why a package is installed`,
			Args: []model.Arg{{
				Name:           "package",
				FilterStrategy: model.FilterStrategyFuzzy,
				Generator:      nil, // TODO: port over generator
			}},
			Options: []model.Option{{
				Name:        []string{"-s", "--silent"},
				Description: `Skip Yarn console logs`,
			}, {
				Name:        []string{"--no-default-rc"},
				Description: `Prevent Yarn from automatically detecting yarnrc and npmrc files`,
			}, {
				Name:        []string{"--use-yarnrc"},
				Description: `Specifies a yarnrc file that Yarn should use (.yarnrc only, not .npmrc) (default: )`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--verbose"},
				Description: `Output verbose messages on internal operations`,
			}, {
				Name:        []string{"--offline"},
				Description: `Trigger an error if any required dependencies are not available in local cache`,
			}, {
				Name:        []string{"--prefer-offline"},
				Description: `Use network only if dependencies are not available in local cache`,
			}, {
				Name:        []string{"--enable-pnp", "--pnp"},
				Description: `Enable the Plug'n'Play installation`,
			}, {
				Name:        []string{"--json"},
				Description: `Format Yarn log messages as lines of JSON`,
			}, {
				Name:        []string{"--ignore-scripts"},
				Description: `Don't run lifecycle scripts`,
			}, {
				Name:        []string{"--har"},
				Description: `Save HAR output of network traffic`,
			}, {
				Name:        []string{"--ignore-platform"},
				Description: `Ignore platform checks`,
			}, {
				Name:        []string{"--ignore-engines"},
				Description: `Ignore engines check`,
			}, {
				Name:        []string{"--ignore-optional"},
				Description: `Ignore optional dependencies`,
			}, {
				Name:        []string{"--force"},
				Description: `Install and build packages even if they were built before, overwrite lockfile`,
			}, {
				Name:        []string{"--skip-integrity-check"},
				Description: `Run install without checking if node_modules is installed`,
			}, {
				Name:        []string{"--check-files"},
				Description: `Install will verify file tree of packages for consistency`,
			}, {
				Name:        []string{"--no-bin-links"},
				Description: `Don't generate bin links when setting up packages`,
			}, {
				Name:        []string{"--flat"},
				Description: `Only allow one version of a package`,
			}, {
				Name:        []string{"--prod", "--production"},
				Description: `Instruct Yarn to ignore NODE_ENV and take its production-or-not status from this flag instead`,
			}, {
				Name:        []string{"--no-lockfile"},
				Description: `Don't read or generate a lockfile`,
			}, {
				Name:        []string{"--pure-lockfile"},
				Description: `Don't generate a lockfile`,
			}, {
				Name:        []string{"--frozen-lockfile"},
				Description: `Don't generate a lockfile and fail if an update is needed`,
			}, {
				Name:        []string{"--update-checksums"},
				Description: `Update package checksums from current repository`,
			}, {
				Name:        []string{"--link-duplicates"},
				Description: `Create hardlinks to the repeated modules in node_modules`,
			}, {
				Name:        []string{"--link-folder"},
				Description: `Specify a custom folder to store global links`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--global-folder"},
				Description: `Specify a custom folder to store global packages`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--modules-folder"},
				Description: `Rather than installing modules into the node_modules folder relative to the cwd, output them here`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--preferred-cache-folder"},
				Description: `Specify a custom folder to store the yarn cache if possible`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--cache-folder"},
				Description: `Specify a custom folder that must be used to store the yarn cache`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "path",
				}},
			}, {
				Name:        []string{"--mutex"},
				Description: `Use a mutex to ensure only one yarn instance is executing`,
				Args: []model.Arg{{
					Name: "type[:specifier]",
				}},
			}, {
				Name:        []string{"--emoji"},
				Description: `Enables emoji in output`,
				Args: []model.Arg{{
					Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
				}},
			}, {
				Name:        []string{"--cwd"},
				Description: `Working directory to use`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "cwd",
				}},
			}, {
				Name:        []string{"--proxy", "--https-proxy"},
				Description: ``,
				Args: []model.Arg{{
					Name: "host",
				}},
			}, {
				Name:        []string{"--registry"},
				Description: `Override configuration registry`,
				Args: []model.Arg{{
					Name: "url",
				}},
			}, {
				Name:        []string{"--no-progress"},
				Description: `Disable progress bar`,
			}, {
				Name:        []string{"--network-concurrency"},
				Description: `Maximum number of concurrent network requests`,
				Args: []model.Arg{{
					Name: "number",
				}},
			}, {
				Name:        []string{"--network-timeout"},
				Description: `TCP timeout for network requests`,
				Args: []model.Arg{{
					Name: "milliseconds",
				}},
			}, {
				Name:        []string{"--non-interactive"},
				Description: `Do not show interactive prompts`,
			}, {
				Name:        []string{"--scripts-prepend-node-path"},
				Description: `Prepend the node executable dir to the PATH in scripts`,
			}, {
				Name:        []string{"--no-node-version-check"},
				Description: `Do not warn when using a potentially unsupported Node version`,
			}, {
				Name:        []string{"--focus"},
				Description: `Focus on a single workspace by installing remote copies of its sibling workspaces`,
			}, {
				Name:        []string{"--otp"},
				Description: `One-time password for two factor authentication`,
				Args: []model.Arg{{
					Name: "otpcode",
				}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}, {
				Name:        []string{"--peers"},
				Description: `Print the peer dependencies that match the specified name`,
			}, {
				Name:        []string{"-R", "--recursive"},
				Description: `List, for each workspace, what are all the paths that lead to the dependency`,
			}},
		}, {
			Name:           []string{"workspace"},
			Description:    `Manage workspace`,
			FilterStrategy: model.FilterStrategyFuzzy,
		}, {
			Name:        []string{"workspaces"},
			Description: `Show information about your workspaces`,
			Options: []model.Option{{
				Name:        []string{"subcommand"},
				Description: ``,
				Args: []model.Arg{{
					Suggestions: []model.Suggestion{{
						Name: []string{`info`},
					}, {
						Name: []string{`run`},
					}},
				}},
			}, {
				Name:        []string{"flags"},
				Description: ``,
			}},
		}, {
			Name:        []string{"set"},
			Description: `Set global Yarn options`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"resolution"},
				Description: `Enforce a package resolution`,
				Args: []model.Arg{{
					Name:        "descriptor",
					Description: `A descriptor for the package, in the form of 'lodash@npm:^1.2.3'`,
				}, {
					Name:        "resolution",
					Description: `The version of the package to resolve`,
				}},
				Options: []model.Option{{
					Name:        []string{"-s", "--save"},
					Description: `Persist the resolution inside the top-level manifest`,
				}},
			}, {
				Name:        []string{"version"},
				Description: `Lock the Yarn version used by the project`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFilepaths},
					Name:        "version",
					Description: `Use the specified version, which can also be a Yarn 2 build (e.g 2.0.0-rc.30) or a Yarn 1 build (e.g 1.22.1)`,
					Suggestions: []model.Suggestion{{
						Name: []string{`from-sources`},
					}, {Name: []string{`latest`}}, {Name: []string{`canary`}}, {Name: []string{`classic`}}, {Name: []string{`self`}}},
				}},
				Options: []model.Option{{
					Name:        []string{"--only-if-needed"},
					Description: `Only lock the Yarn version if it isn't already locked`,
				}},
			}},
		}},
	}
}
