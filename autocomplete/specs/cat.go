// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["cat"] = model.Subcommand{
		Name:        []string{"cat"},
		Description: `Concatenate and print files`,
		Args: []model.Arg{{
			Templates:  []model.Template{model.TemplateFilepaths},
			IsVariadic: true,
		}},
		Options: []model.Option{{
			Name:        []string{"-b"},
			Description: `Number the non-blank output lines, starting at 1`,
		}, {
			Name:        []string{"-e"},
			Description: `Display non-printing characters (see the -v option), and display a dollar sign (‘$’) at the end of each line`,
		}, {
			Name:        []string{"-l"},
			Description: `Set an exclusive advisory lock on the standard output file descriptor.  This lock is set using fcntl(2) with the F_SETLKW command. If the output file is already locked, cat will block until the lock is acquired`,
		}, {
			Name:        []string{"-n"},
			Description: `Number the output lines, starting at 1`,
		}, {
			Name:        []string{"-s"},
			Description: `Squeeze multiple adjacent empty lines, causing the output to be single spaced`,
		}, {
			Name:        []string{"-t"},
			Description: `Display non-printing characters (see the -v option), and display tab characters as ‘^I’`,
		}, {
			Name:        []string{"-u"},
			Description: `Disable output buffering`,
		}, {
			Name:        []string{"-v"},
			Description: `Display non-printing characters so they are visible.  Control characters print as ‘^X’ for control-X; the delete character (octal 0177) prints as ‘^?’.  Non-ASCII characters (with the high bit set) are printed as ‘M-’ (for meta) followed by the character for the low 7 bits`,
		}},
	}
}
