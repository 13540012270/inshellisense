// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["cf"] = model.Subcommand{
		Name:        []string{"cf"},
		Description: `Cloudfoundry cli`,
		Options: []model.Option{{
			Name:        []string{"--help", "-h"},
			Description: `Show help for Cloud Foundry command line tool`,
		}, {
			Name:        []string{"-v"},
			Description: `Print API request diagnostics to stdout`,
		}},
		Subcommands: []model.Subcommand{{
			Name:        []string{"app", "a"},
			Description: `Display health and status for app`,
			Args: []model.Arg{{
				Name:        "APP_NAME",
				Description: `The app you want to get health and status for`,
				Generator:   nil, // TODO: port over generator
			}},
			Options: []model.Option{{
				Name:        []string{"--guid"},
				Description: `Retrieve and display the given app's guid.  All other health and status output for the app is suppressed`,
			}},
		}, {
			Name:        []string{"ssh"},
			Description: `Display health and status for app`,
			Args: []model.Arg{{
				Name:        "APP_NAME",
				Description: `The app you want to ssh into`,
				Generator:   nil, // TODO: port over generator
			}},
			Options: []model.Option{{
				Name:        []string{"-v"},
				Description: `Verbose output`,
			}},
		}, {
			Name:        []string{"env"},
			Description: `Show all env variables for an app`,
			Args: []model.Arg{{
				Name:        "APP_NAME",
				Description: `The app you want to get env vars for`,
				Generator:   nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"orgs"},
			Description: `List all orgs`,
		}, {
			Name:        []string{"version", "-v", "--version"},
			Description: `Print the version of cf`,
		}, {
			Name:        []string{"login"},
			Description: `Log user in`,
			Options: []model.Option{{
				Name:        []string{"-a"},
				Description: `API endpoint (e.g. https://api.example.com)`,
				Args: []model.Arg{{
					Name: "API endpoint",
				}},
			}, {
				Name:        []string{"-o"},
				Description: `Org`,
				Args: []model.Arg{{
					Name:      "Org",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-s"},
				Description: `Space`,
				Args: []model.Arg{{
					Name:      "Space",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-p"},
				Description: `Password`,
				Args: []model.Arg{{
					Name: "Password",
				}},
			}, {
				Name:        []string{"-u"},
				Description: `Username`,
				Args: []model.Arg{{
					Name: "Username",
				}},
			}},
		}, {
			Name:        []string{"logout"},
			Description: `Log user out`,
		}, {
			Name:        []string{"password"},
			Description: `Change user password`,
		}, {
			Name:        []string{"target"},
			Description: `Set or view the targeted org or space`,
			Options: []model.Option{{
				Name:        []string{"-o"},
				Description: `Org`,
				Args: []model.Arg{{
					Name:      "Org",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-s"},
				Description: `Space`,
				Args: []model.Arg{{
					Name:      "Space",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"api"},
			Description: `Set or view target api url`,
			Args: []model.Arg{{
				Name:        "url",
				Description: `API endpoint`,
				IsOptional:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"--skip-ssl-validation"},
				Description: `Skip verification of the API endpoint. Not recommended!`,
			}, {
				Name:        []string{"--unset"},
				Description: `Remove all api endpoint targeting`,
			}},
		}, {
			Name:        []string{"auth"},
			Description: `Auth user non-interactively`,
			Args: []model.Arg{{
				Name: "username",
			}, {
				Name: "password",
			}},
		}, {
			Name:        []string{"apps"},
			Description: `List all apps in the target space`,
		}, {
			Name:        []string{"push"},
			Description: `Push a new app or sync changes to an existing app`,
			Options: []model.Option{{
				Name:        []string{"-b"},
				Description: `Custom buildpack by name or git url`,
				Args: []model.Arg{{
					Name: "Buildpack",
				}},
			}, {
				Name:        []string{"-c"},
				Description: `Startup command, set to null to reset to default start command`,
				Args: []model.Arg{{
					Name:       "Command",
					IsOptional: true,
				}},
			}, {
				Name:        []string{"-d"},
				Description: `Domain`,
				Args: []model.Arg{{
					Name: "Domain",
				}},
			}, {
				Name:        []string{"-o", "--docker-image"},
				Description: `Docker image`,
				Args: []model.Arg{{
					Name: "Docker image",
				}},
			}, {
				Name:        []string{"-f"},
				Description: `Path to manifest`,
				Args: []model.Arg{{
					Name: "Path to manifest",
				}},
			}, {
				Name:        []string{"-n", "--host-name"},
				Description: `Hostname`,
				Args: []model.Arg{{
					Name: "Hostname",
				}},
			}, {
				Name:        []string{"-i"},
				Description: `Number of instances`,
				Args: []model.Arg{{
					Name: "Number of instances",
				}},
			}, {
				Name:        []string{"-k"},
				Description: `Disk limit`,
				Args: []model.Arg{{
					Name: "Disk limit",
				}},
			}, {
				Name:        []string{"-m"},
				Description: `Memory limit`,
				Args: []model.Arg{{
					Name: "Memory limit",
				}},
			}},
		}, {
			Name:        []string{"scale"},
			Description: `Change or view the instance count, disk space limit, and memory limit for an app`,
			Options: []model.Option{{
				Name:        []string{"-f"},
				Description: `Force restart of app without prompt`,
			}, {
				Name:        []string{"-i"},
				Description: `Number of instances`,
				Args: []model.Arg{{
					Name: "Number of instances",
				}},
			}, {
				Name:        []string{"-k"},
				Description: `Disk limit`,
				Args: []model.Arg{{
					Name: "Disk limit",
				}},
			}, {
				Name:        []string{"-m"},
				Description: `Memory limit`,
				Args: []model.Arg{{
					Name: "Memory limit",
				}},
			}},
		}, {
			Name:        []string{"delete"},
			Description: `Delete an app`,
			Args: []model.Arg{{
				Name:        "APP_NAME",
				Description: `The app you want to get health and status for`,
				Generator:   nil, // TODO: port over generator
			}},
			Options: []model.Option{{
				Name:        []string{"-f"},
				Description: `Force deletion without confirmation`,
			}, {
				Name:        []string{"-r"},
				Description: `Also delete any mapped routes`,
			}},
		}, {
			Name:        []string{"rename"},
			Description: `Rename an app`,
			Args: []model.Arg{{
				Name:      "APP_NAME",
				Generator: nil, // TODO: port over generator
			}, {
				Name: "new app name",
			}},
		}, {
			Name:        []string{"start"},
			Description: `Start an app`,
			Args: []model.Arg{{
				Name:      "APP_NAME",
				Generator: nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"stop"},
			Description: `Stop an app`,
			Args: []model.Arg{{
				Name:      "APP_NAME",
				Generator: nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"restart"},
			Description: `Stop all instances of the app, then start them again. This may cause downtime`,
			Args: []model.Arg{{
				Name:      "APP_NAME",
				Generator: nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"restage"},
			Description: `Recreate the app's executable artifact using the latest pushed app files and the latest environment (variables, service bindings, buildpack, stack, etc.)`,
			Args: []model.Arg{{
				Name:      "APP_NAME",
				Generator: nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"restart-app-instance"},
			Description: `Terminate the running application Instance at the given index and instantiate a new instance of the application with the same index`,
			Args: []model.Arg{{
				Name:      "APP_NAME",
				Generator: nil, // TODO: port over generator
			}, {
				Name: "index",
			}},
		}, {
			Name:        []string{"run-task"},
			Description: `Run a one-off task on an app`,
			Args: []model.Arg{{
				Name:      "APP_NAME",
				Generator: nil, // TODO: port over generator
			}, {
				Name: "command",
			}},
			Options: []model.Option{{
				Name:        []string{"-k"},
				Description: `Disk limit`,
				Args: []model.Arg{{
					Name: "Disk limit",
				}},
			}, {
				Name:        []string{"-m"},
				Description: `Memory limit`,
				Args: []model.Arg{{
					Name: "Memory limit",
				}},
			}, {
				Name:        []string{"--name"},
				Description: `Name for task`,
				Args: []model.Arg{{
					Name: "Name for task",
				}},
			}},
		}, {
			Name:        []string{"tasks"},
			Description: `List tasks of an app`,
			Args: []model.Arg{{
				Name:      "APP_NAME",
				Generator: nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"terminate-task"},
			Description: `Terminate a running task of an app`,
			Args: []model.Arg{{
				Name:      "APP_NAME",
				Generator: nil, // TODO: port over generator
			}, {
				Name: "task id",
			}},
		}, {
			Name:        []string{"events"},
			Description: `Show recent app events`,
			Args: []model.Arg{{
				Name:      "APP_NAME",
				Generator: nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"files"},
			Description: `Print out a list of files in a directory or the contents of a specific file of an app running on the DEA backend`,
			Args: []model.Arg{{
				Name:      "APP_NAME",
				Generator: nil, // TODO: port over generator
			}, {
				Name:       "path",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-i"},
				Description: `Instance`,
				Args: []model.Arg{{
					Name: "instance",
				}},
			}},
		}, {
			Name:        []string{"logs"},
			Description: `Trail or show recent logs for an app`,
			Args: []model.Arg{{
				Name:      "APP_NAME",
				Generator: nil, // TODO: port over generator
			}},
			Options: []model.Option{{
				Name:        []string{"--recent"},
				Description: `Dump recent logs instead of tailing`,
			}},
		}, {
			Name:        []string{"set-env"},
			Description: `Set an environment variable for an app`,
			Args: []model.Arg{{
				Name:      "APP_NAME",
				Generator: nil, // TODO: port over generator
			}, {
				Name: "env var name",
			}, {
				Name: "env var value",
			}},
		}, {
			Name:        []string{"unset-env"},
			Description: `Remove an environment variable`,
			Args: []model.Arg{{
				Name:      "APP_NAME",
				Generator: nil, // TODO: port over generator
			}, {
				Name: "env var name",
			}},
		}, {
			Name:        []string{"stacks"},
			Description: `List all stacks (a stack is a pre-built file system, including an operating system, that can run apps)`,
		}, {
			Name:        []string{"copy-source"},
			Description: `Copies the source code of an application to another existing application (and restarts that application)`,
			Args: []model.Arg{{
				Name: "source app",
			}, {
				Name: "target app",
			}},
			Options: []model.Option{{
				Name:        []string{"-s"},
				Description: `Space that contains the target application`,
				Args: []model.Arg{{
					Name:      "space",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-o"},
				Description: `Org that contains the target application`,
				Args: []model.Arg{{
					Name:      "org",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--no-restart"},
				Description: `Override restart of the application in target environment after copy-source completes`,
			}},
		}, {
			Name:        []string{"create-app-manifest"},
			Description: `Create an app manifest for an app that has been pushed successfully`,
			Args: []model.Arg{{
				Name:      "APP_NAME",
				Generator: nil, // TODO: port over generator
			}},
			Options: []model.Option{{
				Name:        []string{"-p"},
				Description: `Path for file creation`,
				Args: []model.Arg{{
					Name: "path",
				}},
			}},
		}, {
			Name:        []string{"get-health-check"},
			Description: `Show the type of health check performed on an app`,
			Args: []model.Arg{{
				Name:      "APP_NAME",
				Generator: nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"set-health-check"},
			Description: `Change type of health check performed on an app`,
			Args: []model.Arg{{
				Name:      "APP_NAME",
				Generator: nil, // TODO: port over generator
			}, {
				Name:        "type of health check",
				Description: `Process, port or http`,
			}},
		}, {
			Name:        []string{"enable-ssh"},
			Description: `Enable ssh for the application`,
			Args: []model.Arg{{
				Name:      "APP_NAME",
				Generator: nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"disable-ssh"},
			Description: `Disable ssh for the application`,
			Args: []model.Arg{{
				Name:      "APP_NAME",
				Generator: nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"ssh-enabled"},
			Description: `Reports whether SSH is enabled on an application container instance`,
			Args: []model.Arg{{
				Name:      "APP_NAME",
				Generator: nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"marketplace"},
			Description: `List available offerings in the marketplace`,
			Options: []model.Option{{
				Name:        []string{"-s"},
				Description: `Show plan details for a particular service offering`,
				Args: []model.Arg{{
					Name: "service",
				}},
			}},
		}, {
			Name:        []string{"services", "s"},
			Description: `List all service instances in the target space`,
		}, {
			Name:        []string{"create-service"},
			Description: `Create a service instance`,
			Args: []model.Arg{{
				Name: "service",
			}, {
				Name: "plan",
			}, {
				Name: "service instance",
			}},
			Options: []model.Option{{
				Name:        []string{"-c"},
				Description: `Valid JSON object containing service-specific configuration parameters, provided either in-line or in a file`,
				Args: []model.Arg{{
					Name: "JSON object",
				}},
			}, {
				Name:        []string{"-t"},
				Description: `User provided tags`,
				Args: []model.Arg{{
					Name: "tags",
				}},
			}},
		}, {
			Name:        []string{"update-service"},
			Description: `Update a service instance`,
			Args: []model.Arg{{
				Name:      "service",
				Generator: nil, // TODO: port over generator
			}},
			Options: []model.Option{{
				Name:        []string{"-c"},
				Description: `Valid JSON object containing service-specific configuration parameters, provided either in-line or in a file`,
				Args: []model.Arg{{
					Name: "JSON object",
				}},
			}, {
				Name:        []string{"-p"},
				Description: `Change service plan for a service instance`,
				Args: []model.Arg{{
					Name: "new plan",
				}},
			}, {
				Name:        []string{"-t"},
				Description: `User provided tags`,
				Args: []model.Arg{{
					Name: "tags",
				}},
			}},
		}, {
			Name:        []string{"delete-service"},
			Description: `Delete a service instance`,
			Args: []model.Arg{{
				Name:      "service instance",
				Generator: nil, // TODO: port over generator
			}},
			Options: []model.Option{{
				Name:        []string{"-f"},
				Description: `Force deletion without confirmation`,
			}},
		}, {
			Name:        []string{"rename-service"},
			Description: `Rename a service instance`,
			Args: []model.Arg{{
				Name:      "service instance",
				Generator: nil, // TODO: port over generator
			}, {
				Name: "new service instance",
			}},
		}, {
			Name:        []string{"create-service-key"},
			Description: `Create key for a service instance`,
			Args: []model.Arg{{
				Name:      "service instance",
				Generator: nil, // TODO: port over generator
			}, {
				Name: "service key",
			}},
			Options: []model.Option{{
				Name:        []string{"-c"},
				Description: `Valid JSON object containing service-specific configuration parameters, provided either in-line or in a file`,
				Args: []model.Arg{{
					Name: "JSON object",
				}},
			}},
		}, {
			Name:        []string{"service-keys"},
			Description: `List keys for a service instance`,
			Args: []model.Arg{{
				Name:      "service instance",
				Generator: nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"service-key"},
			Description: `Show service key info`,
			Args: []model.Arg{{
				Name:      "service instance",
				Generator: nil, // TODO: port over generator
			}, {
				Name: "service key",
			}},
		}, {
			Name:        []string{"delete-service-key"},
			Description: `Delete a service key`,
			Args: []model.Arg{{
				Name:      "service instance",
				Generator: nil, // TODO: port over generator
			}, {
				Name: "service key",
			}},
			Options: []model.Option{{
				Name:        []string{"-f"},
				Description: `Force deletion without confirmation`,
			}},
		}, {
			Name:        []string{"bind-service"},
			Description: `Bind a service instance to an app`,
			Args: []model.Arg{{
				Name:      "APP_NAME",
				Generator: nil, // TODO: port over generator
			}, {
				Name:      "service instance",
				Generator: nil, // TODO: port over generator
			}},
			Options: []model.Option{{
				Name:        []string{"-c"},
				Description: `Valid JSON object containing service-specific configuration parameters, provided either in-line or in a file`,
				Args: []model.Arg{{
					Name: "JSON object",
				}},
			}},
		}, {
			Name:        []string{"unbind-service"},
			Description: `Unbind a service instance from an app`,
			Args: []model.Arg{{
				Name:      "APP_NAME",
				Generator: nil, // TODO: port over generator
			}, {
				Name:      "service instance",
				Generator: nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"bind-route-service"},
			Description: `Bind a service instance to an HTTP route`,
			Args: []model.Arg{{
				Name: "domain",
			}, {
				Name:      "service instance",
				Generator: nil, // TODO: port over generator
			}},
			Options: []model.Option{{
				Name:        []string{"-c"},
				Description: `Valid JSON object containing service-specific configuration parameters, provided either in-line or in a file`,
				Args: []model.Arg{{
					Name: "JSON object",
				}},
			}, {
				Name:        []string{"-n", "--hostname"},
				Description: `Hostname used in combination with DOMAIN to specify the route to bind`,
				Args: []model.Arg{{
					Name: "hostname",
				}},
			}, {
				Name:        []string{"--path"},
				Description: `Path used in combination with HOSTNAME and DOMAIN to specify the route to bind`,
				Args: []model.Arg{{
					Name: "path",
				}},
			}},
		}, {
			Name:        []string{"unbind-route-service"},
			Description: `Unbind a service instance from an HTTP route`,
			Args: []model.Arg{{
				Name: "domain",
			}, {
				Name:      "service instance",
				Generator: nil, // TODO: port over generator
			}},
			Options: []model.Option{{
				Name:        []string{"-f"},
				Description: `Force unbinding without confirmation`,
			}, {
				Name:        []string{"-n", "--hostname"},
				Description: `Hostname used in combination with DOMAIN to specify the route to bind`,
				Args: []model.Arg{{
					Name: "hostname",
				}},
			}, {
				Name:        []string{"--path"},
				Description: `Path used in combination with HOSTNAME and DOMAIN to specify the route to bind`,
				Args: []model.Arg{{
					Name: "path",
				}},
			}},
		}, {
			Name:        []string{"create-user-provided-service"},
			Description: `Make a user-provided service instance available to CF apps`,
			Args: []model.Arg{{
				Name: "service instance",
			}},
			Options: []model.Option{{
				Name:        []string{"-p"},
				Description: `Credentials, provided inline or in a file, to be exposed in the VCAP_SERVICES environment variable for bound applications`,
				Args: []model.Arg{{
					Name: "credentials",
				}},
			}, {
				Name:        []string{"-l"},
				Description: `URL to which logs for bound applications will be streamed`,
				Args: []model.Arg{{
					Name: "sys log drain url",
				}},
			}, {
				Name:        []string{"-r"},
				Description: `URL to which requests for bound routes will be forwarded. Scheme for this URL must be https`,
				Args: []model.Arg{{
					Name: "serice url",
				}},
			}},
		}, {
			Name:        []string{"update-user-provided-service"},
			Description: `Update user-provided service instance`,
			Args: []model.Arg{{
				Name: "service instance",
			}},
			Options: []model.Option{{
				Name:        []string{"-p"},
				Description: `Credentials, provided inline or in a file, to be exposed in the VCAP_SERVICES environment variable for bound applications`,
				Args: []model.Arg{{
					Name: "credentials",
				}},
			}, {
				Name:        []string{"-l"},
				Description: `URL to which logs for bound applications will be streamed`,
				Args: []model.Arg{{
					Name: "sys log drain url",
				}},
			}, {
				Name:        []string{"-r"},
				Description: `URL to which requests for bound routes will be forwarded. Scheme for this URL must be https`,
				Args: []model.Arg{{
					Name: "serice url",
				}},
			}},
		}, {
			Name:        []string{"org"},
			Description: `Show org info`,
			Args: []model.Arg{{
				Name:      "org",
				Generator: nil, // TODO: port over generator
			}},
			Options: []model.Option{{
				Name:        []string{"--guid"},
				Description: `Retrieve and display the given org's guid.  All other output for the org is suppressed`,
			}},
		}, {
			Name:        []string{"create-org"},
			Description: `Create an org`,
			Args: []model.Arg{{
				Name: "org",
			}},
			Options: []model.Option{{
				Name:        []string{"-p"},
				Description: `Quota to assign to the newly created org (excluding this option results in assignment of default quota)`,
				Args: []model.Arg{{
					Name: "quota",
				}},
			}},
		}, {
			Name:        []string{"delete-org"},
			Description: `Delete an org`,
			Args: []model.Arg{{
				Name:      "org",
				Generator: nil, // TODO: port over generator
			}},
			Options: []model.Option{{
				Name:        []string{"-f"},
				Description: `Force deletion without confirmation`,
			}},
		}, {
			Name:        []string{"rename-org"},
			Description: `Rename an org`,
			Args: []model.Arg{{
				Name:      "org",
				Generator: nil, // TODO: port over generator
			}, {
				Name: "new org",
			}},
		}, {
			Name:        []string{"spaces"},
			Description: `List all spaces in an org`,
		}, {
			Name:        []string{"space"},
			Description: `Show space info`,
			Args: []model.Arg{{
				Name:      "space",
				Generator: nil, // TODO: port over generator
			}},
			Options: []model.Option{{
				Name:        []string{"--guid"},
				Description: `Retrieve and display the given org's guid.  All other output for the org is suppressed`,
			}, {
				Name:        []string{"--security-group-rules"},
				Description: `Retrieve the rules for all the security groups associated with the space's guid.  All other output for the org is suppressed`,
			}},
		}, {
			Name:        []string{"create-space"},
			Description: `Create a space`,
			Args: []model.Arg{{
				Name: "space",
			}},
			Options: []model.Option{{
				Name:        []string{"-o"},
				Description: `Org`,
				Args: []model.Arg{{
					Name:      "org",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-p"},
				Description: `Quota to assign to the newly created space`,
				Args: []model.Arg{{
					Name: "quota",
				}},
			}},
		}, {
			Name:        []string{"delete-space"},
			Description: `Delete a space`,
			Args: []model.Arg{{
				Name:      "space",
				Generator: nil, // TODO: port over generator
			}},
			Options: []model.Option{{
				Name:        []string{"-o"},
				Description: `Delete space within specified org`,
				Args: []model.Arg{{
					Name:      "org",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-f"},
				Description: `Force deletion without confirmation`,
			}},
		}, {
			Name:        []string{"rename-space"},
			Description: `Rename a space`,
			Args: []model.Arg{{
				Name:      "space",
				Generator: nil, // TODO: port over generator
			}, {
				Name: "new space",
			}},
		}, {
			Name:        []string{"allow-space-ssh"},
			Description: `Allow SSH access for the space`,
			Args: []model.Arg{{
				Name:      "space",
				Generator: nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"disallow-space-ssh"},
			Description: `Disallow SSH access for the space`,
			Args: []model.Arg{{
				Name:      "space",
				Generator: nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"space-ssh-allowed"},
			Description: `Reports whether SSH is allowed in a space`,
			Args: []model.Arg{{
				Name:      "space",
				Generator: nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"domains"},
			Description: `List domains in the target org`,
		}, {
			Name:        []string{"create-domain"},
			Description: `Create a domain in an org for later use`,
			Args: []model.Arg{{
				Name:      "org",
				Generator: nil, // TODO: port over generator
			}, {
				Name: "domain",
			}},
		}, {
			Name:        []string{"delete-domain"},
			Description: `Delete a domain`,
			Args: []model.Arg{{
				Name:      "space",
				Generator: nil, // TODO: port over generator
			}},
			Options: []model.Option{{
				Name:        []string{"-f"},
				Description: `Force deletion without confirmation`,
			}},
		}, {
			Name:        []string{"create-shared-domain"},
			Description: `Create a domain that can be used by all orgs (admin-only)`,
			Args: []model.Arg{{
				Name: "domain",
			}},
			Options: []model.Option{{
				Name:        []string{"--router-group"},
				Description: `Routes for this domain will be configured only on the specified router group`,
			}},
		}, {
			Name:        []string{"delete-shared-domain"},
			Description: `Delete a shared domain`,
			Args: []model.Arg{{
				Name: "domain",
			}},
			Options: []model.Option{{
				Name:        []string{"-f"},
				Description: `Force deletion without confirmation`,
			}},
		}, {
			Name:        []string{"router-groups"},
			Description: `List router groups`,
		}, {
			Name:        []string{"routes"},
			Description: `List all routes in the current space or the current organization`,
			Options: []model.Option{{
				Name:        []string{"--orglevel"},
				Description: `List all the routes for all spaces of current organization`,
			}},
		}, {
			Name:        []string{"create-route"},
			Description: `Create a url route in a space for later use`,
			Args: []model.Arg{{
				Name:      "space",
				Generator: nil, // TODO: port over generator
			}, {
				Name: "domain",
			}},
			Options: []model.Option{{
				Name:        []string{"--hostname", "-n"},
				Description: `Hostname for the HTTP route (required for shared domains)`,
				Args: []model.Arg{{
					Name: "hostname",
				}},
			}, {
				Name:        []string{"--path"},
				Description: `Path for the HTTP route`,
				Args: []model.Arg{{
					Name: "path",
				}},
			}, {
				Name:        []string{"--port"},
				Description: `Port for the TCP route`,
				Args: []model.Arg{{
					Name: "port",
				}},
			}, {
				Name:        []string{"--random-port"},
				Description: `Create a random port for the TCP route`,
			}},
		}, {
			Name:        []string{"check-route"},
			Description: `Perform a simple check to determine whether a route currently exists or not`,
			Args: []model.Arg{{
				Name: "host",
			}, {
				Name: "domain",
			}},
			Options: []model.Option{{
				Name:        []string{"--path"},
				Description: `Path for the route`,
				Args: []model.Arg{{
					Name: "path",
				}},
			}},
		}, {
			Name:        []string{"map-route"},
			Description: `Add a url route to an app`,
			Args: []model.Arg{{
				Name:      "APP_NAME",
				Generator: nil, // TODO: port over generator
			}, {
				Name: "domain",
			}},
			Options: []model.Option{{
				Name:        []string{"--hostname", "-n"},
				Description: `Hostname for the HTTP route (required for shared domains)`,
				Args: []model.Arg{{
					Name: "hostname",
				}},
			}, {
				Name:        []string{"--path"},
				Description: `Path for the HTTP route`,
				Args: []model.Arg{{
					Name: "path",
				}},
			}, {
				Name:        []string{"--port"},
				Description: `Port for the TCP route`,
				Args: []model.Arg{{
					Name: "port",
				}},
			}, {
				Name:        []string{"--random-port"},
				Description: `Create a random port for the TCP route`,
			}},
		}, {
			Name:        []string{"unmap-route"},
			Description: `Remove a url route from an app`,
			Args: []model.Arg{{
				Name:      "APP_NAME",
				Generator: nil, // TODO: port over generator
			}, {
				Name: "domain",
			}},
			Options: []model.Option{{
				Name:        []string{"--hostname", "-n"},
				Description: `Hostname used to identify the HTTP route`,
				Args: []model.Arg{{
					Name: "hostname",
				}},
			}, {
				Name:        []string{"--path"},
				Description: `Path used to identify the HTTP route`,
				Args: []model.Arg{{
					Name: "path",
				}},
			}, {
				Name:        []string{"--port"},
				Description: `Port used to identify the TCP route`,
				Args: []model.Arg{{
					Name: "port",
				}},
			}},
		}, {
			Name:        []string{"delete-route"},
			Description: `Delete a route`,
			Args: []model.Arg{{
				Name: "domain",
			}},
			Options: []model.Option{{
				Name:        []string{"--hostname", "-n"},
				Description: `Hostname used to identify the HTTP route`,
				Args: []model.Arg{{
					Name: "hostname",
				}},
			}, {
				Name:        []string{"--path"},
				Description: `Path used to identify the HTTP route`,
				Args: []model.Arg{{
					Name: "path",
				}},
			}, {
				Name:        []string{"--port"},
				Description: `Port used to identify the TCP route`,
				Args: []model.Arg{{
					Name: "port",
				}},
			}, {
				Name:        []string{"-f"},
				Description: `Force deletion without confirmation`,
			}},
		}, {
			Name:        []string{"delete-orphaned-routes"},
			Description: `Delete all orphaned routes (i.e. those that are not mapped to an app)`,
			Options: []model.Option{{
				Name:        []string{"-f"},
				Description: `Force deletion without confirmation`,
			}},
		}, {
			Name:        []string{"create-user"},
			Description: `Create a new user`,
			Args: []model.Arg{{
				Name: "username",
			}, {
				Name: "password",
			}},
			Options: []model.Option{{
				Name:        []string{"--origin"},
				Description: `Origin for mapping a user account to a user in an external identity provider`,
				Args: []model.Arg{{
					Name: "provider",
				}},
			}},
		}, {
			Name:        []string{"delete-user"},
			Description: `Delete a user`,
			Args: []model.Arg{{
				Name: "username",
			}},
			Options: []model.Option{{
				Name:        []string{"-f"},
				Description: `Force deletion without confirmation`,
			}},
		}, {
			Name:        []string{"org-users"},
			Description: `Show org users by role`,
			Args: []model.Arg{{
				Name:      "org",
				Generator: nil, // TODO: port over generator
			}},
			Options: []model.Option{{
				Name:        []string{"-a"},
				Description: `List all users in the org`,
			}},
		}, {
			Name:        []string{"set-org-role"},
			Description: `Assign an org role to a user`,
			Args: []model.Arg{{
				Name: "username",
			}, {
				Name:      "org",
				Generator: nil, // TODO: port over generator
			}, {
				Name: "role",
			}},
		}, {
			Name:        []string{"unset-org-role"},
			Description: `Remove an org role from a user`,
			Args: []model.Arg{{
				Name: "username",
			}, {
				Name:      "org",
				Generator: nil, // TODO: port over generator
			}, {
				Name: "role",
			}},
		}, {
			Name:        []string{"space-users"},
			Description: `Show space users by role`,
		}, {
			Name:        []string{"set-space-role"},
			Description: `Assign a space role to a user`,
			Args: []model.Arg{{
				Name: "username",
			}, {
				Name:      "org",
				Generator: nil, // TODO: port over generator
			}, {
				Name:      "space",
				Generator: nil, // TODO: port over generator
			}, {
				Name: "role",
			}},
		}, {
			Name:        []string{"unset-space-role"},
			Description: `Remove a space role from a user`,
			Args: []model.Arg{{
				Name: "username",
			}, {
				Name:      "org",
				Generator: nil, // TODO: port over generator
			}, {
				Name:      "space",
				Generator: nil, // TODO: port over generator
			}, {
				Name: "role",
			}},
		}, {
			Name:        []string{"quotas"},
			Description: `List available usage quotas`,
		}, {
			Name:        []string{"quota"},
			Description: `Show quota info`,
			Args: []model.Arg{{
				Name: "quota",
			}},
		}, {
			Name:        []string{"set-quota"},
			Description: `Assign a quota to an org`,
			Args: []model.Arg{{
				Name:      "org",
				Generator: nil, // TODO: port over generator
			}, {
				Name: "quota",
			}},
		}, {
			Name:        []string{"create-quota"},
			Description: `Define a new resource quota`,
			Args: []model.Arg{{
				Name: "quota",
			}},
			Options: []model.Option{{
				Name:        []string{"-a"},
				Description: `Total number of application instances`,
				Args: []model.Arg{{
					Name: "number of application instances",
				}},
			}, {
				Name:        []string{"-i"},
				Description: `Maximum amount of memory an application instance can have`,
				Args: []model.Arg{{
					Name: "instance memory",
				}},
			}, {
				Name:        []string{"-m"},
				Description: `Total amount of memory a space can have`,
				Args: []model.Arg{{
					Name: "total memory",
				}},
			}, {
				Name:        []string{"--reserved-route-ports"},
				Description: `Maximum number of routes that may be created with reserved ports (Default: 0)`,
				Args: []model.Arg{{
					Name: "reserved route ports",
				}},
			}, {
				Name:        []string{"-s"},
				Description: `Total number of service instances`,
				Args: []model.Arg{{
					Name: "service instances",
				}},
			}, {
				Name:        []string{"-r"},
				Description: `Total number of routes`,
				Args: []model.Arg{{
					Name: "routes",
				}},
			}, {
				Name:        []string{"--allow-paid-service-plans"},
				Description: `Can provision instances of paid service plans`,
			}},
		}, {
			Name:        []string{"delete-quota"},
			Description: `Delete a quota`,
			Args: []model.Arg{{
				Name: "quota",
			}},
			Options: []model.Option{{
				Name:        []string{"-f"},
				Description: `Force deletion without confirmation`,
			}},
		}, {
			Name:        []string{"update-quota"},
			Description: `Update an existing resource quota`,
			Args: []model.Arg{{
				Name: "quota",
			}},
			Options: []model.Option{{
				Name:        []string{"-a"},
				Description: `Total number of application instances`,
				Args: []model.Arg{{
					Name: "number of application instances",
				}},
			}, {
				Name:        []string{"-i"},
				Description: `Maximum amount of memory an application instance can have`,
				Args: []model.Arg{{
					Name: "instance memory",
				}},
			}, {
				Name:        []string{"-m"},
				Description: `Total amount of memory a space can have`,
				Args: []model.Arg{{
					Name: "total memory",
				}},
			}, {
				Name:        []string{"--reserved-route-ports"},
				Description: `Maximum number of routes that may be created with reserved ports (Default: 0)`,
				Args: []model.Arg{{
					Name: "reserved route ports",
				}},
			}, {
				Name:        []string{"-s"},
				Description: `Total number of service instances`,
				Args: []model.Arg{{
					Name: "service instances",
				}},
			}, {
				Name:        []string{"-r"},
				Description: `Total number of routes`,
				Args: []model.Arg{{
					Name: "routes",
				}},
			}, {
				Name:        []string{"-n"},
				Description: `New name`,
				Args: []model.Arg{{
					Name: "name",
				}},
			}, {
				Name:        []string{"--allow-paid-service-plans"},
				Description: `Can provision instances of paid service plans`,
				ExclusiveOn: []string{"--disallow-paid-service-plans"},
			}, {
				Name:        []string{"--disallow-paid-service-plans"},
				Description: `Cannot provision instances of paid service plans`,
				ExclusiveOn: []string{"--allow-paid-service-plans"},
			}},
		}, {
			Name:        []string{"space-quotas"},
			Description: `List available space resource quotas`,
		}, {
			Name:        []string{"space-quota"},
			Description: `Show space quota info`,
			Args: []model.Arg{{
				Name: "space quota",
			}},
		}, {
			Name:        []string{"create-space-quota"},
			Description: `Define a new space resource quota`,
			Args: []model.Arg{{
				Name: "quota",
			}},
			Options: []model.Option{{
				Name:        []string{"-a"},
				Description: `Total number of application instances`,
				Args: []model.Arg{{
					Name: "number of application instances",
				}},
			}, {
				Name:        []string{"-i"},
				Description: `Maximum amount of memory an application instance can have`,
				Args: []model.Arg{{
					Name: "instance memory",
				}},
			}, {
				Name:        []string{"-m"},
				Description: `Total amount of memory a space can have`,
				Args: []model.Arg{{
					Name: "total memory",
				}},
			}, {
				Name:        []string{"--reserved-route-ports"},
				Description: `Maximum number of routes that may be created with reserved ports (Default: 0)`,
				Args: []model.Arg{{
					Name: "reserved route ports",
				}},
			}, {
				Name:        []string{"-s"},
				Description: `Total number of service instances`,
				Args: []model.Arg{{
					Name: "service instances",
				}},
			}, {
				Name:        []string{"-r"},
				Description: `Total number of routes`,
				Args: []model.Arg{{
					Name: "routes",
				}},
			}, {
				Name:        []string{"--allow-paid-service-plans"},
				Description: `Can provision instances of paid service plans`,
			}},
		}, {
			Name:        []string{"update-space-quota"},
			Description: `Update an existing space quota`,
			Args: []model.Arg{{
				Name: "space quota",
			}},
			Options: []model.Option{{
				Name:        []string{"-a"},
				Description: `Total number of application instances`,
				Args: []model.Arg{{
					Name: "number of application instances",
				}},
			}, {
				Name:        []string{"-i"},
				Description: `Maximum amount of memory an application instance can have`,
				Args: []model.Arg{{
					Name: "instance memory",
				}},
			}, {
				Name:        []string{"-m"},
				Description: `Total amount of memory a space can have`,
				Args: []model.Arg{{
					Name: "total memory",
				}},
			}, {
				Name:        []string{"--reserved-route-ports"},
				Description: `Maximum number of routes that may be created with reserved ports (Default: 0)`,
				Args: []model.Arg{{
					Name: "reserved route ports",
				}},
			}, {
				Name:        []string{"-s"},
				Description: `Total number of service instances`,
				Args: []model.Arg{{
					Name: "service instances",
				}},
			}, {
				Name:        []string{"-r"},
				Description: `Total number of routes`,
				Args: []model.Arg{{
					Name: "routes",
				}},
			}, {
				Name:        []string{"-n"},
				Description: `New name`,
				Args: []model.Arg{{
					Name: "name",
				}},
			}, {
				Name:        []string{"--allow-paid-service-plans"},
				Description: `Can provision instances of paid service plans`,
				ExclusiveOn: []string{"--disallow-paid-service-plans"},
			}, {
				Name:        []string{"--disallow-paid-service-plans"},
				Description: `Cannot provision instances of paid service plans`,
				ExclusiveOn: []string{"--allow-paid-service-plans"},
			}},
		}, {
			Name:        []string{"delete-space-quota"},
			Description: `Delete a space quota definition and unassign the space quota from all spaces`,
			Args: []model.Arg{{
				Name: "space quota",
			}},
			Options: []model.Option{{
				Name:        []string{"-f"},
				Description: `Force deletion without confirmation`,
			}},
		}, {
			Name:        []string{"set-space-quota"},
			Description: `Assign a space quota definition to a space`,
			Args: []model.Arg{{
				Name:      "space",
				Generator: nil, // TODO: port over generator
			}, {
				Name: "quota",
			}},
		}, {
			Name:        []string{"unset-space-quota"},
			Description: `Unassign a quota from a space`,
			Args: []model.Arg{{
				Name:      "space",
				Generator: nil, // TODO: port over generator
			}, {
				Name: "quota",
			}},
		}, {
			Name:        []string{"curl"},
			Description: `Executes a request to the targeted API endpoint`,
			Args: []model.Arg{{
				Name:        "path",
				Description: `Path to curl`,
			}},
			Options: []model.Option{{
				Name:        []string{"-H"},
				Description: `Custom headers to include in the request, flag can be specified multiple times`,
				Args: []model.Arg{{
					Name: "headers",
				}},
			}, {
				Name:        []string{"-X"},
				Description: `HTTP method (GET,POST,PUT,DELETE,etc)`,
				Args: []model.Arg{{
					Name: "HTTP method",
				}},
			}, {
				Name:        []string{"-d"},
				Description: `HTTP data to include in the request body, or '@' followed by a file name to read the data from`,
				Args: []model.Arg{{
					Name: "data",
				}},
			}, {
				Name:        []string{"--output"},
				Description: `Write curl body to FILE instead of stdout`,
				Args: []model.Arg{{
					Name: "path to file",
				}},
			}, {
				Name:        []string{"-i"},
				Description: `Include response headers in the output`,
			}},
		}, {
			Name:        []string{"oauth-token"},
			Description: `Retrieve and display the OAuth token for the current session`,
		}, {
			Name:        []string{"ssh-code"},
			Description: `Get a one time password for ssh clients`,
		}, {
			Name:        []string{"add-plugin-repo"},
			Description: `Add a new plugin repository`,
			Args: []model.Arg{{
				Name: "repo name",
			}, {
				Name: "url",
			}},
		}, {
			Name:        []string{"remove-plugin-repo"},
			Description: `Remove a plugin repository`,
			Args: []model.Arg{{
				Name: "repo name",
			}},
		}, {
			Name:        []string{"list-plugin-repos"},
			Description: `List all the added plugin repositories`,
		}, {
			Name:        []string{"repo-plugins"},
			Description: `List all available plugins in specified repository or in all added repositories`,
			Options: []model.Option{{
				Name:        []string{"-r"},
				Description: `Name of a registered repository`,
				Args: []model.Arg{{
					Name: "repo",
				}},
			}},
		}, {
			Name:        []string{"plugins"},
			Description: `List all available plugin commands`,
			Options: []model.Option{{
				Name:        []string{"--checksum"},
				Description: `Compute and show the sha1 value of the plugin binary file`,
			}},
		}, {
			Name:        []string{"install-plugin"},
			Description: `Install CLI plugin`,
			Args: []model.Arg{{
				Name:        "path",
				Description: `Local path to plugin`,
			}, {
				Name:        "url",
				Description: `URL for plugin`,
			}},
			Options: []model.Option{{
				Name:        []string{"-r"},
				Description: `Name of a registered repository where the specified plugin is located`,
				Args: []model.Arg{{
					Name: "repo name",
				}, {
					Name: "plugin name",
				}},
			}, {
				Name:        []string{"-f"},
				Description: `Force install of plugin without confirmation`,
			}},
		}, {
			Name:        []string{"uninstall-plugin"},
			Description: `Uninstall the plugin defined in command argument`,
			Args: []model.Arg{{
				Name: "plugin name",
			}},
		}},
	}
}
