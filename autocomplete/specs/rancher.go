// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["rancher"] = model.Subcommand{
		Name:        []string{"rancher"},
		Description: `The Rancher CLI (Command Line Interface) is a unified tool that you can use to interact with Rancher`,
		Options: []model.Option{{
			Name:        []string{"--debug"},
			Description: `Debug logging`,
		}, {
			Name:        []string{"--config", "-c"},
			Description: `Path to rancher config (default: "$home/.rancher") [$RANCHER_CONFIG_DIR]`,
			Args: []model.Arg{{
				Templates:   []model.Template{model.TemplateFolders},
				Name:        "RANCHER_CONFIG_PATH",
				Description: `The path to the rancher config`,
			}},
		}, {
			Name:        []string{"--help", "-h"},
			Description: `Show help for rancher cli`,
		}, {
			Name:        []string{"--version", "-v"},
			Description: `Print the version`,
		}},
		Subcommands: []model.Subcommand{{
			Name:        []string{"apps", "app"},
			Description: `Operations with apps. Uses helm. Flags are prepended with 'helm' can also be accurately described by helm documentation`,
			Options: []model.Option{{
				Name:        []string{"--format", "-o"},
				Description: `Output format: 'json', 'yaml' or custom format`,
				Args: []model.Arg{{
					Name:        "format",
					Suggestions: []model.Suggestion{{Name: []string{`json`}}, {Name: []string{`yaml`}}},
				}},
			}, {
				Name:        []string{"--quiet", "-q"},
				Description: `Only display IDs or suppress help text`,
			}, {
				Name:        []string{"--help", "-h"},
				Description: `Show help`,
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"ls"},
				Description: `List all apps in the current Rancher server`,
			}, {
				Name:        []string{"delete"},
				Description: `Delete an app`,
				Args: []model.Arg{{
					Name:        "APP_NAME/APP_ID",
					Description: `The name of the app to delete`,
				}},
			}, {
				Name:        []string{"install"},
				Description: `Install an app template`,
				Args: []model.Arg{{
					Name:        "TEMPLATE_NAME/TEMPLATE_PATH",
					Description: `Install an app template in the current Rancher server`,
				}, {
					Name:        "APP_NAME",
					Description: `The name of the app to install`,
				}},
				Options: []model.Option{{
					Name:        []string{"--answers", "-a"},
					Description: `Path to an answers file, the format of the file is a map with key:value. This supports JSON and YAML`,
					Args: []model.Arg{{
						Name:      "answers-file-path",
						Generator: nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"--values", "-v"},
					Description: `Path to a helm values file`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "values-file-path",
					}},
				}, {
					Name:        []string{"--namespace", "-n"},
					Description: `Namespace to install the app into`,
					Args: []model.Arg{{
						Name: "namespace",
					}},
				}, {
					Name:        []string{"--set"},
					Description: `Set answers for the template, can be used multiple times. Example: --set foo=bar`,
					Args: []model.Arg{{
						Name: "key=value",
					}},
				}, {
					Name:        []string{"--set-string"},
					Description: `Set string answers for the template (Skips Helm's type conversion), can be used multiple times. Example: --set-string foo=bar`,
					Args: []model.Arg{{
						Name: "key=value",
					}},
				}, {
					Name:        []string{"--version"},
					Description: `Version of the template to use`,
					Args: []model.Arg{{
						Name: "version",
					}},
				}, {
					Name:        []string{"--no-prompt"},
					Description: `Suppress asking questions and use the default values when required answers are not provided`,
				}, {
					Name:        []string{"--helm-timeout"},
					Description: `Amount of time for helm to wait for k8s commands (default is 300 secs). Example: --helm-timeout 600 (default: 300)`,
					Args: []model.Arg{{
						Name: "seconds",
					}},
				}, {
					Name:        []string{"--helm-wait"},
					Description: `Helm will wait for as long as timeout value, for installed resources to be ready (pods, PVCs, deployments, etc.). Example: --helm-wait`,
				}},
			}, {
				Name:        []string{"rollback"},
				Description: `Rollback an app to a previous version`,
				Args: []model.Arg{{
					Name:        "APP_NAME/APP_ID",
					Description: `The name/id of the app to rollback`,
				}, {
					Name:        "REVISION_ID/REVISION_NAME",
					Description: `The name/id of the revision to rollback`,
				}},
			}, {
				Name:        []string{"upgrade"},
				Description: `Upgrade an existing app to a newer version`,
			}, {
				Name:        []string{"list-templates", "lt"},
				Description: `List templates available for installation`,
			}, {
				Name:        []string{"show-tempate", "st"},
				Description: `Show versions available to install for an app template`,
			}, {
				Name:        []string{"show-app", "sa"},
				Description: `Show an app's available versions and revisions`,
			}, {
				Name:        []string{"show-notes"},
				Description: `Show contents of apps notes.txt`,
			}},
		}, {
			Name:        []string{"catalog"},
			Description: `Operations with catalogs`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"ls"},
				Description: `List all catalogs in the current Rancher server`,
				Options: []model.Option{{
					Name:        []string{"--format", "-o"},
					Description: `Output format: 'json', 'yaml' or custom format`,
					Args: []model.Arg{{
						Name:        "format",
						Suggestions: []model.Suggestion{{Name: []string{`json`}}, {Name: []string{`yaml`}}},
					}},
				}, {
					Name:        []string{"--quiet", "-q"},
					Description: `Only display IDs or suppress help text`,
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Show help`,
				}, {
					Name: []string{"--verbose", "-v"},
				}},
			}, {
				Name:        []string{"add"},
				Description: `Add a catalog`,
				Args: []model.Arg{{
					Name:        "CATALOG_NAME",
					Description: `The name of the catalog to add`,
				}, {
					Name:        "CATALOG_URL",
					Description: `The URL of the catalog to add`,
				}},
				Options: []model.Option{{
					Name:        []string{"--branch"},
					Description: `Branch from the url to use (default: 'master')`,
					Args: []model.Arg{{
						Name: "branch name",
					}},
				}, {
					Name:        []string{"--helm-version"},
					Description: `Version of helm the app(s) in your catalog will use for deployment. Use 'v2' for helm 2 or 'v3' for helm 3 (default: 'v2')`,
					Args: []model.Arg{{
						Name: "version",
					}},
				}},
			}},
		}, {
			Name:        []string{"clusters", "cluster"},
			Description: `Operations on clusters`,
		}, {
			Name:        []string{"context"},
			Description: `Operations for the context`,
		}, {
			Name:        []string{"globaldns"},
			Description: `Operations on global DNS providers and entries`,
		}, {
			Name:        []string{"inspect"},
			Description: `View details of resources`,
		}, {
			Name:        []string{"kubectl"},
			Description: `Run kubectl commands`,
		}, {
			Name:        []string{"login", "-l"},
			Description: `Login to a Rancher server`,
			Args: []model.Arg{{
				Name:        "SERVER_URL",
				Description: `The server url you want to login to`,
			}},
			Options: []model.Option{{
				Name:        []string{"--token"},
				Description: `API Bearer Token to authenticate Rancher CLI to your Rancher server`,
				Args: []model.Arg{{
					Name:        "BEARER_TOKEN",
					Description: `The bearer token you want to use`,
				}},
			}},
		}, {
			Name:        []string{"machines", "machine"},
			Description: `Operations on machines`,
		}, {
			Name:        []string{"multiclusterapps", "multiclusterapp"},
			Description: `Operations with multi-cluster apps`,
		}, {
			Name:        []string{"namespaces", "namespace"},
			Description: `Operations on namespaces`,
		}, {
			Name:        []string{"nodes", "node"},
			Description: `Operations on nodes`,
		}, {
			Name:        []string{"projects", "project"},
			Description: `Operations on projects`,
		}, {
			Name:        []string{"ps"},
			Description: `Show workloads in a project`,
		}, {
			Name:        []string{"server"},
			Description: `Operations for the server`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"current"},
				Description: `Display the current server`,
			}, {
				Name:        []string{"delete"},
				Description: `⚠️ Delete a server from the local config`,
				Args: []model.Arg{{
					Name:        "SERVER_NAME",
					Description: `The name of server you want to delete`,
					Generator:   nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"ls"},
				Description: `List all servers`,
			}, {
				Name:        []string{"switch"},
				Description: `Switch to a new server`,
				Args: []model.Arg{{
					Name:        "SERVER_NAME",
					Description: `The name of server you want to switch to`,
					Generator:   nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"settings", "setting"},
			Description: `Show settings for the current server`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"ls"},
				Description: `List settings`,
			}, {
				Name:        []string{"get"},
				Description: `Print a setting`,
				Args: []model.Arg{{
					Name:        "SETTING_NAME",
					Description: `The name of setting you want to get`,
				}},
			}, {
				Name:        []string{"set"},
				Description: `Set the value for a setting`,
				Args: []model.Arg{{
					Name:        "SETTINGNAME",
					Description: `The name of setting you want to set`,
				}, {
					Name:        "SETTING_VALUE",
					Description: `The value of setting you want to set`,
				}},
				Options: []model.Option{{
					Name:        []string{"--format", "-o"},
					Description: `Output format: 'json', 'yaml' or custom format`,
					Args: []model.Arg{{
						Name:        "format",
						Suggestions: []model.Suggestion{{Name: []string{`json`}}, {Name: []string{`yaml`}}},
					}},
				}, {
					Name:        []string{"--quiet", "-q"},
					Description: `Only display IDs or suppress help text`,
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Show help`,
				}, {
					Name:        []string{"--default"},
					Description: `Reset the setting back to it's default value. If the default value is (blank) it will be set to that`,
				}},
			}},
		}, {
			Name:        []string{"ssh"},
			Description: `SSH into a node`,
		}, {
			Name:        []string{"up"},
			Description: `Apply compose config`,
		}, {
			Name:        []string{"wait"},
			Description: `Wait for resources cluster, app, project, multiClusterApp`,
		}, {
			Name:        []string{"token"},
			Description: `Authenticate and generate new kubeconfig token`,
		}, {
			Name:        []string{"help", "h"},
			Description: `Shows a list of commands or help for one command`,
		}},
	}
}
