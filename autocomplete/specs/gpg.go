// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["gpg"] = model.Subcommand{
		Name:        []string{"gpg"},
		Description: `Encryption and signing tool`,
		Options: []model.Option{{
			Name:        []string{"--homedir"},
			Description: `Set the name of the home directory`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFolders},
				Name:      "directory",
			}},
		}, {
			Name:        []string{"--options"},
			Description: `Read options from file`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "file",
			}},
			ExclusiveOn: []string{"--no-options"},
		}, {
			Name:        []string{"-a", "--armour"},
			Description: `Create ASCII armored output`,
		}, {
			Name:        []string{"-o", "--output"},
			Description: `Write output to file`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "file",
			}},
		}, {
			Name:        []string{"-u", "--local-user"},
			Description: `Use name as the user ID to sign`,
			Args: []model.Arg{{
				Name: "name",
			}},
		}, {
			Name:        []string{"--default-key"},
			Description: `Use name as default user ID for signatures`,
			Args: []model.Arg{{
				Name: "name",
			}},
		}, {
			Name:        []string{"-r", "--recipient"},
			Description: `Encrypt for user id name`,
			Args: []model.Arg{{
				Name: "name",
			}},
		}, {
			Name:        []string{"--default-recipient"},
			Description: `Use name as default recipient`,
			Args: []model.Arg{{
				Name: "name",
			}},
			ExclusiveOn: []string{"--no-default-recipient", "--default-recipient-self"},
		}, {
			Name:        []string{"--default-recipient-self"},
			Description: `Use the default key as default recipient`,
			ExclusiveOn: []string{"--default-recipient", "--no-default-recipient"},
		}, {
			Name:        []string{"--no-default-recipient"},
			Description: `Reset --default-recipient and --default-recipient-self`,
			ExclusiveOn: []string{"--default-recipient", "--default-recipient-self"},
		}, {
			Name:        []string{"--encrypt-to"},
			Description: `Same as --recipient but this one is intended for in the options file`,
			Args: []model.Arg{{
				Name: "name",
			}},
			ExclusiveOn: []string{"--no-encrypt-to"},
		}, {
			Name:        []string{"--no-encrypt-to"},
			Description: `Disable the use of all --encrypt-to keys`,
			ExclusiveOn: []string{"--encrypt-to"},
		}, {
			Name:        []string{"-v", "--verbose"},
			Description: `Give more information during processing`,
			ExclusiveOn: []string{"--no-verbose"},
		}, {
			Name:        []string{"-q", "--quiet"},
			Description: `Try to be as quiet as possible`,
		}, {
			Name:        []string{"-Z"},
			Description: `Set compression level to n`,
			Args: []model.Arg{{
				Name:        "n",
				Suggestions: []model.Suggestion{{Name: []string{`0`}}, {Name: []string{`1`}}, {Name: []string{`2`}}, {Name: []string{`3`}}, {Name: []string{`4`}}, {Name: []string{`5`}}, {Name: []string{`6`}}},
			}},
		}, {
			Name:        []string{"-t", "--textmode"},
			Description: `Use canonical text mode`,
		}, {
			Name:        []string{"-n", "--dry-run"},
			Description: `Don't make any changes`,
		}, {
			Name:        []string{"-i", "--interactive"},
			Description: `Prompt before overwriting any files`,
		}, {
			Name:        []string{"--batch"},
			Description: `Use batch mode`,
			ExclusiveOn: []string{"--no-batch"},
		}, {
			Name:        []string{"--no-tty"},
			Description: `Make sure that the TTY is never used for any output`,
		}, {
			Name:        []string{"--no-batch"},
			Description: `Disable batch mode`,
			ExclusiveOn: []string{"--batch"},
		}, {
			Name:        []string{"--yes"},
			Description: `Assume "yes" on most questions`,
			ExclusiveOn: []string{"--no"},
		}, {
			Name:        []string{"--no"},
			Description: `Assume "no" on most questions`,
			ExclusiveOn: []string{"--yes"},
		}, {
			Name:        []string{"--always-trust"},
			Description: `Skip key validation`,
		}, {
			Name:        []string{"--keyserver"},
			Description: `Use name to lookup keys which are not yet in your keyring`,
			Args: []model.Arg{{
				Name: "name",
			}},
		}, {
			Name:        []string{"--no-auto-key-retrieve"},
			Description: `Disables the automatic retrieving of keys`,
		}, {
			Name:        []string{"--honor-http-proxy"},
			Description: `Try to access the keyserver over the proxy`,
		}, {
			Name:        []string{"--keyring"},
			Description: `Add file to the list of keyrings`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "file",
			}},
		}, {
			Name:        []string{"--secret-keyring"},
			Description: `Same as --keyring but for the secret keyrings`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "file",
			}},
		}, {
			Name:        []string{"--charset"},
			Description: `Set the name of the native character set`,
			Args: []model.Arg{{
				Name: "name",
				Suggestions: []model.Suggestion{{
					Name:        []string{`iso-8859-1`},
					Description: `This is the default Latin 1 set`,
				}, {
					Name:        []string{`iso-8859-2`},
					Description: `The Latin 2 set`,
				}, {
					Name:        []string{`koi8-r`},
					Description: `The usual Russian set (rfc1489)`,
				}},
			}},
		}, {
			Name:        []string{"--utf8-strings"},
			Description: `Assume that the arguments are already given as UTF8`,
			ExclusiveOn: []string{"--no-utf8-strings"},
		}, {
			Name:        []string{"--no-utf8-strings"},
			ExclusiveOn: []string{"--utf8-strings"},
		}, {
			Name:        []string{"--no-options"},
			Description: `Shortcut for "--options /dev/null"`,
			ExclusiveOn: []string{"--options"},
		}, {
			Name:        []string{"--load-extension"},
			Description: `Load an extension module`,
			Args: []model.Arg{{
				Name:        "name",
				Description: `If name does not contain a slash it is searched in "/usr/local/lib/gnupg"`,
			}},
		}, {
			Name:        []string{"--debug"},
			Description: `Set debugging flags`,
			Args: []model.Arg{{
				Name: "flags",
			}},
		}, {
			Name:        []string{"--debug-all"},
			Description: `Set all useful debugging flags`,
		}, {
			Name:        []string{"--status-fd"},
			Description: `Write special status strings to the file descriptor n`,
			Args: []model.Arg{{
				Name: "n",
			}},
		}, {
			Name:        []string{"--logger-fd"},
			Description: `Write log output to file descriptor n and not to stderr`,
			Args: []model.Arg{{
				Name: "n",
			}},
		}, {
			Name:        []string{"--no-comment"},
			Description: `Do not write comment packets`,
			ExclusiveOn: []string{"--comment", "--default-comment"},
		}, {
			Name:        []string{"--comment"},
			Description: `Use string as comment string in clear text signatures`,
			Args: []model.Arg{{
				Name: "string",
			}},
			ExclusiveOn: []string{"--no-comment", "--default-comment"},
		}, {
			Name:        []string{"--default-comment"},
			Description: `Force to write the standard comment string`,
			ExclusiveOn: []string{"--no-comment", "--comment"},
		}, {
			Name:        []string{"--no-version"},
			Description: `Omit the version string in clear text signatures`,
		}, {
			Name:        []string{"--emit-version"},
			Description: `Force to write the version string`,
		}, {
			Name:        []string{"-N", "--notation-data"},
			Description: `Put the name value pair into the signature as notation data`,
			Args: []model.Arg{{
				Name: "name=value",
			}},
		}, {
			Name:        []string{"--set-policy-url"},
			Description: `Use string as Policy URL for signatures (rfc2440:5.2.3.19)`,
			Args: []model.Arg{{
				Name: "string",
			}},
		}, {
			Name:        []string{"--set-filename"},
			Description: `Use string as the name of file which is stored in messages`,
			Args: []model.Arg{{
				Name: "string",
			}},
		}, {
			Name:        []string{"--use-embedded-filename"},
			Description: `Try to create a file with a name as embedded in the data`,
		}, {
			Name:        []string{"--completes-needed"},
			Description: `Number of completely trusted users to introduce a new key signer`,
			Args: []model.Arg{{
				Name: "n",
			}},
		}, {
			Name:        []string{"--marginals-needed"},
			Description: `Number of marginally trusted users to introduce a new key signer`,
			Args: []model.Arg{{
				Name: "n",
			}},
		}, {
			Name:        []string{"--max-cert-depth"},
			Description: `Maximum depth of a certification chain`,
			Args: []model.Arg{{
				Name: "n",
			}},
		}, {
			Name:        []string{"--cipher-algo"},
			Description: `Use name as cipher algorithm`,
			Args: []model.Arg{{
				Name:      "name",
				Generator: nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"--digest-algo"},
			Description: `Use name as message digest algorithm`,
			Args: []model.Arg{{
				Name:      "name",
				Generator: nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"--s2k-cipher-algo"},
			Description: `Use name as the cipher algorithm used to protect secret keys`,
			Args: []model.Arg{{
				Name:      "name",
				Generator: nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"--s2k-digest-algo"},
			Description: `Use name as the digest algorithm used to mangle the passphrases`,
			Args: []model.Arg{{
				Name:      "name",
				Generator: nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"--s2k-mode"},
			Description: `Selects how passphrases are mangled`,
			Args: []model.Arg{{
				Name: "n",
				Suggestions: []model.Suggestion{{
					Name:        []string{`0`},
					Description: `A plain passphrase (which is not recommended) will be used`,
				}, {
					Name:        []string{`1`},
					Description: `Adds a salt to the passphrase`,
				}, {
					Name:        []string{`3`},
					Description: `Iterates the whole process a couple of times`,
				}},
			}},
		}, {
			Name:        []string{"--compress-algo"},
			Description: `Use compress algorithm n`,
			Args: []model.Arg{{
				Name: "n",
				Suggestions: []model.Suggestion{{
					Name:        []string{`1`},
					Description: `Use the old zlib version (RFC1951) which is used by PGP`,
				}, {
					Name:        []string{`2`},
					Description: `RFC1950 compression`,
				}},
			}},
		}, {
			Name:        []string{"--disable-cipher-algo"},
			Description: `Never allow the use of name as cipher algorithm`,
			Args: []model.Arg{{
				Name:      "name",
				Generator: nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"--disable-pubkey-algo"},
			Description: `Never allow the use of name as public key algorithm`,
			Args: []model.Arg{{
				Name: "name",
			}},
		}, {
			Name:        []string{"--throw-keyid"},
			Description: `Do not put the keyid into encrypted packets`,
		}, {
			Name:        []string{"--not-dash-escaped"},
			Description: `Makes signatures usable for patch files`,
		}, {
			Name:        []string{"--escape-from-lines"},
			Description: `Handle "<From" in emails`,
		}, {
			Name:        []string{"--passphrase-fd"},
			Description: `Read the passphrase from file descriptor n`,
			Args: []model.Arg{{
				Name: "n",
			}},
		}, {
			Name:        []string{"--command-fd"},
			Description: `This is a replacement for the depreciated shared-memory IPC mode`,
			Args: []model.Arg{{
				Name: "n",
			}},
		}, {
			Name:        []string{"--rfc1991"},
			Description: `Try to be more RFC1991 (PGP 2.x) compliant`,
		}, {
			Name:        []string{"--openpgp"},
			Description: `Reset all packet, cipher and digest options to OpenPGP`,
		}, {
			Name:        []string{"--force-v3-sigs"},
			Description: `Forces v3 signatures for signatures on data`,
		}, {
			Name:        []string{"--force-mdc"},
			Description: `Force encryption with appended manipulation code`,
		}, {
			Name:        []string{"--allow-non-selfsigned-uid"},
			Description: `Allow non self-signed user IDs`,
		}, {
			Name:        []string{"--allow-freeform-uid"},
			Description: `Disable all checks on the form of the user ID`,
		}, {
			Name:        []string{"--ignore-time-conflict"},
			Description: `Makes time checks just a warning`,
		}, {
			Name:        []string{"--lock-once"},
			Description: `Do not release the lock until the process terminates`,
			ExclusiveOn: []string{"--lock-multiple", "--lock-never"},
		}, {
			Name:        []string{"--lock-multiple"},
			Description: `Release the locks every time one is no longer needed`,
			ExclusiveOn: []string{"--lock-once", "--lock-never"},
		}, {
			Name:        []string{"--lock-never"},
			Description: `Disable locking entirely`,
			ExclusiveOn: []string{"--lock-once", "--lock-multiple"},
		}, {
			Name:        []string{"--no-random-seed-file"},
			Description: `Disable random pool cache`,
		}, {
			Name:        []string{"--no-verbose"},
			Description: `Reset verbose level to 0`,
			ExclusiveOn: []string{"--verbose"},
		}, {
			Name:        []string{"--no-greeting"},
			Description: `Suppress the initial copyright message`,
		}, {
			Name:        []string{"--no-secmem-warning"},
			Description: `Suppress the "using insecure memory" warning`,
		}, {
			Name:        []string{"--no-armor"},
			Description: `Assume the input data is not in ASCII armored format`,
		}, {
			Name:        []string{"--no-default-keyring"},
			Description: `Do not add the keyrings to the list of keyrings`,
		}, {
			Name:        []string{"--skip-verify"},
			Description: `Skip the signature verification step`,
		}, {
			Name:        []string{"--with-colons"},
			Description: `Print key listings delimited by colons`,
		}, {
			Name:        []string{"--with-key-data"},
			Description: `--with-colons with the public key data`,
		}, {
			Name:        []string{"--with-fingerprint"},
			Description: `--fingerprint with a different format`,
		}, {
			Name:        []string{"--fast-list-mode"},
			Description: `Changes the list commands to work faster`,
		}, {
			Name:        []string{"--list-only"},
			Description: `Skip the decryption pass`,
		}, {
			Name:        []string{"--no-literal"},
			Description: `This is not for normal use`,
		}, {
			Name:        []string{"--set-filesize"},
			Description: `This is not for normal use`,
		}, {
			Name:        []string{"--emulate-md-encode-bug"},
			Description: `Enables workaround to check faulty signatures`,
		}, {
			Name:        []string{"--show-session-key"},
			Description: `Display the session key used for one message`,
		}, {
			Name:        []string{"--override-session-key"},
			Description: `Don't use the public key but the session key string`,
			Args: []model.Arg{{
				Name: "string",
			}},
		}, {
			Name:        []string{"--merge-only"},
			Description: `Don't insert new keys into the keyrings`,
		}, {
			Name:        []string{"--try-all-secrets"},
			Description: `Try all secret keys in turn to find the right one`,
		}},
		Subcommands: []model.Subcommand{{
			Name:        []string{"-s", "--sign"},
			Description: `Make a signature`,
		}, {
			Name:        []string{"--clearsign"},
			Description: `Make a clear text signature`,
		}, {
			Name:        []string{"-b", "--detach-sign"},
			Description: `Make a detached signature`,
		}, {
			Name:        []string{"-e", "--encrypt"},
			Description: `Encrypt data`,
		}, {
			Name:        []string{"-c", "--symmetric"},
			Description: `Encrypt with symmetric cipher only`,
		}, {
			Name:        []string{"--store"},
			Description: `Store only (make a simple RFC1991 packet)`,
		}, {
			Name:        []string{"--decrypt"},
			Description: `Decrypt file (or stdin if no file is specified) and write it to stdout`,
			Args: []model.Arg{{
				Templates:  []model.Template{model.TemplateFilepaths},
				Name:       "file",
				IsOptional: true,
			}},
		}, {
			Name:        []string{"--verify"},
			Description: `Assume that sigfile is a signature and verify it without generating any output`,
			Args: []model.Arg{{
				Templates:  []model.Template{model.TemplateFilepaths},
				Name:       "sigfile",
				IsOptional: true,
			}, {
				Templates:  []model.Template{model.TemplateFilepaths},
				Name:       "signed-files",
				IsOptional: true,
				IsVariadic: true,
			}},
		}, {
			Name:        []string{"--verify-files"},
			Description: `Special version of --verify which does not work with detached signatures`,
			Args: []model.Arg{{
				Templates:  []model.Template{model.TemplateFilepaths},
				Name:       "files",
				IsOptional: true,
				IsVariadic: true,
			}},
		}, {
			Name:        []string{"--list-keys", "--list-public-keys"},
			Description: `List all keys from public keyrings, or just the ones given on the command line`,
			Args: []model.Arg{{
				Name:       "names",
				IsOptional: true,
				IsVariadic: true,
			}},
		}, {
			Name:        []string{"--list-secret-keys"},
			Description: `List all keys from secret keyrings, or just the ones given on the command line`,
			Args: []model.Arg{{
				Name:       "names",
				IsOptional: true,
				IsVariadic: true,
			}},
		}, {
			Name:        []string{"--list-sigs"},
			Description: `Same as --list-keys, but the signatures are listed too`,
			Args: []model.Arg{{
				Name:       "names",
				IsOptional: true,
				IsVariadic: true,
			}},
		}, {
			Name:        []string{"--check-sigs"},
			Description: `Same as --list-sigs, but the signatures are verified`,
			Args: []model.Arg{{
				Name:       "names",
				IsOptional: true,
				IsVariadic: true,
			}},
		}, {
			Name:        []string{"--fingerprint"},
			Description: `List all keys with their fingerprints`,
			Args: []model.Arg{{
				Name:       "names",
				IsOptional: true,
				IsVariadic: true,
			}},
		}, {
			Name:        []string{"--list-packets"},
			Description: `List only the sequence of packets`,
		}, {
			Name:        []string{"--gen-key"},
			Description: `Generate a new key pair`,
		}, {
			Name:        []string{"--edit-key"},
			Description: `Present a menu which enables you to do all key related tasks`,
			Args: []model.Arg{{
				Name: "name",
			}},
		}, {
			Name:        []string{"--sign-key"},
			Description: `Sign a public key with you secret key`,
			Args: []model.Arg{{
				Name: "name",
			}},
		}, {
			Name:        []string{"--lsign-key"},
			Description: `Sign a public key with you secret key but mark it as non-exportable`,
			Args: []model.Arg{{
				Name: "name",
			}},
		}, {
			Name:        []string{"--trusted-key"},
			Description: `Assume that the specified key is as trustworthy as one of your own secret keys`,
			Args: []model.Arg{{
				Name: "long key ID",
			}},
		}, {
			Name:        []string{"--delete-key"},
			Description: `Remove key from the public keyring`,
			Args: []model.Arg{{
				Name: "name",
			}},
		}, {
			Name:        []string{"--delete-secret-key"},
			Description: `Remove key from the secret and public keyring`,
			Args: []model.Arg{{
				Name: "name",
			}},
		}, {
			Name:        []string{"--gen-revoke"},
			Description: `Generate a revocation certificate for the complete key`,
		}, {
			Name:        []string{"--export"},
			Description: `Either export all keys from all keyrings or those of the given names`,
			Args: []model.Arg{{
				Name:       "names",
				IsOptional: true,
				IsVariadic: true,
			}},
		}, {
			Name:        []string{"--send-keys"},
			Description: `Same as --export but sends the keys to a keyserver`,
			Args: []model.Arg{{
				Name:       "names",
				IsOptional: true,
				IsVariadic: true,
			}},
		}, {
			Name:        []string{"--export-all"},
			Description: `Same as --export, but also exports keys which are not compatible to OpenPGP`,
			Args: []model.Arg{{
				Name:       "names",
				IsOptional: true,
				IsVariadic: true,
			}},
		}, {
			Name:        []string{"--export-secret-keys"},
			Description: `Same as --export, but exports the secret keys`,
			Args: []model.Arg{{
				Name:       "names",
				IsOptional: true,
				IsVariadic: true,
			}},
		}, {
			Name:        []string{"--export-secret-subkeys"},
			Description: `Same as --export, but exports the secret subkeys`,
			Args: []model.Arg{{
				Name:       "names",
				IsOptional: true,
				IsVariadic: true,
			}},
		}, {
			Name:        []string{"--import"},
			Description: `Import/merge keys. This adds the given keys to the keyring`,
			Args: []model.Arg{{
				Templates:  []model.Template{model.TemplateFilepaths},
				Name:       "files",
				IsOptional: true,
				IsVariadic: true,
			}},
		}, {
			Name:        []string{"--fast-import"},
			Description: `--import but does not build the trustdb`,
			Args: []model.Arg{{
				Templates:  []model.Template{model.TemplateFilepaths},
				Name:       "files",
				IsOptional: true,
				IsVariadic: true,
			}},
		}, {
			Name:        []string{"--recv-keys"},
			Description: `Import the keys with the given key IDs from a HKP keyserver`,
			Args: []model.Arg{{
				Name:       "key IDs",
				IsVariadic: true,
			}},
		}, {
			Name:        []string{"--export-ownertrust"},
			Description: `List the ownertrust values in ASCII format`,
		}, {
			Name:        []string{"--import-ownertrust"},
			Description: `Update the trustdb with the ownertrust values stored in files`,
			Args: []model.Arg{{
				Templates:  []model.Template{model.TemplateFilepaths},
				Name:       "files",
				IsOptional: true,
				IsVariadic: true,
			}},
		}, {
			Name:        []string{"--print-md"},
			Description: `Print message digest of algorithm ALGO for all given files of stdin`,
			Args: []model.Arg{{
				Name:      "algo",
				Generator: nil, // TODO: port over generator
			}, {
				Templates:  []model.Template{model.TemplateFilepaths},
				Name:       "files",
				IsOptional: true,
				IsVariadic: true,
			}},
		}, {
			Name:        []string{"--gen-random"},
			Description: `Emit COUNT random bytes of the given quality level`,
			Args: []model.Arg{{
				Name:        "0|1|2",
				Suggestions: []model.Suggestion{{Name: []string{`0`}}, {Name: []string{`1`}}, {Name: []string{`2`}}},
			}, {
				Templates:  []model.Template{model.TemplateFilepaths},
				Name:       "files",
				IsOptional: true,
				IsVariadic: true,
			}},
		}, {
			Name:        []string{"--gen-prime"},
			Description: `Generate prime numbers`,
			Args: []model.Arg{{
				Name: "mode",
			}, {
				Name: "bits",
			}, {
				Name:       "qbits",
				IsOptional: true,
				IsVariadic: true,
			}},
		}, {
			Name:        []string{"--version"},
			Description: `Print version information`,
		}, {
			Name:        []string{"--warranty"},
			Description: `Print warranty information`,
		}, {
			Name:        []string{"-h", "--help"},
			Description: `Print usage information`,
		}},
	}
}
