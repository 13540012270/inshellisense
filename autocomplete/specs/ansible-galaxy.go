// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.
//
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

package specs

import (
	"github.com/microsoft/clac/autocomplete/model"
)

func init() {
	Specs["ansible-galaxy"] = model.Subcommand{
		Name:        []string{"ansible-galaxy"},
		Description: `Perform various Role and Collection related operations`,
		Options: []model.Option{{
			Name:         []string{"--help", "-h"},
			Description:  `Show help and exit`,
			IsPersistent: true,
		}, {
			Name:         []string{"--verbose"},
			Description:  `Verbose mode (-vvv for more, -vvvv to enable connection debugging)`,
			IsPersistent: true,
			ExclusiveOn:  []string{"-v"},
		}, {
			Name:         []string{"-v"},
			Description:  `Verbose mode (-vvv for more, -vvvv to enable connection debugging)`,
			IsPersistent: true,
			ExclusiveOn:  []string{"--verbose"},
		}, {
			Name:         []string{"--version"},
			Description:  `Shows version number, config file location, module search path, module location, executable location and exit`,
			IsPersistent: true,
		}},
		Subcommands: []model.Subcommand{{
			Name:        []string{"collection"},
			Description: `Operate on collections`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"download"},
				Description: `Download collections`,
				Args: []model.Arg{{
					Name:        "collection",
					Description: `Name of the collection`,
					Suggestions: []model.Suggestion{{Name: []string{`amazon.aws`}}, {Name: []string{`ansible.builtin`}}, {Name: []string{`ansible.netcommon`}}, {Name: []string{`ansible.posix`}}, {Name: []string{`ansible.utils`}}, {Name: []string{`ansible.windows`}}, {Name: []string{`arista.eos`}}, {Name: []string{`awx.awx`}}, {Name: []string{`azure.azcollection`}}, {Name: []string{`check_point.mgmt`}}, {Name: []string{`chocolatey.chocolatey`}}, {Name: []string{`cisco.aci`}}, {Name: []string{`cisco.asa`}}, {Name: []string{`cisco.intersight`}}, {Name: []string{`cisco.ios`}}, {Name: []string{`cisco.iosxr`}}, {Name: []string{`cisco.ise`}}, {Name: []string{`cisco.meraki`}}, {Name: []string{`cisco.mso`}}, {Name: []string{`cisco.nso`}}, {Name: []string{`cisco.nxos`}}, {Name: []string{`cisco.ucs`}}, {Name: []string{`cloud.common`}}, {Name: []string{`cloudscale_ch.cloud`}}, {Name: []string{`community.aws`}}, {Name: []string{`community.azure`}}, {Name: []string{`community.ciscosmb`}}, {Name: []string{`community.crypto`}}, {Name: []string{`community.digitalocean`}}, {Name: []string{`community.dns`}}, {Name: []string{`community.docker`}}, {Name: []string{`community.fortios`}}, {Name: []string{`community.general`}}, {Name: []string{`community.google`}}, {Name: []string{`community.grafana`}}, {Name: []string{`community.hashi_vault`}}, {Name: []string{`community.hrobot`}}, {Name: []string{`community.kubernetes`}}, {Name: []string{`community.kubevirt`}}, {Name: []string{`community.libvirt`}}, {Name: []string{`community.mongodb`}}, {Name: []string{`community.mysql`}}, {Name: []string{`community.network`}}, {Name: []string{`community.okd`}}, {Name: []string{`community.postgresql`}}, {Name: []string{`community.proxysql`}}, {Name: []string{`community.rabbitmq`}}, {Name: []string{`community.routeros`}}, {Name: []string{`community.sap`}}, {Name: []string{`community.skydive`}}, {Name: []string{`community.sops`}}, {Name: []string{`community.vmware`}}, {Name: []string{`community.windows`}}, {Name: []string{`community.zabbix`}}, {Name: []string{`containers.podman`}}, {Name: []string{`cyberark.conjur`}}, {Name: []string{`cyberark.pas`}}, {Name: []string{`dellemc.enterprise_sonic`}}, {Name: []string{`dellemc.openmanage`}}, {Name: []string{`dellemc.os10`}}, {Name: []string{`dellemc.os6`}}, {Name: []string{`dellemc.os9`}}, {Name: []string{`f5networks.f5_modules`}}, {Name: []string{`fortinet.fortimanager`}}, {Name: []string{`fortinet.fortios`}}, {Name: []string{`frr.frr`}}, {Name: []string{`gluster.gluster`}}, {Name: []string{`google.cloud`}}, {Name: []string{`hetzner.hcloud`}}, {Name: []string{`hpe.nimble`}}, {Name: []string{`ibm.qradar`}}, {Name: []string{`infinidat.infinibox`}}, {Name: []string{`infoblox.nios_modules`}}, {Name: []string{`inspur.sm`}}, {Name: []string{`junipernetworks.junos`}}, {Name: []string{`kubernetes.core`}}, {Name: []string{`mellanox.onyx`}}, {Name: []string{`netapp.aws`}}, {Name: []string{`netapp.azure`}}, {Name: []string{`netapp.cloudmanager`}}, {Name: []string{`netapp.elementsw`}}, {Name: []string{`netapp.ontap`}}, {Name: []string{`netapp.storagegrid`}}, {Name: []string{`netapp.um_info`}}, {Name: []string{`netapp_eseries.santricity`}}, {Name: []string{`netbox.netbox`}}, {Name: []string{`ngine_io.cloudstack`}}, {Name: []string{`ngine_io.exoscale`}}, {Name: []string{`ngine_io.vultr`}}, {Name: []string{`openstack.cloud`}}, {Name: []string{`openvswitch.openvswitch`}}, {Name: []string{`ovirt.ovirt`}}, {Name: []string{`purestorage.flasharray`}}, {Name: []string{`purestorage.flashblade`}}, {Name: []string{`sensu.sensu_go`}}, {Name: []string{`servicenow.servicenow`}}, {Name: []string{`splunk.es`}}, {Name: []string{`t_systems_mms.icinga_director`}}, {Name: []string{`theforeman.foreman`}}, {Name: []string{`vmware.vmware_rest`}}, {Name: []string{`vyos.vyos`}}, {Name: []string{`wti.remote`}}},
					IsVariadic:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"--server", "-s"},
					Description: `The Galaxy API server URL`,
					Args: []model.Arg{{
						Name:        "api_server",
						Description: `The Galaxy API server URL`,
					}},
				}, {
					Name:        []string{"--token", "--api-key"},
					Description: `The Ansible Galaxy API key which can be found at https://galaxy.ansible.com/me/preferences`,
					Args: []model.Arg{{
						Name:        "api_key",
						Description: `The Ansible Galaxy API key which can be found at https://galaxy.ansible.com/me/preferences`,
					}},
				}, {
					Name:        []string{"--ignore-certs", "-c"},
					Description: `Ignore SSL certificate validation errors`,
				}, {
					Name:        []string{"--clear-response-cache"},
					Description: `Clear the existing server response cache`,
				}, {
					Name:        []string{"--no-cache"},
					Description: `Do not use the server response cache`,
				}, {
					Name:        []string{"--no-deps", "-n"},
					Description: `Don't download collection(s) listed as dependencies`,
				}, {
					Name:        []string{"--download-path", "-p"},
					Description: `The directory to download the collections to`,
					Args: []model.Arg{{
						Templates:   []model.Template{model.TemplateFolders},
						Name:        "download_path",
						Description: `The directory to download the collections to`,
					}},
				}, {
					Name:        []string{"--requirements-file", "-r"},
					Description: `A file containing a list of collections to be downloaded`,
					Args: []model.Arg{{
						Templates:   []model.Template{model.TemplateFilepaths},
						Name:        "requirements",
						Description: `A file containing a list of collections to be downloaded`,
					}},
				}, {
					Name:        []string{"--pre"},
					Description: `Include pre-release versions`,
				}},
			}, {
				Name:        []string{"init"},
				Description: `Initialize collections`,
				Args: []model.Arg{{
					Name:        "collection_name",
					Description: `Name of the collection`,
				}},
				Options: []model.Option{{
					Name:        []string{"--server", "-s"},
					Description: `The Galaxy API server URL`,
					Args: []model.Arg{{
						Name:        "api_server",
						Description: `The Galaxy API server URL`,
					}},
				}, {
					Name:        []string{"--token", "--api-key"},
					Description: `The Ansible Galaxy API key which can be found at https://galaxy.ansible.com/me/preferences`,
					Args: []model.Arg{{
						Name:        "api_key",
						Description: `The Ansible Galaxy API key which can be found at https://galaxy.ansible.com/me/preferences`,
					}},
				}, {
					Name:        []string{"--ignore-certs", "-c"},
					Description: `Ignore SSL certificate validation errors`,
				}, {
					Name:        []string{"--force", "-f"},
					Description: `Force overwriting an existing role or collection`,
				}, {
					Name:        []string{"--init-path"},
					Description: `The path in which the skeleton collection will be created`,
					Args: []model.Arg{{
						Templates:   []model.Template{model.TemplateFolders},
						Name:        "init_path",
						Description: `The path in which the skeleton collection will be created`,
					}},
				}, {
					Name:        []string{"--collection-skeleton"},
					Description: `The path to a collection skeleton that the new collection should be based upon`,
					Args: []model.Arg{{
						Templates:   []model.Template{model.TemplateFolders},
						Name:        "collection_skeleton",
						Description: `The path to a collection skeleton that the new collection should be based upon`,
					}},
				}},
			}, {
				Name:        []string{"build"},
				Description: `Build collections`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFolders},
					Name:        "collection",
					Description: `Path(s) to the collection to be built`,
				}},
				Options: []model.Option{{
					Name:        []string{"--server", "-s"},
					Description: `The Galaxy API server URL`,
					Args: []model.Arg{{
						Name:        "api_server",
						Description: `The Galaxy API server URL`,
					}},
				}, {
					Name:        []string{"--token", "--api-key"},
					Description: `The Ansible Galaxy API key which can be found at https://galaxy.ansible.com/me/preferences`,
					Args: []model.Arg{{
						Name:        "api_key",
						Description: `The Ansible Galaxy API key which can be found at https://galaxy.ansible.com/me/preferences`,
					}},
				}, {
					Name:        []string{"--ignore-certs", "-c"},
					Description: `Ignore SSL certificate validation errors`,
				}, {
					Name:        []string{"--force", "-f"},
					Description: `Force overwriting an existing role or collection`,
				}, {
					Name:        []string{"--output-path"},
					Description: `The path in which the collection is built to`,
					Args: []model.Arg{{
						Templates:   []model.Template{model.TemplateFolders},
						Name:        "output_path",
						Description: `The path in which the collection is built to`,
					}},
				}},
			}, {
				Name:        []string{"publish"},
				Description: `Publish collections`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFolders},
					Name:        "collection_path",
					Description: `The path to the collection tarball to publish`,
				}},
				Options: []model.Option{{
					Name:        []string{"--server", "-s"},
					Description: `The Galaxy API server URL`,
					Args: []model.Arg{{
						Name:        "api_server",
						Description: `The Galaxy API server URL`,
					}},
				}, {
					Name:        []string{"--token", "--api-key"},
					Description: `The Ansible Galaxy API key which can be found at https://galaxy.ansible.com/me/preferences`,
					Args: []model.Arg{{
						Name:        "api_key",
						Description: `The Ansible Galaxy API key which can be found at https://galaxy.ansible.com/me/preferences`,
					}},
				}, {
					Name:        []string{"--ignore-certs", "-c"},
					Description: `Ignore SSL certificate validation errors`,
				}, {
					Name:        []string{"--no-wait"},
					Description: `Don't wait for import validation results`,
				}, {
					Name:        []string{"--import-timeout"},
					Description: `The time to wait for the collection import process to finish`,
					Args: []model.Arg{{
						Name:        "import_timeout",
						Description: `The time to wait for the collection import process to finish`,
						Suggestions: []model.Suggestion{{Name: []string{`60`}}, {Name: []string{`300`}}, {Name: []string{`600`}}, {Name: []string{`900`}}},
					}},
				}},
			}, {
				Name:        []string{"list"},
				Description: `List collections`,
				Args: []model.Arg{{
					Name:        "collection",
					Description: `The collections to list`,
					IsOptional:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"--server", "-s"},
					Description: `The Galaxy API server URL`,
					Args: []model.Arg{{
						Name:        "api_server",
						Description: `The Galaxy API server URL`,
					}},
				}, {
					Name:        []string{"--token", "--api-key"},
					Description: `The Ansible Galaxy API key which can be found at https://galaxy.ansible.com/me/preferences`,
					Args: []model.Arg{{
						Name:        "api_key",
						Description: `The Ansible Galaxy API key which can be found at https://galaxy.ansible.com/me/preferences`,
					}},
				}, {
					Name:        []string{"--ignore-certs", "-c"},
					Description: `Ignore SSL certificate validation errors`,
				}, {
					Name:        []string{"--collections-path", "-p"},
					Description: `One or more directories to search for collections in addition to the default COLLECTIONS_PATHS; separate multiple paths with ':'`,
					Args: []model.Arg{{
						Templates:   []model.Template{model.TemplateFolders},
						Name:        "collections_path",
						Description: `One or more directories to search for collections in addition to the default COLLECTIONS_PATHS; separate multiple paths with ':'`,
						Suggestions: []model.Suggestion{{Name: []string{`~/.ansible/collections:/usr/share/ansible/collections`}}},
					}},
				}, {
					Name:        []string{"--format"},
					Description: `Format to display the list of collections in`,
					Args: []model.Arg{{
						Name:        "format",
						Description: `Format to display the list of collections in`,
						Suggestions: []model.Suggestion{{Name: []string{`human`}}, {Name: []string{`yaml`}}, {Name: []string{`json`}}},
					}},
				}},
			}, {
				Name:        []string{"verify"},
				Description: `Verify collections`,
				Args: []model.Arg{{
					Name:        "collection_name",
					Description: `The collections to verify`,
					IsOptional:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"--server", "-s"},
					Description: `The Galaxy API server URL`,
					Args: []model.Arg{{
						Name:        "api_server",
						Description: `The Galaxy API server URL`,
					}},
				}, {
					Name:        []string{"--token", "--api-key"},
					Description: `The Ansible Galaxy API key which can be found at https://galaxy.ansible.com/me/preferences`,
					Args: []model.Arg{{
						Name:        "api_key",
						Description: `The Ansible Galaxy API key which can be found at https://galaxy.ansible.com/me/preferences`,
					}},
				}, {
					Name:        []string{"--ignore-certs", "-c"},
					Description: `Ignore SSL certificate validation errors`,
				}, {
					Name:        []string{"--collections-path", "-p"},
					Description: `One or more directories to search for collections in addition to the default COLLECTIONS_PATHS; separate multiple paths with ':'`,
					Args: []model.Arg{{
						Templates:   []model.Template{model.TemplateFolders},
						Name:        "collections_path",
						Description: `One or more directories to search for collections in addition to the default COLLECTIONS_PATHS; separate multiple paths with ':'`,
						Suggestions: []model.Suggestion{{Name: []string{`~/.ansible/collections:/usr/share/ansible/collections`}}},
					}},
				}, {
					Name:        []string{"--ignore-errors", "-i"},
					Description: `Ignore errors during verification and continue with the next specified collection`,
				}, {
					Name:        []string{"--requirements-file", "-r"},
					Description: `A file containing a list of collections to be downloaded`,
					Args: []model.Arg{{
						Templates:   []model.Template{model.TemplateFilepaths},
						Name:        "requirements",
						Description: `A file containing a list of collections to be downloaded`,
					}},
				}},
			}},
		}, {
			Name:        []string{"role"},
			Description: `Operate on roles`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"init"},
				Description: `Initialize roles`,
				Args: []model.Arg{{
					Name:        "role_name",
					Description: `Name of the role`,
				}},
				Options: []model.Option{{
					Name:        []string{"--server", "-s"},
					Description: `The Galaxy API server URL`,
					Args: []model.Arg{{
						Name:        "api_server",
						Description: `The Galaxy API server URL`,
					}},
				}, {
					Name:        []string{"--token", "--api-key"},
					Description: `The Ansible Galaxy API key which can be found at https://galaxy.ansible.com/me/preferences`,
					Args: []model.Arg{{
						Name:        "api_key",
						Description: `The Ansible Galaxy API key which can be found at https://galaxy.ansible.com/me/preferences`,
					}},
				}, {
					Name:        []string{"--ignore-certs", "-c"},
					Description: `Ignore SSL certificate validation errors`,
				}, {
					Name:        []string{"--force", "-f"},
					Description: `Force overwriting an existing role or collection`,
				}, {
					Name:        []string{"--offline"},
					Description: `Don't query the galaxy API when creating roles`,
				}, {
					Name:        []string{"--init-path"},
					Description: `The path in which the skeleton collection will be created`,
					Args: []model.Arg{{
						Templates:   []model.Template{model.TemplateFolders},
						Name:        "init_path",
						Description: `The path in which the skeleton collection will be created`,
					}},
				}, {
					Name:        []string{"--role-skeleton"},
					Description: `The path in which the skeleton role will be created`,
					Args: []model.Arg{{
						Templates:   []model.Template{model.TemplateFolders},
						Name:        "role_skeleton",
						Description: `The path in which the skeleton role will be created`,
					}},
				}, {
					Name:        []string{"--type"},
					Description: `Initialize using an alternate role type`,
					Args: []model.Arg{{
						Name:        "role_type",
						Description: `Initialize using an alternate role type`,
						Suggestions: []model.Suggestion{{Name: []string{`container`}}, {Name: []string{`apb`}}, {Name: []string{`network`}}},
					}},
				}},
			}, {
				Name:        []string{"remove"},
				Description: `Remove roles`,
				Args: []model.Arg{{
					Name:        "role_name",
					Description: `The role to remove`,
				}},
				Options: []model.Option{{
					Name:        []string{"--server", "-s"},
					Description: `The Galaxy API server URL`,
					Args: []model.Arg{{
						Name:        "api_server",
						Description: `The Galaxy API server URL`,
					}},
				}, {
					Name:        []string{"--token", "--api-key"},
					Description: `The Ansible Galaxy API key which can be found at https://galaxy.ansible.com/me/preferences`,
					Args: []model.Arg{{
						Name:        "api_key",
						Description: `The Ansible Galaxy API key which can be found at https://galaxy.ansible.com/me/preferences`,
					}},
				}, {
					Name:        []string{"--ignore-certs", "-c"},
					Description: `Ignore SSL certificate validation errors`,
				}, {
					Name:        []string{"--roles-path", "--role-path"},
					Description: `The path to the directory containing your roles`,
					Args: []model.Arg{{
						Name:        "roles_path",
						Description: `The path to the directory containing your roles`,
						Suggestions: []model.Suggestion{{Name: []string{`~/.ansible/roles:/usr/share/ansible/roles:/etc/ansible/roles`}}},
					}},
				}},
			}, {
				Name:        []string{"list"},
				Description: `List roles`,
				Args: []model.Arg{{
					Name:        "role",
					Description: `The role to list`,
					IsOptional:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"--server", "-s"},
					Description: `The Galaxy API server URL`,
					Args: []model.Arg{{
						Name:        "api_server",
						Description: `The Galaxy API server URL`,
					}},
				}, {
					Name:        []string{"--token", "--api-key"},
					Description: `The Ansible Galaxy API key which can be found at https://galaxy.ansible.com/me/preferences`,
					Args: []model.Arg{{
						Name:        "api_key",
						Description: `The Ansible Galaxy API key which can be found at https://galaxy.ansible.com/me/preferences`,
					}},
				}, {
					Name:        []string{"--ignore-certs", "-c"},
					Description: `Ignore SSL certificate validation errors`,
				}, {
					Name:        []string{"--roles-path", "--role-path"},
					Description: `The path to the directory containing your roles`,
					Args: []model.Arg{{
						Name:        "roles_path",
						Description: `The path to the directory containing your roles`,
						Suggestions: []model.Suggestion{{Name: []string{`~/.ansible/roles:/usr/share/ansible/roles:/etc/ansible/roles`}}},
					}},
				}},
			}, {
				Name:        []string{"search"},
				Description: `Search roles`,
				Args: []model.Arg{{
					Name:        "searchterm",
					Description: `Search terms`,
					IsOptional:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"--server", "-s"},
					Description: `The Galaxy API server URL`,
					Args: []model.Arg{{
						Name:        "api_server",
						Description: `The Galaxy API server URL`,
					}},
				}, {
					Name:        []string{"--token", "--api-key"},
					Description: `The Ansible Galaxy API key which can be found at https://galaxy.ansible.com/me/preferences`,
					Args: []model.Arg{{
						Name:        "api_key",
						Description: `The Ansible Galaxy API key which can be found at https://galaxy.ansible.com/me/preferences`,
					}},
				}, {
					Name:        []string{"--ignore-certs", "-c"},
					Description: `Ignore SSL certificate validation errors`,
				}, {
					Name:        []string{"--platforms"},
					Description: `List of OS platforms to filter by`,
					Args: []model.Arg{{
						Name:        "platforms",
						Description: `List of OS platforms to filter by`,
					}},
				}, {
					Name:        []string{"--galaxy-tags"},
					Description: `List of Galaxy tags to filter by`,
					Args: []model.Arg{{
						Name:        "galaxy_tags",
						Description: `List of Galaxy tags to filter by`,
					}},
				}, {
					Name:        []string{"--author"},
					Description: `GitHub username`,
					Args: []model.Arg{{
						Name:        "author",
						Description: `GitHub username`,
					}},
				}},
			}, {
				Name:        []string{"import"},
				Description: `Import roles`,
				Args: []model.Arg{{
					Name:        "github_user",
					Description: `GitHub username`,
					IsOptional:  true,
				}, {
					Name:        "github_repo",
					Description: `GitHub repository`,
				}},
				Options: []model.Option{{
					Name:        []string{"--server", "-s"},
					Description: `The Galaxy API server URL`,
					Args: []model.Arg{{
						Name:        "api_server",
						Description: `The Galaxy API server URL`,
					}},
				}, {
					Name:        []string{"--token", "--api-key"},
					Description: `The Ansible Galaxy API key which can be found at https://galaxy.ansible.com/me/preferences`,
					Args: []model.Arg{{
						Name:        "api_key",
						Description: `The Ansible Galaxy API key which can be found at https://galaxy.ansible.com/me/preferences`,
					}},
				}, {
					Name:        []string{"--ignore-certs", "-c"},
					Description: `Ignore SSL certificate validation errors`,
				}, {
					Name:        []string{"--branch"},
					Description: `The name of a branch to import. Defaults to the repository's default branch (usually master)`,
					Args: []model.Arg{{
						Name:        "reference",
						Description: `The name of a branch to import. Defaults to the repository's default branch (usually master)`,
						Suggestions: []model.Suggestion{{Name: []string{`master`}}, {Name: []string{`main`}}, {Name: []string{`develop`}}},
					}},
				}, {
					Name:        []string{"--role-name"},
					Description: `The name the role should have, if different than the repo name`,
					Args: []model.Arg{{
						Name:        "role_name",
						Description: `The name the role should have, if different than the repo name`,
					}},
				}, {
					Name:        []string{"--status"},
					Description: `Check the status of the most recent import request for given github_user/github_repo`,
				}},
			}, {
				Name:        []string{"setup"},
				Description: `Set up roles`,
				Options: []model.Option{{
					Name:        []string{"--server", "-s"},
					Description: `The Galaxy API server URL`,
					Args: []model.Arg{{
						Name:        "api_server",
						Description: `The Galaxy API server URL`,
					}},
				}, {
					Name:        []string{"--token", "--api-key"},
					Description: `The Ansible Galaxy API key which can be found at https://galaxy.ansible.com/me/preferences`,
					Args: []model.Arg{{
						Name:        "api_key",
						Description: `The Ansible Galaxy API key which can be found at https://galaxy.ansible.com/me/preferences`,
					}},
				}, {
					Name:        []string{"--ignore-certs", "-c"},
					Description: `Ignore SSL certificate validation errors`,
				}, {
					Name:        []string{"--roles-path", "--role-path"},
					Description: `The path to the directory containing your roles`,
					Args: []model.Arg{{
						Name:        "roles_path",
						Description: `The path to the directory containing your roles`,
						Suggestions: []model.Suggestion{{Name: []string{`~/.ansible/roles:/usr/share/ansible/roles:/etc/ansible/roles`}}},
					}},
				}, {
					Name:        []string{"--remove"},
					Description: `Remove the integration matching the provided ID value. Use --list to see ID values`,
					Args: []model.Arg{{
						Name:        "remove_id",
						Description: `Remove the integration matching the provided ID value. Use --list to see ID values`,
					}},
					ExclusiveOn: []string{"--list"},
				}, {
					Name:        []string{"--list"},
					Description: `List all of your integrations`,
					ExclusiveOn: []string{"--remove"},
				}},
			}, {
				Name:        []string{"info"},
				Description: `Role information`,
				Options: []model.Option{{
					Name:        []string{"--server", "-s"},
					Description: `The Galaxy API server URL`,
					Args: []model.Arg{{
						Name:        "api_server",
						Description: `The Galaxy API server URL`,
					}},
				}, {
					Name:        []string{"--token", "--api-key"},
					Description: `The Ansible Galaxy API key which can be found at https://galaxy.ansible.com/me/preferences`,
					Args: []model.Arg{{
						Name:        "api_key",
						Description: `The Ansible Galaxy API key which can be found at https://galaxy.ansible.com/me/preferences`,
					}},
				}, {
					Name:        []string{"--ignore-certs", "-c"},
					Description: `Ignore SSL certificate validation errors`,
				}, {
					Name:        []string{"--roles-path", "--role-path"},
					Description: `The path to the directory containing your roles`,
					Args: []model.Arg{{
						Name:        "roles_path",
						Description: `The path to the directory containing your roles`,
						Suggestions: []model.Suggestion{{Name: []string{`~/.ansible/roles:/usr/share/ansible/roles:/etc/ansible/roles`}}},
					}},
				}, {
					Name:        []string{"--offline"},
					Description: `Don't query the galaxy API when creating roles`,
				}},
			}, {
				Name:        []string{"install"},
				Description: `Install roles`,
				Options: []model.Option{{
					Name:        []string{"--server", "-s"},
					Description: `The Galaxy API server URL`,
					Args: []model.Arg{{
						Name:        "api_server",
						Description: `The Galaxy API server URL`,
					}},
				}, {
					Name:        []string{"--token", "--api-key"},
					Description: `The Ansible Galaxy API key which can be found at https://galaxy.ansible.com/me/preferences`,
					Args: []model.Arg{{
						Name:        "api_key",
						Description: `The Ansible Galaxy API key which can be found at https://galaxy.ansible.com/me/preferences`,
					}},
				}, {
					Name:        []string{"--ignore-certs", "-c"},
					Description: `Ignore SSL certificate validation errors`,
				}, {
					Name:        []string{"--roles-path", "--role-path"},
					Description: `The path to the directory containing your roles`,
					Args: []model.Arg{{
						Name:        "roles_path",
						Description: `The path to the directory containing your roles`,
						Suggestions: []model.Suggestion{{Name: []string{`~/.ansible/roles:/usr/share/ansible/roles:/etc/ansible/roles`}}},
					}},
				}, {
					Name:        []string{"--no-deps", "-n"},
					Description: `Don't download roles listed as dependencies`,
				}, {
					Name:        []string{"--force-with-deps"},
					Description: `Force overwriting an existing role and its dependencies`,
				}, {
					Name:        []string{"--requirements-file", "-r"},
					Description: `A file containing a list of collections to be downloaded`,
					Args: []model.Arg{{
						Templates:   []model.Template{model.TemplateFilepaths},
						Name:        "requirements",
						Description: `A file containing a list of collections to be downloaded`,
					}},
				}, {
					Name:        []string{"--keep-scm-meta", "-g"},
					Description: `Use tar instead of the scm archive option when packaging the role`,
				}},
			}},
		}},
	}
}
