// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["terraform"] = model.Subcommand{
		Name:        []string{"terraform"},
		Description: `Terraform CLI`,
		Options: []model.Option{{
			Name:        []string{"-help"},
			Description: `Show this help output, or the help for a specified subcommand`,
		}, {
			Name:        []string{"-chdir"},
			Description: `Switch to a different working directory before executing the given subcommand`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
			}},
		}, {
			Name:        []string{"-version"},
			Description: `Show the current Terraform version`,
		}},
		Subcommands: []model.Subcommand{{
			Name:        []string{"init"},
			Description: `Prepare your working directory for other commands`,
			Options: []model.Option{{
				Name:        []string{"-upgrade"},
				Description: `Opt to upgrade modules and plugins as part of their respective installation steps`,
			}, {
				Name:        []string{"-lock"},
				Description: `Lock the state file when locking is supported. Defaults to true`,
				Args: []model.Arg{{
					Name:        "true or false",
					Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
				}},
			}, {
				Name:        []string{"-force"},
				Description: `Delete the workspace even if its state is not empty. Defaults to false`,
				Args: []model.Arg{{
					Name:        "true or false",
					Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
				}},
			}, {
				Name:        []string{"-lock-timeout"},
				Description: `Duration to retry a state lock. Default 0s`,
				Args: []model.Arg{{
					Name: "seconds",
				}},
			}, {
				Name:        []string{"-input"},
				Description: `Ask for input for variables if not directly set`,
				Args: []model.Arg{{
					Name:        "true or false",
					Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
				}},
			}, {
				Name:        []string{"-no-color"},
				Description: `Disables output with coloring`,
			}, {
				Name:        []string{"-help"},
				Description: `Show this help output, or the help for a specified subcommand`,
			}, {
				Name:        []string{"-chdir"},
				Description: `Switch to a different working directory before executing the given subcommand`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
				}},
			}, {
				Name:        []string{"-version"},
				Description: `Show the current Terraform version`,
			}},
		}, {
			Name:        []string{"validate"},
			Description: `Check whether the configuration is valid`,
			Options: []model.Option{{
				Name:        []string{"-help"},
				Description: `Show this help output, or the help for a specified subcommand`,
			}, {
				Name:        []string{"-chdir"},
				Description: `Switch to a different working directory before executing the given subcommand`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
				}},
			}, {
				Name:        []string{"-version"},
				Description: `Show the current Terraform version`,
			}},
		}, {
			Name:        []string{"plan"},
			Description: `Show changes required by the current configuration`,
			Options: []model.Option{{
				Name:        []string{"-compact-warnings"},
				Description: `If Terraform produces any warnings that are not accompanied by errors, show them in a more compact form that includes only the summary messages`,
			}, {
				Name:        []string{"-destroy"},
				Description: `If set, generates a plan to destroy all the known resources`,
			}, {
				Name:        []string{"-detailed-exitcode"},
				Description: `Return a detailed exit code when the command exits`,
			}, {
				Name:        []string{"-out"},
				Description: `The path to save the generated execution plan`,
			}, {
				Name:        []string{"-parallelism"},
				Description: `Limit the number of concurrent operation as Terraform walks the graph. Defaults to 10`,
				Args: []model.Arg{{
					Name: "number",
				}},
			}, {
				Name:        []string{"-refresh"},
				Description: `Update the state prior to checking for differences`,
				Args: []model.Arg{{
					Name:        "true or false",
					Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
				}},
			}, {
				Name:        []string{"-state"},
				Description: `Path to the state file. Defaults to 'terraform.tfstate'. Ignored when remote state is used`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
				}},
			}, {
				Name:        []string{"-target"},
				Description: `A Resource Address to target. This flag can be used multiple times`,
			}, {
				Name:        []string{"-var"},
				Description: `Set a variable in the Terraform configuration. This flag can be set multiple times`,
				Args: []model.Arg{{
					Name: "foo=bar",
				}},
			}, {
				Name:        []string{"-var-file"},
				Description: `Set variables in the Terraform configuration from a variable file`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
				}},
			}, {
				Name:        []string{"-lock"},
				Description: `Lock the state file when locking is supported. Defaults to true`,
				Args: []model.Arg{{
					Name:        "true or false",
					Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
				}},
			}, {
				Name:        []string{"-force"},
				Description: `Delete the workspace even if its state is not empty. Defaults to false`,
				Args: []model.Arg{{
					Name:        "true or false",
					Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
				}},
			}, {
				Name:        []string{"-lock-timeout"},
				Description: `Duration to retry a state lock. Default 0s`,
				Args: []model.Arg{{
					Name: "seconds",
				}},
			}, {
				Name:        []string{"-input"},
				Description: `Ask for input for variables if not directly set`,
				Args: []model.Arg{{
					Name:        "true or false",
					Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
				}},
			}, {
				Name:        []string{"-no-color"},
				Description: `Disables output with coloring`,
			}, {
				Name:        []string{"-help"},
				Description: `Show this help output, or the help for a specified subcommand`,
			}, {
				Name:        []string{"-chdir"},
				Description: `Switch to a different working directory before executing the given subcommand`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
				}},
			}, {
				Name:        []string{"-version"},
				Description: `Show the current Terraform version`,
			}},
		}, {
			Name:        []string{"apply"},
			Description: `Create or update infrastructure`,
			Options: []model.Option{{
				Name:        []string{"-help"},
				Description: `Show this help output, or the help for a specified subcommand`,
			}, {
				Name:        []string{"-chdir"},
				Description: `Switch to a different working directory before executing the given subcommand`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
				}},
			}, {
				Name:        []string{"-version"},
				Description: `Show the current Terraform version`,
			}},
		}, {
			Name:        []string{"destroy"},
			Description: `Destroy previously-created infrastructure`,
			Options: []model.Option{{
				Name:        []string{"-help"},
				Description: `Show this help output, or the help for a specified subcommand`,
			}, {
				Name:        []string{"-chdir"},
				Description: `Switch to a different working directory before executing the given subcommand`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
				}},
			}, {
				Name:        []string{"-version"},
				Description: `Show the current Terraform version`,
			}},
		}, {
			Name:        []string{"console"},
			Description: `Try Terraform expressions at an interactive command prompt`,
			Options: []model.Option{{
				Name:        []string{"-help"},
				Description: `Show this help output, or the help for a specified subcommand`,
			}, {
				Name:        []string{"-chdir"},
				Description: `Switch to a different working directory before executing the given subcommand`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
				}},
			}, {
				Name:        []string{"-version"},
				Description: `Show the current Terraform version`,
			}},
		}, {
			Name:        []string{"fmt"},
			Description: `Reformat your configuration in the standard style`,
			Options: []model.Option{{
				Name:        []string{"-help"},
				Description: `Show this help output, or the help for a specified subcommand`,
			}, {
				Name:        []string{"-chdir"},
				Description: `Switch to a different working directory before executing the given subcommand`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
				}},
			}, {
				Name:        []string{"-version"},
				Description: `Show the current Terraform version`,
			}},
		}, {
			Name:        []string{"force-unlock"},
			Description: `Release a stuck lock on the current workspace`,
			Options: []model.Option{{
				Name:        []string{"-help"},
				Description: `Show this help output, or the help for a specified subcommand`,
			}, {
				Name:        []string{"-chdir"},
				Description: `Switch to a different working directory before executing the given subcommand`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
				}},
			}, {
				Name:        []string{"-version"},
				Description: `Show the current Terraform version`,
			}},
		}, {
			Name:        []string{"get"},
			Description: `Install or upgrade remote Terraform modules`,
			Options: []model.Option{{
				Name:        []string{"-update"},
				Description: `If specified, modules that are already downloaded will be checked for updates and the updates will be downloaded if present`,
			}, {
				Name:        []string{"-help"},
				Description: `Show this help output, or the help for a specified subcommand`,
			}, {
				Name:        []string{"-chdir"},
				Description: `Switch to a different working directory before executing the given subcommand`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
				}},
			}, {
				Name:        []string{"-version"},
				Description: `Show the current Terraform version`,
			}},
		}, {
			Name:        []string{"graph"},
			Description: `Generate a Graphviz graph of the steps in an operation`,
			Options: []model.Option{{
				Name:        []string{"-help"},
				Description: `Show this help output, or the help for a specified subcommand`,
			}, {
				Name:        []string{"-chdir"},
				Description: `Switch to a different working directory before executing the given subcommand`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
				}},
			}, {
				Name:        []string{"-version"},
				Description: `Show the current Terraform version`,
			}},
		}, {
			Name:        []string{"import"},
			Description: `Associate existing infrastructure with a Terraform resource`,
			Options: []model.Option{{
				Name:        []string{"-help"},
				Description: `Show this help output, or the help for a specified subcommand`,
			}, {
				Name:        []string{"-chdir"},
				Description: `Switch to a different working directory before executing the given subcommand`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
				}},
			}, {
				Name:        []string{"-version"},
				Description: `Show the current Terraform version`,
			}},
		}, {
			Name:        []string{"login"},
			Description: `Obtain and save credentials for a remote hos`,
			Options: []model.Option{{
				Name:        []string{"-help"},
				Description: `Show this help output, or the help for a specified subcommand`,
			}, {
				Name:        []string{"-chdir"},
				Description: `Switch to a different working directory before executing the given subcommand`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
				}},
			}, {
				Name:        []string{"-version"},
				Description: `Show the current Terraform version`,
			}},
		}, {
			Name:        []string{"logout"},
			Description: `Remove locally-stored credentials for a remote host`,
			Options: []model.Option{{
				Name:        []string{"-help"},
				Description: `Show this help output, or the help for a specified subcommand`,
			}, {
				Name:        []string{"-chdir"},
				Description: `Switch to a different working directory before executing the given subcommand`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
				}},
			}, {
				Name:        []string{"-version"},
				Description: `Show the current Terraform version`,
			}},
		}, {
			Name:        []string{"output"},
			Description: `Show output values from your root module`,
			Options: []model.Option{{
				Name:        []string{"-help"},
				Description: `Show this help output, or the help for a specified subcommand`,
			}, {
				Name:        []string{"-chdir"},
				Description: `Switch to a different working directory before executing the given subcommand`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
				}},
			}, {
				Name:        []string{"-version"},
				Description: `Show the current Terraform version`,
			}},
		}, {
			Name:        []string{"providers"},
			Description: `Show the providers required for this configuration`,
			Options: []model.Option{{
				Name:        []string{"-help"},
				Description: `Show this help output, or the help for a specified subcommand`,
			}, {
				Name:        []string{"-chdir"},
				Description: `Switch to a different working directory before executing the given subcommand`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
				}},
			}, {
				Name:        []string{"-version"},
				Description: `Show the current Terraform version`,
			}},
		}, {
			Name:        []string{"refresh"},
			Description: `Update the state to match remote systems`,
			Options: []model.Option{{
				Name:        []string{"-help"},
				Description: `Show this help output, or the help for a specified subcommand`,
			}, {
				Name:        []string{"-chdir"},
				Description: `Switch to a different working directory before executing the given subcommand`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
				}},
			}, {
				Name:        []string{"-version"},
				Description: `Show the current Terraform version`,
			}},
		}, {
			Name:        []string{"show"},
			Description: `Show the current state or a saved plan`,
			Options: []model.Option{{
				Name:        []string{"-help"},
				Description: `Show this help output, or the help for a specified subcommand`,
			}, {
				Name:        []string{"-chdir"},
				Description: `Switch to a different working directory before executing the given subcommand`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
				}},
			}, {
				Name:        []string{"-version"},
				Description: `Show the current Terraform version`,
			}},
		}, {
			Name:        []string{"state"},
			Description: `Advanced state management`,
		}, {
			Name:        []string{"taint"},
			Description: `Mark a resource instance as not fully functional`,
			Args: []model.Arg{{
				Name:      "address",
				Generator: nil, // TODO: port over generator
			}},
			Options: []model.Option{{
				Name:        []string{"-allow-missing"},
				Description: `If specified, the command will succeed (exit code 0) even if the resource is missing. The command might still return an error for other situations, such as if there is a problem reading or writing the state`,
			}, {
				Name:        []string{"-lock"},
				Description: `Disables Terraform's default behavior of attempting to take a read/write lock on the state for the duration of the operation if set to false. Defaults to true`,
				Args: []model.Arg{{
					Name:        "true or false",
					Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
				}},
			}, {
				Name:        []string{"-lock-timeout"},
				Description: `Unless locking is disabled with -lock=false, instructs Terraform to retry acquiring a lock for a period of time before returning an error. The duration syntax is a number followed by a time unit letter, such as 3s for three seconds`,
				Args: []model.Arg{{
					Name: "seconds",
				}},
			}, {
				Name:        []string{"-ignore-remote-version"},
				Description: `When using the enhanced remote backend with Terraform Cloud, continue even if remote and local Terraform versions differ. This may result in an unusable Terraform Cloud workspace, and should be used with extreme caution`,
				Args: []model.Arg{{
					Name: "seconds",
				}},
			}, {
				Name:        []string{"-help"},
				Description: `Show this help output, or the help for a specified subcommand`,
			}, {
				Name:        []string{"-chdir"},
				Description: `Switch to a different working directory before executing the given subcommand`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
				}},
			}, {
				Name:        []string{"-version"},
				Description: `Show the current Terraform version`,
			}},
		}, {
			Name:        []string{"untaint"},
			Description: `Remove the 'tainted' state from a resource instance`,
			Options: []model.Option{{
				Name:        []string{"-help"},
				Description: `Show this help output, or the help for a specified subcommand`,
			}, {
				Name:        []string{"-chdir"},
				Description: `Switch to a different working directory before executing the given subcommand`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
				}},
			}, {
				Name:        []string{"-version"},
				Description: `Show the current Terraform version`,
			}},
		}, {
			Name:        []string{"workspace"},
			Description: `Workspace management`,
			Options: []model.Option{{
				Name:        []string{"-help"},
				Description: `Show this help output, or the help for a specified subcommand`,
			}, {
				Name:        []string{"-chdir"},
				Description: `Switch to a different working directory before executing the given subcommand`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
				}},
			}, {
				Name:        []string{"-version"},
				Description: `Show the current Terraform version`,
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"new"},
				Description: `Create a new workspace`,
				Args: []model.Arg{{
					Name: "workspace name",
				}},
				Options: []model.Option{{
					Name:        []string{"-lock"},
					Description: `Lock the state file when locking is supported. Defaults to true`,
					Args: []model.Arg{{
						Name:        "true or false",
						Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
					}},
				}, {
					Name:        []string{"-lock-timeout"},
					Description: `Duration to retry a stae lock. Default 0s`,
					Args: []model.Arg{{
						Name: "seconds",
					}},
				}, {
					Name:        []string{"-state"},
					Description: `Path to an existing state file to initialize the state of this environment`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "path",
					}},
				}, {
					Name:        []string{"-help"},
					Description: `Show this help output, or the help for a specified subcommand`,
				}, {
					Name:        []string{"-chdir"},
					Description: `Switch to a different working directory before executing the given subcommand`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
					}},
				}, {
					Name:        []string{"-version"},
					Description: `Show the current Terraform version`,
				}},
			}, {
				Name:        []string{"show"},
				Description: `Display the current workspace`,
				Options: []model.Option{{
					Name:        []string{"-help"},
					Description: `Show this help output, or the help for a specified subcommand`,
				}, {
					Name:        []string{"-chdir"},
					Description: `Switch to a different working directory before executing the given subcommand`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
					}},
				}, {
					Name:        []string{"-version"},
					Description: `Show the current Terraform version`,
				}},
			}, {
				Name:        []string{"list"},
				Description: `List the workspace`,
				Options: []model.Option{{
					Name:        []string{"-help"},
					Description: `Show this help output, or the help for a specified subcommand`,
				}, {
					Name:        []string{"-chdir"},
					Description: `Switch to a different working directory before executing the given subcommand`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
					}},
				}, {
					Name:        []string{"-version"},
					Description: `Show the current Terraform version`,
				}},
			}, {
				Name:        []string{"delete"},
				Description: `Delete the specified workspace`,
				Args: []model.Arg{{
					Name:      "workspace name",
					Generator: nil, // TODO: port over generator
				}},
				Options: []model.Option{{
					Name:        []string{"-lock"},
					Description: `Lock the state file when locking is supported. Defaults to true`,
					Args: []model.Arg{{
						Name:        "true or false",
						Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
					}},
				}, {
					Name:        []string{"-force"},
					Description: `Delete the workspace even if its state is not empty. Defaults to false`,
					Args: []model.Arg{{
						Name:        "true or false",
						Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
					}},
				}, {
					Name:        []string{"-lock-timeout"},
					Description: `Duration to retry a state lock. Default 0s`,
					Args: []model.Arg{{
						Name: "seconds",
					}},
				}, {
					Name:        []string{"-input"},
					Description: `Ask for input for variables if not directly set`,
					Args: []model.Arg{{
						Name:        "true or false",
						Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
					}},
				}, {
					Name:        []string{"-no-color"},
					Description: `Disables output with coloring`,
				}},
			}, {
				Name:        []string{"select"},
				Description: `Change the current working workspace`,
				Args: []model.Arg{{
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"-install-autocomplete"},
			Description: `Install bash/zsh tab completion`,
		}, {
			Name:        []string{"-uninstall-autocomplete"},
			Description: `Uninstall bash/zsh tab completion`,
		}},
	}
}
