// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.
//
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

package specs

import (
	"github.com/microsoft/clac/autocomplete/model"
)

func init() {
	Specs["docker"] = model.Subcommand{
		Name:        []string{"docker"},
		Description: `A self-sufficient runtime for containers`,
		Subcommands: []model.Subcommand{{
			Name:        []string{"attach"},
			Description: `Attach local standard input, output, and error streams to a running container,`,
			Options: []model.Option{{
				Name:        []string{"--detach-keys"},
				Description: `Override the key sequence for detaching a container`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--no-stdin"},
				Description: `Do not attach STDIN`,
			}, {
				Name:        []string{"--sig-proxy"},
				Description: `Proxy all received signals to the process (default true)`,
			}},
		}, {
			Name:        []string{"build"},
			Description: `Build an image from a Dockerfile`,
			Args: []model.Arg{{
				Name:      "path",
				Generator: nil, // TODO: port over generator
			}},
			Options: []model.Option{{
				Name: []string{"--add-host"},
				Args: []model.Arg{{
					Name:        "list",
					Description: `Add a custom host-to-IP mapping (host:ip)`,
				}},
			}, {
				Name: []string{"--build-arg"},
				Args: []model.Arg{{
					Name:        "list",
					Description: `Set build-time variables`,
				}},
			}, {
				Name: []string{"--cache-from"},
				Args: []model.Arg{{
					Name:        "strings",
					Description: `Images to consider as cache sources`,
				}},
			}, {
				Name:        []string{"--disable-content-trust"},
				Description: `Skip image verification (default true)`,
			}, {
				Name:        []string{"-f", "--file"},
				Description: `Name of the Dockerfile (Default is 'PATH/Dockerfile')`,
				Args: []model.Arg{{
					Name:      "string",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--iidfile"},
				Description: `Write the image ID to the file`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--isolation"},
				Description: `Container isolation technology`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--label"},
				Description: `Set metadata for an image`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--network"},
				Description: `Set the networking mode for the RUN instructions during build (default "default")`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--no-cache"},
				Description: `Do not use cache when building the image`,
			}, {
				Name:        []string{"-o", "--output"},
				Description: `Output destination (format: type=local,dest=path)`,
				Args: []model.Arg{{
					Name: "stringArray",
				}},
			}, {
				Name:        []string{"--platform"},
				Description: `Set platform if server is multi-platform capable`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--progress"},
				Description: `Set type of progress output (auto, plain, tty). Use plain to show container output`,
				Args: []model.Arg{{
					Name: "string",
					Suggestions: []model.Suggestion{{
						Name: []string{`auto`},
					}, {
						Name: []string{`plain`},
					}, {
						Name: []string{`tty`},
					}},
				}},
			}, {
				Name:        []string{"--pull"},
				Description: `Always attempt to pull a newer version of the image`,
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Suppress the build output and print image ID on success`,
			}, {
				Name:        []string{"--secret"},
				Description: `Secret file to expose to the build (only if BuildKit enabled): id=mysecret,src=/local/secret`,
				Args: []model.Arg{{
					Name: "stringArray",
				}},
			}, {
				Name:        []string{"--squash"},
				Description: `Squash newly built layers into a single new layer`,
			}, {
				Name:        []string{"--ssh"},
				Description: `SSH agent socket or keys to expose to the build (only if BuildKit enabled) (format: default|<id>[=<socket>|<key>[,<key>]])`,
				Args: []model.Arg{{
					Name: "stringArray",
				}},
			}, {
				Name:        []string{"-t", "--tag"},
				Description: `Name and optionally a tag in the 'name:tag' format`,
			}, {
				Name:        []string{"--target"},
				Description: `Set the target build stage to build`,
				Args: []model.Arg{{
					Name:      "target build stage",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"commit"},
			Description: `Create a new image from a container's changes`,
			Args: []model.Arg{{
				Name:      "container",
				Generator: nil, // TODO: port over generator
			}, {
				Name: "[REPOSITORY[:TAG]]",
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--author"},
				Description: `Author (e.g., "John Hannibal Smith <hannibal@a-team.com>")`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"-c", "--change"},
				Description: `Apply Dockerfile instruction to the created image`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"-m", "--message"},
				Description: `Commit message`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"-p", "--pause"},
				Description: `Pause container during commit (default true)`,
			}},
		}, {
			Name:        []string{"cp"},
			Description: `Copy files/folders between a container and the local filesystem`,
			Args: []model.Arg{{
				Name: "CONTAINER:SRC_PATH DEST_PATH|- OR SRC_PATH|- CONTAINER:DEST_PATH",
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--archive"},
				Description: `Archive mode (copy all uid/gid information)`,
			}, {
				Name:        []string{"-L", "--follow-link"},
				Description: `Always follow symbol link in SRC_PATH`,
			}},
		}, {
			Name:        []string{"create"},
			Description: `Create a new container`,
			Args: []model.Arg{{
				Name:      "container",
				Generator: nil, // TODO: port over generator
			}, {
				Name:      "command",
				IsCommand: true,
			}},
			Options: []model.Option{{
				Name:        []string{"--add-host"},
				Description: `Add a custom host-to-IP mapping (host:ip)`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"-a", "--attach"},
				Description: `Attach to STDIN, STDOUT or STDERR`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--blkio-weight"},
				Description: `Block IO (relative weight), between 10 and 1000, or 0 to disable (default 0)`,
				Args: []model.Arg{{
					Name: "uint16",
				}},
			}, {
				Name:        []string{"--blkio-weight-device"},
				Description: `Block IO weight (relative device weight) (default [])`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--cap-add"},
				Description: `Add Linux capabilities`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--cap-drop"},
				Description: `Drop Linux capabilities`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--cgroup-parent"},
				Description: `Optional parent cgroup for the container`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--cgroupns"},
				Description: `Cgroup namespace to use (host|private)`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--cidfile"},
				Description: `Write the container ID to the file`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--cpu-period"},
				Description: `Limit CPU CFS (Completely Fair Scheduler) period`,
				Args: []model.Arg{{
					Name: "int",
				}},
			}, {
				Name:        []string{"--cpu-quota"},
				Description: `Limit CPU CFS (Completely Fair Scheduler) quota`,
				Args: []model.Arg{{
					Name: "int",
				}},
			}, {
				Name:        []string{"--cpu-rt-period"},
				Description: `Limit CPU real-time period in microseconds`,
				Args: []model.Arg{{
					Name: "int",
				}},
			}, {
				Name:        []string{"--cpu-rt-runtime"},
				Description: `Limit CPU real-time runtime in microseconds`,
				Args: []model.Arg{{
					Name: "int",
				}},
			}, {
				Name:        []string{"-c", "--cpu-shares"},
				Description: `CPU shares (relative weight)`,
				Args: []model.Arg{{
					Name: "int",
				}},
			}, {
				Name:        []string{"--cpus"},
				Description: `Number of CPUs`,
				Args: []model.Arg{{
					Name: "decimal",
				}},
			}, {
				Name:        []string{"--cpuset-cpus"},
				Description: `CPUs in which to allow execution (0-3, 0,1)`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--cpuset-mems"},
				Description: `MEMs in which to allow execution (0-3, 0,1)`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--device"},
				Description: `Add a host device to the container`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--device-cgroup-rule"},
				Description: `Add a rule to the cgroup allowed devices list`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--device-read-bps"},
				Description: `Limit read rate (bytes per second) from a device (default [])`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--device-read-iops"},
				Description: `Limit read rate (IO per second) from a device (default [])`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--device-write-bps"},
				Description: `Limit write rate (bytes per second) to a device (default [])`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--device-write-iops"},
				Description: `Limit write rate (IO per second) to a device (default [])`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--disable-content-trust"},
				Description: `Skip image verification (default true)`,
			}, {
				Name:        []string{"--dns"},
				Description: `Set custom DNS servers`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--dns-option"},
				Description: `Set DNS options`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--dns-search"},
				Description: `Set custom DNS search domains`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--domainname"},
				Description: `Container NIS domain name`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--entrypoint"},
				Description: `Overwrite the default ENTRYPOINT of the image`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"-e", "--env"},
				Description: `Set environment variables`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--env-file"},
				Description: `Read in a file of environment variables`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--expose"},
				Description: `Expose a port or a range of ports`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--gpus"},
				Description: `GPU devices to add to the container ('all' to pass all GPUs)`,
				Args: []model.Arg{{
					Name: "gpu-request",
				}},
			}, {
				Name:        []string{"--group-add"},
				Description: `Add additional groups to join`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--health-cmd"},
				Description: `Command to run to check health`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--health-interval"},
				Description: `Time between running the check (ms|s|m|h) (default 0s)`,
				Args: []model.Arg{{
					Name: "duration",
				}},
			}, {
				Name:        []string{"--health-retries"},
				Description: `Consecutive failures needed to report unhealthy`,
				Args: []model.Arg{{
					Name: "int",
				}},
			}, {
				Name:        []string{"--health-start-period"},
				Description: `Start period for the container to initialize before starting health-retries countdown (ms|s|m|h) (default 0s)`,
				Args: []model.Arg{{
					Name: "duration",
				}},
			}, {
				Name:        []string{"--health-timeout"},
				Description: `Maximum time to allow one check to run (ms|s|m|h) (default 0s)`,
				Args: []model.Arg{{
					Name: "duration",
				}},
			}, {
				Name:        []string{"--help"},
				Description: `Print usage`,
			}, {
				Name:        []string{"-h", "--hostname"},
				Description: `Container host name`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--init"},
				Description: `Run an init inside the container that forwards signals and reaps processes`,
			}, {
				Name:        []string{"-i", "--interactive"},
				Description: `Keep STDIN open even if not attached`,
			}, {
				Name:        []string{"--ip"},
				Description: `IPv4 address (e.g., 172.30.100.104)`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--ip6"},
				Description: `IPv6 address (e.g., 2001:db8::33)`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--ipc"},
				Description: `IPC mode to use`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--isolation"},
				Description: `Container isolation technology`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--kernel-memory"},
				Description: `Kernel memory limit`,
				Args: []model.Arg{{
					Name: "bytes",
				}},
			}, {
				Name:        []string{"-l", "--label"},
				Description: `Set meta data on a container`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--label-file"},
				Description: `Read in a line delimited file of labels`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--link"},
				Description: `Add link to another container`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--link-local-ip"},
				Description: `Container IPv4/IPv6 link-local addresses`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--log-driver"},
				Description: `Logging driver for the container`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--log-opt"},
				Description: `Log driver options`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--mac-address"},
				Description: `Container MAC address (e.g., 92:d0:c6:0a:29:33)`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"-m", "--memory"},
				Description: `Memory limit`,
				Args: []model.Arg{{
					Name: "bytes",
				}},
			}, {
				Name:        []string{"--memory-reservation"},
				Description: `Memory soft limit`,
				Args: []model.Arg{{
					Name: "bytes",
				}},
			}, {
				Name:        []string{"--memory-swap"},
				Description: `Swap limit equal to memory plus swap: '-1' to enable unlimited swap`,
				Args: []model.Arg{{
					Name: "bytes",
				}},
			}, {
				Name:        []string{"--memory-swappiness"},
				Description: `Tune container memory swappiness (0 to 100) (default -1)`,
				Args: []model.Arg{{
					Name: "int",
				}},
			}, {
				Name:        []string{"--mount"},
				Description: `Attach a filesystem mount to the container`,
				Args: []model.Arg{{
					Name: "mount",
				}},
			}, {
				Name:        []string{"--name"},
				Description: `Assign a name to the container`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--network"},
				Description: `Connect a container to a network`,
				Args: []model.Arg{{
					Name: "network",
				}},
			}, {
				Name:        []string{"--network-alias"},
				Description: `Add network-scoped alias for the container`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--no-healthcheck"},
				Description: `Disable any container-specified HEALTHCHECK`,
			}, {
				Name:        []string{"--oom-kill-disable"},
				Description: `Disable OOM Killer`,
			}, {
				Name:        []string{"--oom-score-adj"},
				Description: `Tune host's OOM preferences (-1000 to 1000)`,
				Args: []model.Arg{{
					Name: "int",
				}},
			}, {
				Name:        []string{"--pid"},
				Description: `PID namespace to use`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--pids-limit"},
				Description: `Tune container pids limit (set -1 for unlimited)`,
				Args: []model.Arg{{
					Name: "int",
				}},
			}, {
				Name:        []string{"--platform"},
				Description: `Set platform if server is multi-platform capable`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--privileged"},
				Description: `Give extended privileges to this container`,
			}, {
				Name:        []string{"-p", "--publish"},
				Description: `Publish a container's port(s) to the host`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"-P", "--publish-all"},
				Description: `Publish all exposed ports to random ports`,
			}, {
				Name:        []string{"--pull"},
				Description: `Pull image before creating ("always"|"missing"|"never") (default "missing")`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--read-only"},
				Description: `Mount the container's root filesystem as read only`,
			}, {
				Name:        []string{"--restart"},
				Description: `Restart policy to apply when a container exits (default "no")`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--rm"},
				Description: `Automatically remove the container when it exits`,
			}, {
				Name:        []string{"--runtime"},
				Description: `Runtime to use for this container`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--security-opt"},
				Description: `Security Options`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--shm-size"},
				Description: `Size of /dev/shm`,
				Args: []model.Arg{{
					Name: "bytes",
				}},
			}, {
				Name:        []string{"--stop-signal"},
				Description: `Signal to stop a container (default "SIGTERM")`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--stop-timeout"},
				Description: `Timeout (in seconds) to stop a container`,
				Args: []model.Arg{{
					Name: "int",
				}},
			}, {
				Name:        []string{"--storage-opt"},
				Description: `Storage driver options for the container`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--sysctl"},
				Description: `Sysctl options (default map[])`,
				Args: []model.Arg{{
					Name: "map",
				}},
			}, {
				Name:        []string{"--tmpfs"},
				Description: `Mount a tmpfs directory`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"-t", "--tty"},
				Description: `Allocate a pseudo-TTY`,
			}, {
				Name:        []string{"--ulimit"},
				Description: `Ulimit options (default [])`,
				Args: []model.Arg{{
					Name: "ulimit",
				}},
			}, {
				Name:        []string{"-u", "--user"},
				Description: `Username or UID (format: <name|uid>[:<group|gid>])`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--userns"},
				Description: `User namespace to use`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--uts"},
				Description: `UTS namespace to use`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"-v", "--volume"},
				Description: `Bind mount a volume`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--volume-driver"},
				Description: `Optional volume driver for the container`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--volumes-from"},
				Description: `Mount volumes from the specified container(s)`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"-w", "--workdir"},
				Description: `Working directory inside the container`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}},
		}, {
			Name:        []string{"diff"},
			Description: `Inspect changes to files or directories on a container's filesystem`,
			Args: []model.Arg{{
				Name:      "container",
				Generator: nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"events"},
			Description: `Get real time events from the server`,
			Options: []model.Option{{
				Name:        []string{"-f", "--filter"},
				Description: `Filter output based on conditions provided`,
				Args: []model.Arg{{
					Name: "filter",
				}},
			}, {
				Name:        []string{"--format"},
				Description: `Format the output using the given Go template`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--since"},
				Description: `Show all events created since timestamp`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--until"},
				Description: `Stream events until this timestamp`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}},
		}, {
			Name:        []string{"exec"},
			Description: `Run a command in a running container`,
			Args: []model.Arg{{
				Name:      "container",
				Generator: nil, // TODO: port over generator
			}, {
				Name:      "command",
				IsCommand: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-it"},
				Description: `Launch an interactive session`,
			}, {
				Name:        []string{"-d", "--detach"},
				Description: `Detached mode: run command in the background`,
			}, {
				Name:        []string{"--detach-keys"},
				Description: `Override the key sequence for detaching a container`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"-e", "--env"},
				Description: `Set environment variables`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--env-file"},
				Description: `Read in a file of environment variables`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"-i", "--interactive"},
				Description: `Keep STDIN open even if not attached`,
			}, {
				Name:        []string{"--privileged"},
				Description: `Give extended privileges to the command`,
			}, {
				Name:        []string{"-t", "--tty"},
				Description: `Allocate a pseudo-TTY`,
			}, {
				Name:        []string{"-u", "--user"},
				Description: `Username or UID (format: <name|uid>[:<group|gid>])`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"-w", "--workdir"},
				Description: `Working directory inside the container`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}},
		}, {
			Name:        []string{"export"},
			Description: `Export a container's filesystem as a tar archive`,
			Args: []model.Arg{{
				Name:      "container",
				Generator: nil, // TODO: port over generator
			}},
			Options: []model.Option{{
				Name:        []string{"-o", "--output"},
				Description: `Write to a file, instead of STDOUT`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}},
		}, {
			Name:        []string{"history"},
			Description: `Show the history of an image`,
			Args: []model.Arg{{
				Name:      "image",
				Generator: nil, // TODO: port over generator
			}},
			Options: []model.Option{{
				Name:        []string{"--format"},
				Description: `Pretty-print images using a Go template`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"-H", "--human"},
				Description: `Print sizes and dates in human readable format (default true)`,
			}, {
				Name:        []string{"--no-trunc"},
				Description: `Don't truncate output`,
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Only show image IDs`,
			}},
		}, {
			Name:        []string{"images"},
			Description: `List images`,
			Args: []model.Arg{{
				Name: "[REPOSITORY[:TAG]]",
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--all"},
				Description: `Show all images (default hides intermediate images)`,
			}, {
				Name:        []string{"--digests"},
				Description: `Show digests`,
			}, {
				Name:        []string{"-f", "--filter"},
				Description: `Filter output based on conditions provided`,
				Args: []model.Arg{{
					Name: "filter",
				}},
			}, {
				Name:        []string{"--format"},
				Description: `Pretty-print images using a Go template`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--no-trunc"},
				Description: `Don't truncate output`,
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Only show image IDs`,
			}},
		}, {
			Name:        []string{"import"},
			Description: `Import the contents from a tarball to create a filesystem image`,
			Args: []model.Arg{{
				Name: "file|URL|- [REPOSITORY[:TAG]]",
			}},
			Options: []model.Option{{
				Name:        []string{"-c", "--change"},
				Description: `Apply Dockerfile instruction to the created image`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"-m", "--message"},
				Description: `Set commit message for imported image`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--platform"},
				Description: `Set platform if server is multi-platform capable`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}},
		}, {
			Name:        []string{"info"},
			Description: `Display system-wide information`,
			Options: []model.Option{{
				Name:        []string{"-f", "--format"},
				Description: `Format the output using the given Go template`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}},
		}, {
			Name:        []string{"inspect"},
			Description: `Return low-level information on Docker objects`,
			Args: []model.Arg{{
				Name:      "Name or ID",
				Generator: nil, // TODO: port over generator
			}},
			Options: []model.Option{{
				Name:        []string{"-f", "--format"},
				Description: `Format the output using the given Go template`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"-s", "--size"},
				Description: `Display total file sizes if the type is container`,
			}, {
				Name:        []string{"--type"},
				Description: `Return JSON for specified type`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}},
		}, {
			Name:        []string{"kill"},
			Description: `Kill one or more running containers`,
			Args: []model.Arg{{
				Name:       "container",
				Generator:  nil, // TODO: port over generator
				IsVariadic: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-s", "--signal"},
				Description: `Signal to send to the container (default "KILL")`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}},
		}, {
			Name:        []string{"load"},
			Description: `Load an image from a tar archive or STDIN`,
			Options: []model.Option{{
				Name:        []string{"-i"},
				Description: `Read from tar archive file, instead of STDIN`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Suppress the load output`,
			}},
		}, {
			Name:        []string{"login"},
			Description: `Log in to a Docker registry`,
			Args: []model.Arg{{
				Name: "server",
			}},
			Options: []model.Option{{
				Name:        []string{"-p", "--password"},
				Description: `Password`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--password-stdin"},
				Description: `Take the password from stdin`,
			}, {
				Name:        []string{"-u", "--username"},
				Description: `Username`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}},
		}, {
			Name:        []string{"logout"},
			Description: `Log out from a Docker registry`,
			Args: []model.Arg{{
				Name: "server",
			}},
		}, {
			Name:        []string{"logs"},
			Description: `Fetch the logs of a container`,
			Args: []model.Arg{{
				Name:      "container",
				Generator: nil, // TODO: port over generator
			}},
			Options: []model.Option{{
				Name:        []string{"--details"},
				Description: `Show extra details provided to logs`,
			}, {
				Name:        []string{"-f", "--follow"},
				Description: `Follow log output`,
			}, {
				Name:        []string{"--since"},
				Description: `Show logs since timestamp (e.g. 2013-01-02T13:23:37Z) or relative (e.g. 42m for 42 minutes)`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"-n", "--tail"},
				Description: `Number of lines to show from the end of the logs (default "all")`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"-t", "--timestamps"},
				Description: `Show timestamps`,
			}, {
				Name:        []string{"--until"},
				Description: `Show logs before a timestamp (e.g. 2013-01-02T13:23:37Z) or relative (e.g. 42m for 42 minutes)`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}},
		}, {
			Name:        []string{"pause"},
			Description: `Pause all processes within one or more containers`,
			Args: []model.Arg{{
				Name:      "container",
				Generator: nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"port"},
			Description: `List port mappings or a specific mapping for the container`,
			Args: []model.Arg{{
				Name:      "container",
				Generator: nil, // TODO: port over generator
			}, {
				Name: "[PRIVATE_PORT[/PROTO]]",
			}},
		}, {
			Name:        []string{"ps"},
			Description: `List containers`,
			Options: []model.Option{{
				Name:        []string{"-a", "--all"},
				Description: `Show all containers (default shows just running)`,
			}, {
				Name:        []string{"-f", "--filter"},
				Description: `Filter output based on conditions provided`,
				Args: []model.Arg{{
					Name: "filter",
				}},
			}, {
				Name:        []string{"--format"},
				Description: `Pretty-print containers using a Go template`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"-n", "--last"},
				Description: `Show n last created containers (includes all states) (default -1)`,
				Args: []model.Arg{{
					Name: "int",
				}},
			}, {
				Name:        []string{"-l", "--latest"},
				Description: `Show the latest created container (includes all states)`,
			}, {
				Name:        []string{"--no-trunc"},
				Description: `Don't truncate output`,
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Only display container IDs`,
			}, {
				Name:        []string{"-s", "--size"},
				Description: `Display total file sizes`,
			}},
		}, {
			Name:        []string{"pull"},
			Description: `Pull an image or a repository from a registry`,
			Args: []model.Arg{{
				Name:      "NAME[:TAG|@DIGEST]",
				Generator: nil, // TODO: port over generator
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--all-tags"},
				Description: `Download all tagged images in the repository`,
			}, {
				Name:        []string{"--disable-content-trust"},
				Description: `Skip image verification (default true)`,
			}, {
				Name:        []string{"--platform"},
				Description: `Set platform if server is multi-platform capable`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Suppress verbose output`,
			}},
		}, {
			Name:        []string{"push"},
			Description: `Push an image or a repository to a registry`,
			Args: []model.Arg{{
				Name: "NAME[:TAG]",
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--all-tags"},
				Description: `Push all tagged images in the repository`,
			}, {
				Name:        []string{"--disable-content-trust"},
				Description: `Skip image signing (default true)`,
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Suppress verbose output`,
			}},
		}, {
			Name:        []string{"rename"},
			Description: `Rename a container`,
			Args: []model.Arg{{
				Name:      "container",
				Generator: nil, // TODO: port over generator
			}, {
				Name: "NEW_NAME",
			}},
		}, {
			Name:        []string{"restart"},
			Description: `Restart one or more containers`,
			Args: []model.Arg{{
				Name:      "container",
				Generator: nil, // TODO: port over generator
			}},
			Options: []model.Option{{
				Name:        []string{"-t", "--time"},
				Description: `Seconds to wait for stop before killing the container (default 10)`,
				Args: []model.Arg{{
					Name: "int",
				}},
			}},
		}, {
			Name:        []string{"rm"},
			Description: `Remove one or more containers`,
			Args: []model.Arg{{
				Name:       "containers",
				Generator:  nil, // TODO: port over generator
				IsVariadic: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-f", "--force"},
				Description: `Force the removal of a running container (uses SIGKILL)`,
			}, {
				Name:        []string{"-l", "--link"},
				Description: `Remove the specified link`,
			}, {
				Name:        []string{"-v", "--volumes"},
				Description: `Remove the anonymous volumes associated with the container`,
			}},
		}, {
			Name:        []string{"rmi"},
			Description: `Remove one or more images`,
			Args: []model.Arg{{
				Name:       "image",
				Generator:  nil, // TODO: port over generator
				IsVariadic: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-f", "--force"},
				Description: `Force removal of the image`,
			}, {
				Name:        []string{"--no-prune"},
				Description: `Do not delete untagged parents`,
			}},
		}, {
			Name:        []string{"run"},
			Description: `Run a command in a new container`,
			Args: []model.Arg{{
				Name:        "image",
				Description: `The Docker image to use`,
				Generator:   nil, // TODO: port over generator
			}, {
				Name: "command",
			}},
			Options: []model.Option{{
				Name:        []string{"-it"},
				Description: `Launch an interactive session`,
			}, {
				Name:        []string{"--add-host"},
				Description: `Add a custom host-to-IP mapping (host:ip)`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"-a", "--attach"},
				Description: `Attach to STDIN, STDOUT or STDERR`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--blkio-weight"},
				Description: `Block IO (relative weight), between 10 and 1000, or 0 to disable (default 0)`,
				Args: []model.Arg{{
					Name: "uint16",
				}},
			}, {
				Name:        []string{"--blkio-weight-device"},
				Description: `Block IO weight (relative device weight) (default [])`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--cap-add"},
				Description: `Add Linux capabilities`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--cap-drop"},
				Description: `Drop Linux capabilities`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--cgroup-parent"},
				Description: `Optional parent cgroup for the container`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name: []string{"--cgroupns"},
				Description: `Cgroup namespace to use (host|private)
'host':    Run the container in the Docker host's cgroup namespace
'private': Run the container in its own private cgroup namespace
'':        Use the cgroup namespace as configured by the
default-cgroupns-mode option on the daemon (default)`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--cidfile"},
				Description: `Write the container ID to the file`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--cpu-period"},
				Description: `Limit CPU CFS (Completely Fair Scheduler) period`,
				Args: []model.Arg{{
					Name: "int",
				}},
			}, {
				Name:        []string{"--cpu-quota"},
				Description: `Limit CPU CFS (Completely Fair Scheduler) quota`,
				Args: []model.Arg{{
					Name: "int",
				}},
			}, {
				Name:        []string{"--cpu-rt-period"},
				Description: `Limit CPU real-time period in microseconds`,
				Args: []model.Arg{{
					Name: "int",
				}},
			}, {
				Name:        []string{"--cpu-rt-runtime"},
				Description: `Limit CPU real-time runtime in microseconds`,
				Args: []model.Arg{{
					Name: "int",
				}},
			}, {
				Name:        []string{"-c", "--cpu-shares"},
				Description: `CPU shares (relative weight)`,
				Args: []model.Arg{{
					Name: "int",
				}},
			}, {
				Name:        []string{"--cpus"},
				Description: `Number of CPUs`,
				Args: []model.Arg{{
					Name: "decimal",
				}},
			}, {
				Name:        []string{"--cpuset-cpus"},
				Description: `CPUs in which to allow execution (0-3, 0,1)`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--cpuset-mems"},
				Description: `MEMs in which to allow execution (0-3, 0,1)`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"-d", "--detach"},
				Description: `Run container in background and print container ID`,
			}, {
				Name:        []string{"--detach-keys"},
				Description: `Override the key sequence for detaching a container`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--device"},
				Description: `Add a host device to the container`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--device-cgroup-rule"},
				Description: `Add a rule to the cgroup allowed devices list`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--device-read-bps"},
				Description: `Limit read rate (bytes per second) from a device (default [])`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--device-read-iops"},
				Description: `Limit read rate (IO per second) from a device (default [])`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--device-write-bps"},
				Description: `Limit write rate (bytes per second) to a device (default [])`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--device-write-iops"},
				Description: `Limit write rate (IO per second) to a device (default [])`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--disable-content-trust"},
				Description: `Skip image verification (default true)`,
			}, {
				Name:        []string{"--dns"},
				Description: `Set custom DNS servers`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--dns-option"},
				Description: `Set DNS options`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--dns-search"},
				Description: `Set custom DNS search domains`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--domainname"},
				Description: `Container NIS domain name`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--entrypoint"},
				Description: `Overwrite the default ENTRYPOINT of the image`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"-e", "--env"},
				Description: `Set environment variables`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--env-file"},
				Description: `Read in a file of environment variables`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--expose"},
				Description: `Expose a port or a range of ports`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--gpus"},
				Description: `GPU devices to add to the container ('all' to pass all GPUs)`,
				Args: []model.Arg{{
					Name: "gpu-request",
				}},
			}, {
				Name:        []string{"--group-add"},
				Description: `Add additional groups to join`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--health-cmd"},
				Description: `Command to run to check health`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--health-interval"},
				Description: `Time between running the check (ms|s|m|h) (default 0s)`,
				Args: []model.Arg{{
					Name: "duration",
				}},
			}, {
				Name:        []string{"--health-retries"},
				Description: `Consecutive failures needed to report unhealthy`,
				Args: []model.Arg{{
					Name: "int",
				}},
			}, {
				Name:        []string{"--health-start-period"},
				Description: `Start period for the container to initialize before starting health-retries countdown (ms|s|m|h) (default 0s)`,
				Args: []model.Arg{{
					Name: "duration",
				}},
			}, {
				Name:        []string{"--health-timeout"},
				Description: `Maximum time to allow one check to run (ms|s|m|h) (default 0s)`,
				Args: []model.Arg{{
					Name: "duration",
				}},
			}, {
				Name:        []string{"--help"},
				Description: `Print usage`,
			}, {
				Name:        []string{"-h", "--hostname"},
				Description: `Container host name`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--init"},
				Description: `Run an init inside the container that forwards signals and reaps processes`,
			}, {
				Name:        []string{"-i", "--interactive"},
				Description: `Keep STDIN open even if not attached`,
			}, {
				Name:        []string{"--ip"},
				Description: `IPv4 address (e.g., 172.30.100.104)`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--ip6"},
				Description: `IPv6 address (e.g., 2001:db8::33)`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--ipc"},
				Description: `IPC mode to use`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--isolation"},
				Description: `Container isolation technology`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--kernel-memory"},
				Description: `Kernel memory limit`,
				Args: []model.Arg{{
					Name: "bytes",
				}},
			}, {
				Name:        []string{"-l", "--label"},
				Description: `Set meta data on a container`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--label-file"},
				Description: `Read in a line delimited file of labels`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--link"},
				Description: `Add link to another container`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--link-local-ip"},
				Description: `Container IPv4/IPv6 link-local addresses`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--log-driver"},
				Description: `Logging driver for the container`,
				Args: []model.Arg{{
					Name:        "string",
					Suggestions: []model.Suggestion{{Name: []string{`json-file`}}, {Name: []string{`syslog`}}, {Name: []string{`journald`}}, {Name: []string{`gelf`}}, {Name: []string{`fluentd`}}, {Name: []string{`awslogs`}}, {Name: []string{`splunk`}}, {Name: []string{`etwlogs`}}, {Name: []string{`gcplogs`}}, {Name: []string{`none`}}},
				}},
			}, {
				Name:        []string{"--log-opt"},
				Description: `Log driver options`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--mac-address"},
				Description: `Container MAC address (e.g., 92:d0:c6:0a:29:33)`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"-m", "--memory"},
				Description: `Memory limit`,
				Args: []model.Arg{{
					Name: "bytes",
				}},
			}, {
				Name:        []string{"--memory-reservation"},
				Description: `Memory soft limit`,
				Args: []model.Arg{{
					Name: "bytes",
				}},
			}, {
				Name:        []string{"--memory-swap"},
				Description: `Swap limit equal to memory plus swap: '-1' to enable unlimited swap`,
				Args: []model.Arg{{
					Name: "bytes",
				}},
			}, {
				Name:        []string{"--memory-swappiness"},
				Description: `Tune container memory swappiness (0 to 100) (default -1)`,
				Args: []model.Arg{{
					Name: "int",
				}},
			}, {
				Name:        []string{"--mount"},
				Description: `Attach a filesystem mount to the container`,
				Args: []model.Arg{{
					Name: "mount",
				}},
			}, {
				Name:        []string{"--name"},
				Description: `Assign a name to the container`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--network"},
				Description: `Connect a container to a network`,
				Args: []model.Arg{{
					Name: "network",
				}},
			}, {
				Name:        []string{"--network-alias"},
				Description: `Add network-scoped alias for the container`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--no-healthcheck"},
				Description: `Disable any container-specified HEALTHCHECK`,
			}, {
				Name:        []string{"--oom-kill-disable"},
				Description: `Disable OOM Killer`,
			}, {
				Name:        []string{"--oom-score-adj"},
				Description: `Tune host's OOM preferences (-1000 to 1000)`,
				Args: []model.Arg{{
					Name: "int",
				}},
			}, {
				Name:        []string{"--pid"},
				Description: `PID namespace to use`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--pids-limit"},
				Description: `Tune container pids limit (set -1 for unlimited)`,
				Args: []model.Arg{{
					Name: "int",
				}},
			}, {
				Name:        []string{"--platform"},
				Description: `Set platform if server is multi-platform capable`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--privileged"},
				Description: `Give extended privileges to this container`,
			}, {
				Name:        []string{"-p", "--publish"},
				Description: `Publish a container's port(s) to the host`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"-P", "--publish-all"},
				Description: `Publish all exposed ports to random ports`,
			}, {
				Name:        []string{"--pull"},
				Description: `Pull image before running ('always'|'missing'|'never') (default 'missing')`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--read-only"},
				Description: `Mount the container's root filesystem as read only`,
			}, {
				Name:        []string{"--restart"},
				Description: `Restart policy to apply when a container exits (default 'no')`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--rm"},
				Description: `Automatically remove the container when it exits`,
			}, {
				Name:        []string{"--runtime"},
				Description: `Runtime to use for this container`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--security-opt"},
				Description: `Security Options`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--shm-size"},
				Description: `Size of /dev/shm`,
				Args: []model.Arg{{
					Name: "bytes",
				}},
			}, {
				Name:        []string{"--sig-proxy"},
				Description: `Proxy received signals to the process (default true)`,
			}, {
				Name:        []string{"--stop-signal"},
				Description: `Signal to stop a container (default 'SIGTERM')`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--stop-timeout"},
				Description: `Timeout (in seconds) to stop a container`,
				Args: []model.Arg{{
					Name: "int",
				}},
			}, {
				Name:        []string{"--storage-opt"},
				Description: `Storage driver options for the container`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--sysctl"},
				Description: `Sysctl options (default map[])`,
				Args: []model.Arg{{
					Name: "map",
				}},
			}, {
				Name:        []string{"--tmpfs"},
				Description: `Mount a tmpfs directory`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"-t", "--tty"},
				Description: `Allocate a pseudo-TTY`,
			}, {
				Name:        []string{"--ulimit"},
				Description: `Ulimit options (default [])`,
				Args: []model.Arg{{
					Name: "ulimit",
				}},
			}, {
				Name:        []string{"-u", "--user"},
				Description: `Username or UID (format: <name|uid>[:<group|gid>])`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--userns"},
				Description: `User namespace to use`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--uts"},
				Description: `UTS namespace to use`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"-v", "--volume"},
				Description: `Bind mount a volume`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"--volume-driver"},
				Description: `Optional volume driver for the container`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--volumes-from"},
				Description: `Mount volumes from the specified container(s)`,
				Args: []model.Arg{{
					Name: "list",
				}},
			}, {
				Name:        []string{"-w", "--workdir"},
				Description: `Working directory inside the container`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}},
		}, {
			Name:        []string{"save"},
			Description: `Save one or more images to a tar archive (streamed to STDOUT by default)`,
			Args: []model.Arg{{
				Name:      "image",
				Generator: nil, // TODO: port over generator
			}},
			Options: []model.Option{{
				Name:        []string{"-o", "--output"},
				Description: `Write to a file, instead of STDOUT`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}},
		}, {
			Name:        []string{"search"},
			Description: `Search the Docker Hub for images`,
			Args: []model.Arg{{
				Name:        "TERM",
				Description: `Search term`,
			}},
			Options: []model.Option{{
				Name:        []string{"-f", "--filter"},
				Description: `Filter output based on conditions provided`,
				Args: []model.Arg{{
					Name: "filter",
				}},
			}, {
				Name:        []string{"--format"},
				Description: `Pretty-print search using a Go template`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--limit"},
				Description: `Max number of search results (default 25)`,
				Args: []model.Arg{{
					Name: "int",
				}},
			}, {
				Name:        []string{"--no-trunc"},
				Description: `Don't truncate output`,
			}},
		}, {
			Name:        []string{"sbom"},
			Description: `View the packaged-based Software Bill Of Materials (SBOM) for an image`,
			Args: []model.Arg{{
				Name:      "image",
				Generator: nil, // TODO: port over generator
			}},
			Options: []model.Option{{
				Name:        []string{"-D", "--debug"},
				Description: `Show debug logging`,
			}, {
				Name:        []string{"--exclude"},
				Description: `Exclude paths from being scanned using a glob expression`,
				Args: []model.Arg{{
					Name: "paths",
				}},
			}, {
				Name:        []string{"--format"},
				Description: `Report output format`,
				Args: []model.Arg{{
					Name:        "fromat",
					Suggestions: []model.Suggestion{{Name: []string{`syft-json`}}, {Name: []string{`cyclonedx-xml`}}, {Name: []string{`cyclonedx-json`}}, {Name: []string{`github-0-json`}}, {Name: []string{`spdx-tag-value`}}, {Name: []string{`spdx-json`}}, {Name: []string{`table`}}, {Name: []string{`text`}}},
				}},
			}, {
				Name:        []string{"--layers"},
				Description: `[experimental] selection of layers to catalog`,
				Args: []model.Arg{{
					Name:        "layers",
					Suggestions: []model.Suggestion{{Name: []string{`squashed`}}, {Name: []string{`all`}}},
				}},
			}, {
				Name:        []string{"-o", "--output"},
				Description: `File to write the default report output to (default is STDOUT)`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"--platform"},
				Description: `An optional platform specifier for container image sources (e.g. 'linux/arm64', 'linux/arm64/v8', 'arm64', 'linux')`,
				Args: []model.Arg{{
					Name: "platform",
				}},
			}, {
				Name:        []string{"--quiet"},
				Description: `Suppress all non-report output`,
			}, {
				Name:        []string{"-v", "--version"},
				Description: `Version for sbom`,
			}},
		}, {
			Name:        []string{"start"},
			Description: `Start one or more stopped containers`,
			Args: []model.Arg{{
				Name:      "container",
				Generator: nil, // TODO: port over generator
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--attach"},
				Description: `Attach STDOUT/STDERR and forward signals`,
			}, {
				Name:        []string{"--detach-keys"},
				Description: `Override the key sequence for detaching a container`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"-i", "--interactive"},
				Description: `Attach container's STDIN`,
			}},
		}, {
			Name:        []string{"stats"},
			Description: `Display a live stream of container(s) resource usage statistics`,
			Args: []model.Arg{{
				Name:      "container",
				Generator: nil, // TODO: port over generator
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--all"},
				Description: `Show all containers (default shows just running)`,
			}, {
				Name:        []string{"--format"},
				Description: `Pretty-print images using a Go template`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--no-stream"},
				Description: `Disable streaming stats and only pull the first result`,
			}, {
				Name:        []string{"--no-trunc"},
				Description: `Do not truncate output`,
			}},
		}, {
			Name:        []string{"stop"},
			Description: `Stop one or more running containers`,
			Args: []model.Arg{{
				Name:      "container",
				Generator: nil, // TODO: port over generator
			}},
			Options: []model.Option{{
				Name:        []string{"-t", "--t"},
				Description: `Seconds to wait for stop before killing it (default 10)`,
				Args: []model.Arg{{
					Name: "int",
				}},
			}},
		}, {
			Name:        []string{"tag"},
			Description: `Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE`,
			Args: []model.Arg{{
				Name: "SOURCE_IMAGE[:TAG] TARGET_IMAGE[:TAG]",
			}},
		}, {
			Name:        []string{"top"},
			Description: `Display the running processes of a container`,
			Args: []model.Arg{{
				Name:      "container",
				Generator: nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"unpause"},
			Description: `Unpause all processes within one or more containers`,
			Args: []model.Arg{{
				Name:      "container",
				Generator: nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"update"},
			Description: `Update configuration of one or more containers`,
			Args: []model.Arg{{
				Name:      "container",
				Generator: nil, // TODO: port over generator
			}},
			Options: []model.Option{{
				Name:        []string{"--blkio-weight"},
				Description: `Block IO (relative weight), between 10 and 1000, or 0 to disable (default 0)`,
				Args: []model.Arg{{
					Name: "uint16",
				}},
			}, {
				Name:        []string{"--cpu-period"},
				Description: `Limit CPU CFS (Completely Fair Scheduler) period`,
				Args: []model.Arg{{
					Name: "int",
				}},
			}, {
				Name:        []string{"--cpu-quota"},
				Description: `Limit CPU CFS (Completely Fair Scheduler) quota`,
				Args: []model.Arg{{
					Name: "int",
				}},
			}, {
				Name:        []string{"--cpu-rt-period"},
				Description: `Limit the CPU real-time period in microseconds`,
				Args: []model.Arg{{
					Name: "int",
				}},
			}, {
				Name:        []string{"--cpu-rt-runtime"},
				Description: `Limit the CPU real-time runtime in microseconds`,
				Args: []model.Arg{{
					Name: "int",
				}},
			}, {
				Name:        []string{"-c", "--cpu-shares"},
				Description: `CPU shares (relative weight)`,
				Args: []model.Arg{{
					Name: "int",
				}},
			}, {
				Name:        []string{"--cpus"},
				Description: `Number of CPUs`,
				Args: []model.Arg{{
					Name: "decimal",
				}},
			}, {
				Name:        []string{"--cpuset-cpus"},
				Description: `CPUs in which to allow execution (0-3, 0,1)`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--cpuset-mems"},
				Description: `MEMs in which to allow execution (0-3, 0,1)`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--kernel-memory"},
				Description: `Kernel memory limit`,
				Args: []model.Arg{{
					Name: "bytes",
				}},
			}, {
				Name:        []string{"-m", "--memory"},
				Description: `Memory limit`,
				Args: []model.Arg{{
					Name: "bytes",
				}},
			}, {
				Name:        []string{"--memory-reservation"},
				Description: `Memory soft limit`,
				Args: []model.Arg{{
					Name: "bytes",
				}},
			}, {
				Name:        []string{"--memory-swap"},
				Description: `Swap limit equal to memory plus swap: '-1' to enable unlimited swap`,
				Args: []model.Arg{{
					Name: "bytes",
				}},
			}, {
				Name:        []string{"--pids-limit"},
				Description: `Tune container pids limit (set -1 for unlimited)`,
				Args: []model.Arg{{
					Name: "int",
				}},
			}, {
				Name:        []string{"--restart"},
				Description: `Restart policy to apply when a container exits`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}},
		}, {
			Name:        []string{"version"},
			Description: `Show the Docker version information`,
			Options: []model.Option{{
				Name:        []string{"-f", "--format"},
				Description: `Format the output. Values: [pretty | json]. (Default: pretty)`,
				Args: []model.Arg{{
					Name:        "string",
					Suggestions: []model.Suggestion{{Name: []string{`pretty`}}, {Name: []string{`json`}}},
				}},
			}, {
				Name:        []string{"--kubeconfig"},
				Description: `Kubernetes config file`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}},
		}, {
			Name:        []string{"wait"},
			Description: `Block until one or more containers stop, then print their exit codes`,
			Args: []model.Arg{{
				Name:      "container",
				Generator: nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"builder"},
			Description: `Manage builds`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"build"},
				Description: `Build an image from a Dockerfile`,
				Args: []model.Arg{{
					Name:      "path",
					Generator: nil, // TODO: port over generator
				}},
				Options: []model.Option{{
					Name: []string{"--add-host"},
					Args: []model.Arg{{
						Name:        "list",
						Description: `Add a custom host-to-IP mapping (host:ip)`,
					}},
				}, {
					Name: []string{"--build-arg"},
					Args: []model.Arg{{
						Name:        "list",
						Description: `Set build-time variables`,
					}},
				}, {
					Name: []string{"--cache-from"},
					Args: []model.Arg{{
						Name:        "strings",
						Description: `Images to consider as cache sources`,
					}},
				}, {
					Name:        []string{"--disable-content-trust"},
					Description: `Skip image verification (default true)`,
				}, {
					Name:        []string{"-f", "--file"},
					Description: `Name of the Dockerfile (Default is 'PATH/Dockerfile')`,
					Args: []model.Arg{{
						Name:      "string",
						Generator: nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"--iidfile"},
					Description: `Write the image ID to the file`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--isolation"},
					Description: `Container isolation technology`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--label"},
					Description: `Set metadata for an image`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--network"},
					Description: `Set the networking mode for the RUN instructions during build (default "default")`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--no-cache"},
					Description: `Do not use cache when building the image`,
				}, {
					Name:        []string{"-o", "--output"},
					Description: `Output destination (format: type=local,dest=path)`,
					Args: []model.Arg{{
						Name: "stringArray",
					}},
				}, {
					Name:        []string{"--platform"},
					Description: `Set platform if server is multi-platform capable`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--progress"},
					Description: `Set type of progress output (auto, plain, tty). Use plain to show container output`,
					Args: []model.Arg{{
						Name: "string",
						Suggestions: []model.Suggestion{{
							Name: []string{`auto`},
						}, {
							Name: []string{`plain`},
						}, {
							Name: []string{`tty`},
						}},
					}},
				}, {
					Name:        []string{"--pull"},
					Description: `Always attempt to pull a newer version of the image`,
				}, {
					Name:        []string{"-q", "--quiet"},
					Description: `Suppress the build output and print image ID on success`,
				}, {
					Name:        []string{"--secret"},
					Description: `Secret file to expose to the build (only if BuildKit enabled): id=mysecret,src=/local/secret`,
					Args: []model.Arg{{
						Name: "stringArray",
					}},
				}, {
					Name:        []string{"--squash"},
					Description: `Squash newly built layers into a single new layer`,
				}, {
					Name:        []string{"--ssh"},
					Description: `SSH agent socket or keys to expose to the build (only if BuildKit enabled) (format: default|<id>[=<socket>|<key>[,<key>]])`,
					Args: []model.Arg{{
						Name: "stringArray",
					}},
				}, {
					Name:        []string{"-t", "--tag"},
					Description: `Name and optionally a tag in the 'name:tag' format`,
				}, {
					Name:        []string{"--target"},
					Description: `Set the target build stage to build`,
					Args: []model.Arg{{
						Name:      "target build stage",
						Generator: nil, // TODO: port over generator
					}},
				}},
			}, {
				Name:        []string{"prune"},
				Description: `Amount of disk space to keep for cache`,
				Options: []model.Option{{
					Name:        []string{"-a", "--all"},
					Description: `Remove all unused build cache, not just dangling ones`,
				}, {
					Name:        []string{"--filter"},
					Description: `Provide filter values (e.g. 'until=24h')`,
					Args: []model.Arg{{
						Name: "filter",
					}},
				}, {
					Name:        []string{"-f", "--force"},
					Description: `Do not prompt for confirmation`,
				}, {
					Name:        []string{"--keep-storage"},
					Description: `Amount of disk space to keep for cache`,
					Args: []model.Arg{{
						Name: "bytes",
					}},
				}},
			}},
		}, {
			Name:        []string{"config"},
			Description: `Manage Docker configs`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"create"},
				Description: `Create a config from a file or STDIN`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
				Options: []model.Option{{
					Name:        []string{"-l"},
					Description: `Config labels`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--template-driver"},
					Description: `Template driver`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}},
			}, {
				Name:        []string{"inspect"},
				Description: `Display detailed information on one or more configs`,
				Args: []model.Arg{{
					Name:       "CONFIG",
					IsVariadic: true,
				}},
				Options: []model.Option{{
					Name:        []string{"-f"},
					Description: `Format the output using the given Go template`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--pretty"},
					Description: `Print the information in a human friendly format`,
				}},
			}, {
				Name:        []string{"ls"},
				Description: `List configs`,
				Options: []model.Option{{
					Name:        []string{"-f"},
					Description: `Filter output based on conditions provided`,
					Args: []model.Arg{{
						Name: "filter",
					}},
				}, {
					Name:        []string{"--format"},
					Description: `Pretty-print configs using a Go template`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"-q", "--quiet"},
					Description: `Only display IDs`,
				}},
			}, {
				Name:        []string{"rm"},
				Description: `Remove one or more configs`,
				Args: []model.Arg{{
					Name:       "CONFIG",
					IsVariadic: true,
				}},
			}},
		}, {
			Name:        []string{"container"},
			Description: `Manage containers`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"attach"},
				Description: `Attach local standard input, output, and error streams to a running container,`,
				Options: []model.Option{{
					Name:        []string{"--detach-keys"},
					Description: `Override the key sequence for detaching a container`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--no-stdin"},
					Description: `Do not attach STDIN`,
				}, {
					Name:        []string{"--sig-proxy"},
					Description: `Proxy all received signals to the process (default true)`,
				}},
			}, {
				Name:        []string{"cp"},
				Description: `Copy files/folders between a container and the local filesystem`,
				Args: []model.Arg{{
					Name: "CONTAINER:SRC_PATH DEST_PATH|- OR SRC_PATH|- CONTAINER:DEST_PATH",
				}},
				Options: []model.Option{{
					Name:        []string{"-a", "--archive"},
					Description: `Archive mode (copy all uid/gid information)`,
				}, {
					Name:        []string{"-L", "--follow-link"},
					Description: `Always follow symbol link in SRC_PATH`,
				}},
			}, {
				Name:        []string{"create"},
				Description: `Create a new container`,
				Args: []model.Arg{{
					Name:      "container",
					Generator: nil, // TODO: port over generator
				}, {
					Name:      "command",
					IsCommand: true,
				}},
				Options: []model.Option{{
					Name:        []string{"--add-host"},
					Description: `Add a custom host-to-IP mapping (host:ip)`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"-a", "--attach"},
					Description: `Attach to STDIN, STDOUT or STDERR`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--blkio-weight"},
					Description: `Block IO (relative weight), between 10 and 1000, or 0 to disable (default 0)`,
					Args: []model.Arg{{
						Name: "uint16",
					}},
				}, {
					Name:        []string{"--blkio-weight-device"},
					Description: `Block IO weight (relative device weight) (default [])`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--cap-add"},
					Description: `Add Linux capabilities`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--cap-drop"},
					Description: `Drop Linux capabilities`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--cgroup-parent"},
					Description: `Optional parent cgroup for the container`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--cgroupns"},
					Description: `Cgroup namespace to use (host|private)`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--cidfile"},
					Description: `Write the container ID to the file`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--cpu-period"},
					Description: `Limit CPU CFS (Completely Fair Scheduler) period`,
					Args: []model.Arg{{
						Name: "int",
					}},
				}, {
					Name:        []string{"--cpu-quota"},
					Description: `Limit CPU CFS (Completely Fair Scheduler) quota`,
					Args: []model.Arg{{
						Name: "int",
					}},
				}, {
					Name:        []string{"--cpu-rt-period"},
					Description: `Limit CPU real-time period in microseconds`,
					Args: []model.Arg{{
						Name: "int",
					}},
				}, {
					Name:        []string{"--cpu-rt-runtime"},
					Description: `Limit CPU real-time runtime in microseconds`,
					Args: []model.Arg{{
						Name: "int",
					}},
				}, {
					Name:        []string{"-c", "--cpu-shares"},
					Description: `CPU shares (relative weight)`,
					Args: []model.Arg{{
						Name: "int",
					}},
				}, {
					Name:        []string{"--cpus"},
					Description: `Number of CPUs`,
					Args: []model.Arg{{
						Name: "decimal",
					}},
				}, {
					Name:        []string{"--cpuset-cpus"},
					Description: `CPUs in which to allow execution (0-3, 0,1)`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--cpuset-mems"},
					Description: `MEMs in which to allow execution (0-3, 0,1)`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--device"},
					Description: `Add a host device to the container`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--device-cgroup-rule"},
					Description: `Add a rule to the cgroup allowed devices list`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--device-read-bps"},
					Description: `Limit read rate (bytes per second) from a device (default [])`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--device-read-iops"},
					Description: `Limit read rate (IO per second) from a device (default [])`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--device-write-bps"},
					Description: `Limit write rate (bytes per second) to a device (default [])`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--device-write-iops"},
					Description: `Limit write rate (IO per second) to a device (default [])`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--disable-content-trust"},
					Description: `Skip image verification (default true)`,
				}, {
					Name:        []string{"--dns"},
					Description: `Set custom DNS servers`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--dns-option"},
					Description: `Set DNS options`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--dns-search"},
					Description: `Set custom DNS search domains`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--domainname"},
					Description: `Container NIS domain name`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--entrypoint"},
					Description: `Overwrite the default ENTRYPOINT of the image`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"-e", "--env"},
					Description: `Set environment variables`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--env-file"},
					Description: `Read in a file of environment variables`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--expose"},
					Description: `Expose a port or a range of ports`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--gpus"},
					Description: `GPU devices to add to the container ('all' to pass all GPUs)`,
					Args: []model.Arg{{
						Name: "gpu-request",
					}},
				}, {
					Name:        []string{"--group-add"},
					Description: `Add additional groups to join`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--health-cmd"},
					Description: `Command to run to check health`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--health-interval"},
					Description: `Time between running the check (ms|s|m|h) (default 0s)`,
					Args: []model.Arg{{
						Name: "duration",
					}},
				}, {
					Name:        []string{"--health-retries"},
					Description: `Consecutive failures needed to report unhealthy`,
					Args: []model.Arg{{
						Name: "int",
					}},
				}, {
					Name:        []string{"--health-start-period"},
					Description: `Start period for the container to initialize before starting health-retries countdown (ms|s|m|h) (default 0s)`,
					Args: []model.Arg{{
						Name: "duration",
					}},
				}, {
					Name:        []string{"--health-timeout"},
					Description: `Maximum time to allow one check to run (ms|s|m|h) (default 0s)`,
					Args: []model.Arg{{
						Name: "duration",
					}},
				}, {
					Name:        []string{"--help"},
					Description: `Print usage`,
				}, {
					Name:        []string{"-h", "--hostname"},
					Description: `Container host name`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--init"},
					Description: `Run an init inside the container that forwards signals and reaps processes`,
				}, {
					Name:        []string{"-i", "--interactive"},
					Description: `Keep STDIN open even if not attached`,
				}, {
					Name:        []string{"--ip"},
					Description: `IPv4 address (e.g., 172.30.100.104)`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--ip6"},
					Description: `IPv6 address (e.g., 2001:db8::33)`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--ipc"},
					Description: `IPC mode to use`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--isolation"},
					Description: `Container isolation technology`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--kernel-memory"},
					Description: `Kernel memory limit`,
					Args: []model.Arg{{
						Name: "bytes",
					}},
				}, {
					Name:        []string{"-l", "--label"},
					Description: `Set meta data on a container`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--label-file"},
					Description: `Read in a line delimited file of labels`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--link"},
					Description: `Add link to another container`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--link-local-ip"},
					Description: `Container IPv4/IPv6 link-local addresses`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--log-driver"},
					Description: `Logging driver for the container`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--log-opt"},
					Description: `Log driver options`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--mac-address"},
					Description: `Container MAC address (e.g., 92:d0:c6:0a:29:33)`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"-m", "--memory"},
					Description: `Memory limit`,
					Args: []model.Arg{{
						Name: "bytes",
					}},
				}, {
					Name:        []string{"--memory-reservation"},
					Description: `Memory soft limit`,
					Args: []model.Arg{{
						Name: "bytes",
					}},
				}, {
					Name:        []string{"--memory-swap"},
					Description: `Swap limit equal to memory plus swap: '-1' to enable unlimited swap`,
					Args: []model.Arg{{
						Name: "bytes",
					}},
				}, {
					Name:        []string{"--memory-swappiness"},
					Description: `Tune container memory swappiness (0 to 100) (default -1)`,
					Args: []model.Arg{{
						Name: "int",
					}},
				}, {
					Name:        []string{"--mount"},
					Description: `Attach a filesystem mount to the container`,
					Args: []model.Arg{{
						Name: "mount",
					}},
				}, {
					Name:        []string{"--name"},
					Description: `Assign a name to the container`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--network"},
					Description: `Connect a container to a network`,
					Args: []model.Arg{{
						Name: "network",
					}},
				}, {
					Name:        []string{"--network-alias"},
					Description: `Add network-scoped alias for the container`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--no-healthcheck"},
					Description: `Disable any container-specified HEALTHCHECK`,
				}, {
					Name:        []string{"--oom-kill-disable"},
					Description: `Disable OOM Killer`,
				}, {
					Name:        []string{"--oom-score-adj"},
					Description: `Tune host's OOM preferences (-1000 to 1000)`,
					Args: []model.Arg{{
						Name: "int",
					}},
				}, {
					Name:        []string{"--pid"},
					Description: `PID namespace to use`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--pids-limit"},
					Description: `Tune container pids limit (set -1 for unlimited)`,
					Args: []model.Arg{{
						Name: "int",
					}},
				}, {
					Name:        []string{"--platform"},
					Description: `Set platform if server is multi-platform capable`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--privileged"},
					Description: `Give extended privileges to this container`,
				}, {
					Name:        []string{"-p", "--publish"},
					Description: `Publish a container's port(s) to the host`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"-P", "--publish-all"},
					Description: `Publish all exposed ports to random ports`,
				}, {
					Name:        []string{"--pull"},
					Description: `Pull image before creating ("always"|"missing"|"never") (default "missing")`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--read-only"},
					Description: `Mount the container's root filesystem as read only`,
				}, {
					Name:        []string{"--restart"},
					Description: `Restart policy to apply when a container exits (default "no")`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--rm"},
					Description: `Automatically remove the container when it exits`,
				}, {
					Name:        []string{"--runtime"},
					Description: `Runtime to use for this container`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--security-opt"},
					Description: `Security Options`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--shm-size"},
					Description: `Size of /dev/shm`,
					Args: []model.Arg{{
						Name: "bytes",
					}},
				}, {
					Name:        []string{"--stop-signal"},
					Description: `Signal to stop a container (default "SIGTERM")`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--stop-timeout"},
					Description: `Timeout (in seconds) to stop a container`,
					Args: []model.Arg{{
						Name: "int",
					}},
				}, {
					Name:        []string{"--storage-opt"},
					Description: `Storage driver options for the container`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--sysctl"},
					Description: `Sysctl options (default map[])`,
					Args: []model.Arg{{
						Name: "map",
					}},
				}, {
					Name:        []string{"--tmpfs"},
					Description: `Mount a tmpfs directory`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"-t", "--tty"},
					Description: `Allocate a pseudo-TTY`,
				}, {
					Name:        []string{"--ulimit"},
					Description: `Ulimit options (default [])`,
					Args: []model.Arg{{
						Name: "ulimit",
					}},
				}, {
					Name:        []string{"-u", "--user"},
					Description: `Username or UID (format: <name|uid>[:<group|gid>])`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--userns"},
					Description: `User namespace to use`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--uts"},
					Description: `UTS namespace to use`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"-v", "--volume"},
					Description: `Bind mount a volume`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--volume-driver"},
					Description: `Optional volume driver for the container`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--volumes-from"},
					Description: `Mount volumes from the specified container(s)`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"-w", "--workdir"},
					Description: `Working directory inside the container`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}},
			}, {
				Name:        []string{"diff"},
				Description: `Inspect changes to files or directories on a container's filesystem`,
				Args: []model.Arg{{
					Name:      "container",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"exec"},
				Description: `Run a command in a running container`,
				Args: []model.Arg{{
					Name:      "container",
					Generator: nil, // TODO: port over generator
				}, {
					Name:      "command",
					IsCommand: true,
				}},
				Options: []model.Option{{
					Name:        []string{"-it"},
					Description: `Launch an interactive session`,
				}, {
					Name:        []string{"-d", "--detach"},
					Description: `Detached mode: run command in the background`,
				}, {
					Name:        []string{"--detach-keys"},
					Description: `Override the key sequence for detaching a container`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"-e", "--env"},
					Description: `Set environment variables`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--env-file"},
					Description: `Read in a file of environment variables`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"-i", "--interactive"},
					Description: `Keep STDIN open even if not attached`,
				}, {
					Name:        []string{"--privileged"},
					Description: `Give extended privileges to the command`,
				}, {
					Name:        []string{"-t", "--tty"},
					Description: `Allocate a pseudo-TTY`,
				}, {
					Name:        []string{"-u", "--user"},
					Description: `Username or UID (format: <name|uid>[:<group|gid>])`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"-w", "--workdir"},
					Description: `Working directory inside the container`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}},
			}, {
				Name:        []string{"export"},
				Description: `Export a container's filesystem as a tar archive`,
				Args: []model.Arg{{
					Name:      "container",
					Generator: nil, // TODO: port over generator
				}},
				Options: []model.Option{{
					Name:        []string{"-o", "--output"},
					Description: `Write to a file, instead of STDOUT`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}},
			}, {
				Name:        []string{"inspect"},
				Description: `Return low-level information on Docker objects`,
				Args: []model.Arg{{
					Name:      "container",
					Generator: nil, // TODO: port over generator
				}},
				Options: []model.Option{{
					Name:        []string{"-f", "--format"},
					Description: `Format the output using the given Go template`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"-s", "--size"},
					Description: `Display total file sizes if the type is container`,
				}},
			}, {
				Name:        []string{"kill"},
				Description: `Kill one or more running containers`,
				Args: []model.Arg{{
					Name:       "container",
					Generator:  nil, // TODO: port over generator
					IsVariadic: true,
				}},
				Options: []model.Option{{
					Name:        []string{"-s", "--signal"},
					Description: `Signal to send to the container (default "KILL")`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}},
			}, {
				Name:        []string{"logs"},
				Description: `Fetch the logs of a container`,
				Args: []model.Arg{{
					Name:      "container",
					Generator: nil, // TODO: port over generator
				}},
				Options: []model.Option{{
					Name:        []string{"--details"},
					Description: `Show extra details provided to logs`,
				}, {
					Name:        []string{"-f", "--follow"},
					Description: `Follow log output`,
				}, {
					Name:        []string{"--since"},
					Description: `Show logs since timestamp (e.g. 2013-01-02T13:23:37Z) or relative (e.g. 42m for 42 minutes)`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"-n", "--tail"},
					Description: `Number of lines to show from the end of the logs (default "all")`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"-t", "--timestamps"},
					Description: `Show timestamps`,
				}, {
					Name:        []string{"--until"},
					Description: `Show logs before a timestamp (e.g. 2013-01-02T13:23:37Z) or relative (e.g. 42m for 42 minutes)`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}},
			}, {
				Name:        []string{"ls"},
				Description: `List containers`,
				Options: []model.Option{{
					Name:        []string{"-a", "--all"},
					Description: `Show all containers (default shows just running)`,
				}, {
					Name:        []string{"-f", "--filter"},
					Description: `Filter output based on conditions provided`,
					Args: []model.Arg{{
						Name: "filter",
					}},
				}, {
					Name:        []string{"--format"},
					Description: `Pretty-print containers using a Go template`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"-n", "--last"},
					Description: `Show n last created containers (includes all states) (default -1)`,
					Args: []model.Arg{{
						Name: "int",
					}},
				}, {
					Name:        []string{"-l", "--latest"},
					Description: `Show the latest created container (includes all states)`,
				}, {
					Name:        []string{"--no-trunc"},
					Description: `Don't truncate output`,
				}, {
					Name:        []string{"-q", "--quiet"},
					Description: `Only display container IDs`,
				}, {
					Name:        []string{"-s", "--size"},
					Description: `Display total file sizes`,
				}},
			}, {
				Name:        []string{"pause"},
				Description: `Pause all processes within one or more containers`,
				Args: []model.Arg{{
					Name:      "container",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"port"},
				Description: `List port mappings or a specific mapping for the container`,
				Args: []model.Arg{{
					Name:      "container",
					Generator: nil, // TODO: port over generator
				}, {
					Name: "[PRIVATE_PORT[/PROTO]]",
				}},
			}, {
				Name:        []string{"prune"},
				Description: `Remove all stopped containers`,
				Options: []model.Option{{
					Name:        []string{"--filter"},
					Description: `Provide filter values (e.g. 'until=<timestamp>')`,
					Args: []model.Arg{{
						Name: "filter",
					}},
				}, {
					Name:        []string{"-f", "--force"},
					Description: `Do not prompt for confirmation`,
				}},
			}, {
				Name:        []string{"rename"},
				Description: `Rename a container`,
				Args: []model.Arg{{
					Name:      "container",
					Generator: nil, // TODO: port over generator
				}, {
					Name: "NEW_NAME",
				}},
			}, {
				Name:        []string{"restart"},
				Description: `Restart one or more containers`,
				Args: []model.Arg{{
					Name:      "container",
					Generator: nil, // TODO: port over generator
				}},
				Options: []model.Option{{
					Name:        []string{"-t", "--time"},
					Description: `Seconds to wait for stop before killing the container (default 10)`,
					Args: []model.Arg{{
						Name: "int",
					}},
				}},
			}, {
				Name:        []string{"rm"},
				Description: `Remove one or more containers`,
				Args: []model.Arg{{
					Name:       "containers",
					Generator:  nil, // TODO: port over generator
					IsVariadic: true,
				}},
				Options: []model.Option{{
					Name:        []string{"-f", "--force"},
					Description: `Force the removal of a running container (uses SIGKILL)`,
				}, {
					Name:        []string{"-l", "--link"},
					Description: `Remove the specified link`,
				}, {
					Name:        []string{"-v", "--volumes"},
					Description: `Remove the anonymous volumes associated with the container`,
				}},
			}, {
				Name:        []string{"run"},
				Description: `Run a command in a new container`,
				Args: []model.Arg{{
					Name:        "image",
					Description: `The Docker image to use`,
					Generator:   nil, // TODO: port over generator
				}, {
					Name: "command",
				}},
				Options: []model.Option{{
					Name:        []string{"-it"},
					Description: `Launch an interactive session`,
				}, {
					Name:        []string{"--add-host"},
					Description: `Add a custom host-to-IP mapping (host:ip)`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"-a", "--attach"},
					Description: `Attach to STDIN, STDOUT or STDERR`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--blkio-weight"},
					Description: `Block IO (relative weight), between 10 and 1000, or 0 to disable (default 0)`,
					Args: []model.Arg{{
						Name: "uint16",
					}},
				}, {
					Name:        []string{"--blkio-weight-device"},
					Description: `Block IO weight (relative device weight) (default [])`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--cap-add"},
					Description: `Add Linux capabilities`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--cap-drop"},
					Description: `Drop Linux capabilities`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--cgroup-parent"},
					Description: `Optional parent cgroup for the container`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name: []string{"--cgroupns"},
					Description: `Cgroup namespace to use (host|private)
'host':    Run the container in the Docker host's cgroup namespace
'private': Run the container in its own private cgroup namespace
'':        Use the cgroup namespace as configured by the
default-cgroupns-mode option on the daemon (default)`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--cidfile"},
					Description: `Write the container ID to the file`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--cpu-period"},
					Description: `Limit CPU CFS (Completely Fair Scheduler) period`,
					Args: []model.Arg{{
						Name: "int",
					}},
				}, {
					Name:        []string{"--cpu-quota"},
					Description: `Limit CPU CFS (Completely Fair Scheduler) quota`,
					Args: []model.Arg{{
						Name: "int",
					}},
				}, {
					Name:        []string{"--cpu-rt-period"},
					Description: `Limit CPU real-time period in microseconds`,
					Args: []model.Arg{{
						Name: "int",
					}},
				}, {
					Name:        []string{"--cpu-rt-runtime"},
					Description: `Limit CPU real-time runtime in microseconds`,
					Args: []model.Arg{{
						Name: "int",
					}},
				}, {
					Name:        []string{"-c", "--cpu-shares"},
					Description: `CPU shares (relative weight)`,
					Args: []model.Arg{{
						Name: "int",
					}},
				}, {
					Name:        []string{"--cpus"},
					Description: `Number of CPUs`,
					Args: []model.Arg{{
						Name: "decimal",
					}},
				}, {
					Name:        []string{"--cpuset-cpus"},
					Description: `CPUs in which to allow execution (0-3, 0,1)`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--cpuset-mems"},
					Description: `MEMs in which to allow execution (0-3, 0,1)`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"-d", "--detach"},
					Description: `Run container in background and print container ID`,
				}, {
					Name:        []string{"--detach-keys"},
					Description: `Override the key sequence for detaching a container`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--device"},
					Description: `Add a host device to the container`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--device-cgroup-rule"},
					Description: `Add a rule to the cgroup allowed devices list`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--device-read-bps"},
					Description: `Limit read rate (bytes per second) from a device (default [])`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--device-read-iops"},
					Description: `Limit read rate (IO per second) from a device (default [])`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--device-write-bps"},
					Description: `Limit write rate (bytes per second) to a device (default [])`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--device-write-iops"},
					Description: `Limit write rate (IO per second) to a device (default [])`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--disable-content-trust"},
					Description: `Skip image verification (default true)`,
				}, {
					Name:        []string{"--dns"},
					Description: `Set custom DNS servers`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--dns-option"},
					Description: `Set DNS options`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--dns-search"},
					Description: `Set custom DNS search domains`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--domainname"},
					Description: `Container NIS domain name`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--entrypoint"},
					Description: `Overwrite the default ENTRYPOINT of the image`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"-e", "--env"},
					Description: `Set environment variables`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--env-file"},
					Description: `Read in a file of environment variables`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--expose"},
					Description: `Expose a port or a range of ports`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--gpus"},
					Description: `GPU devices to add to the container ('all' to pass all GPUs)`,
					Args: []model.Arg{{
						Name: "gpu-request",
					}},
				}, {
					Name:        []string{"--group-add"},
					Description: `Add additional groups to join`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--health-cmd"},
					Description: `Command to run to check health`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--health-interval"},
					Description: `Time between running the check (ms|s|m|h) (default 0s)`,
					Args: []model.Arg{{
						Name: "duration",
					}},
				}, {
					Name:        []string{"--health-retries"},
					Description: `Consecutive failures needed to report unhealthy`,
					Args: []model.Arg{{
						Name: "int",
					}},
				}, {
					Name:        []string{"--health-start-period"},
					Description: `Start period for the container to initialize before starting health-retries countdown (ms|s|m|h) (default 0s)`,
					Args: []model.Arg{{
						Name: "duration",
					}},
				}, {
					Name:        []string{"--health-timeout"},
					Description: `Maximum time to allow one check to run (ms|s|m|h) (default 0s)`,
					Args: []model.Arg{{
						Name: "duration",
					}},
				}, {
					Name:        []string{"--help"},
					Description: `Print usage`,
				}, {
					Name:        []string{"-h", "--hostname"},
					Description: `Container host name`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--init"},
					Description: `Run an init inside the container that forwards signals and reaps processes`,
				}, {
					Name:        []string{"-i", "--interactive"},
					Description: `Keep STDIN open even if not attached`,
				}, {
					Name:        []string{"--ip"},
					Description: `IPv4 address (e.g., 172.30.100.104)`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--ip6"},
					Description: `IPv6 address (e.g., 2001:db8::33)`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--ipc"},
					Description: `IPC mode to use`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--isolation"},
					Description: `Container isolation technology`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--kernel-memory"},
					Description: `Kernel memory limit`,
					Args: []model.Arg{{
						Name: "bytes",
					}},
				}, {
					Name:        []string{"-l", "--label"},
					Description: `Set meta data on a container`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--label-file"},
					Description: `Read in a line delimited file of labels`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--link"},
					Description: `Add link to another container`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--link-local-ip"},
					Description: `Container IPv4/IPv6 link-local addresses`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--log-driver"},
					Description: `Logging driver for the container`,
					Args: []model.Arg{{
						Name:        "string",
						Suggestions: []model.Suggestion{{Name: []string{`json-file`}}, {Name: []string{`syslog`}}, {Name: []string{`journald`}}, {Name: []string{`gelf`}}, {Name: []string{`fluentd`}}, {Name: []string{`awslogs`}}, {Name: []string{`splunk`}}, {Name: []string{`etwlogs`}}, {Name: []string{`gcplogs`}}, {Name: []string{`none`}}},
					}},
				}, {
					Name:        []string{"--log-opt"},
					Description: `Log driver options`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--mac-address"},
					Description: `Container MAC address (e.g., 92:d0:c6:0a:29:33)`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"-m", "--memory"},
					Description: `Memory limit`,
					Args: []model.Arg{{
						Name: "bytes",
					}},
				}, {
					Name:        []string{"--memory-reservation"},
					Description: `Memory soft limit`,
					Args: []model.Arg{{
						Name: "bytes",
					}},
				}, {
					Name:        []string{"--memory-swap"},
					Description: `Swap limit equal to memory plus swap: '-1' to enable unlimited swap`,
					Args: []model.Arg{{
						Name: "bytes",
					}},
				}, {
					Name:        []string{"--memory-swappiness"},
					Description: `Tune container memory swappiness (0 to 100) (default -1)`,
					Args: []model.Arg{{
						Name: "int",
					}},
				}, {
					Name:        []string{"--mount"},
					Description: `Attach a filesystem mount to the container`,
					Args: []model.Arg{{
						Name: "mount",
					}},
				}, {
					Name:        []string{"--name"},
					Description: `Assign a name to the container`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--network"},
					Description: `Connect a container to a network`,
					Args: []model.Arg{{
						Name: "network",
					}},
				}, {
					Name:        []string{"--network-alias"},
					Description: `Add network-scoped alias for the container`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--no-healthcheck"},
					Description: `Disable any container-specified HEALTHCHECK`,
				}, {
					Name:        []string{"--oom-kill-disable"},
					Description: `Disable OOM Killer`,
				}, {
					Name:        []string{"--oom-score-adj"},
					Description: `Tune host's OOM preferences (-1000 to 1000)`,
					Args: []model.Arg{{
						Name: "int",
					}},
				}, {
					Name:        []string{"--pid"},
					Description: `PID namespace to use`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--pids-limit"},
					Description: `Tune container pids limit (set -1 for unlimited)`,
					Args: []model.Arg{{
						Name: "int",
					}},
				}, {
					Name:        []string{"--platform"},
					Description: `Set platform if server is multi-platform capable`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--privileged"},
					Description: `Give extended privileges to this container`,
				}, {
					Name:        []string{"-p", "--publish"},
					Description: `Publish a container's port(s) to the host`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"-P", "--publish-all"},
					Description: `Publish all exposed ports to random ports`,
				}, {
					Name:        []string{"--pull"},
					Description: `Pull image before running ('always'|'missing'|'never') (default 'missing')`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--read-only"},
					Description: `Mount the container's root filesystem as read only`,
				}, {
					Name:        []string{"--restart"},
					Description: `Restart policy to apply when a container exits (default 'no')`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--rm"},
					Description: `Automatically remove the container when it exits`,
				}, {
					Name:        []string{"--runtime"},
					Description: `Runtime to use for this container`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--security-opt"},
					Description: `Security Options`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--shm-size"},
					Description: `Size of /dev/shm`,
					Args: []model.Arg{{
						Name: "bytes",
					}},
				}, {
					Name:        []string{"--sig-proxy"},
					Description: `Proxy received signals to the process (default true)`,
				}, {
					Name:        []string{"--stop-signal"},
					Description: `Signal to stop a container (default 'SIGTERM')`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--stop-timeout"},
					Description: `Timeout (in seconds) to stop a container`,
					Args: []model.Arg{{
						Name: "int",
					}},
				}, {
					Name:        []string{"--storage-opt"},
					Description: `Storage driver options for the container`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--sysctl"},
					Description: `Sysctl options (default map[])`,
					Args: []model.Arg{{
						Name: "map",
					}},
				}, {
					Name:        []string{"--tmpfs"},
					Description: `Mount a tmpfs directory`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"-t", "--tty"},
					Description: `Allocate a pseudo-TTY`,
				}, {
					Name:        []string{"--ulimit"},
					Description: `Ulimit options (default [])`,
					Args: []model.Arg{{
						Name: "ulimit",
					}},
				}, {
					Name:        []string{"-u", "--user"},
					Description: `Username or UID (format: <name|uid>[:<group|gid>])`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--userns"},
					Description: `User namespace to use`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--uts"},
					Description: `UTS namespace to use`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"-v", "--volume"},
					Description: `Bind mount a volume`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--volume-driver"},
					Description: `Optional volume driver for the container`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--volumes-from"},
					Description: `Mount volumes from the specified container(s)`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"-w", "--workdir"},
					Description: `Working directory inside the container`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}},
			}, {
				Name:        []string{"start"},
				Description: `Start one or more stopped containers`,
				Args: []model.Arg{{
					Name:      "container",
					Generator: nil, // TODO: port over generator
				}},
				Options: []model.Option{{
					Name:        []string{"-a", "--attach"},
					Description: `Attach STDOUT/STDERR and forward signals`,
				}, {
					Name:        []string{"--detach-keys"},
					Description: `Override the key sequence for detaching a container`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"-i", "--interactive"},
					Description: `Attach container's STDIN`,
				}},
			}, {
				Name:        []string{"stats"},
				Description: `Display a live stream of container(s) resource usage statistics`,
				Args: []model.Arg{{
					Name:      "container",
					Generator: nil, // TODO: port over generator
				}},
				Options: []model.Option{{
					Name:        []string{"-a", "--all"},
					Description: `Show all containers (default shows just running)`,
				}, {
					Name:        []string{"--format"},
					Description: `Pretty-print images using a Go template`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--no-stream"},
					Description: `Disable streaming stats and only pull the first result`,
				}, {
					Name:        []string{"--no-trunc"},
					Description: `Do not truncate output`,
				}},
			}, {
				Name:        []string{"stop"},
				Description: `Stop one or more running containers`,
				Args: []model.Arg{{
					Name:      "container",
					Generator: nil, // TODO: port over generator
				}},
				Options: []model.Option{{
					Name:        []string{"-t", "--t"},
					Description: `Seconds to wait for stop before killing it (default 10)`,
					Args: []model.Arg{{
						Name: "int",
					}},
				}},
			}, {
				Name:        []string{"top"},
				Description: `Display the running processes of a container`,
				Args: []model.Arg{{
					Name:      "container",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"unpause"},
				Description: `Unpause all processes within one or more containers`,
				Args: []model.Arg{{
					Name:      "container",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"update"},
				Description: `Update configuration of one or more containers`,
				Args: []model.Arg{{
					Name:      "container",
					Generator: nil, // TODO: port over generator
				}},
				Options: []model.Option{{
					Name:        []string{"--blkio-weight"},
					Description: `Block IO (relative weight), between 10 and 1000, or 0 to disable (default 0)`,
					Args: []model.Arg{{
						Name: "uint16",
					}},
				}, {
					Name:        []string{"--cpu-period"},
					Description: `Limit CPU CFS (Completely Fair Scheduler) period`,
					Args: []model.Arg{{
						Name: "int",
					}},
				}, {
					Name:        []string{"--cpu-quota"},
					Description: `Limit CPU CFS (Completely Fair Scheduler) quota`,
					Args: []model.Arg{{
						Name: "int",
					}},
				}, {
					Name:        []string{"--cpu-rt-period"},
					Description: `Limit the CPU real-time period in microseconds`,
					Args: []model.Arg{{
						Name: "int",
					}},
				}, {
					Name:        []string{"--cpu-rt-runtime"},
					Description: `Limit the CPU real-time runtime in microseconds`,
					Args: []model.Arg{{
						Name: "int",
					}},
				}, {
					Name:        []string{"-c", "--cpu-shares"},
					Description: `CPU shares (relative weight)`,
					Args: []model.Arg{{
						Name: "int",
					}},
				}, {
					Name:        []string{"--cpus"},
					Description: `Number of CPUs`,
					Args: []model.Arg{{
						Name: "decimal",
					}},
				}, {
					Name:        []string{"--cpuset-cpus"},
					Description: `CPUs in which to allow execution (0-3, 0,1)`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--cpuset-mems"},
					Description: `MEMs in which to allow execution (0-3, 0,1)`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--kernel-memory"},
					Description: `Kernel memory limit`,
					Args: []model.Arg{{
						Name: "bytes",
					}},
				}, {
					Name:        []string{"-m", "--memory"},
					Description: `Memory limit`,
					Args: []model.Arg{{
						Name: "bytes",
					}},
				}, {
					Name:        []string{"--memory-reservation"},
					Description: `Memory soft limit`,
					Args: []model.Arg{{
						Name: "bytes",
					}},
				}, {
					Name:        []string{"--memory-swap"},
					Description: `Swap limit equal to memory plus swap: '-1' to enable unlimited swap`,
					Args: []model.Arg{{
						Name: "bytes",
					}},
				}, {
					Name:        []string{"--pids-limit"},
					Description: `Tune container pids limit (set -1 for unlimited)`,
					Args: []model.Arg{{
						Name: "int",
					}},
				}, {
					Name:        []string{"--restart"},
					Description: `Restart policy to apply when a container exits`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}},
			}, {
				Name:        []string{"wait"},
				Description: `Block until one or more containers stop, then print their exit codes`,
				Args: []model.Arg{{
					Name:      "container",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"context"},
			Description: `Manage contexts`,
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Help for context`,
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"create"},
				Description: `Create new context`,
				Options: []model.Option{{
					Name:        []string{"--default-stack-orchestrator"},
					Description: `Default orchestrator for stack operations to use with this context (swarm|kubernetes|all)`,
					Args: []model.Arg{{
						Name:        "string",
						Suggestions: []model.Suggestion{{Name: []string{`swarm`}}, {Name: []string{`kubernetes`}}, {Name: []string{`all`}}},
					}},
				}, {
					Name:        []string{"--description"},
					Description: `Description of the context`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--docker"},
					Description: `Set the docker endpoint (default [])`,
					Args: []model.Arg{{
						Name: "stringToString",
					}},
				}, {
					Name:        []string{"--from"},
					Description: `Create context from a named context`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"-h", "--help"},
					Description: `Help for create`,
				}, {
					Name:        []string{"--kubernetes"},
					Description: `Set the kubernetes endpoint (default [])`,
					Args: []model.Arg{{
						Name: "stringToString",
					}},
				}},
				Subcommands: []model.Subcommand{{
					Name:        []string{"aci"},
					Description: `Create a context for Azure Container Instances`,
					Args: []model.Arg{{
						Name: "CONTEXT",
					}},
					Options: []model.Option{{
						Name:        []string{"--description"},
						Description: `Description of the context`,
						Args: []model.Arg{{
							Name: "string",
						}},
					}, {
						Name:        []string{"-h", "--help"},
						Description: `Help for aci`,
					}, {
						Name:        []string{"--location"},
						Description: `Location (default "eastus")`,
						Args: []model.Arg{{
							Name: "string",
						}},
					}, {
						Name:        []string{"--resource-group"},
						Description: `Resource group`,
						Args: []model.Arg{{
							Name: "string",
						}},
					}, {
						Name:        []string{"--subscription-id"},
						Description: `Location`,
						Args: []model.Arg{{
							Name: "string",
						}},
					}},
				}, {
					Name:        []string{"ecs"},
					Description: `Create a context for Amazon ECS`,
					Args: []model.Arg{{
						Name: "CONTEXT",
					}},
					Options: []model.Option{{
						Name:        []string{"--access-keys"},
						Description: `Use AWS access keys from file`,
						Args: []model.Arg{{
							Name: "string",
						}},
					}, {
						Name:        []string{"--description"},
						Description: `Description of the context`,
						Args: []model.Arg{{
							Name: "string",
						}},
					}, {
						Name:        []string{"--from-env"},
						Description: `Use AWS environment variables for profile, or credentials and region`,
					}, {
						Name:        []string{"-h", "--help"},
						Description: `Help for ecs`,
					}, {
						Name:        []string{"--local-simulation"},
						Description: `Create context for ECS local simulation endpoints`,
					}, {
						Name:        []string{"--profile"},
						Description: `Use an existing AWS profile`,
						Args: []model.Arg{{
							Name: "string",
						}},
					}},
				}},
			}, {
				Name:        []string{"export"},
				Description: `Export a context to a tar or kubeconfig file`,
				Args: []model.Arg{{
					Name:      "CONTEXT",
					Generator: nil, // TODO: port over generator
				}, {
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "FILE",
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Help for export`,
				}, {
					Name:        []string{"--kubeconfig"},
					Description: `Export as a kubeconfig file`,
				}},
			}, {
				Name:        []string{"import"},
				Description: `Import a context from a tar or zip file`,
				Args: []model.Arg{{
					Name: "CONTEXT",
				}, {
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "FILE",
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Help for export`,
				}},
			}, {
				Name:        []string{"inspect"},
				Description: `Display detailed information on one or more contexts`,
				Args: []model.Arg{{
					Name:       "CONTEXT",
					Generator:  nil, // TODO: port over generator
					IsVariadic: true,
				}},
				Options: []model.Option{{
					Name:        []string{"-f"},
					Description: `Format the output using the given Go template`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"-h", "--help"},
					Description: `Help for inspect`,
				}},
			}, {
				Name:        []string{"list"},
				Description: `List available contexts`,
				Options: []model.Option{{
					Name:        []string{"--format"},
					Description: `Format the output. Values: [pretty | json]. (Default: pretty)`,
					Args: []model.Arg{{
						Name:        "string",
						Suggestions: []model.Suggestion{{Name: []string{`pretty`}}, {Name: []string{`json`}}},
					}},
				}, {
					Name:        []string{"-h", "--help"},
					Description: `Help for list`,
				}, {
					Name:        []string{"-q", "--quiet"},
					Description: `Only show context names`,
				}},
			}, {
				Name:        []string{"rm"},
				Description: `Remove one or more contexts`,
				Args: []model.Arg{{
					Name:       "CONTEXT",
					Generator:  nil, // TODO: port over generator
					IsVariadic: true,
				}},
				Options: []model.Option{{
					Name:        []string{"-f", "--force"},
					Description: `Force removing current context`,
				}, {
					Name:        []string{"-h", "--help"},
					Description: `Help for rm`,
				}},
			}, {
				Name:        []string{"show"},
				Description: `Print the current context`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Help for show`,
				}},
			}, {
				Name:        []string{"update"},
				Description: `Update a context`,
				Args: []model.Arg{{
					Name:      "CONTEXT",
					Generator: nil, // TODO: port over generator
				}},
				Options: []model.Option{{
					Name:        []string{"--default-stack-orchestrator"},
					Description: `Default orchestrator for stack operations to use with this context (swarm|kubernetes|all)`,
					Args: []model.Arg{{
						Name:        "string",
						Suggestions: []model.Suggestion{{Name: []string{`swarm`}}, {Name: []string{`kubernetes`}}, {Name: []string{`all`}}},
					}},
				}, {
					Name:        []string{"--description"},
					Description: `Description of the context`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--docker"},
					Description: `Set the docker endpoint (default [])`,
					Args: []model.Arg{{
						Name: "stringToString",
					}},
				}, {
					Name:        []string{"-h", "--help"},
					Description: `Help for update`,
				}, {
					Name:        []string{"--kubernetes"},
					Description: `Set the kubernetes endpoint (default [])`,
					Args: []model.Arg{{
						Name: "stringToString",
					}},
				}},
			}, {
				Name:        []string{"use"},
				Description: `Set the default context`,
				Args: []model.Arg{{
					Name:      "CONTEXT",
					Generator: nil, // TODO: port over generator
				}},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Help for use`,
				}},
			}},
		}, {
			Name:        []string{"image"},
			Description: `Manage images`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"build"},
				Description: `Build an image from a Dockerfile`,
				Args: []model.Arg{{
					Name:      "path",
					Generator: nil, // TODO: port over generator
				}},
				Options: []model.Option{{
					Name: []string{"--add-host"},
					Args: []model.Arg{{
						Name:        "list",
						Description: `Add a custom host-to-IP mapping (host:ip)`,
					}},
				}, {
					Name: []string{"--build-arg"},
					Args: []model.Arg{{
						Name:        "list",
						Description: `Set build-time variables`,
					}},
				}, {
					Name: []string{"--cache-from"},
					Args: []model.Arg{{
						Name:        "strings",
						Description: `Images to consider as cache sources`,
					}},
				}, {
					Name:        []string{"--disable-content-trust"},
					Description: `Skip image verification (default true)`,
				}, {
					Name:        []string{"-f", "--file"},
					Description: `Name of the Dockerfile (Default is 'PATH/Dockerfile')`,
					Args: []model.Arg{{
						Name:      "string",
						Generator: nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"--iidfile"},
					Description: `Write the image ID to the file`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--isolation"},
					Description: `Container isolation technology`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--label"},
					Description: `Set metadata for an image`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--network"},
					Description: `Set the networking mode for the RUN instructions during build (default "default")`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--no-cache"},
					Description: `Do not use cache when building the image`,
				}, {
					Name:        []string{"-o", "--output"},
					Description: `Output destination (format: type=local,dest=path)`,
					Args: []model.Arg{{
						Name: "stringArray",
					}},
				}, {
					Name:        []string{"--platform"},
					Description: `Set platform if server is multi-platform capable`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--progress"},
					Description: `Set type of progress output (auto, plain, tty). Use plain to show container output`,
					Args: []model.Arg{{
						Name: "string",
						Suggestions: []model.Suggestion{{
							Name: []string{`auto`},
						}, {
							Name: []string{`plain`},
						}, {
							Name: []string{`tty`},
						}},
					}},
				}, {
					Name:        []string{"--pull"},
					Description: `Always attempt to pull a newer version of the image`,
				}, {
					Name:        []string{"-q", "--quiet"},
					Description: `Suppress the build output and print image ID on success`,
				}, {
					Name:        []string{"--secret"},
					Description: `Secret file to expose to the build (only if BuildKit enabled): id=mysecret,src=/local/secret`,
					Args: []model.Arg{{
						Name: "stringArray",
					}},
				}, {
					Name:        []string{"--squash"},
					Description: `Squash newly built layers into a single new layer`,
				}, {
					Name:        []string{"--ssh"},
					Description: `SSH agent socket or keys to expose to the build (only if BuildKit enabled) (format: default|<id>[=<socket>|<key>[,<key>]])`,
					Args: []model.Arg{{
						Name: "stringArray",
					}},
				}, {
					Name:        []string{"-t", "--tag"},
					Description: `Name and optionally a tag in the 'name:tag' format`,
				}, {
					Name:        []string{"--target"},
					Description: `Set the target build stage to build`,
					Args: []model.Arg{{
						Name:      "target build stage",
						Generator: nil, // TODO: port over generator
					}},
				}},
			}, {
				Name:        []string{"history"},
				Description: `Show the history of an image`,
				Args: []model.Arg{{
					Name:      "image",
					Generator: nil, // TODO: port over generator
				}},
				Options: []model.Option{{
					Name:        []string{"--format"},
					Description: `Pretty-print images using a Go template`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"-H", "--human"},
					Description: `Print sizes and dates in human readable format (default true)`,
				}, {
					Name:        []string{"--no-trunc"},
					Description: `Don't truncate output`,
				}, {
					Name:        []string{"-q", "--quiet"},
					Description: `Only show image IDs`,
				}},
			}, {
				Name:        []string{"import"},
				Description: `Import the contents from a tarball to create a filesystem image`,
				Args: []model.Arg{{
					Name: "file|URL|- [REPOSITORY[:TAG]]",
				}},
				Options: []model.Option{{
					Name:        []string{"-c", "--change"},
					Description: `Apply Dockerfile instruction to the created image`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"-m", "--message"},
					Description: `Set commit message for imported image`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--platform"},
					Description: `Set platform if server is multi-platform capable`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}},
			}, {
				Name:        []string{"inspect"},
				Description: `Display detailed information on one or more images`,
				Args: []model.Arg{{
					Name:       "image",
					Generator:  nil, // TODO: port over generator
					IsVariadic: true,
				}},
				Options: []model.Option{{
					Name:        []string{"-f"},
					Description: `Format the output using the given Go template`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}},
			}, {
				Name:        []string{"load"},
				Description: `Load an image from a tar archive or STDIN`,
				Options: []model.Option{{
					Name:        []string{"-i"},
					Description: `Read from tar archive file, instead of STDIN`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"-q", "--quiet"},
					Description: `Suppress the load output`,
				}},
			}, {
				Name:        []string{"ls"},
				Description: `List images`,
				Args: []model.Arg{{
					Name: "[REPOSITORY[:TAG]]",
				}},
				Options: []model.Option{{
					Name:        []string{"-a", "--all"},
					Description: `Show all images (default hides intermediate images)`,
				}, {
					Name:        []string{"--digests"},
					Description: `Show digests`,
				}, {
					Name:        []string{"-f", "--filter"},
					Description: `Filter output based on conditions provided`,
					Args: []model.Arg{{
						Name: "filter",
					}},
				}, {
					Name:        []string{"--format"},
					Description: `Pretty-print images using a Go template`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--no-trunc"},
					Description: `Don't truncate output`,
				}, {
					Name:        []string{"-q", "--quiet"},
					Description: `Only show image IDs`,
				}},
			}, {
				Name:        []string{"prune"},
				Description: `Remove unused images`,
				Options: []model.Option{{
					Name:        []string{"-a", "--all"},
					Description: `Remove all unused images, not just dangling ones`,
				}, {
					Name:        []string{"--filter"},
					Description: `Provide filter values (e.g. 'until=<timestamp>')`,
					Args: []model.Arg{{
						Name: "filter",
					}},
				}, {
					Name:        []string{"-f", "--force"},
					Description: `Do not prompt for confirmation`,
				}},
			}, {
				Name:        []string{"pull"},
				Description: `Pull an image or a repository from a registry`,
				Args: []model.Arg{{
					Name:      "NAME[:TAG|@DIGEST]",
					Generator: nil, // TODO: port over generator
				}},
				Options: []model.Option{{
					Name:        []string{"-a", "--all-tags"},
					Description: `Download all tagged images in the repository`,
				}, {
					Name:        []string{"--disable-content-trust"},
					Description: `Skip image verification (default true)`,
				}, {
					Name:        []string{"--platform"},
					Description: `Set platform if server is multi-platform capable`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"-q", "--quiet"},
					Description: `Suppress verbose output`,
				}},
			}, {
				Name:        []string{"push"},
				Description: `Push an image or a repository to a registry`,
				Args: []model.Arg{{
					Name: "NAME[:TAG]",
				}},
				Options: []model.Option{{
					Name:        []string{"-a", "--all-tags"},
					Description: `Push all tagged images in the repository`,
				}, {
					Name:        []string{"--disable-content-trust"},
					Description: `Skip image signing (default true)`,
				}, {
					Name:        []string{"-q", "--quiet"},
					Description: `Suppress verbose output`,
				}},
			}, {
				Name:        []string{"rm"},
				Description: `Remove one or more images`,
				Args: []model.Arg{{
					Name:       "image",
					Generator:  nil, // TODO: port over generator
					IsVariadic: true,
				}},
				Options: []model.Option{{
					Name:        []string{"-f", "--force"},
					Description: `Force removal of the image`,
				}, {
					Name:        []string{"--no-prune"},
					Description: `Do not delete untagged parents`,
				}},
			}, {
				Name:        []string{"save"},
				Description: `Save one or more images to a tar archive (streamed to STDOUT by default)`,
				Args: []model.Arg{{
					Name:      "image",
					Generator: nil, // TODO: port over generator
				}},
				Options: []model.Option{{
					Name:        []string{"-o", "--output"},
					Description: `Write to a file, instead of STDOUT`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}},
			}, {
				Name:        []string{"tag"},
				Description: `Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE`,
				Args: []model.Arg{{
					Name: "SOURCE_IMAGE[:TAG] TARGET_IMAGE[:TAG]",
				}},
			}},
		}, {
			Name:        []string{"network"},
			Description: `Manage networks`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"connect"},
				Description: `Connect a container to a network`,
				Args: []model.Arg{{
					Name:      "NETWORK",
					Generator: nil, // TODO: port over generator
				}, {
					Name:      "container",
					Generator: nil, // TODO: port over generator
				}},
				Options: []model.Option{{
					Name:        []string{"--alias"},
					Description: `Add network-scoped alias for the container`,
					Args: []model.Arg{{
						Name: "strings",
					}},
				}, {
					Name:        []string{"--driver-opt"},
					Description: `Driver options for the network`,
					Args: []model.Arg{{
						Name: "strings",
					}},
				}, {
					Name:        []string{"--ip"},
					Description: `IPv4 address (e.g., 172.30.100.104)`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--ip6"},
					Description: `IPv6 address (e.g., 2001:db8::33)`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--link"},
					Description: `Add link to another container`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--link-local-ip"},
					Description: `Add a link-local address for the container`,
					Args: []model.Arg{{
						Name: "strings",
					}},
				}},
			}, {
				Name:        []string{"create"},
				Description: `Create a network`,
				Args: []model.Arg{{
					Name: "NETWORK",
				}},
				Options: []model.Option{{
					Name:        []string{"--attachable"},
					Description: `Enable manual container attachment`,
				}, {
					Name:        []string{"--aux-address"},
					Description: `Auxiliary IPv4 or IPv6 addresses used by Network driver (default map[])`,
					Args: []model.Arg{{
						Name: "map",
					}},
				}, {
					Name:        []string{"--config-from"},
					Description: `The network from which to copy the configuration`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--config-only"},
					Description: `Create a configuration only network`,
				}, {
					Name:        []string{"-d", "--driver"},
					Description: `Driver to manage the Network (default "bridge")`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--gateway"},
					Description: `IPv4 or IPv6 Gateway for the master subnet`,
					Args: []model.Arg{{
						Name: "strings",
					}},
				}, {
					Name:        []string{"--ingress"},
					Description: `Create swarm routing-mesh network`,
				}, {
					Name:        []string{"--internal"},
					Description: `Restrict external access to the network`,
				}, {
					Name:        []string{"--ip-range"},
					Description: `Allocate container ip from a sub-range`,
					Args: []model.Arg{{
						Name: "strings",
					}},
				}, {
					Name:        []string{"--ipam-driver"},
					Description: `IP Address Management Driver (default "default")`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--ipam-opt"},
					Description: `Set IPAM driver specific options (default map[])`,
					Args: []model.Arg{{
						Name: "map",
					}},
				}, {
					Name:        []string{"--ipv6"},
					Description: `Enable IPv6 networking`,
				}, {
					Name:        []string{"--label"},
					Description: `Set metadata on a network`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"-o", "--opt"},
					Description: `Set driver specific options (default map[])`,
					Args: []model.Arg{{
						Name: "map",
					}},
				}, {
					Name:        []string{"--scope"},
					Description: `Control the network's scope`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--subnet"},
					Description: `Subnet in CIDR format that represents a network segment`,
					Args: []model.Arg{{
						Name: "strings",
					}},
				}},
			}, {
				Name:        []string{"disconnect"},
				Description: `Disconnect a container from a network`,
				Args: []model.Arg{{
					Name:      "NETWORK",
					Generator: nil, // TODO: port over generator
				}, {
					Name:      "container",
					Generator: nil, // TODO: port over generator
				}},
				Options: []model.Option{{
					Name:        []string{"-f", "--force"},
					Description: `Force the container to disconnect from a network`,
				}},
			}, {
				Name:        []string{"inspect"},
				Description: `Display detailed information on one or more networks`,
				Args: []model.Arg{{
					Name:       "NETWORK",
					Generator:  nil, // TODO: port over generator
					IsVariadic: true,
				}},
				Options: []model.Option{{
					Name:        []string{"-f", "--format"},
					Description: `Format the output using the given Go template`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"-v", "--verbose"},
					Description: `Verbose output for diagnostics`,
				}},
			}, {
				Name:        []string{"ls"},
				Description: `List networks`,
				Options: []model.Option{{
					Name:        []string{"-f", "--filter"},
					Description: `Provide filter values (e.g. 'driver=bridge')`,
					Args: []model.Arg{{
						Name: "filter",
					}},
				}, {
					Name:        []string{"--format"},
					Description: `Pretty-print networks using a Go template`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--no-trunc"},
					Description: `Do not truncate the output`,
				}, {
					Name:        []string{"-q", "--quiet"},
					Description: `Only display network IDs`,
				}},
			}, {
				Name:        []string{"prune"},
				Description: `Remove all unused networks`,
				Options: []model.Option{{
					Name:        []string{"--filter"},
					Description: `Provide filter values (e.g. 'until=<timestamp>')`,
					Args: []model.Arg{{
						Name: "filter",
					}},
				}, {
					Name:        []string{"-f", "--force"},
					Description: `Do not prompt for confirmation`,
				}},
			}, {
				Name:        []string{"rm"},
				Description: `Remove one or more networks`,
				Args: []model.Arg{{
					Name:       "NETWORK",
					Generator:  nil, // TODO: port over generator
					IsVariadic: true,
				}},
			}},
		}, {
			Name:        []string{"node"},
			Description: `Manage Swarm nodes`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"demote"},
				Description: `Demote one or more nodes from manager in the swarm`,
				Args: []model.Arg{{
					Name:       "NODE",
					Generator:  nil, // TODO: port over generator
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"inspect"},
				Description: `Display detailed information on one or more nodes`,
				Args: []model.Arg{{
					Name:       "NODE",
					Generator:  nil, // TODO: port over generator
					IsVariadic: true,
				}},
				Options: []model.Option{{
					Name:        []string{"-f", "--format"},
					Description: `Format the output using the given Go template`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--pretty"},
					Description: `Print the information in a human friendly format`,
				}},
			}, {
				Name:        []string{"ls"},
				Description: `List nodes in the swarm`,
				Options: []model.Option{{
					Name:        []string{"-f", "--filter"},
					Description: `Filter output based on conditions provided`,
					Args: []model.Arg{{
						Name: "filter",
					}},
				}, {
					Name:        []string{"--format"},
					Description: `Pretty-print nodes using a Go template`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"-q", "--quiet"},
					Description: `Only display IDs`,
				}},
			}, {
				Name:        []string{"promote"},
				Description: `Promote one or more nodes to manager in the swarm`,
				Args: []model.Arg{{
					Name:       "NODE",
					Generator:  nil, // TODO: port over generator
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"ps"},
				Description: `List tasks running on one or more nodes, defaults to current node`,
				Args: []model.Arg{{
					Name:       "NODE",
					Generator:  nil, // TODO: port over generator
					IsVariadic: true,
				}},
				Options: []model.Option{{
					Name:        []string{"-f", "--filter"},
					Description: `Filter output based on conditions provided`,
					Args: []model.Arg{{
						Name: "filter",
					}},
				}, {
					Name:        []string{"--format"},
					Description: `Pretty-print tasks using a Go template`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--no-resolve"},
					Description: `Do not map IDs to Names`,
				}, {
					Name:        []string{"--no-trunc"},
					Description: `Do not truncate output`,
				}, {
					Name:        []string{"-q", "--quiet"},
					Description: `Only display task IDs`,
				}},
			}, {
				Name:        []string{"rm"},
				Description: `Remove one or more nodes from the swarm`,
				Args: []model.Arg{{
					Name:       "NODE",
					Generator:  nil, // TODO: port over generator
					IsVariadic: true,
				}},
				Options: []model.Option{{
					Name:        []string{"-f", "--force"},
					Description: `Force remove a node from the swarm`,
				}},
			}, {
				Name:        []string{"update"},
				Description: `Update a node`,
				Args: []model.Arg{{
					Name:       "NODE",
					Generator:  nil, // TODO: port over generator
					IsVariadic: true,
				}},
				Options: []model.Option{{
					Name:        []string{"--availability"},
					Description: `Availability of the node ("active"|"pause"|"drain")`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--label-add"},
					Description: `Add or update a node label (key=value)`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--label-rm"},
					Description: `Remove a node label if exists`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--role"},
					Description: `Role of the node ("worker"|"manager")`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}},
			}},
		}, {
			Name:        []string{"buildx"},
			Description: `Extended build capabilities with BuildKit`,
			Options: []model.Option{{
				Name:        []string{"--builder"},
				Description: `Override the configured builder instance`,
				Args: []model.Arg{{
					Name: "string",
				}},
				IsPersistent: true,
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"bake"},
				Description: `Bake is a high-level build command. Each specified target will run in parallel as part of the build`,
				Args: []model.Arg{{
					Name: "string",
				}},
				Options: []model.Option{{
					Name:        []string{"-f", "--file"},
					Description: `Build definition file`,
					Args: []model.Arg{{
						Name:       "string",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"--load"},
					Description: `Shorthand for --set=*.output=type=docker`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--metadata-file"},
					Description: `Write build result metadata to the file`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--no-cache"},
					Description: `Do not use cache when building the image`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--print"},
					Description: `Print the options without building`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--progress"},
					Description: `Set type of progress output (auto, plain, tty). Use plain to show container output`,
					Args: []model.Arg{{
						Name:        "progress",
						Suggestions: []model.Suggestion{{Name: []string{`auto`}}, {Name: []string{`plain`}}, {Name: []string{`tty`}}},
					}},
				}, {
					Name:        []string{"--pull"},
					Description: `Always attempt to pull all referenced images`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--push"},
					Description: `Shorthand for --set=*.output=type=registry`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--set"},
					Description: `Override target value (e.g., targetpattern.key=value)`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}},
			}, {
				Name:        []string{"build"},
				Description: `The buildx build command starts a build using BuildKit. This command is similar to the UI of docker build command and takes the same flags and arguments`,
				Args: []model.Arg{{
					Name: "string",
				}},
				Options: []model.Option{{
					Name:        []string{"--add-host"},
					Description: `Add a custom host-to-IP mapping`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--allow"},
					Description: `Allow extra privileged entitlement`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--build-arg"},
					Description: `Set build-time variables`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--build-context"},
					Description: `Additional build contexts`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--cache-from"},
					Description: `External cache sources`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--cache-to"},
					Description: `Cache export destinations`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--cgroup-parent"},
					Description: `Optional parent cgroup for the container`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--compress"},
					Description: `Compress the build context using gzip`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--cpu-period"},
					Description: `Limit the CPU CFS (Completely Fair Scheduler) period`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--cpu-quota"},
					Description: `Limit the CPU CFS (Completely Fair Scheduler) quota`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--cpu-shares", "-c"},
					Description: `CPU shares (relative weight)`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--cpuset-cpus"},
					Description: `CPUs in which to allow execution (0-3, 0,1)`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--cpuset-mems"},
					Description: `MEMs in which to allow execution (0-3, 0,1)`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--file", "-f"},
					Description: `Name of the Dockerfile`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--force-rm"},
					Description: `Always remove intermediate containers`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--iidfile"},
					Description: `Write the image ID to the file`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--invoke"},
					Description: `Invoke a command after the build [experimental]`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--isolation"},
					Description: `Container isolation technology`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--label"},
					Description: `Set metadata for an image`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--load"},
					Description: `Shorthand for --output=type=docker`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--memory", "-m"},
					Description: `Memory limit`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--memory-swap"},
					Description: `Swap limit equal to memory plus swap: -1 to enable unlimited swap`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--metadata-file"},
					Description: `Write build result metadata to the file`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--network"},
					Description: `Set the networking mode for the RUN instructions during build`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--no-cache"},
					Description: `Do not use cache when building the image`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--no-cache-filter"},
					Description: `Do not cache specified stages`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--output", "-o"},
					Description: `Output destination (format: type=local,dest=path)`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--platform"},
					Description: `Set target platform for build`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--print"},
					Description: `Print result of information request (e.g., outline, targets) [experimental]`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--progress"},
					Description: `Set type of progress output (auto, plain, tty). Use plain to show container output`,
					Args: []model.Arg{{
						Name:        "progress",
						Suggestions: []model.Suggestion{{Name: []string{`auto`}}, {Name: []string{`plain`}}, {Name: []string{`tty`}}},
					}},
				}, {
					Name:        []string{"--pull"},
					Description: `Always attempt to pull all referenced images`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--push"},
					Description: `Shorthand for --output=type=registry`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--quiet", "-q"},
					Description: `Suppress the build output and print image ID on success`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--rm"},
					Description: `Remove intermediate containers after a successful build`,
					Args: []model.Arg{{
						Name: "container",
					}},
				}, {
					Name:        []string{"--secret"},
					Description: `Secret to expose to the build (format: id=mysecret[,src=/local/secret])`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--security-opt"},
					Description: `Security options`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--shm-size"},
					Description: `Size of /dev/shm`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--squash"},
					Description: `Squash newly built layers into a single new layer`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--ssh"},
					Description: `SSH agent socket or keys to expose to the build (format: default|&lt;id&gt;[=&lt;socket&gt;|&lt;key&gt;[,&lt;key&gt;]])`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--tag", "-t"},
					Description: `Name and optionally a tag (format: name:tag)`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--target"},
					Description: `Set the target build stage to build`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--ulimit"},
					Description: `Ulimit options`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}},
			}, {
				Name:        []string{"create"},
				Description: `Create a new builder instance`,
				Args: []model.Arg{{
					Name: "string",
				}},
				Options: []model.Option{{
					Name:        []string{"--append"},
					Description: `Append a node to builder instead of changing it`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--bootstrap"},
					Description: `Boot builder after creation`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--buildkitd-flags"},
					Description: `Flags for buildkitd daemon`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--config"},
					Description: `BuildKit config file`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--driver"},
					Description: `Driver to use (available: docker-container, kubernetes, remote)`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--driver-opt"},
					Description: `Options for the driver`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--leave"},
					Description: `Remove a node from builder instead of changing it`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--name"},
					Description: `Builder instance name`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--node"},
					Description: `Create/modify node with given name`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--platform"},
					Description: `Fixed platforms for current node`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--use"},
					Description: `Set the current builder instance`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}},
			}, {
				Name:        []string{"du"},
				Description: `Disk usage`,
				Args: []model.Arg{{
					Name: "string",
				}},
				Options: []model.Option{{
					Name:        []string{"--filter"},
					Description: `Provide filter values`,
				}, {
					Name:        []string{"--verbose"},
					Description: `Provide a more verbose output`,
				}},
			}, {
				Name:        []string{"imagetools"},
				Description: `Imagetools contains commands for working with manifest lists in the registry. These commands are useful for inspecting multi-platform build results`,
				Args: []model.Arg{{
					Name: "string",
				}},
				Subcommands: []model.Subcommand{{
					Name:        []string{"create"},
					Description: `Create a new image based on source images`,
					Args: []model.Arg{{
						Name: "string",
					}},
					Options: []model.Option{{
						Name:        []string{"--append"},
						Description: `Append to existing manifest`,
						Args: []model.Arg{{
							Name: "string",
						}},
					}, {
						Name:        []string{"--dry-run"},
						Description: `Show final image instead of pushing`,
						Args: []model.Arg{{
							Name: "string",
						}},
					}, {
						Name:        []string{"--file", "-f"},
						Description: `Read source descriptor from file`,
						Args: []model.Arg{{
							Name: "string",
						}},
					}, {
						Name:        []string{"--progress"},
						Description: `Set type of progress output (auto, plain, tty). Use plain to show container output`,
						Args: []model.Arg{{
							Name:        "progress",
							Suggestions: []model.Suggestion{{Name: []string{`auto`}}, {Name: []string{`plain`}}, {Name: []string{`tty`}}},
						}},
					}, {
						Name:        []string{"--tag", "-t"},
						Description: `Set reference for new image`,
						Args: []model.Arg{{
							Name: "string",
						}},
					}},
				}, {
					Name:        []string{"inspect"},
					Description: `Inspect current builder instance`,
					Args: []model.Arg{{
						Name: "string",
					}},
					Options: []model.Option{{
						Name:        []string{"--format"},
						Description: `Format the output using the given Go template`,
						Args: []model.Arg{{
							Name: "sting",
						}},
					}, {
						Name:        []string{"--raw"},
						Description: `Show original, unformatted JSON manifest`,
					}},
				}},
			}, {
				Name:        []string{"inspect"},
				Description: `Inspect current builder instance`,
				Args: []model.Arg{{
					Name: "string",
				}},
				Options: []model.Option{{
					Name:        []string{"--bootstrap"},
					Description: `Ensure builder has booted before inspecting`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}},
			}, {
				Name:        []string{"install"},
				Description: `Install buildx as a ‘docker builder’ alias`,
			}, {
				Name:        []string{"ls"},
				Description: `List builder instances`,
			}, {
				Name:        []string{"prune"},
				Description: `Remove build cache`,
				Args: []model.Arg{{
					Name: "string",
				}},
				Options: []model.Option{{
					Name:        []string{"--all", "-a"},
					Description: `Include internal/frontend images`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--filter"},
					Description: `Provide filter values (e.g., until=24h)`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--force", "-f"},
					Description: `Do not prompt for confirmation`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--keep-storage"},
					Description: `Amount of disk space to keep for cache`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--verbose"},
					Description: `Provide a more verbose output`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}},
			}, {
				Name:        []string{"rm"},
				Description: `Remove a builder instance`,
				Args: []model.Arg{{
					Name: "string",
				}},
				Options: []model.Option{{
					Name:        []string{"--all-inactive"},
					Description: `Remove all inactive builders`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--force", "-f"},
					Description: `Do not prompt for confirmation`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--keep-daemon"},
					Description: `Keep the buildkitd daemon running`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--keep-state"},
					Description: `Keep BuildKit state`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}},
			}, {
				Name:        []string{"stop"},
				Description: `Stop builder instance`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"uninstall"},
				Description: `Uninstall the ‘docker builder’ alias`,
			}, {
				Name:        []string{"use"},
				Description: `Set the current builder instance`,
				Args: []model.Arg{{
					Name: "string",
				}},
				Options: []model.Option{{
					Name:        []string{"--default"},
					Description: `Set builder as default for current context`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--global"},
					Description: `Builder persists context changes`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}},
			}, {
				Name:        []string{"version"},
				Description: `Show buildx version information`,
			}},
		}, {
			Name:        []string{"plugin"},
			Description: `Manage plugins`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"create"},
				Description: `Create a plugin from a rootfs and configuration. Plugin data directory must contain config.json and rootfs directory`,
				Args: []model.Arg{{
					Name: "PLUGIN",
				}, {
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "PLUGIN-DATA-DIR",
				}},
				Options: []model.Option{{
					Name:        []string{"--compress"},
					Description: `Compress the context using gzip`,
				}},
			}, {
				Name:        []string{"disable"},
				Description: `Disable a plugin`,
				Args: []model.Arg{{
					Name:      "PLUGIN",
					Generator: nil, // TODO: port over generator
				}},
				Options: []model.Option{{
					Name:        []string{"-f", "--force"},
					Description: `Force the disable of an active plugin`,
				}},
			}, {
				Name:        []string{"enable"},
				Description: `Enable a plugin`,
				Args: []model.Arg{{
					Name:      "PLUGIN",
					Generator: nil, // TODO: port over generator
				}},
				Options: []model.Option{{
					Name:        []string{"--timeout"},
					Description: `HTTP client timeout (in seconds) (default 30)`,
					Args: []model.Arg{{
						Name: "int",
					}},
				}},
			}, {
				Name:        []string{"inspect"},
				Description: `Display detailed information on one or more plugins`,
				Args: []model.Arg{{
					Name:       "PLUGIN",
					Generator:  nil, // TODO: port over generator
					IsVariadic: true,
				}},
				Options: []model.Option{{
					Name:        []string{"-f", "--format"},
					Description: `Format the output using the given Go template`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}},
			}, {
				Name:        []string{"install"},
				Description: `Install a plugin`,
				Args: []model.Arg{{
					Name: "PLUGIN",
				}, {
					Name:       "KEY=VALUE",
					IsVariadic: true,
				}},
				Options: []model.Option{{
					Name:        []string{"--alias"},
					Description: `Local name for plugin`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--disable"},
					Description: `Do not enable the plugin on install`,
				}, {
					Name:        []string{"--disable-content-trust"},
					Description: `Skip image verification (default true)`,
				}, {
					Name:        []string{"--grant-all-permissions"},
					Description: `Grant all permissions necessary to run the plugin`,
				}},
			}, {
				Name:        []string{"ls"},
				Description: `List plugins`,
				Options: []model.Option{{
					Name:        []string{"-f", "--filter"},
					Description: `Provide filter values (e.g. 'enabled=true')`,
					Args: []model.Arg{{
						Name: "filter",
					}},
				}, {
					Name:        []string{"--format"},
					Description: `Pretty-print plugins using a Go template`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--no-trunc"},
					Description: `Don't truncate output`,
				}, {
					Name:        []string{"-q", "--quiet"},
					Description: `Only display plugin IDs`,
				}},
			}, {
				Name:        []string{"push"},
				Description: `Push a plugin to a registry`,
				Args: []model.Arg{{
					Name: "PLUGIN:[TAG]",
				}},
				Options: []model.Option{{
					Name:        []string{"--disable-content-trust"},
					Description: `Skip image signing (default true)`,
				}},
			}, {
				Name:        []string{"rm"},
				Description: `Remove one or more plugins`,
				Args: []model.Arg{{
					Name:       "PLUGIN",
					Generator:  nil, // TODO: port over generator
					IsVariadic: true,
				}},
				Options: []model.Option{{
					Name:        []string{"-f", "--force"},
					Description: `Force the removal of an active plugin`,
				}},
			}, {
				Name:        []string{"set"},
				Description: `Change settings for a plugin`,
				Args: []model.Arg{{
					Name:      "PLUGIN",
					Generator: nil, // TODO: port over generator
				}, {
					Name:       "KEY=VALUE",
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"upgrade"},
				Description: `Upgrade an existing plugin`,
				Args: []model.Arg{{
					Name:      "PLUGIN",
					Generator: nil, // TODO: port over generator
				}, {
					Name: "REMOTE",
				}},
				Options: []model.Option{{
					Name:        []string{"--disable-content-trust"},
					Description: `Skip image verification (default true)`,
				}, {
					Name:        []string{"--grant-all-permissions"},
					Description: `Grant all permissions necessary to run the plugin`,
				}, {
					Name:        []string{"--skip-remote-check"},
					Description: `Do not check if specified remote plugin matches existing plugin image`,
				}},
			}},
		}, {
			Name:        []string{"secret"},
			Description: `Manage Docker secrets`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"create"},
				Description: `Create a secret from a file or STDIN as content`,
				Args: []model.Arg{{
					Name: "SECRET NAME",
				}, {
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "SECRET",
				}},
				Options: []model.Option{{
					Name:        []string{"-d", "--driver"},
					Description: `Secret driver`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"-l", "--label"},
					Description: `Secret labels`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--template-driver"},
					Description: `Template driver`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}},
			}, {
				Name:        []string{"inspect"},
				Description: `Display detailed information on one or more secrets`,
				Args: []model.Arg{{
					Name:       "SECRET",
					Generator:  nil, // TODO: port over generator
					IsVariadic: true,
				}},
				Options: []model.Option{{
					Name:        []string{"-f", "--format"},
					Description: `Format the output using the given Go template`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--pretty"},
					Description: `Print the information in a human friendly format`,
				}},
			}, {
				Name:        []string{"ls"},
				Description: `List secrets`,
				Options: []model.Option{{
					Name:        []string{"-f", "--filter"},
					Description: `Filter output based on conditions provided`,
					Args: []model.Arg{{
						Name: "filter",
					}},
				}, {
					Name:        []string{"--format"},
					Description: `Pretty-print secrets using a Go template`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"-q", "--quiet"},
					Description: `Only display IDs`,
				}},
			}, {
				Name:        []string{"rm"},
				Description: `Remove one or more secrets`,
				Args: []model.Arg{{
					Name:       "SECRET",
					Generator:  nil, // TODO: port over generator
					IsVariadic: true,
				}},
			}},
		}, {
			Name:        []string{"service"},
			Description: `Manage services`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"create"},
				Description: `Create a new service`,
				Args: []model.Arg{{
					Name:      "image",
					Generator: nil, // TODO: port over generator
				}, {
					Name:       "COMMAND",
					IsOptional: true,
					IsCommand:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"--cap-add"},
					Description: `Add Linux capabilities`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--cap-drop"},
					Description: `Drop Linux capabilities`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--config"},
					Description: `Specify configurations to expose to the service`,
					Args: []model.Arg{{
						Name: "config",
					}},
				}, {
					Name:        []string{"--constraint"},
					Description: `Placement constraints`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--container-label"},
					Description: `Container labels`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--credential-spec"},
					Description: `Credential spec for managed service account (Windows only)`,
					Args: []model.Arg{{
						Name: "credential-spec",
					}},
				}, {
					Name:        []string{"-d", "--detach"},
					Description: `Exit immediately instead of waiting for the service to converge`,
				}, {
					Name:        []string{"--dns"},
					Description: `Set custom DNS servers`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--dns-option"},
					Description: `Set DNS options`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--dns-search"},
					Description: `Set custom DNS search domains`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--endpoint-mode"},
					Description: `Endpoint mode (vip or dnsrr) (default "vip")`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--entrypoint"},
					Description: `Overwrite the default ENTRYPOINT of the image`,
					Args: []model.Arg{{
						Name: "command",
					}},
				}, {
					Name:        []string{"-e", "--env"},
					Description: `Set environment variables`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--env-file"},
					Description: `Read in a file of environment variables`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--generic-resource"},
					Description: `User defined resources`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--group"},
					Description: `Set one or more supplementary user groups for the container`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--health-cmd"},
					Description: `Command to run to check health`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--health-interval"},
					Description: `Time between running the check (ms|s|m|h)`,
					Args: []model.Arg{{
						Name: "duration",
					}},
				}, {
					Name:        []string{"--health-retries"},
					Description: `Consecutive failures needed to report unhealthy`,
					Args: []model.Arg{{
						Name: "int",
					}},
				}, {
					Name:        []string{"--health-start-period"},
					Description: `Start period for the container to initialize before counting retries towards unstable (ms|s|m|h)`,
					Args: []model.Arg{{
						Name: "duration",
					}},
				}, {
					Name:        []string{"--health-timeout"},
					Description: `Maximum time to allow one check to run (ms|s|m|h)`,
					Args: []model.Arg{{
						Name: "duration",
					}},
				}, {
					Name:        []string{"--host"},
					Description: `Set one or more custom host-to-IP mappings (host:ip)`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--hostname"},
					Description: `Container hostname`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--init"},
					Description: `Use an init inside each service container to forward signals and reap processes`,
				}, {
					Name:        []string{"--isolation"},
					Description: `Service container isolation mode`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"-l", "--label"},
					Description: `Service labels`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--limit-cpu"},
					Description: `Limit CPUs`,
					Args: []model.Arg{{
						Name: "decimal",
					}},
				}, {
					Name:        []string{"--limit-memory"},
					Description: `Limit Memory`,
					Args: []model.Arg{{
						Name: "bytes",
					}},
				}, {
					Name:        []string{"--limit-pids"},
					Description: `Limit maximum number of processes (default 0 = unlimited)`,
					Args: []model.Arg{{
						Name: "int",
					}},
				}, {
					Name:        []string{"--log-driver"},
					Description: `Logging driver for service`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--log-opt"},
					Description: `Logging driver options`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--max-concurrent"},
					Description: `Number of job tasks to run concurrently (default equal to --replicas)`,
					Args: []model.Arg{{
						Name: "uint",
					}},
				}, {
					Name:        []string{"--mode"},
					Description: `Service mode (replicated, global, replicated-job, or global-job) (default "replicated")`,
					Args: []model.Arg{{
						Name:        "string",
						Suggestions: []model.Suggestion{{Name: []string{`replicated`}}, {Name: []string{`global`}}, {Name: []string{`replicated-job`}}, {Name: []string{`global-job`}}},
					}},
				}, {
					Name:        []string{"--mount"},
					Description: `Attach a filesystem mount to the service`,
					Args: []model.Arg{{
						Name: "mount",
					}},
				}, {
					Name:        []string{"--name"},
					Description: `Service name`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--network"},
					Description: `Network attachments`,
					Args: []model.Arg{{
						Name: "network",
					}},
				}, {
					Name:        []string{"--no-healthcheck"},
					Description: `Disable any container-specified HEALTHCHECK`,
				}, {
					Name:        []string{"--no-resolve-image"},
					Description: `Do not query the registry to resolve image digest and supported platforms`,
				}, {
					Name:        []string{"--placement-pref"},
					Description: `Add a placement preference`,
					Args: []model.Arg{{
						Name: "pref",
					}},
				}, {
					Name:        []string{"-p", "--publish"},
					Description: `Publish a port as a node port`,
					Args: []model.Arg{{
						Name: "port",
					}},
				}, {
					Name:        []string{"-q", "--quiet"},
					Description: `Suppress progress output`,
				}, {
					Name:        []string{"--read-only"},
					Description: `Mount the container's root filesystem as read only`,
				}, {
					Name:        []string{"--replicas"},
					Description: `Number of tasks`,
					Args: []model.Arg{{
						Name: "uint",
					}},
				}, {
					Name:        []string{"--replicas-max-per-node"},
					Description: `Maximum number of tasks per node (default 0 = unlimited)`,
					Args: []model.Arg{{
						Name: "uint",
					}},
				}, {
					Name:        []string{"--reserve-cpu"},
					Description: `Reserve CPUs`,
					Args: []model.Arg{{
						Name: "decimal",
					}},
				}, {
					Name:        []string{"--reserve-memory"},
					Description: `Reserve Memory`,
					Args: []model.Arg{{
						Name: "bytes",
					}},
				}, {
					Name:        []string{"--restart-condition"},
					Description: `Restart when condition is met ("none"|"on-failure"|"any") (default "any")`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--restart-delay"},
					Description: `Delay between restart attempts (ns|us|ms|s|m|h) (default 5s)`,
					Args: []model.Arg{{
						Name: "duration",
					}},
				}, {
					Name:        []string{"--restart-max-attempts"},
					Description: `Maximum number of restarts before giving up`,
					Args: []model.Arg{{
						Name: "uint",
					}},
				}, {
					Name:        []string{"--restart-window"},
					Description: `Window used to evaluate the restart policy (ns|us|ms|s|m|h)`,
					Args: []model.Arg{{
						Name: "duration",
					}},
				}, {
					Name:        []string{"--rollback-delay"},
					Description: `Delay between task rollbacks (ns|us|ms|s|m|h) (default 0s)`,
					Args: []model.Arg{{
						Name: "duration",
					}},
				}, {
					Name:        []string{"--rollback-failure-action"},
					Description: `Action on rollback failure ("pause"|"continue") (default "pause")`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--rollback-max-failure-ratio"},
					Description: `Failure rate to tolerate during a rollback (default 0)`,
					Args: []model.Arg{{
						Name: "float",
					}},
				}, {
					Name:        []string{"--rollback-monitor"},
					Description: `Duration after each task rollback to monitor for failure (ns|us|ms|s|m|h) (default 5s)`,
					Args: []model.Arg{{
						Name: "duration",
					}},
				}, {
					Name:        []string{"--rollback-order"},
					Description: `Rollback order ("start-first"|"stop-first") (default "stop-first")`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--rollback-parallelism"},
					Description: `Maximum number of tasks rolled back simultaneously (0 to roll back all at once) (default 1)`,
					Args: []model.Arg{{
						Name: "uint",
					}},
				}, {
					Name:        []string{"--secret"},
					Description: `Specify secrets to expose to the service`,
					Args: []model.Arg{{
						Name: "secret",
					}},
				}, {
					Name:        []string{"--stop-grace-period"},
					Description: `Time to wait before force killing a container (ns|us|ms|s|m|h) (default 10s)`,
					Args: []model.Arg{{
						Name: "duration",
					}},
				}, {
					Name:        []string{"--stop-signal"},
					Description: `Signal to stop the container`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--sysctl"},
					Description: `Sysctl options`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"-t", "--tty"},
					Description: `Allocate a pseudo-TTY`,
				}, {
					Name:        []string{"--ulimit"},
					Description: `Ulimit options (default [])`,
					Args: []model.Arg{{
						Name: "ulimit",
					}},
				}, {
					Name:        []string{"--update-delay"},
					Description: `Delay between updates (ns|us|ms|s|m|h) (default 0s)`,
					Args: []model.Arg{{
						Name: "duration",
					}},
				}, {
					Name:        []string{"--update-failure-action"},
					Description: `Action on update failure ("pause"|"continue"|"rollback") (default "pause")`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--update-max-failure-ratio"},
					Description: `Failure rate to tolerate during an update (default 0)`,
					Args: []model.Arg{{
						Name: "float",
					}},
				}, {
					Name:        []string{"--update-monitor"},
					Description: `Duration after each task update to monitor for failure (ns|us|ms|s|m|h) (default 5s)`,
					Args: []model.Arg{{
						Name: "duration",
					}},
				}, {
					Name:        []string{"--update-order"},
					Description: `Update order ("start-first"|"stop-first") (default "stop-first")`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--update-parallelism"},
					Description: `Maximum number of tasks updated simultaneously (0 to update all at once) (default 1)`,
					Args: []model.Arg{{
						Name: "uint",
					}},
				}, {
					Name:        []string{"-u", "--user"},
					Description: `Username or UID (format: <name|uid>[:<group|gid>])`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--with-registry-auth"},
					Description: `Send registry authentication details to swarm agents`,
				}, {
					Name:        []string{"-w", "--workdir"},
					Description: `Working directory inside the container`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}},
			}, {
				Name:        []string{"inspect"},
				Description: `Display detailed information on one or more services`,
				Args: []model.Arg{{
					Name:       "SERVICE",
					Generator:  nil, // TODO: port over generator
					IsVariadic: true,
				}},
				Options: []model.Option{{
					Name:        []string{"-f", "--format"},
					Description: `Format the output using the given Go template`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--pretty"},
					Description: `Print the information in a human friendly format`,
				}},
			}, {
				Name:        []string{"logs"},
				Description: `Fetch the logs of a service or task`,
				Args: []model.Arg{{
					Name:      "SERVICE OR TASK",
					Generator: nil, // TODO: port over generator
				}},
				Options: []model.Option{{
					Name:        []string{"--details"},
					Description: `Show extra details provided to logs`,
				}, {
					Name:        []string{"-f", "--follow"},
					Description: `Follow log output`,
				}, {
					Name:        []string{"--no-resolve"},
					Description: `Do not map IDs to Names in output`,
				}, {
					Name:        []string{"--no-task-ids"},
					Description: `Do not include task IDs in output`,
				}, {
					Name:        []string{"--no-trunc"},
					Description: `Do not truncate output`,
				}, {
					Name:        []string{"--raw"},
					Description: `Do not neatly format logs`,
				}, {
					Name:        []string{"--since"},
					Description: `Show logs since timestamp (e.g. 2013-01-02T13:23:37Z) or relative (e.g. 42m for 42 minutes)`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"-n", "--tail"},
					Description: `Number of lines to show from the end of the logs (default "all")`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"-t", "--timestamps"},
					Description: `Show timestamps`,
				}},
			}, {
				Name:        []string{"ls"},
				Description: `List services`,
				Options: []model.Option{{
					Name:        []string{"-f", "--filter"},
					Description: `Filter output based on conditions provided`,
					Args: []model.Arg{{
						Name: "filter",
					}},
				}, {
					Name:        []string{"--format"},
					Description: `Pretty-print services using a Go template`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"-q", "--quiet"},
					Description: `Only display IDs`,
				}},
			}, {
				Name:        []string{"ps"},
				Description: `List the tasks of one or more services`,
				Args: []model.Arg{{
					Name:       "SERVICE",
					Generator:  nil, // TODO: port over generator
					IsVariadic: true,
				}},
				Options: []model.Option{{
					Name:        []string{"-f", "--filter"},
					Description: `Filter output based on conditions provided`,
					Args: []model.Arg{{
						Name: "filter",
					}},
				}, {
					Name:        []string{"--format"},
					Description: `Pretty-print tasks using a Go template`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--no-resolve"},
					Description: `Do not map IDs to Names`,
				}, {
					Name:        []string{"--no-trunc"},
					Description: `Do not truncate output`,
				}, {
					Name:        []string{"-q", "--quiet"},
					Description: `Only display task IDs`,
				}},
			}, {
				Name:        []string{"rm"},
				Description: `Remove one or more services`,
				Args: []model.Arg{{
					Name:       "SERVICE",
					Generator:  nil, // TODO: port over generator
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"rollback"},
				Description: `Revert changes to a service's configuration`,
				Args: []model.Arg{{
					Name:      "SERVICE",
					Generator: nil, // TODO: port over generator
				}},
				Options: []model.Option{{
					Name:        []string{"-d", "--detach"},
					Description: `Exit immediately instead of waiting for the service to converge`,
				}, {
					Name:        []string{"-q", "--quiet"},
					Description: `Suppress progress output`,
				}},
			}, {
				Name:        []string{"scale"},
				Description: `Scale one or multiple replicated services`,
				Args: []model.Arg{{
					Name:       "SERVICE=REPLICAS",
					Generator:  nil, // TODO: port over generator
					IsVariadic: true,
				}},
				Options: []model.Option{{
					Name:        []string{"-d", "--detach"},
					Description: `Exit immediately instead of waiting for the service to converge`,
				}},
			}, {
				Name:        []string{"update"},
				Description: `Update a service`,
				Args: []model.Arg{{
					Name:      "SERVICE",
					Generator: nil, // TODO: port over generator
				}},
				Options: []model.Option{{
					Name:        []string{"--args"},
					Description: `Service command args`,
					Args: []model.Arg{{
						Name: "command",
					}},
				}, {
					Name:        []string{"--cap-add"},
					Description: `Add Linux capabilities`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--cap-drop"},
					Description: `Drop Linux capabilities`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--config-add"},
					Description: `Add or update a config file on a service`,
					Args: []model.Arg{{
						Name: "config",
					}},
				}, {
					Name:        []string{"--config-rm"},
					Description: `Remove a configuration file`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--constraint-add"},
					Description: `Add or update a placement constraint`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--constraint-rm"},
					Description: `Remove a constraint`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--container-label-add"},
					Description: `Add or update a container label`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--container-label-rm"},
					Description: `Remove a container label by its key`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--credential-spec"},
					Description: `Credential spec for managed service account (Windows only)`,
					Args: []model.Arg{{
						Name: "credential-spec",
					}},
				}, {
					Name:        []string{"-d", "--detach"},
					Description: `Exit immediately instead of waiting for the service to converge`,
				}, {
					Name:        []string{"--dns-add"},
					Description: `Add or update a custom DNS server`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--dns-option-add"},
					Description: `Add or update a DNS option`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--dns-option-rm"},
					Description: `Remove a DNS option`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--dns-rm"},
					Description: `Remove a custom DNS server`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--dns-search-add"},
					Description: `Add or update a custom DNS search domain`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--dns-search-rm"},
					Description: `Remove a DNS search domain`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--endpoint-mode"},
					Description: `Endpoint mode (vip or dnsrr)`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--entrypoint"},
					Description: `Overwrite the default ENTRYPOINT of the image`,
					Args: []model.Arg{{
						Name: "command",
					}},
				}, {
					Name:        []string{"--env-add"},
					Description: `Add or update an environment variable`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--env-rm"},
					Description: `Remove an environment variable`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--force"},
					Description: `Force update even if no changes require it`,
				}, {
					Name:        []string{"--generic-resource-add"},
					Description: `Add a Generic resource`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--generic-resource-rm"},
					Description: `Remove a Generic resource`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--group-add"},
					Description: `Add an additional supplementary user group to the container`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--group-rm"},
					Description: `Remove a previously added supplementary user group from the container`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--health-cmd"},
					Description: `Command to run to check health`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--health-interval"},
					Description: `Time between running the check (ms|s|m|h)`,
					Args: []model.Arg{{
						Name: "duration",
					}},
				}, {
					Name:        []string{"--health-retries"},
					Description: `Consecutive failures needed to report unhealthy`,
					Args: []model.Arg{{
						Name: "int",
					}},
				}, {
					Name:        []string{"--health-start-period"},
					Description: `Start period for the container to initialize before counting retries towards unstable (ms|s|m|h)`,
					Args: []model.Arg{{
						Name: "duration",
					}},
				}, {
					Name:        []string{"--health-timeout"},
					Description: `Maximum time to allow one check to run (ms|s|m|h)`,
					Args: []model.Arg{{
						Name: "duration",
					}},
				}, {
					Name:        []string{"--host-add"},
					Description: `Add a custom host-to-IP mapping (host:ip)`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--host-rm"},
					Description: `Remove a custom host-to-IP mapping (host:ip)`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--hostname"},
					Description: `Container hostname`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--image"},
					Description: `Service image tag`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--init"},
					Description: `Use an init inside each service container to forward signals and reap processes`,
				}, {
					Name:        []string{"--isolation"},
					Description: `Service container isolation mode`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--label-add"},
					Description: `Add or update a service label`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--label-rm"},
					Description: `Remove a label by its key`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--limit-cpu"},
					Description: `Limit CPUs`,
					Args: []model.Arg{{
						Name: "decimal",
					}},
				}, {
					Name:        []string{"--limit-memory"},
					Description: `Limit Memory`,
					Args: []model.Arg{{
						Name: "bytes",
					}},
				}, {
					Name:        []string{"--limit-pids"},
					Description: `Limit maximum number of processes (default 0 = unlimited)`,
					Args: []model.Arg{{
						Name: "int",
					}},
				}, {
					Name:        []string{"--log-driver"},
					Description: `Logging driver for service`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--log-opt"},
					Description: `Logging driver options`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--max-concurrent"},
					Description: `Number of job tasks to run concurrently (default equal to --replicas)`,
					Args: []model.Arg{{
						Name: "uint",
					}},
				}, {
					Name:        []string{"--mount-add"},
					Description: `Add or update a mount on a service`,
					Args: []model.Arg{{
						Name: "mount",
					}},
				}, {
					Name:        []string{"--mount-rm"},
					Description: `Remove a mount by its target path`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--network-add"},
					Description: `Add a network`,
					Args: []model.Arg{{
						Name: "network",
					}},
				}, {
					Name:        []string{"--network-rm"},
					Description: `Remove a network`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--no-healthcheck"},
					Description: `Disable any container-specified HEALTHCHECK`,
				}, {
					Name:        []string{"--no-resolve-image"},
					Description: `Do not query the registry to resolve image digest and supported platforms`,
				}, {
					Name:        []string{"--placement-pref-add"},
					Description: `Add a placement preference`,
					Args: []model.Arg{{
						Name: "pref",
					}},
				}, {
					Name:        []string{"--placement-pref-rm"},
					Description: `Remove a placement preference`,
					Args: []model.Arg{{
						Name: "pref",
					}},
				}, {
					Name:        []string{"--publish-add"},
					Description: `Add or update a published port`,
					Args: []model.Arg{{
						Name: "port",
					}},
				}, {
					Name:        []string{"--publish-rm"},
					Description: `Remove a published port by its target port`,
					Args: []model.Arg{{
						Name: "port",
					}},
				}, {
					Name:        []string{"-q", "--quiet"},
					Description: `Suppress progress output`,
				}, {
					Name:        []string{"--read-only"},
					Description: `Mount the container's root filesystem as read only`,
				}, {
					Name:        []string{"--replicas"},
					Description: `Number of tasks`,
					Args: []model.Arg{{
						Name: "uint",
					}},
				}, {
					Name:        []string{"--replicas-max-per-node"},
					Description: `Maximum number of tasks per node (default 0 = unlimited)`,
					Args: []model.Arg{{
						Name: "uint",
					}},
				}, {
					Name:        []string{"--reserve-cpu"},
					Description: `Reserve CPUs`,
					Args: []model.Arg{{
						Name: "decimal",
					}},
				}, {
					Name:        []string{"--reserve-memory"},
					Description: `Reserve Memory`,
					Args: []model.Arg{{
						Name: "bytes",
					}},
				}, {
					Name:        []string{"--restart-condition"},
					Description: `Restart when condition is met ("none"|"on-failure"|"any")`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--restart-delay"},
					Description: `Delay between restart attempts (ns|us|ms|s|m|h)`,
					Args: []model.Arg{{
						Name: "duration",
					}},
				}, {
					Name:        []string{"--restart-max-attempts"},
					Description: `Maximum number of restarts before giving up`,
					Args: []model.Arg{{
						Name: "uint",
					}},
				}, {
					Name:        []string{"--restart-window"},
					Description: `Window used to evaluate the restart policy (ns|us|ms|s|m|h)`,
					Args: []model.Arg{{
						Name: "duration",
					}},
				}, {
					Name:        []string{"--rollback"},
					Description: `Rollback to previous specification`,
				}, {
					Name:        []string{"--rollback-delay"},
					Description: `Delay between task rollbacks (ns|us|ms|s|m|h)`,
					Args: []model.Arg{{
						Name: "duration",
					}},
				}, {
					Name:        []string{"--rollback-failure-action"},
					Description: `Action on rollback failure ("pause"|"continue")`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--rollback-max-failure-ratio"},
					Description: `Failure rate to tolerate during a rollback`,
					Args: []model.Arg{{
						Name: "float",
					}},
				}, {
					Name:        []string{"--rollback-monitor"},
					Description: `Duration after each task rollback to monitor for failure (ns|us|ms|s|m|h)`,
					Args: []model.Arg{{
						Name: "duration",
					}},
				}, {
					Name:        []string{"--rollback-order"},
					Description: `Rollback order ("start-first"|"stop-first")`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--rollback-parallelism"},
					Description: `Maximum number of tasks rolled back simultaneously (0 to roll back all at once)`,
					Args: []model.Arg{{
						Name: "uint",
					}},
				}, {
					Name:        []string{"--secret-add"},
					Description: `Add or update a secret on a service`,
					Args: []model.Arg{{
						Name: "secret",
					}},
				}, {
					Name:        []string{"--secret-rm"},
					Description: `Remove a secret`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--stop-grace-period"},
					Description: `Time to wait before force killing a container (ns|us|ms|s|m|h)`,
					Args: []model.Arg{{
						Name: "duration",
					}},
				}, {
					Name:        []string{"--stop-signal"},
					Description: `Signal to stop the container`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--sysctl-add"},
					Description: `Add or update a Sysctl option`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--sysctl-rm"},
					Description: `Remove a Sysctl option`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"-t", "--tty"},
					Description: `Allocate a pseudo-TTY`,
				}, {
					Name:        []string{"--ulimit-add"},
					Description: `Add or update a ulimit option (default [])`,
					Args: []model.Arg{{
						Name: "ulimit",
					}},
				}, {
					Name:        []string{"--ulimit-rm"},
					Description: `Remove a ulimit option`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"--update-delay"},
					Description: `Delay between updates (ns|us|ms|s|m|h)`,
					Args: []model.Arg{{
						Name: "duration",
					}},
				}, {
					Name:        []string{"--update-failure-action"},
					Description: `Action on update failure ("pause"|"continue"|"rollback")`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--update-max-failure-ratio"},
					Description: `Failure rate to tolerate during an update`,
					Args: []model.Arg{{
						Name: "float",
					}},
				}, {
					Name:        []string{"--update-monitor"},
					Description: `Duration after each task update to monitor for failure (ns|us|ms|s|m|h)`,
					Args: []model.Arg{{
						Name: "duration",
					}},
				}, {
					Name:        []string{"--update-order"},
					Description: `Update order ("start-first"|"stop-first")`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--update-parallelism"},
					Description: `Maximum number of tasks updated simultaneously (0 to update all at once)`,
					Args: []model.Arg{{
						Name: "uint",
					}},
				}, {
					Name:        []string{"-u", "--user"},
					Description: `Username or UID (format: <name|uid>[:<group|gid>])`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--with-registry-auth"},
					Description: `Send registry authentication details to swarm agents`,
				}, {
					Name:        []string{"-w", "--workdir"},
					Description: `Working directory inside the container`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}},
			}},
		}, {
			Name:        []string{"stack"},
			Description: `Manage Docker stacks`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"deploy"},
				Description: `Deploy a new stack or update an existing stack`,
				Args: []model.Arg{{
					Name: "STACK",
				}},
				Options: []model.Option{{
					Name:        []string{"-c", "--compose-file"},
					Description: `Path to a Compose file, or "-" to read from stdin`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "strings",
					}},
				}, {
					Name:        []string{"--orchestrator"},
					Description: `Orchestrator to use (swarm|kubernetes|all)`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--prune"},
					Description: `Prune services that are no longer referenced`,
				}, {
					Name:        []string{"--resolve-image"},
					Description: `Query the registry to resolve image digest and supported platforms ("always"|"changed"|"never") (default "always")`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--with-registry-auth"},
					Description: `Send registry authentication details to Swarm agents`,
				}},
			}, {
				Name:        []string{"ls"},
				Description: `List stacks`,
				Options: []model.Option{{
					Name:        []string{"--format"},
					Description: `Pretty-print stacks using a Go template`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--orchestrator"},
					Description: `Orchestrator to use (swarm|kubernetes|all)`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}},
			}, {
				Name:        []string{"ps"},
				Description: `List the tasks in the stack`,
				Args: []model.Arg{{
					Name:      "STACK",
					Generator: nil, // TODO: port over generator
				}},
				Options: []model.Option{{
					Name:        []string{"-f", "--filter"},
					Description: `Filter output based on conditions provided`,
					Args: []model.Arg{{
						Name: "filter",
					}},
				}, {
					Name:        []string{"--format"},
					Description: `Pretty-print tasks using a Go template`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--no-resolve"},
					Description: `Do not map IDs to Names`,
				}, {
					Name:        []string{"--no-trunc"},
					Description: `Do not truncate output`,
				}, {
					Name:        []string{"--orchestrator"},
					Description: `Orchestrator to use (swarm|kubernetes|all)`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"-q", "--quiet"},
					Description: `Only display task IDs`,
				}},
			}, {
				Name:        []string{"rm"},
				Description: `Remove one or more stacks`,
				Args: []model.Arg{{
					Name:       "STACK",
					Generator:  nil, // TODO: port over generator
					IsVariadic: true,
				}},
				Options: []model.Option{{
					Name:        []string{"--orchestrator"},
					Description: `Orchestrator to use (swarm|kubernetes|all)`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}},
			}, {
				Name:        []string{"services"},
				Description: `List the services in the stack`,
				Args: []model.Arg{{
					Name:      "STACK",
					Generator: nil, // TODO: port over generator
				}},
				Options: []model.Option{{
					Name:        []string{"-f", "--filter"},
					Description: `Filter output based on conditions provided`,
					Args: []model.Arg{{
						Name: "filter",
					}},
				}, {
					Name:        []string{"--format"},
					Description: `Pretty-print services using a Go template`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--orchestrator"},
					Description: `Orchestrator to use (swarm|kubernetes|all)`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"-q", "--quiet"},
					Description: `Only display IDs`,
				}},
			}},
		}, {
			Name:        []string{"swarm"},
			Description: `Manage Swarm`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"ca"},
				Description: `Display and rotate the root CA`,
				Options: []model.Option{{
					Name:        []string{"--ca-cert"},
					Description: `Path to the PEM-formatted root CA certificate to use for the new cluster`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "pem-file",
					}},
				}, {
					Name:        []string{"--ca-key"},
					Description: `Path to the PEM-formatted root CA key to use for the new cluster`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "pem-file",
					}},
				}, {
					Name:        []string{"--cert-expiry"},
					Description: `Validity period for node certificates (ns|us|ms|s|m|h) (default 2160h0m0s)`,
					Args: []model.Arg{{
						Name: "duration",
					}},
				}, {
					Name:        []string{"-d", "--detach"},
					Description: `Exit immediately instead of waiting for the root rotation to converge`,
				}, {
					Name:        []string{"--external-ca"},
					Description: `Specifications of one or more certificate signing endpoints`,
					Args: []model.Arg{{
						Name: "external-ca",
					}},
				}, {
					Name:        []string{"-q", "--quiet"},
					Description: `Suppress progress output`,
				}, {
					Name:        []string{"--rotate"},
					Description: `Rotate the swarm CA - if no certificate or key are provided, new ones will be generated`,
				}},
			}, {
				Name:        []string{"init"},
				Description: `Initialize a swarm`,
				Options: []model.Option{{
					Name:        []string{"--advertise-addr"},
					Description: `Advertised address (format: <ip|interface>[:port])`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--autolock"},
					Description: `Enable manager autolocking (requiring an unlock key to start a stopped manager)`,
				}, {
					Name:        []string{"--availability"},
					Description: `Availability of the node ("active"|"pause"|"drain") (default "active")`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--cert-expiry"},
					Description: `Validity period for node certificates (ns|us|ms|s|m|h) (default 2160h0m0s)`,
					Args: []model.Arg{{
						Name: "duration",
					}},
				}, {
					Name:        []string{"--data-path-addr"},
					Description: `Address or interface to use for data path traffic (format: <ip|interface>)`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--data-path-port"},
					Description: `Port number to use for data path traffic (1024 - 49151). If no value is set or is set to 0, the default port (4789) is used`,
					Args: []model.Arg{{
						Name: "uint32",
					}},
				}, {
					Name:        []string{"--default-addr-pool"},
					Description: `Default address pool in CIDR format (default [])`,
					Args: []model.Arg{{
						Name: "ipNetSlice",
					}},
				}, {
					Name:        []string{"--default-addr-pool-mask-length"},
					Description: `Default address pool subnet mask length (default 24)`,
					Args: []model.Arg{{
						Name: "uint32",
					}},
				}, {
					Name:        []string{"--dispatcher-heartbeat"},
					Description: `Dispatcher heartbeat period (ns|us|ms|s|m|h) (default 5s)`,
					Args: []model.Arg{{
						Name: "duration",
					}},
				}, {
					Name:        []string{"--external-ca"},
					Description: `Specifications of one or more certificate signing endpoints`,
					Args: []model.Arg{{
						Name: "external-ca",
					}},
				}, {
					Name:        []string{"--force-new-cluster"},
					Description: `Force create a new cluster from current state`,
				}, {
					Name:        []string{"--listen-addr"},
					Description: `Listen address (format: <ip|interface>[:port]) (default 0.0.0.0:2377)`,
					Args: []model.Arg{{
						Name: "node-addr",
					}},
				}, {
					Name:        []string{"--max-snapshots"},
					Description: `Number of additional Raft snapshots to retain`,
					Args: []model.Arg{{
						Name: "uint",
					}},
				}, {
					Name:        []string{"--snapshot-interval"},
					Description: `Number of log entries between Raft snapshots (default 10000)`,
					Args: []model.Arg{{
						Name: "uint",
					}},
				}, {
					Name:        []string{"--task-history-limit"},
					Description: `Task history retention limit (default 5)`,
					Args: []model.Arg{{
						Name: "int",
					}},
				}},
			}, {
				Name:        []string{"join"},
				Description: `Join a swarm as a node and/or manager`,
				Args: []model.Arg{{
					Name: "HOST:PORT",
				}},
				Options: []model.Option{{
					Name:        []string{"--advertise-addr"},
					Description: `Advertised address (format: <ip|interface>[:port])`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--availability"},
					Description: `Availability of the node ("active"|"pause"|"drain") (default "active")`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--data-path-addr"},
					Description: `Address or interface to use for data path traffic (format: <ip|interface>)`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--listen-addr"},
					Description: `Listen address (format: <ip|interface>[:port]) (default 0.0.0.0:2377)`,
					Args: []model.Arg{{
						Name: "node-addr",
					}},
				}, {
					Name:        []string{"--token"},
					Description: `Token for entry into the swarm`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}},
			}, {
				Name:        []string{"join-token"},
				Description: `Manage join tokens`,
				Args: []model.Arg{{
					Name:        "worker or manager",
					Suggestions: []model.Suggestion{{Name: []string{`worker`}}, {Name: []string{`manager`}}},
				}},
				Options: []model.Option{{
					Name:        []string{"-q", "--quiet"},
					Description: `Only display token`,
				}, {
					Name:        []string{"--rotate"},
					Description: `Rotate join token`,
				}},
			}, {
				Name:        []string{"leave"},
				Description: `Leave the swarm`,
				Options: []model.Option{{
					Name:        []string{"-f", "--force"},
					Description: `Force this node to leave the swarm, ignoring warnings`,
				}},
			}, {
				Name:        []string{"unlock"},
				Description: `Unlock swarm`,
			}, {
				Name:        []string{"unlock-key"},
				Description: `Manage the unlock key`,
				Options: []model.Option{{
					Name:        []string{"-q", "--quiet"},
					Description: `Only display token`,
				}, {
					Name:        []string{"--rotate"},
					Description: `Rotate unlock key`,
				}},
			}, {
				Name:        []string{"update"},
				Description: `Update the swarm`,
				Options: []model.Option{{
					Name:        []string{"--autolock"},
					Description: `Change manager autolocking setting (true|false)`,
					Args: []model.Arg{{
						Suggestions: []model.Suggestion{{Name: []string{`true`}}, {Name: []string{`false`}}},
					}},
				}, {
					Name:        []string{"--cert-expiry"},
					Description: `Validity period for node certificates (ns|us|ms|s|m|h) (default 2160h0m0s)`,
					Args: []model.Arg{{
						Name: "duration",
					}},
				}, {
					Name:        []string{"--dispatcher-heartbeat"},
					Description: `Dispatcher heartbeat period (ns|us|ms|s|m|h) (default 5s)`,
					Args: []model.Arg{{
						Name: "duration",
					}},
				}, {
					Name:        []string{"--external-ca"},
					Description: `Specifications of one or more certificate signing endpoints`,
					Args: []model.Arg{{
						Name: "external-ca",
					}},
				}, {
					Name:        []string{"--max-snapshots"},
					Description: `Number of additional Raft snapshots to retain`,
					Args: []model.Arg{{
						Name: "uint",
					}},
				}, {
					Name:        []string{"--snapshot-interval"},
					Description: `Number of log entries between Raft snapshots (default 10000)`,
					Args: []model.Arg{{
						Name: "uint",
					}},
				}, {
					Name:        []string{"--task-history-limit"},
					Description: `Task history retention limit (default 5)`,
					Args: []model.Arg{{
						Name: "int",
					}},
				}},
			}},
		}, {
			Name:        []string{"system"},
			Description: `Manage Docker`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"prune"},
				Description: `Remove unused data`,
				Options: []model.Option{{
					Name:        []string{"-a", "--all"},
					Description: `Remove all unused images not just dangling ones`,
				}, {
					Name:        []string{"--filter"},
					Description: `Provide filter values (e.g. 'label=<key>=<value')`,
					Args: []model.Arg{{
						Name: "filter",
					}},
				}, {
					Name:        []string{"-f", "--force"},
					Description: `Do not prompt for confirmation`,
				}, {
					Name:        []string{"--volumes"},
					Description: `Prune volumes`,
				}},
			}, {
				Name:        []string{"df"},
				Description: `Show docker disk usage`,
				Options: []model.Option{{
					Name:        []string{"--format"},
					Description: `Pretty-print images using a Go template`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"-v", "--verbose"},
					Description: `Show detailed information on space usage`,
				}},
			}, {
				Name:        []string{"events"},
				Description: `Get real time events from the server`,
				Options: []model.Option{{
					Name:        []string{"-f", "--filter"},
					Description: `Filter output based on conditions provided`,
					Args: []model.Arg{{
						Name: "filter",
					}},
				}, {
					Name:        []string{"--format"},
					Description: `Format the output using the given Go template`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--since"},
					Description: `Show all events created since timestamp`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--until"},
					Description: `Stream events until this timestamp`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}},
			}, {
				Name:        []string{"info"},
				Description: `Display system-wide information`,
				Options: []model.Option{{
					Name:        []string{"-f", "--format"},
					Description: `Format the output using the given Go template`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}},
			}},
		}, {
			Name:        []string{"trust"},
			Description: `Manage trust on Docker images`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"inspect"},
				Description: `Return low-level information about keys and signatures`,
				Args: []model.Arg{{
					Name:       "IMAGE[:TAG]",
					IsVariadic: true,
				}},
				Options: []model.Option{{
					Name:        []string{"--pretty"},
					Description: `Print the information in a human friendly format`,
				}},
			}, {
				Name:        []string{"revoke"},
				Description: `Remove trust for an image`,
				Args: []model.Arg{{
					Name:      "image",
					Generator: nil, // TODO: port over generator
				}},
				Options: []model.Option{{
					Name:        []string{"-y", "--yes"},
					Description: `Do not prompt for confirmation`,
				}},
			}, {
				Name:        []string{"sign"},
				Description: `Sign an image`,
				Args: []model.Arg{{
					Name:      "image",
					Generator: nil, // TODO: port over generator
				}},
				Options: []model.Option{{
					Name:        []string{"--local"},
					Description: `Sign a locally tagged image`,
				}},
			}},
		}, {
			Name:        []string{"volume"},
			Description: `Manage volumes`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"create"},
				Description: `Create a volume`,
				Args: []model.Arg{{
					Name: "VOLUME",
				}},
				Options: []model.Option{{
					Name:        []string{"-d", "--driver"},
					Description: `Specify volume driver name (default "local")`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--label"},
					Description: `Set metadata for a volume`,
					Args: []model.Arg{{
						Name: "list",
					}},
				}, {
					Name:        []string{"-o", "--opt"},
					Description: `Set driver specific options (default map[])`,
					Args: []model.Arg{{
						Name: "map",
					}},
				}},
			}, {
				Name:        []string{"inspect"},
				Description: `Display detailed information on one or more volumes`,
				Args: []model.Arg{{
					Name:       "VOLUME",
					Generator:  nil, // TODO: port over generator
					IsVariadic: true,
				}},
				Options: []model.Option{{
					Name:        []string{"-f", "--format"},
					Description: `Format the output using the given Go template`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}},
			}, {
				Name:        []string{"ls"},
				Description: `List volumes`,
				Options: []model.Option{{
					Name:        []string{"-f", "--filter"},
					Description: `Provide filter values (e.g. 'dangling=true')`,
					Args: []model.Arg{{
						Name: "filter",
					}},
				}, {
					Name:        []string{"--format"},
					Description: `Pretty-print volumes using a Go template`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"-q", "--quiet"},
					Description: `Only display volume names`,
				}},
			}, {
				Name:        []string{"prune"},
				Description: `Remove all unused local volumes`,
				Options: []model.Option{{
					Name:        []string{"--filter"},
					Description: `Provide filter values (e.g. 'label=<label>')`,
					Args: []model.Arg{{
						Name: "filter",
					}},
				}, {
					Name:        []string{"-f", "--force"},
					Description: `Do not prompt for confirmation`,
				}},
			}, {
				Name:        []string{"rm"},
				Description: `Remove one or more volumes`,
				Args: []model.Arg{{
					Name:       "VOLUME",
					Generator:  nil, // TODO: port over generator
					IsVariadic: true,
				}},
				Options: []model.Option{{
					Name:        []string{"-f", "--force"},
					Description: `Force the removal of one or more volumes`,
				}},
			}},
		}, {
			Name:        []string{"compose"},
			Description: `Define and run multi-container applications with Docker`,
		}},
	}
}
