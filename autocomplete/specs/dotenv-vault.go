// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["dotenv-vault"] = model.Subcommand{
		Name:        []string{"dotenv-vault"},
		Description: `CLI for dotenv-vault`,
		Options: []model.Option{{
			Name:         []string{"--help"},
			Description:  `Get documentation for the command`,
			IsPersistent: true,
		}},
		Subcommands: []model.Subcommand{{
			Name:        []string{"new"},
			Description: `Create your project`,
			Args: []model.Arg{{
				Name:        "DOTENV_VAULT",
				Description: `Set .env.vault identifier. Defaults to generated value`,
				IsOptional:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"--yes", "-y"},
				Description: `Automatic yes to prompts. Assume yes to all prompts and run non-interactively`,
			}},
		}, {
			Name:        []string{"login"},
			Description: `Log in to dotenv-vault`,
			Args: []model.Arg{{
				Name:        "DOTENV_ME",
				Description: `Set .env.me credential. Defaults to generated value`,
				IsOptional:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"--yes", "-y"},
				Description: `Automatic yes to prompts. Assume yes to all prompts and run non-interactively`,
			}},
		}, {
			Name:        []string{"logout"},
			Description: `Log out from dotenv-vault`,
			Options: []model.Option{{
				Name:        []string{"--yes", "-y"},
				Description: `Automatic yes to prompts. Assume yes to all prompts and run non-interactively`,
			}},
		}, {
			Name:        []string{"open"},
			Description: `Opens project page in a browser`,
			Args: []model.Arg{{
				Name:        "ENVIRONMENT",
				Description: `Set environment to open to. Defaults to development`,
				IsOptional:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"--yes", "-y"},
				Description: `Automatic yes to prompts. Assume yes to all prompts and run non-interactively`,
			}},
		}, {
			Name:        []string{"push"},
			Description: `Push .env securely`,
			Args: []model.Arg{{
				Name:        "ENVIRONMENT",
				Description: `Set environment to open to. Defaults to development`,
				IsOptional:  true,
			}, {
				Name:        "FILENAME",
				Description: `Set input filename. Defaults to .env for development and .env.{environment} for other environments`,
				Generator:   nil, // TODO: port over generator
				IsOptional:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"--yes", "-y"},
				Description: `Automatic yes to prompts. Assume yes to all prompts and run non-interactively`,
			}, {
				Name:        []string{"-m", "--dotenvMe"},
				Description: `Pass .env.me (DOTENV_ME) credential directly (rather than reading from .env.me file)`,
				Args: []model.Arg{{
					Name:        "DOTENV_ME",
					Description: `Pass .env.me (DOTENV_ME) credential directly`,
				}},
			}},
		}, {
			Name:        []string{"pull"},
			Description: `Pull .env securely`,
			Args: []model.Arg{{
				Name:        "ENVIRONMENT",
				Description: `Set environment to open to. Defaults to development`,
				IsOptional:  true,
			}, {
				Name:        "FILENAME",
				Description: `Set input filename. Defaults to .env for development and .env.{environment} for other environments`,
				Generator:   nil, // TODO: port over generator
				IsOptional:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"--yes", "-y"},
				Description: `Automatic yes to prompts. Assume yes to all prompts and run non-interactively`,
			}, {
				Name:        []string{"-m", "--dotenvMe"},
				Description: `Pass .env.me (DOTENV_ME) credential directly (rather than reading from .env.me file)`,
				Args: []model.Arg{{
					Name:        "DOTENV_ME",
					Description: `Pass .env.me (DOTENV_ME) credential directly`,
				}},
			}},
		}, {
			Name:        []string{"versions"},
			Description: `List version history`,
			Args: []model.Arg{{
				Name:        "ENVIRONMENT",
				Description: `Set environment to open to. Defaults to development`,
				IsOptional:  true,
			}, {
				Name:        "FILENAME",
				Description: `Set input filename. Defaults to .env for development and .env.{environment} for other environments`,
				Generator:   nil, // TODO: port over generator
				IsOptional:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"--yes", "-y"},
				Description: `Automatic yes to prompts. Assume yes to all prompts and run non-interactively`,
			}, {
				Name:        []string{"-m", "--dotenvMe"},
				Description: `Pass .env.me (DOTENV_ME) credential directly (rather than reading from .env.me file)`,
				Args: []model.Arg{{
					Name:        "DOTENV_ME",
					Description: `Pass .env.me (DOTENV_ME) credential directly`,
				}},
			}},
		}, {
			Name:        []string{"whoami"},
			Description: `Display the current logged in user`,
			Options: []model.Option{{
				Name:        []string{"-m", "--dotenvMe"},
				Description: `Pass .env.me (DOTENV_ME) credential directly (rather than reading from .env.me file)`,
				Args: []model.Arg{{
					Name:        "DOTENV_ME",
					Description: `Pass .env.me (DOTENV_ME) credential directly`,
				}},
			}},
		}, {
			Name:        []string{"status"},
			Description: `Check dotenv-operational status`,
			Options: []model.Option{{
				Name:        []string{"--yes", "-y"},
				Description: `Automatic yes to prompts. Assume yes to all prompts and run non-interactively`,
			}},
		}, {
			Name:        []string{"help"},
			Description: `Display help for dotenv-vault`,
		}, {
			Name:        []string{"update"},
			Description: `Update the dotenv-vault CLI`,
			Options: []model.Option{{
				Name:        []string{"--yes", "-y"},
				Description: `Automatic yes to prompts. Assume yes to all prompts and run non-interactively`,
			}},
		}},
	}
}
