// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["firebase"] = model.Subcommand{
		Name:        []string{"firebase"},
		Description: ``,
		Subcommands: []model.Subcommand{{
			Name:        []string{"appdistribution:distribute"},
			Description: `Upload a distribution`,
			Args: []model.Arg{{
				Name: "distribution-file",
			}},
			Options: []model.Option{{
				Name:        []string{"--app"},
				Description: `The app id of your Firebase app`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--release-notes"},
				Description: `Release notes to include with this distribution`,
			}, {
				Name:        []string{"--release-notes-file"},
				Description: `Path to file with release notes to include with this distribution`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--testers"},
				Description: `A comma separated list of tester emails to distribute to`,
				Args: []model.Arg{{
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"--testers-file"},
				Description: `Path to file with a comma separated list of tester emails to distribute to`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--groups"},
				Description: `A comma separated list of group aliases to distribute to`,
				Args: []model.Arg{{
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"--groups-file"},
				Description: `Path to file with a comma separated list of group aliases to distribute to`,
				Args: []model.Arg{{
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"apps:android:sha:create"},
			Description: `Add a SHA certificate hash for a given app id`,
			Args: []model.Arg{{
				Name: "appId",
			}, {
				Name: "shaHash",
			}},
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"apps:android:sha:delete"},
			Description: `Delete a SHA certificate hash for a given app id`,
			Args: []model.Arg{{
				Name: "appId",
			}, {
				Name: "shaId",
			}},
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"apps:create"},
			Description: `Create a new Firebase app`,
			Args: []model.Arg{{
				Name: "platform",
			}, {
				Name: "displayName",
			}},
			Options: []model.Option{{
				Name:        []string{"-a", "--package-name"},
				Description: `Required package name for the Android app`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-b", "--bundle-id"},
				Description: `Required bundle id for the iOS app`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-s", "--app-store-id"},
				Description: `(optional) app store id for the iOS app`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"auth:export"},
			Description: `Export accounts from your Firebase project into a data file`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "dataFile",
			}},
			Options: []model.Option{{
				Name:        []string{"--format"},
				Description: `Format of exported data (csv, json). Ignored if [dataFile] has format extension`,
				Args: []model.Arg{{
					Suggestions: []model.Suggestion{{
						Name: []string{`csv`},
					}, {
						Name: []string{`json`},
					}},
				}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"auth:import"},
			Description: `Import users into your Firebase project from a data file(.csv or .json)`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "dataFile",
			}},
			Options: []model.Option{{
				Name:        []string{"--hash-algo"},
				Description: `Specify the hash algorithm used in password for these accounts`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--hash-key"},
				Description: `Specify the key used in hash algorithm`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--salt-separator"},
				Description: `Specify the salt separator which will be appended to salt when verifying password. only used by SCRYPT now`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--rounds"},
				Description: `Specify how many rounds for hash calculation`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--mem-cost"},
				Description: `Specify the memory cost for firebase scrypt, or cpu/memory cost for standard scrypt`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--parallelization"},
				Description: `Specify the parallelization for standard scrypt`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--block-size"},
				Description: `Specify the block size (normally is 8) for standard scrypt`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--dk-len"},
				Description: `Specify derived key length for standard scrypt`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--hash-input-order"},
				Description: `Specify the order of password and salt. Possible values are SALT_FIRST and PASSWORD_FIRST. MD5, SHA1, SHA256, SHA512, HMAC_MD5, HMAC_SHA1, HMAC_SHA256, HMAC_SHA512 support this flag`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"database:get"},
			Description: `Fetch and print JSON data at the specified path`,
			Args: []model.Arg{{
				Name: "path",
			}},
		}, {
			Name:        []string{"database:instances:create"},
			Description: `Create a realtime database instance`,
			Args: []model.Arg{{
				Name: "instanceName",
			}},
			Options: []model.Option{{
				Name:        []string{"-l", "--location"},
				Description: `(optional) location for the database instance, defaults to us-central1`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"database:instances:list"},
			Description: `List realtime database instances, optionally filtered by a specified location`,
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"database:profile"},
			Description: `Profile the Realtime Database and generate a usage report`,
			Options: []model.Option{{
				Name:        []string{"-o", "--output"},
				Description: `Save the output to the specified file`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-d", "--duration"},
				Description: `Collect database usage information for the specified number of seconds`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--raw"},
				Description: `Output the raw stats collected as newline delimited json`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--no-collapse"},
				Description: `Prevent collapsing similar paths into $wildcard locations`,
			}, {
				Name:        []string{"-i", "--input"},
				Description: `Generate the report based on the specified file instead of streaming logs from the database`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--instance"},
				Description: `Use the database <instance>.firebaseio.com (if omitted, use default database instance)`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"database:push"},
			Description: `Add a new JSON object to a list of data in your Firebase`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "path",
			}},
			Options: []model.Option{{
				Name:        []string{"-d", "--data"},
				Description: `Specify escaped JSON directly`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--instance"},
				Description: `Use the database <instance>.firebaseio.com (if omitted, use default database instance)`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"database:remove"},
			Description: `Remove data from your Firebase at the specified path`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "path",
			}},
			Options: []model.Option{{
				Name:        []string{"-y", "--confirm"},
				Description: `Pass this option to bypass confirmation prompt`,
			}, {
				Name:        []string{"--instance"},
				Description: `Use the database <instance>.firebaseio.com (if omitted, use default database instance)`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"database:set"},
			Description: `Store JSON data at the specified path via STDIN, arg, or file`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "path",
			}},
			Options: []model.Option{{
				Name:        []string{"-d", "--data"},
				Description: `Specify escaped JSON directly`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-y", "--confirm"},
				Description: `Pass this option to bypass confirmation prompt`,
			}, {
				Name:        []string{"--instance"},
				Description: `Use the database <instance>.firebaseio.com (if omitted, use default database instance)`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"database:settings:get"},
			Description: `Store JSON data at the specified path via STDIN, arg, or file`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "path",
			}},
			Options: []model.Option{{
				Name:        []string{"--instance"},
				Description: `Use the database <instance>.firebaseio.com (if omitted, uses default database instance)`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"database:settings:set"},
			Description: `Set the realtime database setting at path`,
			Args: []model.Arg{{
				Name: "path",
			}, {
				Name: "value",
			}},
			Options: []model.Option{{
				Name:        []string{"--instance"},
				Description: `Use the database <instance>.firebaseio.com (if omitted, use default database instance)`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"database:update"},
			Description: `Update some of the keys for the defined path in your Firebase`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "path",
			}},
			Options: []model.Option{{
				Name:        []string{"-d", "--data"},
				Description: `Specify escaped JSON directly`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-y", "--confirm"},
				Description: `Pass this option to bypass confirmation prompt`,
			}, {
				Name:        []string{"--instance"},
				Description: `Use the database <instance>.firebaseio.com (if omitted, use default database instance)`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"deploy"},
			Description: `Deploy code and assets to your Firebase project`,
			Options: []model.Option{{
				Name:        []string{"-p", "--public"},
				Description: `Override the Hosting public directory specified in firebase.json`,
			}, {
				Name:        []string{"-m", "--message"},
				Description: `An optional message describing this deploy`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-f", "--force"},
				Description: `Delete Cloud Functions missing from the current working directory without confirmation`,
			}, {
				Name:        []string{"--only"},
				Description: `Only deploy to specified, comma-separated targets (e.g. "hosting,storage"). For functions, can specify filters with colons to scope function deploys to only those functions (e.g. "--only functions:func1,functions:func2"). When filtering based on export groups (the exported module object keys), use dots to specify group names (e.g. "--only functions:group1.subgroup1,functions:group2)"`,
			}, {
				Name:        []string{"--except"},
				Description: `Deploy to all targets except specified (e.g. "database")`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"emulators:exec"},
			Description: `Start the local Firebase emulators, run a test script, then shut down the emulators`,
			Args: []model.Arg{{
				Name: "script",
			}},
			Options: []model.Option{{
				Name:        []string{"--only"},
				Description: `Only specific emulators. This is a comma separated list of emulator names. Valid options are: ["auth","functions","firestore","database","hosting","pubsub"]`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--inspect-functions"},
				Description: `Emulate Cloud Functions in debug mode with the node inspector on the given port (9229 if not specified)`,
			}, {
				Name:        []string{"--import"},
				Description: `Import emulator data from a previous export (see emulators:export)`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--export-on-exit"},
				Description: `Automatically export emulator data (emulators:export) when the emulators make a clean exit (SIGINT), when no dir is provided the location of --import [dir] is used`,
			}, {
				Name:        []string{"--ui"},
				Description: `Run the Emulator UI`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"emulators:export"},
			Description: `Export data from running emulators`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "path",
			}},
			Options: []model.Option{{
				Name:        []string{"--only"},
				Description: `Only specific emulators. This is a comma separated list of emulator names. Valid options are: ["auth","functions","firestore","database","hosting","pubsub"]`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--force"},
				Description: `Overwrite any export data in the target directory`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"emulators:start"},
			Description: `Start the local Firebase emulators`,
			Options: []model.Option{{
				Name:        []string{"--only"},
				Description: `Only specific emulators. This is a comma separated list of emulator names. Valid options are: ["auth","functions","firestore","database","hosting","pubsub"]`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--inspect-functions"},
				Description: `Emulate Cloud Functions in debug mode with the node inspector on the given port (9229 if not specified)`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--import"},
				Description: `Import emulator data from a previous export (see emulators:export)`,
			}, {
				Name:        []string{"--export-on-exit"},
				Description: `Automatically export emulator data (emulators:export) when the emulators make a clean exit (SIGINT), when no dir is provided the location of --import [dir] is used`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"experimental:functions:shell"},
			Description: `Launch full Node shell with emulated functions`,
			Options: []model.Option{{
				Name:        []string{"-p", "--port"},
				Description: `The port on which to emulate functions (default: 5000) (default: 5000)`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"ext:configure"},
			Description: `Configure an existing extension instance`,
			Args: []model.Arg{{
				Name: "extensionInstanceId",
			}},
			Options: []model.Option{{
				Name:        []string{"--params"},
				Description: `Path of params file with .env format`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"ext:info"},
			Description: `List all the extensions that are installed in your Firebase project`,
			Args: []model.Arg{{
				Name: "extensionName",
			}},
			Options: []model.Option{{
				Name:        []string{"--markdown"},
				Description: `Output info in Markdown suitable for constructing a README file`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"ext:uninstall"},
			Description: `Uninstall an extension that is installed in your Firebase project by instance ID`,
			Args: []model.Arg{{
				Name: "extensionInstanceId",
			}},
			Options: []model.Option{{
				Name:        []string{"-f", "--force"},
				Description: `No confirmation. Otherwise, a confirmation prompt will appear`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"ext:update"},
			Description: `Update an existing extension instance to the latest version`,
			Args: []model.Arg{{
				Name: "extensionInstanceId",
			}},
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"firestore:delete"},
			Description: `Delete data from Cloud Firestore`,
			Args: []model.Arg{{
				Name: "path",
			}},
			Options: []model.Option{{
				Name:        []string{"-r", "--recursive"},
				Description: `Recursive. Delete all documents and subcollections at and under the specified level. May not be passed along with`,
			}, {
				Name:        []string{"--shallow"},
				Description: `Shallow. Delete only documents at the specified level and ignore documents in subcollections. This action can potentially orphan documents nested in subcollections. May not be passed along with -r`,
			}, {
				Name:        []string{"--all-collections"},
				Description: `Delete all. Deletes the entire Firestore database, including all collections and documents. Any other flags or arguments will be ignored`,
			}, {
				Name:        []string{"-y", "--yes"},
				Description: `No confirmation. Otherwise, a confirmation prompt will appear`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"firestore:indexes"},
			Description: `List indexes in your project's Cloud Firestore database`,
			Options: []model.Option{{
				Name:        []string{"--pretty"},
				Description: `Pretty print. When not specified the indexes are printed in the JSON specification format`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"functions:config:clone"},
			Description: `Clone environment config from another project`,
			Options: []model.Option{{
				Name:        []string{"--from"},
				Description: `The project from which to clone configuration`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--only"},
				Description: `A comma-separated list of keys to clone`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--except"},
				Description: `A comma-separated list of keys to not clone`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"functions:config:get"},
			Description: `Fetch environment config stored at the given path`,
			Args: []model.Arg{{
				Name: "path",
			}},
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"functions:config:set"},
			Description: `Set environment config with key=value syntax`,
			Args: []model.Arg{{
				Name:        "values",
				Description: `Key=value`,
				IsVariadic:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"functions:log"},
			Description: `Read logs from deployed functions`,
			Options: []model.Option{{
				Name:        []string{"--only"},
				Description: `Only show logs of specified, comma-separated functions (e.g. "funcA,funcB")`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-n", "--lines"},
				Description: `Specify number of log lines to fetch`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--open"},
				Description: `Open logs page in web browser`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"functions:shell"},
			Description: `Launch full Node shell with emulated functions`,
			Options: []model.Option{{
				Name:        []string{"-p", "--port"},
				Description: `The port on which to emulate functions`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--inspect-functions"},
				Description: `Emulate Cloud Functions in debug mode with the node inspector on the given port (9229 if not specified)`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"help"},
			Description: `Display help information`,
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"hosting:channel:create"},
			Description: `Create a Firebase Hosting channel`,
			Args: []model.Arg{{
				Name: "channelId",
			}},
			Options: []model.Option{{
				Name:        []string{"-e", "--expires"},
				Description: `Duration string (e.g. 12h or 30d) for channel expiration, max 30d`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--site"},
				Description: `Site for which to create the channel`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"hosting:channel:delete"},
			Description: `Delete a Firebase Hosting channel`,
			Args: []model.Arg{{
				Name: "channelId",
			}},
			Options: []model.Option{{
				Name:        []string{"--site"},
				Description: `Site in which the channel exists`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-f", "--force"},
				Description: `Delete without confirmation`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"hosting:channel:deploy"},
			Description: `Deploy to a specific Firebase Hosting channel`,
			Args: []model.Arg{{
				Name: "channelId",
			}},
			Options: []model.Option{{
				Name:        []string{"-e", "--expires"},
				Description: `Duration string (e.g. 12h, 30d) for channel expiration, max 30d; defaults to 7d`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--only"},
				Description: `Only create previews for specified targets`,
			}, {
				Name:        []string{"--open"},
				Description: `Open a browser to the channel after deploying`,
			}, {
				Name:        []string{"--no-authorized-domains"},
				Description: `Do not sync channel domains with Firebase Auth`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"hosting:channel:list"},
			Description: `List all Firebase Hosting channels for your project`,
			Options: []model.Option{{
				Name:        []string{"--site"},
				Description: `List channels for the specified site`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"hosting:channel:open"},
			Description: `Opens the URL for a Firebase Hosting channel`,
			Args: []model.Arg{{
				Name: "channelId",
			}},
			Options: []model.Option{{
				Name:        []string{"--site"},
				Description: `The site to which the channel belongs`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"hosting:clone"},
			Description: `Clone a version from one site to another`,
			Args: []model.Arg{{
				Name: "source",
			}, {
				Name: "targetChannel",
			}},
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"hosting:disable"},
			Description: `Stop serving web traffic to your Firebase Hosting site`,
			Options: []model.Option{{
				Name:        []string{"-y", "--confirm"},
				Description: `Skip confirmation`,
			}, {
				Name:        []string{"-s", "--site"},
				Description: `The site to disable`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"hosting:sites:create"},
			Description: `Create a Firebase Hosting site`,
			Args: []model.Arg{{
				Name: "siteId",
			}},
			Options: []model.Option{{
				Name:        []string{"--app"},
				Description: `Specify an existing Firebase Web App ID`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"hosting:sites:delete"},
			Description: `Delete a Firebase Hosting site`,
			Args: []model.Arg{{
				Name: "siteId",
			}},
			Options: []model.Option{{
				Name:        []string{"-f", "--force"},
				Description: `Delete without confirmation`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"hosting:sites:get"},
			Description: `Print info about a Firebase Hosting site`,
			Args: []model.Arg{{
				Name: "siteId",
			}},
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"hosting:sites:list"},
			Description: `List Firebase Hosting sites`,
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"init"},
			Description: `Setup a Firebase project in the current directory`,
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"login"},
			Description: `Log the CLI into Firebase`,
			Options: []model.Option{{
				Name:        []string{"--no-localhost"},
				Description: `Copy and paste a code instead of starting a local server for authentication`,
			}, {
				Name:        []string{"--reauth"},
				Description: `Force reauthentication even if already logged in`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"login:add"},
			Description: `Authorize the CLI for an additional account`,
			Args: []model.Arg{{
				Name: "email",
			}},
			Options: []model.Option{{
				Name:        []string{"--no-localhost"},
				Description: `Copy and paste a code instead of starting a local server for authentication`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"login:ci"},
			Description: `Generate an access token for use in non-interactive environments`,
			Options: []model.Option{{
				Name:        []string{"--no-localhost"},
				Description: `Copy and paste a code instead of starting a local server for authentication`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"login:list"},
			Description: `List authorized CLI accounts`,
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"login:use"},
			Description: `Set the default account to use for this project directory`,
			Args: []model.Arg{{
				Name: "email",
			}},
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"logout"},
			Description: `Log the CLI out of Firebase`,
			Args: []model.Arg{{
				Name: "email",
			}},
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"open"},
			Description: `Quickly open a browser to relevant project resources`,
			Args: []model.Arg{{
				Name: "link",
			}},
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"projects:addfirebase"},
			Description: `Add Firebase resources to a Google Cloud Platform project`,
			Args: []model.Arg{{
				Name: "projectId",
			}},
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"projects:create"},
			Description: `Creates a new Google Cloud Platform project, then adds Firebase resources to the project`,
			Args: []model.Arg{{
				Name: "projectId",
			}},
			Options: []model.Option{{
				Name:        []string{"-n", "--display-name"},
				Description: `(optional) display name for the project`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-o", "--organization"},
				Description: `(optional) ID of the parent Google Cloud Platform organization under which to create this project`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-f", "--folder"},
				Description: `(optional) ID of the parent Google Cloud Platform folder in which to create this project`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"projects:list"},
			Description: `List all Firebase projects you have access to`,
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"remoteconfig:get"},
			Description: `Get a Firebase project's Remote Config template`,
			Options: []model.Option{{
				Name:        []string{"-v", "--version-number"},
				Description: `Grabs the specified version of the template`,
			}, {
				Name:        []string{"-o", "--output"},
				Description: `Write config output to a filename (if omitted, will use the default file path)`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"remoteconfig:rollback"},
			Description: `Roll back a project's published Remote Config template to the one specified by the provided version number`,
			Options: []model.Option{{
				Name:        []string{"-v", "--version-number"},
				Description: `Rollback to the specified version of the template`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--force"},
				Description: `Rollback template to the specified version without confirmation`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"remoteconfig:versions:list"},
			Description: `Get a list of Remote Config template versions that have been published for a Firebase project`,
			Options: []model.Option{{
				Name:        []string{"--limit"},
				Description: `Limit the number of versions being returned. Pass '0' to fetch all versions`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"serve"},
			Description: `Start a local server for your static assets`,
			Options: []model.Option{{
				Name:        []string{"-p", "--port"},
				Description: `The port on which to listen (default: 5000) (default: 5000)`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-o", "--host"},
				Description: `The host on which to listen (default: localhost) (default: "localhost")`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--only"},
				Description: `Only serve specified targets (valid targets are: hosting, functions)`,
			}, {
				Name:        []string{"--except"},
				Description: `Serve all except specified targets (valid targets are: hosting, functions)`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"setup:emulators:database"},
			Description: `Downloads the database emulator`,
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"setup:emulators:firestore"},
			Description: `Downloads the firestore emulator`,
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"setup:emulators:pubsub"},
			Description: `Downloads the pubsub emulator`,
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"setup:emulators:ui"},
			Description: `Downloads the ui emulator`,
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"target"},
			Description: `Display configured deploy targets for the current project`,
			Args: []model.Arg{{
				Name: "type",
			}},
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"target:apply"},
			Description: `Apply a deploy target to a resource`,
			Args: []model.Arg{{
				Name: "type",
			}, {
				Name: "name",
			}, {
				Name:       "resources",
				IsVariadic: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"target:clear"},
			Description: `Clear all resources from a named resource target`,
			Args: []model.Arg{{
				Name: "type",
			}, {
				Name: "target",
			}},
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"target:remove"},
			Description: `Remove a resource target`,
			Args: []model.Arg{{
				Name: "type",
			}, {
				Name: "resource",
			}},
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}, {
			Name:        []string{"use"},
			Description: `Set an active Firebase project for your working directory`,
			Args: []model.Arg{{
				Name:      "alias or project id",
				Generator: nil, // TODO: port over generator
			}},
			Options: []model.Option{{
				Name:        []string{"--add"},
				Description: `Create a new project alias interactively`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--alias"},
				Description: `Create a new alias for the provided project id`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--unalias"},
				Description: `Remove an already created project alias`,
				Args:        []model.Arg{{}},
			}, {
				Name:        []string{"--clear"},
				Description: `Clear the active project selection`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Output usage information`,
			}},
		}},
	}
}
