// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["env"] = model.Subcommand{
		Name:        []string{"env"},
		Description: `Set environment and execute command, or print environment`,
		Args: []model.Arg{{
			Name:        "name=value ...",
			Description: `Set environment variables`,
			IsOptional:  true,
		}, {
			Name:        "utility",
			Description: `Utility to run`,
			IsOptional:  true,
			IsCommand:   true,
		}},
		Options: []model.Option{{
			Name:        []string{"-0"},
			Description: `End each output line with NUL, not newline`,
		}, {
			Name:        []string{"-i", "-"},
			Description: `Start with an empty environment`,
		}, {
			Name:        []string{"-v"},
			Description: `Print verbose logs`,
		}, {
			Name:        []string{"-u"},
			Description: `Remove variable from the environment`,
			Args: []model.Arg{{
				Name:      "name",
				Generator: nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"-P"},
			Description: `Search the given directories for the utility, rather than the PATH`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFolders},
				Name:      "altpath",
			}},
		}, {
			Name:        []string{"-S"},
			Description: `Split the given string into separate arguments`,
			Args: []model.Arg{{
				Name: "string",
			}},
		}},
	}
}
