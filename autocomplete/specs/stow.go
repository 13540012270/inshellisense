// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.
//
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

package specs

import (
	"github.com/microsoft/clac/autocomplete/model"
)

func init() {
	Specs["stow"] = model.Subcommand{
		Name:        []string{"stow"},
		Description: `Manage farms of symbolic links`,
		Options: []model.Option{{
			Name:        []string{"-n", "--no"},
			Description: `Do not perform any operations that modify the filesystem; merely show what would happen`,
		}, {
			Name:        []string{"-d", "--dir"},
			Description: `Set the stow directory to 'DIR' instead of the current directory. This also has the effect of making the default target directory be the parent of 'DIR'`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFolders},
				Name:      "DIR",
			}},
		}, {
			Name:        []string{"-t", "--target"},
			Description: `Set the target directory to 'DIR' instead of the parent of the stow directory`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFolders},
				Name:      "DIR",
			}},
		}, {
			Name:        []string{"-v", "--verbose"},
			Description: `Send verbose output to standard error describing what Stow is doing. Verbosity levels are from 0 to 5; 0 is the default. Using '-v' or '--verbose' increases the verbosity by one; using "--verbose=N' sets it to N`,
			Args: []model.Arg{{
				Name:        "level",
				Suggestions: []model.Suggestion{{Name: []string{`0`}}, {Name: []string{`1`}}, {Name: []string{`2`}}, {Name: []string{`3`}}, {Name: []string{`4`}}, {Name: []string{`5`}}},
			}},
		}, {
			Name:        []string{"-S", "--stow"},
			Description: `Stow the packages that follow this option into the target directory. This is the default action and so can be omitted if you are only stowing packages rather than performing a mixture of stow/delete/restow actions`,
		}, {
			Name:        []string{"-D", "--delete"},
			Description: `Unstow the packages that follow this option from the target directory rather than installing them`,
		}, {
			Name:        []string{"-R", "--restow"},
			Description: `Restow packages (first unstow, then stow again). This is useful for pruning obsolete symlinks from the target tree after updating the software in a package`,
		}, {
			Name:        []string{"--adopt"},
			Description: `This behaviour is specifically intended to alter the contents of your stow directory.  If you do not want that, this option is not for you`,
		}, {
			Name:        []string{"--no-folding"},
			Description: `Disable folding of newly stowed directories when stowing, and refolding of newly foldable directories when unstowing`,
		}, {
			Name:        []string{"--ignore"},
			Description: `Ignore files ending in this Perl regex`,
			Args: []model.Arg{{
				Name: "REGEX",
			}},
		}, {
			Name:        []string{"--defer"},
			Description: `Don't stow files beginning with this Perl regex if the file is already stowed to another package`,
			Args: []model.Arg{{
				Name: "REGEX",
			}},
		}, {
			Name:        []string{"--override"},
			Description: `Force stowing files beginning with this Perl regex if the file is already stowed to another package`,
			Args: []model.Arg{{
				Name: "REGEX",
			}},
		}, {
			Name:        []string{"--dotfiles"},
			Description: `Enable special handling for 'dotfiles' (files or folders whose name begins with a period) in the package directory. If this option is enabled, Stow will add a preprocessing step for each file or folder whose name begins with 'dot - ', and replace the 'dot- ' prefix in the name by a period (.). This is useful when Stow is used to manage collections of dotfiles, to avoid having a package directory full of hidden files`,
		}, {
			Name:        []string{"-V", "--version"},
			Description: `Show Stow version, and exit`,
		}, {
			Name:        []string{"-h", "--help"},
			Description: `Show Stow command syntax, and exit`,
		}},
	}
}
