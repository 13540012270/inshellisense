// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.
//
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

package specs

import (
	"github.com/microsoft/clac/autocomplete/model"
)

func init() {
	Specs["dust"] = model.Subcommand{
		Name:        []string{"dust"},
		Description: `Like du but more intuitive`,
		Args: []model.Arg{{
			Templates: []model.Template{model.TemplateFilepaths, model.TemplateFolders},
			Name:      "inputs",
		}},
		Options: []model.Option{{
			Name:        []string{"--help", "-h"},
			Description: `Show help for dust`,
		}, {
			Name:        []string{"--version", "-V"},
			Description: `Print version information`,
		}, {
			Name:        []string{"--no-percent-bars", "-b"},
			Description: `No percent bars or percentages will be displayed`,
		}, {
			Name:        []string{"--no-colors", "-c"},
			Description: `No colors will be printed (Useful for commands like: watch)`,
		}, {
			Name:        []string{"--depth", "-d"},
			Description: `Depth to show`,
			Args: []model.Arg{{
				Name: "depth",
			}},
		}, {
			Name:        []string{"--filter", "-e"},
			Description: `Only include filepaths matching this regex. For png files type: -e "\.png$"`,
			Args: []model.Arg{{
				Name: "filter",
			}},
		}, {
			Name:        []string{"--filecount", "-f"},
			Description: `Directory 'size' is number of child files/dirs not disk size`,
		}, {
			Name:        []string{"--si", "-H"},
			Description: `Print sizes in powers of 1000 (e.g., 1.1G)`,
		}, {
			Name:        []string{"--ignore_hidden", "-i"},
			Description: `Do not display hidden files`,
		}, {
			Name:        []string{"--number-of-lines", "-n"},
			Description: `Number of lines of output to show. (Default is terminal_height - 10)`,
			Args: []model.Arg{{
				Name: "number_of_lines",
			}},
		}, {
			Name:        []string{"--full-paths", "-p"},
			Description: `Subdirectories will not have their path shortened`,
		}, {
			Name:        []string{"--reverse", "-r"},
			Description: `Print tree upside down (biggest highest)`,
		}, {
			Name:        []string{"--apparent-size", "-s"},
			Description: `Use file length instead of blocks`,
		}, {
			Name:        []string{"--skip-total"},
			Description: `No total row will be displayed`,
		}, {
			Name:        []string{"--file_types", "-t"},
			Description: `Show only these file types`,
		}, {
			Name:        []string{"--invert-filter", "-v"},
			Description: `Exclude filepaths matching this regex. To ignore png files type: -v "\.png$"`,
			Args: []model.Arg{{
				Name: "invert_filter",
			}},
		}, {
			Name:        []string{"--terminal_width", "-w"},
			Description: `Specify width of output overriding the auto detection of terminal width`,
			Args: []model.Arg{{
				Name: "width",
			}},
		}, {
			Name:        []string{"--limit-filesystem", "-x"},
			Description: `Only count the files and directories on the same filesystem as the supplied directory`,
		}, {
			Name:        []string{"--ignore-directory", "-X"},
			Description: `Exclude any file or directory with this name`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFolders},
				Name:      "ignore_directory",
			}},
		}, {
			Name:        []string{"--min-size", "-z"},
			Description: `Minimum size file to include in output`,
			Args: []model.Arg{{
				Name: "min_size",
			}},
		}},
	}
}
