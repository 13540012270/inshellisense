// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.
//
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

package specs

import (
	"github.com/microsoft/clac/autocomplete/model"
)

func init() {
	Specs["asdf"] = model.Subcommand{
		Name:        []string{"asdf"},
		Description: `Extendable version manager with support for Ruby, Node.js, Elixir, Erlang & more`,
		Options: []model.Option{{
			Name:        []string{"--version"},
			Description: `Version for asdf`,
		}, {
			Name:        []string{"-h", "--help"},
			Description: `Help for asdf`,
		}},
		Subcommands: []model.Subcommand{{
			Name:        []string{"plugin"},
			Description: `Plugin management sub-commands`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"add"},
				Description: `Add a plugin from the plugin repo OR, add a Git repo as a plugin by specifying the name and repo url`,
				Args: []model.Arg{{
					Name:      "name",
					Generator: nil, // TODO: port over generator
				}, {
					Name:       "git-url",
					IsOptional: true,
				}},
			}, {
				Name:        []string{"list"},
				Description: `List installed plugins. Optionally show git urls and git-ref`,
				Options: []model.Option{{
					Name:        []string{"--urls"},
					Description: `Show git urls`,
				}, {
					Name:        []string{"--refs"},
					Description: `Show git refs`,
				}},
				Subcommands: []model.Subcommand{{
					Name:        []string{"all"},
					Description: `List plugins registered on asdf-plugins repository with URLs`,
				}},
			}, {
				Name:        []string{"remove"},
				Description: `Remove plugin and package versions`,
				Args: []model.Arg{{
					Name:      "name",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"update"},
				Description: `Update a plugin to latest commit on default branch or a particular git-ref`,
				Args: []model.Arg{{
					Name:       "name",
					IsOptional: true,
				}, {
					Name:       "git-ref",
					IsOptional: true,
				}},
				Options: []model.Option{{
					Name:        []string{"--all"},
					Description: `Update all plugins to latest commit on default branch`,
				}},
			}},
		}, {
			Name:        []string{"plugin-add"},
			Description: `Add a plugin from the plugin repo OR, add a Git repo as a plugin by specifying the name and repo url`,
			Args: []model.Arg{{
				Name:      "name",
				Generator: nil, // TODO: port over generator
			}, {
				Name:       "git-url",
				IsOptional: true,
			}},
		}, {
			Name:        []string{"plugin-list"},
			Description: `List installed plugins. Optionally show git urls and git-ref`,
			Options: []model.Option{{
				Name:        []string{"--urls"},
				Description: `Show git urls`,
			}, {
				Name:        []string{"--refs"},
				Description: `Show git refs`,
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"all"},
				Description: `List plugins registered on asdf-plugins repository with URLs`,
			}},
		}, {
			Name:        []string{"plugin-list-all"},
			Description: `List plugins registered on asdf-plugins repository with URLs`,
		}, {
			Name:        []string{"plugin-remove"},
			Description: `Remove plugin and package versions`,
			Args: []model.Arg{{
				Name:      "name",
				Generator: nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"plugin-update"},
			Description: `Update a plugin to latest commit on default branch or a particular git-ref`,
			Args: []model.Arg{{
				Name:       "name",
				IsOptional: true,
			}, {
				Name:       "git-ref",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"--all"},
				Description: `Update all plugins to latest commit on default branch`,
			}},
		}, {
			Name:        []string{"install"},
			Description: `Install plugin at stated version, or all from .tools-versions`,
			Args: []model.Arg{{
				Name:       "name",
				Generator:  nil, // TODO: port over generator
				IsOptional: true,
			}, {
				Name: "version",
				Suggestions: []model.Suggestion{{
					Name: []string{`latest`},
				}},
				Generator:  nil, // TODO: port over generator
				IsOptional: true,
			}},
		}, {
			Name:        []string{"uninstall"},
			Description: `Remove a specific version of a package`,
			Args: []model.Arg{{
				Name:      "name",
				Generator: nil, // TODO: port over generator
			}, {
				Name:       "version",
				Generator:  nil, // TODO: port over generator
				IsOptional: true,
			}},
		}, {
			Name:        []string{"current"},
			Description: `Display current versions for named package (else all)`,
			Args: []model.Arg{{
				Name:       "name",
				Generator:  nil, // TODO: port over generator
				IsOptional: true,
			}},
		}, {
			Name:        []string{"where"},
			Description: `Display install path for given package at optional specified version`,
			Args: []model.Arg{{
				Name:      "name",
				Generator: nil, // TODO: port over generator
			}, {
				Name:       "version",
				Generator:  nil, // TODO: port over generator
				IsOptional: true,
			}},
		}, {
			Name:        []string{"which"},
			Description: `Display path to an executable`,
			Args: []model.Arg{{
				Name:      "command",
				Generator: nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"local"},
			Description: `Set package local version`,
			Args: []model.Arg{{
				Name:      "name",
				Generator: nil, // TODO: port over generator
			}, {
				Name:      "version",
				Generator: nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"global"},
			Description: `Set package global version`,
			Args: []model.Arg{{
				Name:      "name",
				Generator: nil, // TODO: port over generator
			}, {
				Name:      "version",
				Generator: nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"shell"},
			Description: `Set the package version to ASDF_${LANG}_VERSION" in the current shell`,
			Args: []model.Arg{{
				Name:      "name",
				Generator: nil, // TODO: port over generator
			}, {
				Name:      "version",
				Generator: nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"latest"},
			Description: `Display latest version available to install for a named package`,
			Args: []model.Arg{{
				Name:      "name",
				Generator: nil, // TODO: port over generator
			}, {
				Name:       "version",
				Generator:  nil, // TODO: port over generator
				IsOptional: true,
			}},
		}, {
			Name:        []string{"list"},
			Description: `List installed versions of a package`,
			Args: []model.Arg{{
				Name:      "name",
				Generator: nil, // TODO: port over generator
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"all"},
				Description: `List all available (remote) versions of a package`,
				Args: []model.Arg{{
					Name:      "name",
					Generator: nil, // TODO: port over generator
				}, {
					Name:       "version",
					Generator:  nil, // TODO: port over generator
					IsOptional: true,
				}},
			}},
		}, {
			Name:        []string{"list-all"},
			Description: `List all available (remote) versions of a package`,
			Args: []model.Arg{{
				Name:      "name",
				Generator: nil, // TODO: port over generator
			}, {
				Name:       "version",
				Generator:  nil, // TODO: port over generator
				IsOptional: true,
			}},
		}, {
			Name:        []string{"help"},
			Description: `Output documentation for plugin and tool`,
			Args: []model.Arg{{
				Name:      "name",
				Generator: nil, // TODO: port over generator
			}, {
				Name:       "version",
				Generator:  nil, // TODO: port over generator
				IsOptional: true,
			}},
		}, {
			Name:        []string{"exec"},
			Description: `Executes the command shim for the current version`,
			Args: []model.Arg{{
				Name:      "command",
				Generator: nil, // TODO: port over generator
				IsCommand: true,
			}},
		}, {
			Name:        []string{"env"},
			Description: `Prints or runs an executable under a command environment`,
			Args: []model.Arg{{
				Name:      "command",
				Generator: nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"info"},
			Description: `Print os, shell and asdf debug information`,
		}, {
			Name:        []string{"reshim"},
			Description: `Recreate shims for version of a package`,
			Args: []model.Arg{{
				Name:       "name",
				Generator:  nil, // TODO: port over generator
				IsOptional: true,
			}, {
				Name:       "version",
				Generator:  nil, // TODO: port over generator
				IsOptional: true,
			}},
		}, {
			Name:        []string{"shim"},
			Description: `Shim management sub-commands`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"versions"},
				Description: `List for given command which plugins and versions provide it`,
				Args: []model.Arg{{
					Name:      "command",
					Generator: nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"shim-versions"},
			Description: `List for given command which plugins and versions provide it`,
			Args: []model.Arg{{
				Name:      "command",
				Generator: nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"update"},
			Description: `Update ASDF to the latest stable release (unless --head)`,
			Options: []model.Option{{
				Name:        []string{"--head"},
				Description: `Using HEAD commit`,
			}},
		}, {
			Name:        []string{"version"},
			Description: `Version for asdf`,
		}},
	}
}
