// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["create-next-app"] = model.Subcommand{
		Name: []string{"create-next-app"},
		Args: []model.Arg{{
			Templates: []model.Template{model.TemplateFolders},
			Name:      "project-directory",
		}},
		Options: []model.Option{{
			Name:        []string{"-V", "--version"},
			Description: `Output the version number`,
		}, {
			Name:        []string{"--ts", "--typescript"},
			Description: `Initialize as a TypeScript project`,
		}, {
			Name:        []string{"--use-npm"},
			Description: `Explicitly tell the CLI to bootstrap the app using npm`,
		}, {
			Name:        []string{"--use-pnpm"},
			Description: `Explicitly tell the CLI to bootstrap the app using pnpm`,
		}, {
			Name:        []string{"-e", "--example"},
			Description: `An example to bootstrap the app with. You can use an example name from the official Next.js repo or a GitHub URL. The URL can use any branch and/or subdirectory`,
			Args: []model.Arg{{
				Name: "name|github-url",
			}},
		}, {
			Name:        []string{"--example-path"},
			Description: `In a rare case, your GitHub URL might contain a branch name with a slash (e.g. bug/fix-1) and the path to the example (e.g. foo/bar). In this case, you must specify the path to the example separately: --example-path foo/bar`,
			Args: []model.Arg{{
				Name: "path-to-example",
			}},
		}, {
			Name:        []string{"-h", "--help"},
			Description: `Display help for command`,
		}},
	}
}
