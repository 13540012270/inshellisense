// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["ddosify"] = model.Subcommand{
		Name:        []string{"ddosify"},
		Description: `High-performance load testing tool, written in Golang`,
		Options: []model.Option{{
			Name:        []string{"-t"},
			Description: `Target website URL. Example: https://ddosify.com`,
			Args: []model.Arg{{
				Name: "URL",
			}},
		}, {
			Name:        []string{"-n"},
			Description: `Total request count. Default: 100`,
			Args: []model.Arg{{
				Name: "RequestCount",
			}},
		}, {
			Name:        []string{"-d"},
			Description: `Test duration in seconds. Default: 10`,
			Args: []model.Arg{{
				Name: "Duration",
			}},
		}, {
			Name:        []string{"-l"},
			Description: `Type of the request. Default: linear`,
			Args: []model.Arg{{
				Name: "RequestType",
				Suggestions: []model.Suggestion{{
					Name: []string{`linear`},
				}, {
					Name: []string{`incremental`},
				}, {
					Name: []string{`waved`},
				}},
			}},
		}, {
			Name:        []string{"-m"},
			Description: `HTTP Methods. Default: GET`,
			Args: []model.Arg{{
				Name: "HTTPMethod",
				Suggestions: []model.Suggestion{{
					Name: []string{`GET`},
				}, {
					Name: []string{`POST`},
				}, {
					Name: []string{`PUT`},
				}, {
					Name: []string{`DELETE`},
				}, {
					Name: []string{`HEAD`},
				}, {
					Name: []string{`PATCH`},
				}, {
					Name: []string{`OPTIONS`},
				}},
			}},
		}, {
			Name:        []string{"-b"},
			Description: `Body for the request`,
			Args: []model.Arg{{
				Name: "Body",
			}},
		}, {
			Name:        []string{"-a"},
			Description: `Basic authentication`,
			Args: []model.Arg{{
				Name: "BasicAuth",
				Suggestions: []model.Suggestion{{
					Name: []string{`username:password`},
				}},
			}},
		}, {
			Name:        []string{"-h"},
			Description: `Headers of the request. You can provide multiple headers`,
			Args: []model.Arg{{
				Name: "header",
				Suggestions: []model.Suggestion{{
					Name: []string{`Content-Type: application/json`},
				}, {
					Name: []string{`User-Agent: DdosifyLoadGenerator/0.8.1`},
				}},
			}},
		}, {
			Name:        []string{"-T"},
			Description: `Timeout in seconds. Default: 5`,
			Args: []model.Arg{{
				Name: "Timeout",
			}},
		}, {
			Name:        []string{"-P"},
			Description: `Proxy address`,
			Args: []model.Arg{{
				Name: "Proxy",
				Suggestions: []model.Suggestion{{
					Name: []string{`http://user:pass@proxy_host.com:port`},
				}},
			}},
		}, {
			Name:        []string{"-o"},
			Description: `Test result output format. Default: stdout`,
			Args: []model.Arg{{
				Name: "OutputFormat",
				Suggestions: []model.Suggestion{{
					Name: []string{`stdout`},
				}, {
					Name: []string{`stdout-json`},
				}},
			}},
		}, {
			Name:        []string{"--config"},
			Description: `Config file of the load test i.e example_ddosify_config.json`,
			Args: []model.Arg{{
				Name: "ConfigFile",
			}},
		}, {
			Name:        []string{"--version"},
			Description: `Prints version, git commit, built date (utc)`,
		}, {
			Name:        []string{"--debug"},
			Description: `Iterates the scenario once and prints curl-like verbose result`,
		}, {
			Name:        []string{"--help"},
			Description: `Prints CLI flags`,
		}},
	}
}
