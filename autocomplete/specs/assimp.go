// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["assimp"] = model.Subcommand{
		Name:        []string{"assimp"},
		Description: `Open Asset Import Library`,
		Options: []model.Option{{
			Name:        []string{"-h", "--help"},
			Description: `Display some basic help`,
		}},
		Subcommands: []model.Subcommand{{
			Name:        []string{"listext"},
			Description: `List all known file extensions available for import`,
		}, {
			Name:        []string{"listexport"},
			Description: `List all supported export formats`,
		}, {
			Name:        []string{"knowext"},
			Description: `List all known file extensions available for import`,
			Args: []model.Arg{{
				Name:        "extension",
				Description: `Check whether a particular file extension is known by us`,
				Generator:   nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"exportinfo"},
			Description: `Show basic information on a specific export format`,
			Args: []model.Arg{{
				Name:        "extension",
				Description: `Specific file extension`,
				Generator:   nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"info"},
			Description: `Load a model file and print basic statistics. Full postprocessing is applied unless the "-r" switch is specified`,
			Args: []model.Arg{{
				Templates:   []model.Template{model.TemplateFilepaths},
				Name:        "file",
				Description: `Print basic structure of a 3D model`,
				IsVariadic:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"-r", "--raw"},
				Description: `No postprocessing, do a raw import`,
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Print verbose info such as node transform data`,
			}, {
				Name:        []string{"-s", "--silent"},
				Description: `Print only minimal info`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Detailed help on a command`,
			}},
		}, {
			Name:        []string{"export"},
			Description: `Export a file to one of the supported output formats`,
			Args: []model.Arg{{
				Templates:   []model.Template{model.TemplateFilepaths},
				Name:        "model",
				Description: `Relative or absolute path to the input model`,
			}, {
				Templates:   []model.Template{model.TemplateFolders},
				Name:        "out",
				Description: `Relative or absolute path to write the output export to`,
			}},
			Options: []model.Option{{
				Name:        []string{"-f", "--format"},
				Description: `Export file formats supported by Assimp`,
				Args: []model.Arg{{
					Name:      "format",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Detailed help on a command`,
			}},
		}, {
			Name:        []string{"extract"},
			Description: `Extract embedded texture images`,
			Args: []model.Arg{{
				Templates:   []model.Template{model.TemplateFilepaths},
				Name:        "model",
				Description: `Relative or absolute path to the input model`,
			}, {
				Templates:   []model.Template{model.TemplateFolders},
				Name:        "out",
				Description: `Relative or absolute path to write the output images to`,
				IsOptional:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"-t", "--texture"},
				Description: `Zero-based index of the texture to be extracted`,
				Args: []model.Arg{{
					Name: "index",
				}},
			}, {
				Name:        []string{"-ba", "–-bmp-with-alpha"},
				Description: `Specifies whether output BMPs contain an alpha channel or not`,
			}, {
				Name:        []string{"-f", "--format"},
				Description: `Specifies the output file format. Supported formats are BMP and TGA. The default value is BMP (if a full output filename is specified, the output file format is taken from its extension)`,
				Args: []model.Arg{{
					Name:        "format",
					Suggestions: []model.Suggestion{{Name: []string{`bmp`}}, {Name: []string{`tga`}}},
				}},
			}, {
				Name:        []string{"-s", "–-nosuffix"},
				Description: `Prevents the tool from adding the _img<n> suffix to all filenames. This option must be specified together with -t to ensure that just one image is written`,
			}, {
				Name:        []string{"-cfast"},
				Description: `Fast post processing preset, runs just a few important steps`,
			}, {
				Name:        []string{"-cdefault"},
				Description: `Default post processing: runs all recommended steps`,
			}, {
				Name:        []string{"-cfull"},
				Description: `Fires almost all post processing steps`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Detailed help on a command`,
			}},
		}, {
			Name:        []string{"dump"},
			Description: `Convert models to a binary or textual dump (ASSBIN/ASSXML)`,
			Args: []model.Arg{{
				Templates:   []model.Template{model.TemplateFilepaths},
				Name:        "model",
				Description: `Relative or absolute path to the input model`,
			}, {
				Templates:   []model.Template{model.TemplateFolders},
				Name:        "out",
				Description: `Relative or absolute path to write the output dump to. If it is omitted, the dump is written to '<model>-dump.txt'`,
				IsOptional:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"-b", "--binary"},
				Description: `If true, the dump is written in binary format`,
			}, {
				Name:        []string{"-s", "--short"},
				Description: `If true, the dump is shortened to include only min/max values for all vertex components and animation channels`,
			}, {
				Name:        []string{"-z", "--compressed"},
				Description: `If true, Compressed`,
			}, {
				Name:        []string{"-cfast"},
				Description: `Fast post processing preset, runs just a few important steps`,
			}, {
				Name:        []string{"-cdefault"},
				Description: `Default post processing: runs all recommended steps`,
			}, {
				Name:        []string{"-cfull"},
				Description: `Fires almost all post processing steps`,
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Detailed help on a command`,
			}},
		}, {
			Name:        []string{"cmpdump"},
			Description: `Compare dumps created using 'assimp dump <file> -s ...'`,
			Args: []model.Arg{{
				Templates:   []model.Template{model.TemplateFilepaths},
				Name:        "actual",
				Description: `Mini dump now`,
			}, {
				Templates:   []model.Template{model.TemplateFilepaths},
				Name:        "expected",
				Description: `Archived dump from some point in the past`,
			}},
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Detailed help on a command`,
			}},
		}, {
			Name:        []string{"version"},
			Description: `Display Assimp version`,
		}},
	}
}
