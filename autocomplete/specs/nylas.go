// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["nylas"] = model.Subcommand{
		Name:        []string{"nylas"},
		Description: `A command line interface for Nylas's API`,
		Options: []model.Option{{
			Name:        []string{"--access_token"},
			Description: `Nylas account access token`,
			Args: []model.Arg{{
				Name: "access_token",
			}},
			IsPersistent: true,
		}, {
			Name:        []string{"--config_dir"},
			Description: `Config directory`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFolders},
				Name:      "config_dir",
			}},
			IsPersistent: true,
		}, {
			Name:        []string{"--config_file"},
			Description: `Config file (default is config.yaml)`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "config_file",
			}},
			IsPersistent: true,
		}, {
			Name:        []string{"--dashboard_api_url"},
			Description: `Dashboard API URL`,
			Args: []model.Arg{{
				Name: "dashboard_api_url",
			}},
			IsPersistent: true,
		}, {
			Name:         []string{"--debug"},
			Description:  `Enable debugging output`,
			IsPersistent: true,
		}, {
			Name:         []string{"--disable_telemetry"},
			Description:  `Disables sending telemetry data`,
			IsPersistent: true,
		}, {
			Name:        []string{"--nylas_api_url"},
			Description: `Nylas API URL`,
			Args: []model.Arg{{
				Name: "nylas_api_url",
			}},
			IsPersistent: true,
		}, {
			Name:        []string{"--output", "-o"},
			Description: `Output format (e.g. json, table)`,
			Args: []model.Arg{{
				Name:        "output",
				Suggestions: []model.Suggestion{{Name: []string{`json`}}, {Name: []string{`table`}}},
			}},
			IsPersistent: true,
		}, {
			Name:        []string{"--region"},
			Description: `Nylas Region (values: us, ireland, canada, australia)`,
			Args: []model.Arg{{
				Name:        "region",
				Suggestions: []model.Suggestion{{Name: []string{`us`}}, {Name: []string{`ireland`}}, {Name: []string{`canada`}}, {Name: []string{`australia`}}},
			}},
			IsPersistent: true,
		}, {
			Name:         []string{"--silent"},
			Description:  `Silences the output`,
			IsPersistent: true,
		}, {
			Name:         []string{"--help", "-h"},
			Description:  `Display help`,
			IsPersistent: true,
		}},
		Subcommands: []model.Subcommand{{
			Name:        []string{"api"},
			Description: `Access the Nylas API endpoints`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"a"},
				Description: `A API commands`,
				Subcommands: []model.Subcommand{{
					Name:        []string{"accounts"},
					Description: `Accounts commands`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"delete"},
						Description: `Delete an Account`,
						Options: []model.Option{{
							Name:        []string{"--display_columns"},
							Description: `(optional) A comma separated list of column headers to display for the table output`,
							Args: []model.Arg{{
								Name: "headers",
							}},
						}},
					}, {
						Name:        []string{"get"},
						Description: `Return All Accounts`,
						Options: []model.Option{{
							Name:        []string{"--display_columns"},
							Description: `(optional) A comma separated list of column headers to display for the table output`,
							Args: []model.Arg{{
								Name: "headers",
							}},
						}, {
							Name:        []string{"--limit"},
							Description: `The number of objects to return. Defaults to 100. If set too high, requests may fail to prevent excessively large response bodies`,
							Args: []model.Arg{{
								Name: "limit",
							}},
						}, {
							Name:        []string{"--metadata_key"},
							Description: `Pass in your keys to search for metadata. "?metadata_key=goodmorning".  You can also combine this with "metadata_value", "?metadata_key=goodmorning&metadata_value=goodbye". See [Metadata](/docs/developer-tools/api/metadata/)`,
							Args: []model.Arg{{
								Name: "metadata_key",
							}},
						}, {
							Name:        []string{"--metadata_pair"},
							Description: `Pass in your metadata key and value pair to search for metadata. "?metadata_pair=goodmorning:goodnight". See [Metadata](/docs/developer-tools/api/metadata/)`,
							Args: []model.Arg{{
								Name: "metadata_pair",
							}},
						}, {
							Name:        []string{"--metadata_value"},
							Description: `Pass in your value to search for metadata. "?metadata_value=goodnight". You can also combine this with "metadata_key", "?metadata_key=goodmorning&metadata_value=goodbye".  See [Metadata](/docs/developer-tools/api/metadata/)`,
							Args: []model.Arg{{
								Name: "metadata_value",
							}},
						}, {
							Name:        []string{"--offset"},
							Description: `Zero-based offset from default object sorting. See [pagination](/docs/api/#overview--pagintaion) for more information`,
							Args: []model.Arg{{
								Name: "offset",
							}},
						}},
					}},
				}, {
					Name:        []string{"accounts:downgrade"},
					Description: `Accounts:downgrade commands`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"post"},
						Description: `Cancel an Account`,
						Options: []model.Option{{
							Name:        []string{"--body"},
							Description: `Request body (or use < to redirect a JSON file)`,
							Args: []model.Arg{{
								Name: "body",
							}},
						}, {
							Name:        []string{"--display_columns"},
							Description: `(optional) A comma separated list of column headers to display for the table output`,
							Args: []model.Arg{{
								Name: "headers",
							}},
						}},
					}},
				}, {
					Name:        []string{"accounts:revoke-all"},
					Description: `Accounts:revoke-all commands`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"post"},
						Description: `Revoke All Tokens`,
						Options: []model.Option{{
							Name:        []string{"--body"},
							Description: `Request body (or use < to redirect a JSON file)`,
							Args: []model.Arg{{
								Name: "body",
							}},
						}, {
							Name:        []string{"--display_columns"},
							Description: `(optional) A comma separated list of column headers to display for the table output`,
							Args: []model.Arg{{
								Name: "headers",
							}},
						}},
					}},
				}, {
					Name:        []string{"accounts:token-info"},
					Description: `Accounts:token-info commands`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"post"},
						Description: `Return Token Information`,
						Options: []model.Option{{
							Name:        []string{"--body"},
							Description: `Request body (or use < to redirect a JSON file)`,
							Args: []model.Arg{{
								Name: "body",
							}},
						}, {
							Name:        []string{"--display_columns"},
							Description: `(optional) A comma separated list of column headers to display for the table output`,
							Args: []model.Arg{{
								Name: "headers",
							}},
						}},
					}},
				}, {
					Name:        []string{"accounts:upgrade"},
					Description: `Accounts:upgrade commands`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"post"},
						Description: `Reactivate an Account`,
						Options: []model.Option{{
							Name:        []string{"--body"},
							Description: `Request body (or use < to redirect a JSON file)`,
							Args: []model.Arg{{
								Name: "body",
							}},
						}, {
							Name:        []string{"--display_columns"},
							Description: `(optional) A comma separated list of column headers to display for the table output`,
							Args: []model.Arg{{
								Name: "headers",
							}},
						}},
					}},
				}},
			}, {
				Name:        []string{"accounts"},
				Description: `Gets a list of authed accounts`,
				Options: []model.Option{{
					Name:        []string{"--limit", "-l"},
					Description: `This is usage`,
					Args: []model.Arg{{
						Name: "limit",
					}},
				}},
			}, {
				Name:        []string{"applications"},
				Description: `Gets your application info`,
			}, {
				Name:        []string{"calendars"},
				Description: `Calendars API commands`,
				Subcommands: []model.Subcommand{{
					Name:        []string{"availability"},
					Description: `Availability commands`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"post"},
						Description: `Availability for a Single Meeting`,
						Options: []model.Option{{
							Name:        []string{"--body"},
							Description: `Request body (or use < to redirect a JSON file)`,
							Args: []model.Arg{{
								Name: "body",
							}},
						}, {
							Name:        []string{"--display_columns"},
							Description: `(optional) A comma separated list of column headers to display for the table output`,
							Args: []model.Arg{{
								Name: "headers",
							}},
						}},
					}},
				}, {
					Name:        []string{"availability:consecutive"},
					Description: `Availability:consecutive commands`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"post"},
						Description: `Availability for Multiple Meetings`,
						Options: []model.Option{{
							Name:        []string{"--body"},
							Description: `Request body (or use < to redirect a JSON file)`,
							Args: []model.Arg{{
								Name: "body",
							}},
						}, {
							Name:        []string{"--display_columns"},
							Description: `(optional) A comma separated list of column headers to display for the table output`,
							Args: []model.Arg{{
								Name: "headers",
							}},
						}},
					}},
				}, {
					Name:        []string{"delete"},
					Description: `Delete a Calendar`,
					Options: []model.Option{{
						Name:        []string{"--display_columns"},
						Description: `(optional) A comma separated list of column headers to display for the table output`,
						Args: []model.Arg{{
							Name: "headers",
						}},
					}},
				}, {
					Name:        []string{"free-busy"},
					Description: `Free-busy commands`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"post"},
						Description: `Calendar Free or Busy`,
						Options: []model.Option{{
							Name:        []string{"--body"},
							Description: `Request body (or use < to redirect a JSON file)`,
							Args: []model.Arg{{
								Name: "body",
							}},
						}, {
							Name:        []string{"--display_columns"},
							Description: `(optional) A comma separated list of column headers to display for the table output`,
							Args: []model.Arg{{
								Name: "headers",
							}},
						}},
					}},
				}, {
					Name:        []string{"get"},
					Description: `Return All Calendars`,
					Options: []model.Option{{
						Name:        []string{"--display_columns"},
						Description: `(optional) A comma separated list of column headers to display for the table output`,
						Args: []model.Arg{{
							Name: "headers",
						}},
					}, {
						Name:        []string{"--limit"},
						Description: `The number of objects to return. Defaults to 100. If set too high, requests may fail to prevent excessively large response bodies`,
						Args: []model.Arg{{
							Name: "limit",
						}},
					}, {
						Name:        []string{"--metadata_key"},
						Description: `Pass in your keys to search for metadata. "?metadata_key=goodmorning".  You can also combine this with "metadata_value", "?metadata_key=goodmorning&metadata_value=goodbye". See [Metadata](/docs/developer-tools/api/metadata/)`,
						Args: []model.Arg{{
							Name: "metadata_key",
						}},
					}, {
						Name:        []string{"--metadata_pair"},
						Description: `Pass in your metadata key and value pair to search for metadata. "?metadata_pair=goodmorning:goodnight". See [Metadata](/docs/developer-tools/api/metadata/)`,
						Args: []model.Arg{{
							Name: "metadata_pair",
						}},
					}, {
						Name:        []string{"--metadata_value"},
						Description: `Pass in your value to search for metadata. "?metadata_value=goodnight". You can also combine this with "metadata_key", "?metadata_key=goodmorning&metadata_value=goodbye".  See [Metadata](/docs/developer-tools/api/metadata/)`,
						Args: []model.Arg{{
							Name: "metadata_value",
						}},
					}, {
						Name:        []string{"--offset"},
						Description: `Zero-based offset from default object sorting. See [pagination](/docs/api/#overview--pagintaion) for more information`,
						Args: []model.Arg{{
							Name: "offset",
						}},
					}, {
						Name:        []string{"--view"},
						Description: `If using Search, only "view=expanded" is supported. See [Views](/docs/api/#overview--views) for more information`,
						Args: []model.Arg{{
							Name: "view",
						}},
					}},
				}, {
					Name:        []string{"post"},
					Description: `Create a Calendar`,
					Options: []model.Option{{
						Name:        []string{"--body"},
						Description: `Request body (or use < to redirect a JSON file)`,
						Args: []model.Arg{{
							Name: "body",
						}},
					}, {
						Name:        []string{"--display_columns"},
						Description: `(optional) A comma separated list of column headers to display for the table output`,
						Args: []model.Arg{{
							Name: "headers",
						}},
					}},
				}, {
					Name:        []string{"put"},
					Description: `Update A Calendar`,
					Options: []model.Option{{
						Name:        []string{"--body"},
						Description: `Request body (or use < to redirect a JSON file)`,
						Args: []model.Arg{{
							Name: "body",
						}},
					}, {
						Name:        []string{"--display_columns"},
						Description: `(optional) A comma separated list of column headers to display for the table output`,
						Args: []model.Arg{{
							Name: "headers",
						}},
					}},
				}},
			}, {
				Name:        []string{"connect"},
				Description: `Connect API commands`,
				Subcommands: []model.Subcommand{{
					Name:        []string{"detect-provider"},
					Description: `Detect-provider commands`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"post"},
						Description: `Detect Provider`,
						Options: []model.Option{{
							Name:        []string{"--body"},
							Description: `Request body (or use < to redirect a JSON file)`,
							Args: []model.Arg{{
								Name: "body",
							}},
						}, {
							Name:        []string{"--display_columns"},
							Description: `(optional) A comma separated list of column headers to display for the table output`,
							Args: []model.Arg{{
								Name: "headers",
							}},
						}},
					}},
				}},
			}, {
				Name:        []string{"contacts"},
				Description: `Contacts API commands`,
				Subcommands: []model.Subcommand{{
					Name:        []string{"delete"},
					Description: `Delete a Contact`,
					Options: []model.Option{{
						Name:        []string{"--display_columns"},
						Description: `(optional) A comma separated list of column headers to display for the table output`,
						Args: []model.Arg{{
							Name: "headers",
						}},
					}},
				}, {
					Name:        []string{"get"},
					Description: `Return All Contacts`,
					Options: []model.Option{{
						Name:        []string{"--country"},
						Description: `Returns the contacts matching the contact's exact physical addresses`,
						Args: []model.Arg{{
							Name: "country",
						}},
					}, {
						Name:        []string{"--display_columns"},
						Description: `(optional) A comma separated list of column headers to display for the table output`,
						Args: []model.Arg{{
							Name: "headers",
						}},
					}, {
						Name:        []string{"--email"},
						Description: `Returns the contacts matching the exact contact's email`,
						Args: []model.Arg{{
							Name: "email",
						}},
					}, {
						Name:        []string{"--group"},
						Description: `Returns the contacts belonging to the Contact Group matching this ID`,
						Args: []model.Arg{{
							Name: "group",
						}},
					}, {
						Name:        []string{"--limit"},
						Description: `The number of objects to return. Defaults to 100. If set too high, requests may fail to prevent excessively large response bodies`,
						Args: []model.Arg{{
							Name: "limit",
						}},
					}, {
						Name:        []string{"--offset"},
						Description: `Zero-based offset from default object sorting. See [pagination](/docs/api/#overview--pagintaion) for more information`,
						Args: []model.Arg{{
							Name: "offset",
						}},
					}, {
						Name:        []string{"--phone_number"},
						Description: `Returns the contacts matching the contact's exact phone number`,
						Args: []model.Arg{{
							Name: "phone_number",
						}},
					}, {
						Name:        []string{"--postal_code"},
						Description: `Returns the contacts matching the contact's exact postal code of one of the contact's addresses`,
						Args: []model.Arg{{
							Name: "postal_code",
						}},
					}, {
						Name:        []string{"--source"},
						Description: `Returns the contacts matching from the address book or auto-generated contacts from emails. For example of contacts only from the address book: "/"contacts?source=address_book" or for only autogenerated contacts: "/contacts?source=inbox"`,
						Args: []model.Arg{{
							Name: "source",
						}},
					}, {
						Name:        []string{"--state"},
						Description: `Returns the contacts matching the contact's exact state for one of the contact's physical addresses`,
						Args: []model.Arg{{
							Name: "state",
						}},
					}, {
						Name:        []string{"--street_address"},
						Description: `Returns the contacts matching the one of the contact's exact street address`,
						Args: []model.Arg{{
							Name: "street_address",
						}},
					}},
				}, {
					Name:        []string{"groups"},
					Description: `Groups commands`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"get"},
						Description: `Return Contact Groups`,
						Options: []model.Option{{
							Name:        []string{"--display_columns"},
							Description: `(optional) A comma separated list of column headers to display for the table output`,
							Args: []model.Arg{{
								Name: "headers",
							}},
						}},
					}},
				}, {
					Name:        []string{"picture"},
					Description: `Picture commands`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"get"},
						Description: `Returns a Contacts Picture`,
						Options: []model.Option{{
							Name:        []string{"--display_columns"},
							Description: `(optional) A comma separated list of column headers to display for the table output`,
							Args: []model.Arg{{
								Name: "headers",
							}},
						}},
					}},
				}, {
					Name:        []string{"post"},
					Description: `Create a Contact`,
					Options: []model.Option{{
						Name:        []string{"--body"},
						Description: `Request body (or use < to redirect a JSON file)`,
						Args: []model.Arg{{
							Name: "body",
						}},
					}, {
						Name:        []string{"--display_columns"},
						Description: `(optional) A comma separated list of column headers to display for the table output`,
						Args: []model.Arg{{
							Name: "headers",
						}},
					}},
				}, {
					Name:        []string{"put"},
					Description: `Update a Contact`,
					Options: []model.Option{{
						Name:        []string{"--body"},
						Description: `Request body (or use < to redirect a JSON file)`,
						Args: []model.Arg{{
							Name: "body",
						}},
					}, {
						Name:        []string{"--display_columns"},
						Description: `(optional) A comma separated list of column headers to display for the table output`,
						Args: []model.Arg{{
							Name: "headers",
						}},
					}},
				}},
			}, {
				Name:        []string{"delta"},
				Description: `Delta API commands`,
				Subcommands: []model.Subcommand{{
					Name:        []string{"get"},
					Description: `Request Delta Cursors`,
					Options: []model.Option{{
						Name:        []string{"--cursor"},
						Description: `The data cursor from "/delta/latest_cursor"`,
						Args: []model.Arg{{
							Name: "cursor",
						}},
					}, {
						Name:        []string{"--display_columns"},
						Description: `(optional) A comma separated list of column headers to display for the table output`,
						Args: []model.Arg{{
							Name: "headers",
						}},
					}, {
						Name:        []string{"--excluded_types"},
						Description: `A comma-separated list of object types to exclude from the returned deltas. You can not use "included_types" and "excluded_types" together`,
						Args: []model.Arg{{
							Name: "excluded_types",
						}},
					}, {
						Name:        []string{"--include_types"},
						Description: `A comma-separated list of the object types that will only be included in the returned deltas. You can not use "included_types" and "excluded_types" together`,
						Args: []model.Arg{{
							Name: "include_types",
						}},
					}, {
						Name:        []string{"--view"},
						Description: `This value indicates if the data expands thread and message objects in the response to include additional information, when the value is set to expanded`,
						Args: []model.Arg{{
							Name: "view",
						}},
					}},
				}, {
					Name:        []string{"latest:cursor"},
					Description: `Latest:cursor commands`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"post"},
						Description: `Get a Delta Cursor`,
						Options: []model.Option{{
							Name:        []string{"--body"},
							Description: `Request body (or use < to redirect a JSON file)`,
							Args: []model.Arg{{
								Name: "body",
							}},
						}, {
							Name:        []string{"--display_columns"},
							Description: `(optional) A comma separated list of column headers to display for the table output`,
							Args: []model.Arg{{
								Name: "headers",
							}},
						}},
					}},
				}, {
					Name:        []string{"longpoll"},
					Description: `Longpoll commands`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"get"},
						Description: `Return Long-Polling Deltas`,
						Options: []model.Option{{
							Name:        []string{"--cursor"},
							Description: `The data cursor from "/delta/latest_cursor"`,
							Args: []model.Arg{{
								Name: "cursor",
							}},
						}, {
							Name:        []string{"--display_columns"},
							Description: `(optional) A comma separated list of column headers to display for the table output`,
							Args: []model.Arg{{
								Name: "headers",
							}},
						}, {
							Name:        []string{"--excluded_types"},
							Description: `A comma-separated list of object types to exclude from the returned deltas. You can not use "included_types" and "excluded_types" together`,
							Args: []model.Arg{{
								Name: "excluded_types",
							}},
						}, {
							Name:        []string{"--include_types"},
							Description: `A comma-separated list of the object types that will only be included in the returned deltas. You can not use "included_types" and "excluded_types" together`,
							Args: []model.Arg{{
								Name: "include_types",
							}},
						}, {
							Name:        []string{"--timeout"},
							Description: `The time difference between the deltas retrieved`,
							Args: []model.Arg{{
								Name: "timeout",
							}},
						}, {
							Name:        []string{"--view"},
							Description: `This value indicates if the data expands thread and message objects in the response to include additional information, when the value is set to expanded`,
							Args: []model.Arg{{
								Name: "view",
							}},
						}},
					}},
				}, {
					Name:        []string{"streaming"},
					Description: `Streaming commands`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"get"},
						Description: `Streaming Deltas`,
						Options: []model.Option{{
							Name:        []string{"--cursor"},
							Description: `The data cursor from "/delta/latest_cursor"`,
							Args: []model.Arg{{
								Name: "cursor",
							}},
						}, {
							Name:        []string{"--display_columns"},
							Description: `(optional) A comma separated list of column headers to display for the table output`,
							Args: []model.Arg{{
								Name: "headers",
							}},
						}, {
							Name:        []string{"--excluded_types"},
							Description: `A comma-separated list of object types to exclude from the returned deltas. You can not use "included_types" and "excluded_types" together`,
							Args: []model.Arg{{
								Name: "excluded_types",
							}},
						}, {
							Name:        []string{"--include_types"},
							Description: `A comma-separated list of the object types that will only be included in the returned deltas. You can not use "included_types" and "excluded_types" together`,
							Args: []model.Arg{{
								Name: "include_types",
							}},
						}, {
							Name:        []string{"--view"},
							Description: `This value indicates if the data expands thread and message objects in the response to include additional information, when the value is set to expanded`,
							Args: []model.Arg{{
								Name: "view",
							}},
						}},
					}},
				}},
			}, {
				Name:        []string{"drafts"},
				Description: `Drafts API commands`,
				Subcommands: []model.Subcommand{{
					Name:        []string{"delete"},
					Description: `Delete a Draft`,
					Options: []model.Option{{
						Name:        []string{"--display_columns"},
						Description: `(optional) A comma separated list of column headers to display for the table output`,
						Args: []model.Arg{{
							Name: "headers",
						}},
					}},
				}, {
					Name:        []string{"get"},
					Description: `Return All Drafts`,
					Options: []model.Option{{
						Name:        []string{"--any_email"},
						Description: `Return emails that have been sent or received from this comma-separated list of email addresses. For example: mail1@mail.com,mail2@mail.com. A maximum of 25 emails may be specified`,
						Args: []model.Arg{{
							Name: "any_email",
						}},
					}, {
						Name:        []string{"--bcc"},
						Description: `Return threads containing messages that were BCC'd to this email address, likely sent from the parent account. (Most SMTP gateways remove BCC information.)`,
						Args: []model.Arg{{
							Name: "bcc",
						}},
					}, {
						Name:        []string{"--cc"},
						Description: `Return threads containing messages that were CC'd to this email address`,
						Args: []model.Arg{{
							Name: "cc",
						}},
					}, {
						Name:        []string{"--display_columns"},
						Description: `(optional) A comma separated list of column headers to display for the table output`,
						Args: []model.Arg{{
							Name: "headers",
						}},
					}, {
						Name:        []string{"--filename"},
						Description: `Return object with the filename`,
						Args: []model.Arg{{
							Name: "filename",
						}},
					}, {
						Name:        []string{"--in"},
						Description: `This parameter supports the name, display_name, or id of a folder or label. To return drafts, pass in "drafts"`,
						Args: []model.Arg{{
							Name: "in",
						}},
					}, {
						Name:        []string{"--last_message_after"},
						Description: `Return threads whose most recent message was received after this Unix-based timestamp`,
						Args: []model.Arg{{
							Name: "last_message_after",
						}},
					}, {
						Name:        []string{"--last_message_before"},
						Description: `Return threads whose most recent message was received before this Unix-based timestamp`,
						Args: []model.Arg{{
							Name: "last_message_before",
						}},
					}, {
						Name:        []string{"--not_in"},
						Description: `Filter messages not in a given folder or label. The filter supports the name, display, or ID of a folder or label`,
						Args: []model.Arg{{
							Name: "not_in",
						}},
					}, {
						Name:        []string{"--started_after"},
						Description: `Return threads whose first message was received after this Unix-based timestamp`,
						Args: []model.Arg{{
							Name: "started_after",
						}},
					}, {
						Name:        []string{"--started_before"},
						Description: `Return threads whose first message was received before this Unix-based timestamp`,
						Args: []model.Arg{{
							Name: "started_before",
						}},
					}, {
						Name:        []string{"--subject"},
						Description: `Return threads with a matching literal subject`,
						Args: []model.Arg{{
							Name: "subject",
						}},
					}, {
						Name:        []string{"--thread_id"},
						Description: `Return messages belonging to a specific thread`,
						Args: []model.Arg{{
							Name: "thread_id",
						}},
					}, {
						Name:        []string{"--to"},
						Description: `Return threads containing messages sent to this email address`,
						Args: []model.Arg{{
							Name: "to",
						}},
					}, {
						Name:        []string{"--view"},
						Description: `If using Search, only "view=expanded" is supported. See [Views](/docs/api/#overview--views) for more information`,
						Args: []model.Arg{{
							Name: "view",
						}},
					}},
				}, {
					Name:        []string{"post"},
					Description: `Create a New Draft`,
					Options: []model.Option{{
						Name:        []string{"--body"},
						Description: `Request body (or use < to redirect a JSON file)`,
						Args: []model.Arg{{
							Name: "body",
						}},
					}, {
						Name:        []string{"--display_columns"},
						Description: `(optional) A comma separated list of column headers to display for the table output`,
						Args: []model.Arg{{
							Name: "headers",
						}},
					}},
				}, {
					Name:        []string{"put"},
					Description: `Update a Draft`,
					Options: []model.Option{{
						Name:        []string{"--body"},
						Description: `Request body (or use < to redirect a JSON file)`,
						Args: []model.Arg{{
							Name: "body",
						}},
					}, {
						Name:        []string{"--display_columns"},
						Description: `(optional) A comma separated list of column headers to display for the table output`,
						Args: []model.Arg{{
							Name: "headers",
						}},
					}},
				}},
			}, {
				Name:        []string{"events"},
				Description: `Events API commands`,
				Subcommands: []model.Subcommand{{
					Name:        []string{"delete"},
					Description: `Delete An Event`,
					Options: []model.Option{{
						Name:        []string{"--display_columns"},
						Description: `(optional) A comma separated list of column headers to display for the table output`,
						Args: []model.Arg{{
							Name: "headers",
						}},
					}},
				}, {
					Name:        []string{"get"},
					Description: `Return All Events`,
					Options: []model.Option{{
						Name:        []string{"--calendar_id"},
						Description: `Return events belonging to the specified calendar ID`,
						Args: []model.Arg{{
							Name: "calendar_id",
						}},
					}, {
						Name:        []string{"--count"},
						Description: `See [Count](/docs/api/#overview--count-view) for more information`,
						Args: []model.Arg{{
							Name: "count",
						}},
					}, {
						Name:        []string{"--description"},
						Description: `Return events matching the specified description`,
						Args: []model.Arg{{
							Name: "description",
						}},
					}, {
						Name:        []string{"--display_columns"},
						Description: `(optional) A comma separated list of column headers to display for the table output`,
						Args: []model.Arg{{
							Name: "headers",
						}},
					}, {
						Name:        []string{"--ends_after"},
						Description: `Return events ending after the specified unix timestamp`,
						Args: []model.Arg{{
							Name: "ends_after",
						}},
					}, {
						Name:        []string{"--ends_before"},
						Description: `Return events ending before the specified unix timestamp`,
						Args: []model.Arg{{
							Name: "ends_before",
						}},
					}, {
						Name:        []string{"--event_id"},
						Description: `Return the event matching the specified event ID`,
						Args: []model.Arg{{
							Name: "event_id",
						}},
					}, {
						Name:        []string{"--limit"},
						Description: `The number of objects to return. Defaults to 100. If set too high, requests may fail to prevent excessively large response bodies`,
						Args: []model.Arg{{
							Name: "limit",
						}},
					}, {
						Name:        []string{"--location"},
						Description: `Return events matching the specified location`,
						Args: []model.Arg{{
							Name: "location",
						}},
					}, {
						Name:        []string{"--metadata_key"},
						Description: `Pass in your keys to search for metadata. "?metadata_key=goodmorning".  You can also combine this with "metadata_value", "?metadata_key=goodmorning&metadata_value=goodbye". See [Metadata](/docs/developer-tools/api/metadata/)`,
						Args: []model.Arg{{
							Name: "metadata_key",
						}},
					}, {
						Name:        []string{"--metadata_pair"},
						Description: `Pass in your metadata key and value pair to search for metadata. "?metadata_pair=goodmorning:goodnight". See [Metadata](/docs/developer-tools/api/metadata/)`,
						Args: []model.Arg{{
							Name: "metadata_pair",
						}},
					}, {
						Name:        []string{"--metadata_value"},
						Description: `Pass in your value to search for metadata. "?metadata_value=goodnight". You can also combine this with "metadata_key", "?metadata_key=goodmorning&metadata_value=goodbye".  See [Metadata](/docs/developer-tools/api/metadata/)`,
						Args: []model.Arg{{
							Name: "metadata_value",
						}},
					}, {
						Name:        []string{"--offset"},
						Description: `Zero-based offset from default object sorting. See [pagination](/docs/api/#overview--pagintaion) for more information`,
						Args: []model.Arg{{
							Name: "offset",
						}},
					}, {
						Name:        []string{"--show_cancelled"},
						Description: `Return events that have a status of "cancelled". If an event is recurring, then it returns no matter the value of show_cancelled. Default false`,
						Args: []model.Arg{{
							Name: "show_cancelled",
						}},
					}, {
						Name:        []string{"--starts_after"},
						Description: `Return events starting after the specified unix timestamp`,
						Args: []model.Arg{{
							Name: "starts_after",
						}},
					}, {
						Name:        []string{"--starts_before"},
						Description: `Return events starting before the specified unix timestamp`,
						Args: []model.Arg{{
							Name: "starts_before",
						}},
					}, {
						Name:        []string{"--title"},
						Description: `Return events matching the specified title`,
						Args: []model.Arg{{
							Name: "title",
						}},
					}},
				}, {
					Name:        []string{"post"},
					Description: `Create an Event`,
					Options: []model.Option{{
						Name:        []string{"--body"},
						Description: `Request body (or use < to redirect a JSON file)`,
						Args: []model.Arg{{
							Name: "body",
						}},
					}, {
						Name:        []string{"--display_columns"},
						Description: `(optional) A comma separated list of column headers to display for the table output`,
						Args: []model.Arg{{
							Name: "headers",
						}},
					}},
				}, {
					Name:        []string{"put"},
					Description: `Update An Event`,
					Options: []model.Option{{
						Name:        []string{"--body"},
						Description: `Request body (or use < to redirect a JSON file)`,
						Args: []model.Arg{{
							Name: "body",
						}},
					}, {
						Name:        []string{"--display_columns"},
						Description: `(optional) A comma separated list of column headers to display for the table output`,
						Args: []model.Arg{{
							Name: "headers",
						}},
					}},
				}, {
					Name:        []string{"to-ics"},
					Description: `To-ics commands`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"post"},
						Description: `Generate ICS File`,
						Options: []model.Option{{
							Name:        []string{"--body"},
							Description: `Request body (or use < to redirect a JSON file)`,
							Args: []model.Arg{{
								Name: "body",
							}},
						}, {
							Name:        []string{"--display_columns"},
							Description: `(optional) A comma separated list of column headers to display for the table output`,
							Args: []model.Arg{{
								Name: "headers",
							}},
						}},
					}},
				}},
			}, {
				Name:        []string{"files"},
				Description: `Files API commands`,
				Subcommands: []model.Subcommand{{
					Name:        []string{"delete"},
					Description: `Delete a File`,
					Options: []model.Option{{
						Name:        []string{"--display_columns"},
						Description: `(optional) A comma separated list of column headers to display for the table output`,
						Args: []model.Arg{{
							Name: "headers",
						}},
					}},
				}, {
					Name:        []string{"download"},
					Description: `Download commands`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"get"},
						Description: `Download a File`,
						Options: []model.Option{{
							Name:        []string{"--display_columns"},
							Description: `(optional) A comma separated list of column headers to display for the table output`,
							Args: []model.Arg{{
								Name: "headers",
							}},
						}},
					}},
				}, {
					Name:        []string{"get"},
					Description: `Return All Files`,
					Options: []model.Option{{
						Name:        []string{"--content_type"},
						Description: `Return objects matching the specified content type`,
						Args: []model.Arg{{
							Name: "content_type",
						}},
					}, {
						Name:        []string{"--display_columns"},
						Description: `(optional) A comma separated list of column headers to display for the table output`,
						Args: []model.Arg{{
							Name: "headers",
						}},
					}, {
						Name:        []string{"--filename"},
						Description: `Return object with the filename`,
						Args: []model.Arg{{
							Name: "filename",
						}},
					}, {
						Name:        []string{"--message_id"},
						Description: `Return objects matching the specified message ID`,
						Args: []model.Arg{{
							Name: "message_id",
						}},
					}, {
						Name:        []string{"--view"},
						Description: `If using Search, only "view=expanded" is supported. See [Views](/docs/api/#overview--views) for more information`,
						Args: []model.Arg{{
							Name: "view",
						}},
					}},
				}, {
					Name:        []string{"post"},
					Description: `Upload a New File`,
					Options: []model.Option{{
						Name:        []string{"--body"},
						Description: `Request body (or use < to redirect a JSON file)`,
						Args: []model.Arg{{
							Name: "body",
						}},
					}, {
						Name:        []string{"--display_columns"},
						Description: `(optional) A comma separated list of column headers to display for the table output`,
						Args: []model.Arg{{
							Name: "headers",
						}},
					}},
				}},
			}, {
				Name:        []string{"folders"},
				Description: `Folders API commands`,
				Subcommands: []model.Subcommand{{
					Name:        []string{"delete"},
					Description: `Delete a Folder`,
					Options: []model.Option{{
						Name:        []string{"--display_columns"},
						Description: `(optional) A comma separated list of column headers to display for the table output`,
						Args: []model.Arg{{
							Name: "headers",
						}},
					}},
				}, {
					Name:        []string{"get"},
					Description: `Return All Folders`,
					Options: []model.Option{{
						Name:        []string{"--display_columns"},
						Description: `(optional) A comma separated list of column headers to display for the table output`,
						Args: []model.Arg{{
							Name: "headers",
						}},
					}, {
						Name:        []string{"--limit"},
						Description: `The number of objects to return. Defaults to 100. If set too high, requests may fail to prevent excessively large response bodies`,
						Args: []model.Arg{{
							Name: "limit",
						}},
					}, {
						Name:        []string{"--offset"},
						Description: `Zero-based offset from default object sorting. See [pagination](/docs/api/#overview--pagintaion) for more information`,
						Args: []model.Arg{{
							Name: "offset",
						}},
					}},
				}, {
					Name:        []string{"post"},
					Description: `Create a Folder`,
					Options: []model.Option{{
						Name:        []string{"--body"},
						Description: `Request body (or use < to redirect a JSON file)`,
						Args: []model.Arg{{
							Name: "body",
						}},
					}, {
						Name:        []string{"--display_columns"},
						Description: `(optional) A comma separated list of column headers to display for the table output`,
						Args: []model.Arg{{
							Name: "headers",
						}},
					}},
				}, {
					Name:        []string{"put"},
					Description: `Update a Folder`,
					Options: []model.Option{{
						Name:        []string{"--body"},
						Description: `Request body (or use < to redirect a JSON file)`,
						Args: []model.Arg{{
							Name: "body",
						}},
					}, {
						Name:        []string{"--display_columns"},
						Description: `(optional) A comma separated list of column headers to display for the table output`,
						Args: []model.Arg{{
							Name: "headers",
						}},
					}},
				}},
			}, {
				Name:        []string{"ip-addresses"},
				Description: `Gets a list of Nylas IP addresses (paid customers only)`,
			}, {
				Name:        []string{"job-statuses"},
				Description: `Job-Statuses API commands`,
				Subcommands: []model.Subcommand{{
					Name:        []string{"get"},
					Description: `Return All Job Statuses`,
					Options: []model.Option{{
						Name:        []string{"--display_columns"},
						Description: `(optional) A comma separated list of column headers to display for the table output`,
						Args: []model.Arg{{
							Name: "headers",
						}},
					}},
				}},
			}, {
				Name:        []string{"labels"},
				Description: `Labels API commands`,
				Subcommands: []model.Subcommand{{
					Name:        []string{"delete"},
					Description: `Delete a Label`,
					Options: []model.Option{{
						Name:        []string{"--display_columns"},
						Description: `(optional) A comma separated list of column headers to display for the table output`,
						Args: []model.Arg{{
							Name: "headers",
						}},
					}},
				}, {
					Name:        []string{"get"},
					Description: `Return All Labels`,
					Options: []model.Option{{
						Name:        []string{"--display_columns"},
						Description: `(optional) A comma separated list of column headers to display for the table output`,
						Args: []model.Arg{{
							Name: "headers",
						}},
					}, {
						Name:        []string{"--limit"},
						Description: `The number of objects to return. Defaults to 100. If set too high, requests may fail to prevent excessively large response bodies`,
						Args: []model.Arg{{
							Name: "limit",
						}},
					}, {
						Name:        []string{"--offset"},
						Description: `Zero-based offset from default object sorting. See [pagination](/docs/api/#overview--pagintaion) for more information`,
						Args: []model.Arg{{
							Name: "offset",
						}},
					}},
				}, {
					Name:        []string{"post"},
					Description: `Create a Label`,
					Options: []model.Option{{
						Name:        []string{"--body"},
						Description: `Request body (or use < to redirect a JSON file)`,
						Args: []model.Arg{{
							Name: "body",
						}},
					}, {
						Name:        []string{"--display_columns"},
						Description: `(optional) A comma separated list of column headers to display for the table output`,
						Args: []model.Arg{{
							Name: "headers",
						}},
					}},
				}, {
					Name:        []string{"put"},
					Description: `Update a Label`,
					Options: []model.Option{{
						Name:        []string{"--body"},
						Description: `Request body (or use < to redirect a JSON file)`,
						Args: []model.Arg{{
							Name: "body",
						}},
					}, {
						Name:        []string{"--display_columns"},
						Description: `(optional) A comma separated list of column headers to display for the table output`,
						Args: []model.Arg{{
							Name: "headers",
						}},
					}},
				}},
			}, {
				Name:        []string{"messages"},
				Description: `Messages API commands`,
				Subcommands: []model.Subcommand{{
					Name:        []string{"get"},
					Description: `Return All Messages`,
					Options: []model.Option{{
						Name:        []string{"--any_email"},
						Description: `Return emails that have been sent or received from this comma-separated list of email addresses. For example: mail1@mail.com,mail2@mail.com. A maximum of 25 emails may be specified`,
						Args: []model.Arg{{
							Name: "any_email",
						}},
					}, {
						Name:        []string{"--bcc"},
						Description: `Return threads containing messages that were BCC'd to this email address, likely sent from the parent account. (Most SMTP gateways remove BCC information.)`,
						Args: []model.Arg{{
							Name: "bcc",
						}},
					}, {
						Name:        []string{"--cc"},
						Description: `Return threads containing messages that were CC'd to this email address`,
						Args: []model.Arg{{
							Name: "cc",
						}},
					}, {
						Name:        []string{"--display_columns"},
						Description: `(optional) A comma separated list of column headers to display for the table output`,
						Args: []model.Arg{{
							Name: "headers",
						}},
					}, {
						Name:        []string{"--filename"},
						Description: `Return object with the filename`,
						Args: []model.Arg{{
							Name: "filename",
						}},
					}, {
						Name:        []string{"--from"},
						Description: `Return threads containing messages sent from this email address`,
						Args: []model.Arg{{
							Name: "from",
						}},
					}, {
						Name:        []string{"--in"},
						Description: `This parameter supports the name, display_name, or id of a folder or label. To return drafts, pass in "drafts"`,
						Args: []model.Arg{{
							Name: "in",
						}},
					}, {
						Name:        []string{"--limit"},
						Description: `The number of objects to return. Defaults to 100. If set too high, requests may fail to prevent excessively large response bodies`,
						Args: []model.Arg{{
							Name: "limit",
						}},
					}, {
						Name:        []string{"--not_in"},
						Description: `Filter messages not in a given folder or label. The filter supports the name, display, or ID of a folder or label`,
						Args: []model.Arg{{
							Name: "not_in",
						}},
					}, {
						Name:        []string{"--offset"},
						Description: `Zero-based offset from default object sorting. See [pagination](/docs/api/#overview--pagintaion) for more information`,
						Args: []model.Arg{{
							Name: "offset",
						}},
					}, {
						Name:        []string{"--received_after"},
						Description: `Return messages received after this unix timestamp`,
						Args: []model.Arg{{
							Name: "received_after",
						}},
					}, {
						Name:        []string{"--received_before"},
						Description: `Return messages received before this unix timestamp`,
						Args: []model.Arg{{
							Name: "received_before",
						}},
					}, {
						Name:        []string{"--subject"},
						Description: `Return threads with a matching literal subject`,
						Args: []model.Arg{{
							Name: "subject",
						}},
					}, {
						Name:        []string{"--thread_id"},
						Description: `Return messages belonging to a specific thread`,
						Args: []model.Arg{{
							Name: "thread_id",
						}},
					}, {
						Name:        []string{"--to"},
						Description: `Return threads containing messages sent to this email address`,
						Args: []model.Arg{{
							Name: "to",
						}},
					}, {
						Name:        []string{"--view"},
						Description: `If using Search, only "view=expanded" is supported. See [Views](/docs/api/#overview--views) for more information`,
						Args: []model.Arg{{
							Name: "view",
						}},
					}},
				}, {
					Name:        []string{"put"},
					Description: `Update a Message`,
					Options: []model.Option{{
						Name:        []string{"--body"},
						Description: `Request body (or use < to redirect a JSON file)`,
						Args: []model.Arg{{
							Name: "body",
						}},
					}, {
						Name:        []string{"--display_columns"},
						Description: `(optional) A comma separated list of column headers to display for the table output`,
						Args: []model.Arg{{
							Name: "headers",
						}},
					}},
				}},
			}, {
				Name:        []string{"neural"},
				Description: `Neural API commands`,
				Subcommands: []model.Subcommand{{
					Name:        []string{"categorize"},
					Description: `Categorize commands`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"put"},
						Description: `Categorize a Message`,
						Options: []model.Option{{
							Name:        []string{"--body"},
							Description: `Request body (or use < to redirect a JSON file)`,
							Args: []model.Arg{{
								Name: "body",
							}},
						}, {
							Name:        []string{"--display_columns"},
							Description: `(optional) A comma separated list of column headers to display for the table output`,
							Args: []model.Arg{{
								Name: "headers",
							}},
						}},
					}},
				}, {
					Name:        []string{"categorize:feedback"},
					Description: `Categorize:feedback commands`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"post"},
						Description: `Categorize Message Feedback`,
						Options: []model.Option{{
							Name:        []string{"--body"},
							Description: `Request body (or use < to redirect a JSON file)`,
							Args: []model.Arg{{
								Name: "body",
							}},
						}, {
							Name:        []string{"--display_columns"},
							Description: `(optional) A comma separated list of column headers to display for the table output`,
							Args: []model.Arg{{
								Name: "headers",
							}},
						}},
					}},
				}, {
					Name:        []string{"conversation"},
					Description: `Conversation commands`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"put"},
						Description: `Clean Conversation`,
						Options: []model.Option{{
							Name:        []string{"--body"},
							Description: `Request body (or use < to redirect a JSON file)`,
							Args: []model.Arg{{
								Name: "body",
							}},
						}, {
							Name:        []string{"--display_columns"},
							Description: `(optional) A comma separated list of column headers to display for the table output`,
							Args: []model.Arg{{
								Name: "headers",
							}},
						}},
					}},
				}, {
					Name:        []string{"conversation:feedback"},
					Description: `Conversation:feedback commands`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"post"},
						Description: `Clean Conversations Feedback`,
						Options: []model.Option{{
							Name:        []string{"--body"},
							Description: `Request body (or use < to redirect a JSON file)`,
							Args: []model.Arg{{
								Name: "body",
							}},
						}, {
							Name:        []string{"--display_columns"},
							Description: `(optional) A comma separated list of column headers to display for the table output`,
							Args: []model.Arg{{
								Name: "headers",
							}},
						}},
					}},
				}, {
					Name:        []string{"ocr"},
					Description: `Ocr commands`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"put"},
						Description: `Optical Character Recognition`,
						Options: []model.Option{{
							Name:        []string{"--body"},
							Description: `Request body (or use < to redirect a JSON file)`,
							Args: []model.Arg{{
								Name: "body",
							}},
						}, {
							Name:        []string{"--display_columns"},
							Description: `(optional) A comma separated list of column headers to display for the table output`,
							Args: []model.Arg{{
								Name: "headers",
							}},
						}},
					}},
				}, {
					Name:        []string{"ocr:feedback"},
					Description: `Ocr:feedback commands`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"post"},
						Description: `Optical Character Recognition Feedback`,
						Options: []model.Option{{
							Name:        []string{"--body"},
							Description: `Request body (or use < to redirect a JSON file)`,
							Args: []model.Arg{{
								Name: "body",
							}},
						}, {
							Name:        []string{"--display_columns"},
							Description: `(optional) A comma separated list of column headers to display for the table output`,
							Args: []model.Arg{{
								Name: "headers",
							}},
						}},
					}},
				}, {
					Name:        []string{"sentiment"},
					Description: `Sentiment commands`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"put"},
						Description: `Sentiment Analysis`,
						Options: []model.Option{{
							Name:        []string{"--body"},
							Description: `Request body (or use < to redirect a JSON file)`,
							Args: []model.Arg{{
								Name: "body",
							}},
						}, {
							Name:        []string{"--display_columns"},
							Description: `(optional) A comma separated list of column headers to display for the table output`,
							Args: []model.Arg{{
								Name: "headers",
							}},
						}},
					}},
				}, {
					Name:        []string{"sentiment:feedback"},
					Description: `Sentiment:feedback commands`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"post"},
						Description: `Sentiment Analysis Feedback`,
						Options: []model.Option{{
							Name:        []string{"--body"},
							Description: `Request body (or use < to redirect a JSON file)`,
							Args: []model.Arg{{
								Name: "body",
							}},
						}, {
							Name:        []string{"--display_columns"},
							Description: `(optional) A comma separated list of column headers to display for the table output`,
							Args: []model.Arg{{
								Name: "headers",
							}},
						}},
					}},
				}, {
					Name:        []string{"signature"},
					Description: `Signature commands`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"put"},
						Description: `Signature Extraction`,
						Options: []model.Option{{
							Name:        []string{"--body"},
							Description: `Request body (or use < to redirect a JSON file)`,
							Args: []model.Arg{{
								Name: "body",
							}},
						}, {
							Name:        []string{"--display_columns"},
							Description: `(optional) A comma separated list of column headers to display for the table output`,
							Args: []model.Arg{{
								Name: "headers",
							}},
						}},
					}},
				}, {
					Name:        []string{"signature:feedback"},
					Description: `Signature:feedback commands`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"post"},
						Description: `Signature Extraction Feedback`,
						Options: []model.Option{{
							Name:        []string{"--body"},
							Description: `Request body (or use < to redirect a JSON file)`,
							Args: []model.Arg{{
								Name: "body",
							}},
						}, {
							Name:        []string{"--display_columns"},
							Description: `(optional) A comma separated list of column headers to display for the table output`,
							Args: []model.Arg{{
								Name: "headers",
							}},
						}},
					}},
				}},
			}, {
				Name:        []string{"resources"},
				Description: `Resources API commands`,
				Subcommands: []model.Subcommand{{
					Name:        []string{"get"},
					Description: `Return Room Resource Information`,
					Options: []model.Option{{
						Name:        []string{"--display_columns"},
						Description: `(optional) A comma separated list of column headers to display for the table output`,
						Args: []model.Arg{{
							Name: "headers",
						}},
					}, {
						Name:        []string{"--limit"},
						Description: `The number of objects to return. Defaults to 100. If set too high, requests may fail to prevent excessively large response bodies`,
						Args: []model.Arg{{
							Name: "limit",
						}},
					}},
				}},
			}, {
				Name:        []string{"send"},
				Description: `Send API commands`,
				Subcommands: []model.Subcommand{{
					Name:        []string{"post"},
					Description: `Send a Message`,
					Options: []model.Option{{
						Name:        []string{"--body"},
						Description: `Request body (or use < to redirect a JSON file)`,
						Args: []model.Arg{{
							Name: "body",
						}},
					}, {
						Name:        []string{"--display_columns"},
						Description: `(optional) A comma separated list of column headers to display for the table output`,
						Args: []model.Arg{{
							Name: "headers",
						}},
					}},
				}},
			}, {
				Name:        []string{"send-rsvp"},
				Description: `Send-Rsvp API commands`,
				Subcommands: []model.Subcommand{{
					Name:        []string{"post"},
					Description: `Send RSVP`,
					Options: []model.Option{{
						Name:        []string{"--body"},
						Description: `Request body (or use < to redirect a JSON file)`,
						Args: []model.Arg{{
							Name: "body",
						}},
					}, {
						Name:        []string{"--display_columns"},
						Description: `(optional) A comma separated list of column headers to display for the table output`,
						Args: []model.Arg{{
							Name: "headers",
						}},
					}},
				}},
			}, {
				Name:        []string{"threads"},
				Description: `Threads API commands`,
				Subcommands: []model.Subcommand{{
					Name:        []string{"get"},
					Description: `Returns All Threads`,
					Options: []model.Option{{
						Name:        []string{"--any_email"},
						Description: `Return emails that have been sent or received from this comma-separated list of email addresses. For example: mail1@mail.com,mail2@mail.com. A maximum of 25 emails may be specified`,
						Args: []model.Arg{{
							Name: "any_email",
						}},
					}, {
						Name:        []string{"--bcc"},
						Description: `Return threads containing messages that were BCC'd to this email address, likely sent from the parent account. (Most SMTP gateways remove BCC information.)`,
						Args: []model.Arg{{
							Name: "bcc",
						}},
					}, {
						Name:        []string{"--cc"},
						Description: `Return threads containing messages that were CC'd to this email address`,
						Args: []model.Arg{{
							Name: "cc",
						}},
					}, {
						Name:        []string{"--display_columns"},
						Description: `(optional) A comma separated list of column headers to display for the table output`,
						Args: []model.Arg{{
							Name: "headers",
						}},
					}, {
						Name:        []string{"--filename"},
						Description: `Return object with the filename`,
						Args: []model.Arg{{
							Name: "filename",
						}},
					}, {
						Name:        []string{"--from"},
						Description: `Return threads containing messages sent from this email address`,
						Args: []model.Arg{{
							Name: "from",
						}},
					}, {
						Name:        []string{"--in"},
						Description: `This parameter supports the name, display_name, or id of a folder or label. To return drafts, pass in "drafts"`,
						Args: []model.Arg{{
							Name: "in",
						}},
					}, {
						Name:        []string{"--last_message_after"},
						Description: `Return threads whose most recent message was received after this Unix-based timestamp`,
						Args: []model.Arg{{
							Name: "last_message_after",
						}},
					}, {
						Name:        []string{"--last_message_before"},
						Description: `Return threads whose most recent message was received before this Unix-based timestamp`,
						Args: []model.Arg{{
							Name: "last_message_before",
						}},
					}, {
						Name:        []string{"--last_updated_after"},
						Description: `Return threads whose most recent last updated date is after this Unix-based timestamp`,
						Args: []model.Arg{{
							Name: "last_updated_after",
						}},
					}, {
						Name:        []string{"--last_updated_before"},
						Description: `Return threads whose most recent last updated date is before this Unix-based timestamp`,
						Args: []model.Arg{{
							Name: "last_updated_before",
						}},
					}, {
						Name:        []string{"--last_updated_timestamp"},
						Description: `Return threads that been updated or changed recently. UNIX timestamp`,
						Args: []model.Arg{{
							Name: "last_updated_timestamp",
						}},
					}, {
						Name:        []string{"--limit"},
						Description: `The number of objects to return. Defaults to 100. If set too high, requests may fail to prevent excessively large response bodies`,
						Args: []model.Arg{{
							Name: "limit",
						}},
					}, {
						Name:        []string{"--not_in"},
						Description: `Filter messages not in a given folder or label. The filter supports the name, display, or ID of a folder or label`,
						Args: []model.Arg{{
							Name: "not_in",
						}},
					}, {
						Name:        []string{"--offset"},
						Description: `Zero-based offset from default object sorting. See [pagination](/docs/api/#overview--pagintaion) for more information`,
						Args: []model.Arg{{
							Name: "offset",
						}},
					}, {
						Name:        []string{"--started_after"},
						Description: `Return threads whose first message was received after this Unix-based timestamp`,
						Args: []model.Arg{{
							Name: "started_after",
						}},
					}, {
						Name:        []string{"--started_before"},
						Description: `Return threads whose first message was received before this Unix-based timestamp`,
						Args: []model.Arg{{
							Name: "started_before",
						}},
					}, {
						Name:        []string{"--subject"},
						Description: `Return threads with a matching literal subject`,
						Args: []model.Arg{{
							Name: "subject",
						}},
					}, {
						Name:        []string{"--to"},
						Description: `Return threads containing messages sent to this email address`,
						Args: []model.Arg{{
							Name: "to",
						}},
					}, {
						Name:        []string{"--view"},
						Description: `If using Search, only "view=expanded" is supported. See [Views](/docs/api/#overview--views) for more information`,
						Args: []model.Arg{{
							Name: "view",
						}},
					}},
				}, {
					Name:        []string{"put"},
					Description: `Update a Thread`,
					Options: []model.Option{{
						Name:        []string{"--body"},
						Description: `Request body (or use < to redirect a JSON file)`,
						Args: []model.Arg{{
							Name: "body",
						}},
					}, {
						Name:        []string{"--display_columns"},
						Description: `(optional) A comma separated list of column headers to display for the table output`,
						Args: []model.Arg{{
							Name: "headers",
						}},
					}},
				}},
			}, {
				Name:        []string{"v2"},
				Description: `V2 API commands`,
				Subcommands: []model.Subcommand{{
					Name:        []string{"outbox"},
					Description: `Outbox commands`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"delete"},
						Description: `Delete Scheduled Message`,
						Options: []model.Option{{
							Name:        []string{"--display_columns"},
							Description: `(optional) A comma separated list of column headers to display for the table output`,
							Args: []model.Arg{{
								Name: "headers",
							}},
						}},
					}, {
						Name:        []string{"get"},
						Description: `Return All Messages to Be Sent`,
						Options: []model.Option{{
							Name:        []string{"--display_columns"},
							Description: `(optional) A comma separated list of column headers to display for the table output`,
							Args: []model.Arg{{
								Name: "headers",
							}},
						}},
					}, {
						Name:        []string{"post"},
						Description: `Send a Message`,
						Options: []model.Option{{
							Name:        []string{"--body"},
							Description: `Request body (or use < to redirect a JSON file)`,
							Args: []model.Arg{{
								Name: "body",
							}},
						}, {
							Name:        []string{"--display_columns"},
							Description: `(optional) A comma separated list of column headers to display for the table output`,
							Args: []model.Arg{{
								Name: "headers",
							}},
						}},
					}, {
						Name:        []string{"put"},
						Description: `Update Send Time`,
						Options: []model.Option{{
							Name:        []string{"--body"},
							Description: `Request body (or use < to redirect a JSON file)`,
							Args: []model.Arg{{
								Name: "body",
							}},
						}, {
							Name:        []string{"--display_columns"},
							Description: `(optional) A comma separated list of column headers to display for the table output`,
							Args: []model.Arg{{
								Name: "headers",
							}},
						}},
					}},
				}},
			}, {
				Name:        []string{"webhooks"},
				Description: `Gets a list of webhooks`,
				Options: []model.Option{{
					Name:        []string{"--limit", "-l"},
					Description: `This is usage`,
					Args: []model.Arg{{
						Name: "limit",
					}},
				}},
			}},
		}, {
			Name:        []string{"auth"},
			Description: `Auth your email account`,
		}, {
			Name:        []string{"docs"},
			Description: `Documentation lookup (preview)`,
		}, {
			Name:        []string{"init"},
			Description: `Setup your dashboard application credentials`,
		}, {
			Name:        []string{"version"},
			Description: `Gets the current CLI version`,
		}, {
			Name:        []string{"webhook"},
			Description: `Create and test Nylas' Webhooks`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"tunnel"},
				Description: `Starts listening for incoming Nylas webhook events`,
				Options: []model.Option{{
					Name:        []string{"--callback_domain"},
					Description: `The domain for the callback URL`,
					Args: []model.Arg{{
						Name: "callback_domain",
					}},
				}, {
					Name:        []string{"--forward", "-f"},
					Description: `Address to forward requests to (e.g. http://localhost:3000)`,
					Args: []model.Arg{{
						Name: "forward",
					}},
				}, {
					Name:        []string{"--print", "-p"},
					Description: `Prints the (json) payload to the console`,
				}, {
					Name:        []string{"--triggers", "-t"},
					Description: `The triggers to register for your webhooks`,
					Args: []model.Arg{{
						Name:        "triggers",
						Suggestions: []model.Suggestion{{Name: []string{`account.connected`}}, {Name: []string{`account.running`}}, {Name: []string{`account.stopped`}}, {Name: []string{`account.invalid`}}, {Name: []string{`account.sync_error`}}, {Name: []string{`message.created`}}, {Name: []string{`message.opened`}}, {Name: []string{`message.updated`}}, {Name: []string{`message.link_clicked`}}, {Name: []string{`message.bounced`}}, {Name: []string{`thread.replied`}}, {Name: []string{`calendar.created`}}, {Name: []string{`calendar.updated`}}, {Name: []string{`calendar.deleted`}}, {Name: []string{`event.created`}}, {Name: []string{`event.updated`}}, {Name: []string{`event.deleted`}}, {Name: []string{`contact.created`}}, {Name: []string{`contact.updated`}}, {Name: []string{`contact.updated`}}, {Name: []string{`contact.deleted`}}, {Name: []string{`job.successful`}}, {Name: []string{`job.failed`}}},
					}},
				}, {
					Name:        []string{"--websocket_domain"},
					Description: `The domain for the websocket server`,
					Args: []model.Arg{{
						Name: "websocket_domain",
					}},
				}},
			}},
		}, {
			Name:        []string{"help"},
			Description: `Help about any command`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"api"},
				Description: `Access the Nylas API endpoints`,
				Subcommands: []model.Subcommand{{
					Name:        []string{"a"},
					Description: `A API commands`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"accounts"},
						Description: `Accounts commands`,
						Subcommands: []model.Subcommand{{
							Name:        []string{"delete"},
							Description: `Delete an Account`,
						}, {
							Name:        []string{"get"},
							Description: `Return All Accounts`,
						}},
					}, {
						Name:        []string{"accounts:downgrade"},
						Description: `Accounts:downgrade commands`,
						Subcommands: []model.Subcommand{{
							Name:        []string{"post"},
							Description: `Cancel an Account`,
						}},
					}, {
						Name:        []string{"accounts:revoke-all"},
						Description: `Accounts:revoke-all commands`,
						Subcommands: []model.Subcommand{{
							Name:        []string{"post"},
							Description: `Revoke All Tokens`,
						}},
					}, {
						Name:        []string{"accounts:token-info"},
						Description: `Accounts:token-info commands`,
						Subcommands: []model.Subcommand{{
							Name:        []string{"post"},
							Description: `Return Token Information`,
						}},
					}, {
						Name:        []string{"accounts:upgrade"},
						Description: `Accounts:upgrade commands`,
						Subcommands: []model.Subcommand{{
							Name:        []string{"post"},
							Description: `Reactivate an Account`,
						}},
					}},
				}, {
					Name:        []string{"accounts"},
					Description: `Gets a list of authed accounts`,
				}, {
					Name:        []string{"applications"},
					Description: `Gets your application info`,
				}, {
					Name:        []string{"calendars"},
					Description: `Calendars API commands`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"availability"},
						Description: `Availability commands`,
						Subcommands: []model.Subcommand{{
							Name:        []string{"post"},
							Description: `Availability for a Single Meeting`,
						}},
					}, {
						Name:        []string{"availability:consecutive"},
						Description: `Availability:consecutive commands`,
						Subcommands: []model.Subcommand{{
							Name:        []string{"post"},
							Description: `Availability for Multiple Meetings`,
						}},
					}, {
						Name:        []string{"delete"},
						Description: `Delete a Calendar`,
					}, {
						Name:        []string{"free-busy"},
						Description: `Free-busy commands`,
						Subcommands: []model.Subcommand{{
							Name:        []string{"post"},
							Description: `Calendar Free or Busy`,
						}},
					}, {
						Name:        []string{"get"},
						Description: `Return All Calendars`,
					}, {
						Name:        []string{"post"},
						Description: `Create a Calendar`,
					}, {
						Name:        []string{"put"},
						Description: `Update A Calendar`,
					}},
				}, {
					Name:        []string{"connect"},
					Description: `Connect API commands`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"detect-provider"},
						Description: `Detect-provider commands`,
						Subcommands: []model.Subcommand{{
							Name:        []string{"post"},
							Description: `Detect Provider`,
						}},
					}},
				}, {
					Name:        []string{"contacts"},
					Description: `Contacts API commands`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"delete"},
						Description: `Delete a Contact`,
					}, {
						Name:        []string{"get"},
						Description: `Return All Contacts`,
					}, {
						Name:        []string{"groups"},
						Description: `Groups commands`,
						Subcommands: []model.Subcommand{{
							Name:        []string{"get"},
							Description: `Return Contact Groups`,
						}},
					}, {
						Name:        []string{"picture"},
						Description: `Picture commands`,
						Subcommands: []model.Subcommand{{
							Name:        []string{"get"},
							Description: `Returns a Contacts Picture`,
						}},
					}, {
						Name:        []string{"post"},
						Description: `Create a Contact`,
					}, {
						Name:        []string{"put"},
						Description: `Update a Contact`,
					}},
				}, {
					Name:        []string{"delta"},
					Description: `Delta API commands`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"get"},
						Description: `Request Delta Cursors`,
					}, {
						Name:        []string{"latest:cursor"},
						Description: `Latest:cursor commands`,
						Subcommands: []model.Subcommand{{
							Name:        []string{"post"},
							Description: `Get a Delta Cursor`,
						}},
					}, {
						Name:        []string{"longpoll"},
						Description: `Longpoll commands`,
						Subcommands: []model.Subcommand{{
							Name:        []string{"get"},
							Description: `Return Long-Polling Deltas`,
						}},
					}, {
						Name:        []string{"streaming"},
						Description: `Streaming commands`,
						Subcommands: []model.Subcommand{{
							Name:        []string{"get"},
							Description: `Streaming Deltas`,
						}},
					}},
				}, {
					Name:        []string{"drafts"},
					Description: `Drafts API commands`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"delete"},
						Description: `Delete a Draft`,
					}, {
						Name:        []string{"get"},
						Description: `Return All Drafts`,
					}, {
						Name:        []string{"post"},
						Description: `Create a New Draft`,
					}, {
						Name:        []string{"put"},
						Description: `Update a Draft`,
					}},
				}, {
					Name:        []string{"events"},
					Description: `Events API commands`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"delete"},
						Description: `Delete An Event`,
					}, {
						Name:        []string{"get"},
						Description: `Return All Events`,
					}, {
						Name:        []string{"post"},
						Description: `Create an Event`,
					}, {
						Name:        []string{"put"},
						Description: `Update An Event`,
					}, {
						Name:        []string{"to-ics"},
						Description: `To-ics commands`,
						Subcommands: []model.Subcommand{{
							Name:        []string{"post"},
							Description: `Generate ICS File`,
						}},
					}},
				}, {
					Name:        []string{"files"},
					Description: `Files API commands`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"delete"},
						Description: `Delete a File`,
					}, {
						Name:        []string{"download"},
						Description: `Download commands`,
						Subcommands: []model.Subcommand{{
							Name:        []string{"get"},
							Description: `Download a File`,
						}},
					}, {
						Name:        []string{"get"},
						Description: `Return All Files`,
					}, {
						Name:        []string{"post"},
						Description: `Upload a New File`,
					}},
				}, {
					Name:        []string{"folders"},
					Description: `Folders API commands`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"delete"},
						Description: `Delete a Folder`,
					}, {
						Name:        []string{"get"},
						Description: `Return All Folders`,
					}, {
						Name:        []string{"post"},
						Description: `Create a Folder`,
					}, {
						Name:        []string{"put"},
						Description: `Update a Folder`,
					}},
				}, {
					Name:        []string{"ip-addresses"},
					Description: `Gets a list of Nylas IP addresses (paid customers only)`,
				}, {
					Name:        []string{"job-statuses"},
					Description: `Job-Statuses API commands`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"get"},
						Description: `Return All Job Statuses`,
					}},
				}, {
					Name:        []string{"labels"},
					Description: `Labels API commands`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"delete"},
						Description: `Delete a Label`,
					}, {
						Name:        []string{"get"},
						Description: `Return All Labels`,
					}, {
						Name:        []string{"post"},
						Description: `Create a Label`,
					}, {
						Name:        []string{"put"},
						Description: `Update a Label`,
					}},
				}, {
					Name:        []string{"messages"},
					Description: `Messages API commands`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"get"},
						Description: `Return All Messages`,
					}, {
						Name:        []string{"put"},
						Description: `Update a Message`,
					}},
				}, {
					Name:        []string{"neural"},
					Description: `Neural API commands`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"categorize"},
						Description: `Categorize commands`,
						Subcommands: []model.Subcommand{{
							Name:        []string{"put"},
							Description: `Categorize a Message`,
						}},
					}, {
						Name:        []string{"categorize:feedback"},
						Description: `Categorize:feedback commands`,
						Subcommands: []model.Subcommand{{
							Name:        []string{"post"},
							Description: `Categorize Message Feedback`,
						}},
					}, {
						Name:        []string{"conversation"},
						Description: `Conversation commands`,
						Subcommands: []model.Subcommand{{
							Name:        []string{"put"},
							Description: `Clean Conversation`,
						}},
					}, {
						Name:        []string{"conversation:feedback"},
						Description: `Conversation:feedback commands`,
						Subcommands: []model.Subcommand{{
							Name:        []string{"post"},
							Description: `Clean Conversations Feedback`,
						}},
					}, {
						Name:        []string{"ocr"},
						Description: `Ocr commands`,
						Subcommands: []model.Subcommand{{
							Name:        []string{"put"},
							Description: `Optical Character Recognition`,
						}},
					}, {
						Name:        []string{"ocr:feedback"},
						Description: `Ocr:feedback commands`,
						Subcommands: []model.Subcommand{{
							Name:        []string{"post"},
							Description: `Optical Character Recognition Feedback`,
						}},
					}, {
						Name:        []string{"sentiment"},
						Description: `Sentiment commands`,
						Subcommands: []model.Subcommand{{
							Name:        []string{"put"},
							Description: `Sentiment Analysis`,
						}},
					}, {
						Name:        []string{"sentiment:feedback"},
						Description: `Sentiment:feedback commands`,
						Subcommands: []model.Subcommand{{
							Name:        []string{"post"},
							Description: `Sentiment Analysis Feedback`,
						}},
					}, {
						Name:        []string{"signature"},
						Description: `Signature commands`,
						Subcommands: []model.Subcommand{{
							Name:        []string{"put"},
							Description: `Signature Extraction`,
						}},
					}, {
						Name:        []string{"signature:feedback"},
						Description: `Signature:feedback commands`,
						Subcommands: []model.Subcommand{{
							Name:        []string{"post"},
							Description: `Signature Extraction Feedback`,
						}},
					}},
				}, {
					Name:        []string{"resources"},
					Description: `Resources API commands`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"get"},
						Description: `Return Room Resource Information`,
					}},
				}, {
					Name:        []string{"send"},
					Description: `Send API commands`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"post"},
						Description: `Send a Message`,
					}},
				}, {
					Name:        []string{"send-rsvp"},
					Description: `Send-Rsvp API commands`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"post"},
						Description: `Send RSVP`,
					}},
				}, {
					Name:        []string{"threads"},
					Description: `Threads API commands`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"get"},
						Description: `Returns All Threads`,
					}, {
						Name:        []string{"put"},
						Description: `Update a Thread`,
					}},
				}, {
					Name:        []string{"v2"},
					Description: `V2 API commands`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"outbox"},
						Description: `Outbox commands`,
						Subcommands: []model.Subcommand{{
							Name:        []string{"delete"},
							Description: `Delete Scheduled Message`,
						}, {
							Name:        []string{"get"},
							Description: `Return All Messages to Be Sent`,
						}, {
							Name:        []string{"post"},
							Description: `Send a Message`,
						}, {
							Name:        []string{"put"},
							Description: `Update Send Time`,
						}},
					}},
				}, {
					Name:        []string{"webhooks"},
					Description: `Gets a list of webhooks`,
				}},
			}, {
				Name:        []string{"auth"},
				Description: `Auth your email account`,
			}, {
				Name:        []string{"docs"},
				Description: `Documentation lookup (preview)`,
			}, {
				Name:        []string{"init"},
				Description: `Setup your dashboard application credentials`,
			}, {
				Name:        []string{"version"},
				Description: `Gets the current CLI version`,
			}, {
				Name:        []string{"webhook"},
				Description: `Create and test Nylas' Webhooks`,
				Subcommands: []model.Subcommand{{
					Name:        []string{"tunnel"},
					Description: `Starts listening for incoming Nylas webhook events`,
				}},
			}},
		}},
	}
}
