// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["oh-my-posh"] = model.Subcommand{
		Name:        []string{"oh-my-posh"},
		Description: ``,
		Options: []model.Option{{
			Name:         []string{"--help", "-h"},
			Description:  `Show help for oh-my-posh`,
			IsPersistent: true,
		}},
		Subcommands: []model.Subcommand{{
			Name:        []string{"init"},
			Description: `Initialize oh-my-posh for your shell`,
			Args: []model.Arg{{
				Name: "SHELL",
				Suggestions: []model.Suggestion{{
					Name: []string{`zsh`},
				}, {
					Name: []string{`fish`},
				}, {
					Name: []string{`pwsh`},
				}, {
					Name: []string{`powershell`},
				}, {
					Name: []string{`cmd`},
				}, {
					Name: []string{`bash`},
				}, {
					Name: []string{`shell`},
				}},
			}},
			Options: []model.Option{{
				Name:        []string{"--config", "-c"},
				Description: `The config file to use`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFilepaths, model.TemplateHistory},
					Name:        "CONFIG",
					Description: `The configuration to use`,
				}},
				IsPersistent: true,
			}, {
				Name:        []string{"--print", "-p"},
				Description: `Print the init script`,
			}},
		}, {
			Name:        []string{"get"},
			Description: `Get oh-my-posh values`,
			Args: []model.Arg{{
				Name: "VALUE",
				Suggestions: []model.Suggestion{{
					Name:        []string{`millis`},
					Description: `Get the current timestamp in milliseconds, example usage: 'oh-my-posh get millis'`,
				}, {
					Name:        []string{`shell`},
					Description: `Get the current shell, example usage: 'oh-my-posh get shell'`,
				}},
			}},
		}, {
			Name:        []string{"debug"},
			Description: `Debug oh-my-posh, example usage: 'oh-my-posh debug'`,
			Options: []model.Option{{
				Name:        []string{"--config", "-c"},
				Description: `The config file to use`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFilepaths, model.TemplateHistory},
					Name:        "CONFIG",
					Description: `The configuration to use`,
				}},
				IsPersistent: true,
			}},
		}, {
			Name:        []string{"config"},
			Description: `Interact with the oh-my-posh configuration`,
			Options: []model.Option{{
				Name:        []string{"--config", "-c"},
				Description: `The config file to use`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFilepaths, model.TemplateHistory},
					Name:        "CONFIG",
					Description: `The configuration to use`,
				}},
				IsPersistent: true,
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"edit"},
				Description: `Edit the config file, example usage: 'oh-my-posh config edit'`,
			}, {
				Name:        []string{"migrate"},
				Description: `Migrate the config file, example usage: 'oh-my-posh config migrate --config ~/.config.omp.json'`,
				Options: []model.Option{{
					Name:        []string{"--write", "-w"},
					Description: `Write the migrated config to the configuration file, example usage: 'oh-my-posh config migrate --write'`,
				}, {
					Name:        []string{"--format", "-f"},
					Description: `The file format to use`,
					Args: []model.Arg{{
						Name:        "FORMAT",
						Description: `The export format`,
						Suggestions: []model.Suggestion{{Name: []string{`json`}}, {Name: []string{`yaml`}}, {Name: []string{`toml`}}},
					}},
				}},
			}, {
				Name:        []string{"export"},
				Description: `Export the config file, example usage: 'oh-my-posh config export --config ~/.config.omp.toml'`,
				Options: []model.Option{{
					Name:        []string{"--output", "-o"},
					Description: `The file to output the migrated config to, example usage: 'oh-my-posh config migrate --output ~/.config.omp.json'`,
					Args: []model.Arg{{
						Templates:   []model.Template{model.TemplateFilepaths},
						Name:        "OUTPUT",
						Description: `The file to write to`,
					}},
				}, {
					Name:        []string{"--format", "-f"},
					Description: `The file format to use`,
					Args: []model.Arg{{
						Name:        "FORMAT",
						Description: `The export format`,
						Suggestions: []model.Suggestion{{Name: []string{`json`}}, {Name: []string{`yaml`}}, {Name: []string{`toml`}}},
					}},
				}},
			}},
		}, {
			Name:        []string{"print"},
			Description: `Print a prompt`,
			Args: []model.Arg{{
				Name: "PROMPT",
				Suggestions: []model.Suggestion{{
					Name: []string{`primary`},
				}, {
					Name: []string{`secondary`},
				}, {
					Name: []string{`right`},
				}, {
					Name: []string{`transient`},
				}, {
					Name: []string{`tooltip`},
				}, {
					Name: []string{`valid`},
				}, {
					Name: []string{`error`},
				}},
			}},
			Options: []model.Option{{
				Name:        []string{"--config", "-c"},
				Description: `The config file to use`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFilepaths, model.TemplateHistory},
					Name:        "CONFIG",
					Description: `The configuration to use`,
				}},
				IsPersistent: true,
			}, {
				Name:        []string{"--terminal-width", "-w"},
				Description: `The terminal width, example usage: 'oh-my-posh print primary --terminal-width 200'`,
				Args: []model.Arg{{
					Name:        "WIDTH",
					Description: `The terminal width`,
				}},
			}, {
				Name:        []string{"--command"},
				Description: `The current command for tooltips, example usage: 'oh-my-posh print tooltip --command az'`,
				Args: []model.Arg{{
					Name:        "COMMAND",
					Description: `The tooltip command`,
				}},
			}, {
				Name:        []string{"--error", "-e"},
				Description: `The last exit code, example usage: 'oh-my-posh print primary --error 127'`,
				Args: []model.Arg{{
					Name:        "ERROR CODE",
					Description: `The last error code`,
				}},
			}, {
				Name:        []string{"--eval"},
				Description: `Use eval to render the prompt, example usage: 'oh-my-posh print primary --eval'`,
			}, {
				Name:        []string{"--execution-time"},
				Description: `Use last command execution time in millis, example usage: 'oh-my-posh print primary --execution-time 200'`,
				Args: []model.Arg{{
					Name:        "EXECUTION TIME",
					Description: `The last command's execution time`,
				}},
			}, {
				Name:        []string{"--plain", "-p"},
				Description: `Print a prompt without ASNI codes, example usage: 'oh-my-posh print primary --plain'`,
			}, {
				Name:        []string{"--pswd"},
				Description: `The current working directory according to PowerShell, example usage: 'oh-my-posh print primary --pswd C:\Users\user\Documents'`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFilepaths},
					Name:        "POWERSHELL WORKING DIRECTORY",
					Description: `The working directory according to PowerShell`,
				}},
			}, {
				Name:        []string{"--pwd"},
				Description: `The current working directory, example usage: 'oh-my-posh print primary --pwd /home/user/Documents'`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFilepaths},
					Name:        "WORKING DIRECTORY",
					Description: `The working directory`,
				}},
			}, {
				Name:        []string{"--shell"},
				Description: `The current shell, example usage: 'oh-my-posh print primary --shell fish'`,
				Args: []model.Arg{{
					Name:        "SHELL",
					Description: `The shell used`,
					Suggestions: []model.Suggestion{{Name: []string{`zsh`}}, {Name: []string{`fish`}}, {Name: []string{`pwsh`}}, {Name: []string{`powershell`}}, {Name: []string{`cmd`}}, {Name: []string{`bash`}}, {Name: []string{`shell`}}},
				}},
			}, {
				Name:        []string{"--stack-count"},
				Description: `The directory stack count, example usage: 'oh-my-posh print primary --stack-count 1'`,
				Args: []model.Arg{{
					Name:        "NUM",
					Description: `The number of stacks`,
				}},
			}},
		}, {
			Name:        []string{"version"},
			Description: `Display the oh-my-posh version, example usage: 'oh-my-posh version'`,
		}},
	}
}
