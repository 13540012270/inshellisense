// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.
//
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

package specs

import (
	"github.com/microsoft/clac/autocomplete/model"
)

func init() {
	Specs["exa"] = model.Subcommand{
		Name:        []string{"exa"},
		Description: `A modern replacement for ls`,
		Args: []model.Arg{{
			Templates:  []model.Template{model.TemplateFilepaths},
			Name:       "files...",
			IsVariadic: true,
		}},
		Options: []model.Option{{
			Name:        []string{"-?", "--help"},
			Description: `Show list of command-line options`,
		}, {
			Name:        []string{"-v", "--version"},
			Description: `Show version of exa`,
		}, {
			Name:        []string{"-1", "--oneline"},
			Description: `Display one entry per line`,
		}, {
			Name:        []string{"-l", "--long"},
			Description: `Display extended file metadata as a table`,
		}, {
			Name:        []string{"-G", "--grid"},
			Description: `Display entries as a grid (default)`,
		}, {
			Name:        []string{"-x", "--across"},
			Description: `Sort the grid across, rather than downwards`,
		}, {
			Name:        []string{"-R", "--recurse"},
			Description: `Recurse into directories`,
		}, {
			Name:        []string{"-T", "--tree"},
			Description: `Recurse into directories as a tree`,
		}, {
			Name:        []string{"-F", "--classify"},
			Description: `Display type indicator by file names`,
		}, {
			Name:        []string{"--colour", "--color"},
			Description: `When to use terminal colours (always, auto, never)`,
			Args: []model.Arg{{
				Name: "when",
				Suggestions: []model.Suggestion{{
					Name: []string{`always`},
				}, {
					Name: []string{`auto`},
				}, {
					Name: []string{`never`},
				}},
			}},
		}, {
			Name:        []string{"--colour-scale", "--color-scale"},
			Description: `Highlight levels of file sizes distinctly`,
		}, {
			Name:        []string{"-a", "--all"},
			Description: `Show hidden and 'dot' files`,
		}, {
			Name:        []string{"-d", "--list-dirs"},
			Description: `List directories like regular files`,
		}, {
			Name:        []string{"-L", "--level"},
			Description: `Limit the depth of recursion`,
			Args: []model.Arg{{
				Name: "DEPTH",
			}},
		}, {
			Name:        []string{"-r", "--reverse"},
			Description: `Reverse the sort order`,
		}, {
			Name:        []string{"-s", "--sort"},
			Description: `Which field to sort by`,
			Args: []model.Arg{{
				Name: "sort field",
				Suggestions: []model.Suggestion{{
					Name: []string{`name`},
				}, {
					Name: []string{`Name`},
				}, {
					Name: []string{`extension`},
				}, {
					Name: []string{`Extension`},
				}, {
					Name: []string{`size`},
				}, {
					Name: []string{`type`},
				}, {
					Name: []string{`modified`},
				}, {
					Name: []string{`accessed`},
				}, {
					Name: []string{`created`},
				}, {
					Name: []string{`inode`},
				}, {
					Name: []string{`none`},
				}, {
					Name: []string{`date`},
				}, {
					Name: []string{`time`},
				}, {
					Name: []string{`old`},
				}, {
					Name: []string{`new`},
				}},
			}},
		}, {
			Name:        []string{"--group-directories-first"},
			Description: `List directories before other files`,
		}, {
			Name:        []string{"-D", "--only-dirs"},
			Description: `List only directories`,
		}, {
			Name:        []string{"-I", "--ignore-glob"},
			Description: `Glob patterns (pipe-separated) of files to ignore`,
			Args: []model.Arg{{
				Name: "GLOB",
			}},
		}, {
			Name:        []string{"--git-ignore"},
			Description: `Ignore files mentioned in '.gitignore'`,
		}, {
			Name:        []string{"-b", "--binary"},
			Description: `List file sizes with binary prefixes`,
		}, {
			Name:        []string{"-B", "--bytes"},
			Description: `List file sizes in bytes, without any prefixes`,
		}, {
			Name:        []string{"-g", "--group"},
			Description: `List each file's group`,
		}, {
			Name:        []string{"-h", "--header"},
			Description: `Add a header row to each column`,
		}, {
			Name:        []string{"-H", "--links"},
			Description: `List each file's number of hard links`,
		}, {
			Name:        []string{"-i", "--inode"},
			Description: `List each file's inode number`,
		}, {
			Name:        []string{"-m", "--modified"},
			Description: `Use the modified timestamp field`,
		}, {
			Name:        []string{"-S", "--blocks"},
			Description: `Show number of file system blocks`,
		}, {
			Name:        []string{"-t", "--time"},
			Description: `Which timestamp field to list (modified, accessed, created)`,
			Args: []model.Arg{{
				Name: "FIELD",
				Suggestions: []model.Suggestion{{
					Name: []string{`modified`},
				}, {
					Name: []string{`accessed`},
				}, {
					Name: []string{`created`},
				}},
			}},
		}, {
			Name:        []string{"-u", "--accessed"},
			Description: `Use the accessed timestamp field`,
		}, {
			Name:        []string{"-U", "--created"},
			Description: `Use the created timestamp field`,
		}, {
			Name:        []string{"--time-style"},
			Description: `How to format timestamps (default, iso, long-iso, full-iso)`,
			Args: []model.Arg{{
				Name: "style",
				Suggestions: []model.Suggestion{{
					Name: []string{`default`},
				}, {
					Name: []string{`iso`},
				}, {
					Name: []string{`long-iso`},
				}, {
					Name: []string{`full-iso`},
				}},
			}},
		}, {
			Name:        []string{"--git"},
			Description: `List each file's Git status, if tracked or ignored`,
		}, {
			Name:        []string{"-@", "--extended"},
			Description: `List each file's extended attributes and sizes`,
		}, {
			Name:        []string{"--icons"},
			Description: `Shows icons before each folder or file`,
			ExclusiveOn: []string{"--no-icons"},
		}, {
			Name:        []string{"--no-icons"},
			Description: `Does not display icons`,
			ExclusiveOn: []string{"--icons"},
		}, {
			Name:        []string{"--changed"},
			Description: `Displays when a file or folder got changed instead of modified in the header`,
		}},
	}
}
