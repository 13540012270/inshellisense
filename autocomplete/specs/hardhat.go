// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["hardhat"] = model.Subcommand{
		Name:        []string{"hardhat"},
		Description: `Ethereum development environment`,
		Options: []model.Option{{
			Name:        []string{"config"},
			Description: `A Hardhat config file`,
		}, {
			Name:        []string{"--emoji"},
			Description: `Use emoji in messages`,
		}, {
			Name:        []string{"--max-memory"},
			Description: `The maximum amount of memory that Hardhat can use`,
		}, {
			Name:        []string{"--help"},
			Description: `Shows the help text or task's help if name is provided`,
			Args: []model.Arg{{
				Name:       "task",
				IsOptional: true,
			}},
		}, {
			Name:        []string{"--network"},
			Description: `The network to connect to`,
		}, {
			Name:        []string{"---show-stack-traces"},
			Description: `Show stack traces`,
		}, {
			Name:        []string{"--verbose"},
			Description: `Enables Hardhat verbose logging`,
		}, {
			Name:        []string{"--version"},
			Description: `Shows hardhat's version`,
		}},
		Subcommands: []model.Subcommand{{
			Name:        []string{"accounts"},
			Description: `Prints the list of accounts`,
		}, {
			Name:        []string{"check"},
			Description: `Check whatever you need`,
		}, {
			Name:        []string{"clean"},
			Description: `Clears the cache and deletes all artifacts`,
			Options: []model.Option{{
				Name:        []string{"--global"},
				Description: `Clear the global cache`,
			}},
		}, {
			Name:        []string{"compile"},
			Description: `Compiles the entire project, building all artifacts`,
			Options: []model.Option{{
				Name:        []string{"--force"},
				Description: `Force compilation ignoring cache`,
			}, {
				Name:        []string{"--quiet"},
				Description: `Makes the compilation process less verbose`,
			}},
		}, {
			Name:        []string{"console"},
			Description: `Opens a hardhat console`,
			Options: []model.Option{{
				Name:        []string{"--no-compile"},
				Description: `Don't compile before running this task`,
			}},
		}, {
			Name:        []string{"flatten"},
			Description: `Flattens and prints contracts and their dependencies`,
		}, {
			Name:        []string{"help"},
			Description: `Prints this message`,
		}, {
			Name:        []string{"node"},
			Description: `Starts a JSON-RPC server on top of Hardhat Network`,
			Options: []model.Option{{
				Name:        []string{"--fork"},
				Description: `The URL of the JSON-RPC server to fork from`,
			}, {
				Name:        []string{"--fork-block-number"},
				Description: `The block number to fork from`,
			}, {
				Name:        []string{"--hostname"},
				Description: `The host to which to bind to for new connections`,
			}, {
				Name:        []string{"--port"},
				Description: `The port on which to listen for new connections (default: 8545)`,
			}},
		}, {
			Name:        []string{"run"},
			Description: `Runs a user-defined script after compiling the project`,
			Options: []model.Option{{
				Name:        []string{"--no-compile"},
				Description: `Don't compile before running this task`,
			}},
		}, {
			Name:        []string{"test"},
			Description: `Runs mocha tests`,
			Options: []model.Option{{
				Name:        []string{"--no-compile"},
				Description: `Don't compile before running this task`,
			}},
		}},
	}
}
