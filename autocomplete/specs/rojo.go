// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.
//
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

package specs

import (
	"github.com/microsoft/clac/autocomplete/model"
)

func init() {
	Specs["rojo"] = model.Subcommand{
		Name:        []string{"rojo"},
		Description: `Enables professional-grade development tools for Roblox developers`,
		Options: []model.Option{{
			Name:         []string{"--help", "-h"},
			Description:  `Print help information`,
			IsPersistent: true,
		}, {
			Name:        []string{"--color"},
			Description: `Set color behavior. Valid values are auto, always, and never [default: auto]`,
			Args: []model.Arg{{
				Name:        "COLOR",
				Suggestions: []model.Suggestion{{Name: []string{`auto`}}, {Name: []string{`always`}}, {Name: []string{`never`}}},
			}},
			IsPersistent: true,
		}, {
			Name:         []string{"--verbose", "-v"},
			Description:  `Sets verbosity level. Can be specified multiple times`,
			IsPersistent: true,
		}, {
			Name:        []string{"--version", "-V"},
			Description: `Print version information`,
		}},
		Subcommands: []model.Subcommand{{
			Name:        []string{"help"},
			Description: `Print this message or the help of the given subcommand(s)`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateHelp},
				Name:      "SUBCOMMAND",
			}},
		}, {
			Name:        []string{"build"},
			Description: `Generates a model or place file from the Rojo project`,
			Args: []model.Arg{{
				Name:        "PROJECT",
				Description: `Path to the project to serve. Defaults to the current directory [default: ]`,
			}},
			Options: []model.Option{{
				Name:        []string{"--output", "-o"},
				Description: `Where to output the result. Should end in .rbxm, .rbxl, .rbxmx, or .rbxlx`,
				Args: []model.Arg{{
					Name:        "OUTPUT",
					Description: `Where to output the result. Should end in .rbxm, .rbxl, .rbxmx, or .rbxlx`,
					Generator:   nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--watch"},
				Description: `Whether to automatically rebuild when any input files change`,
			}},
		}, {
			Name:        []string{"doc"},
			Description: `Open Rojo's documentation in your browser`,
		}, {
			Name:        []string{"fmt-project"},
			Description: `Reformat a Rojo project using the standard JSON formatting rules`,
			Args: []model.Arg{{
				Name:        "PROJECT",
				Description: `Path to the project to format. Defaults to the current directory [default: ]`,
			}},
		}, {
			Name:        []string{"init"},
			Description: `Initializes a new Rojo project`,
			Args: []model.Arg{{
				Name:        "PATH",
				Description: `Path to the place to create the project. Defaults to the current directory [default: ]`,
			}},
			Options: []model.Option{{
				Name:        []string{"--kind"},
				Description: `The kind of project to create, 'place' or 'model'. Defaults to place`,
				Args: []model.Arg{{
					Name:        "KIND",
					Description: `The kind of project to create, 'place' or 'model'. Defaults to place`,
					Suggestions: []model.Suggestion{{Name: []string{`place`}}, {Name: []string{`model`}}},
				}},
			}},
		}, {
			Name:        []string{"plugin"},
			Description: `Install Rojo's plugin`,
		}, {
			Name:        []string{"serve"},
			Description: `Expose a Rojo project to the Rojo Studio plugin`,
			Options: []model.Option{{
				Name:        []string{"address"},
				Description: `The IP address to listen on. Defaults to "127.0.0.1"`,
				Args: []model.Arg{{
					Name:        "ADDRESS",
					Description: `The IP address to listen on. Defaults to "127.0.0.1"`,
				}},
			}},
		}, {
			Name:        []string{"sourcemap"},
			Description: `Generates a sourcemap file from the Rojo project`,
			Args: []model.Arg{{
				Name:        "PROJECT",
				Description: `Path to the project to use for the sourcemap. Defaults to the current directory [default: ]`,
			}},
			Options: []model.Option{{
				Name:        []string{"--include-non-scripts"},
				Description: `If non-script files should be included or not. Defaults to false`,
			}, {
				Name:        []string{"--output", "-o"},
				Description: `Where to output the sourcemap. Omit this to use stdout instead of writing to a file. Should end in .json`,
				Args: []model.Arg{{
					Name:        "OUTPUT",
					Description: `Where to output the sourcemap. Omit this to use stdout instead of writing to a file. Should end in .json`,
					Generator:   nil, // TODO: port over generator
				}},
			}},
		}, {
			Name:        []string{"upload"},
			Description: `Builds the project and uploads it to Roblox`,
			Args:        []model.Arg{{}},
			Options: []model.Option{{
				Name:        []string{"--api-key"},
				Description: `API key obtained from create.roblox.com/credentials. Rojo will use the Open Cloud API when this is provided. Only supports uploading to a place`,
				Args: []model.Arg{{
					Name:        "API_KEY",
					Description: `API key obtained from create.roblox.com/credentials. Rojo will use the Open Cloud API when this is provided. Only supports uploading to a place`,
				}},
			}, {
				Name:        []string{"--asset_id"},
				Description: `Asset ID to upload to`,
				Args: []model.Arg{{
					Name:        "ASSET_ID",
					Description: `Asset ID to upload to`,
				}},
			}, {
				Name:        []string{"--cookie"},
				Description: `Authenication cookie to use. If not specified, Rojo will attempt to find one from the system automatically`,
				Args: []model.Arg{{
					Name:        "COOKIE",
					Description: `Authenication cookie to use. If not specified, Rojo will attempt to find one from the system automatically`,
				}},
			}, {
				Name:        []string{"--universe_id"},
				Description: `The Universe ID of the given place. Required when using the Open Cloud API`,
				Args: []model.Arg{{
					Name:        "UNIVERSE_ID",
					Description: `The Universe ID of the given place. Required when using the Open Cloud API`,
				}},
			}},
		}},
	}
}
