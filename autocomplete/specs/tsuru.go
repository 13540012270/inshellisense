// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["tsuru"] = model.Subcommand{
		Name:        []string{"tsuru"},
		Description: `Tsuru is the command line utility used by application developers, that will allow users to create, list, bind and manage apps`,
		Options: []model.Option{{
			Name:        []string{"--help", "-h"},
			Description: `Show help for tsuru`,
		}},
		Subcommands: []model.Subcommand{{
			Name:        []string{"app"},
			Description: `App commands`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"build"},
				Description: `Builds a tsuru app image respecting`,
				Options: []model.Option{{
					Name:        []string{"-a", "--app"},
					Description: `App name`,
					Args: []model.Arg{{
						Name:        "app",
						Description: `App name`,
						Generator:   nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"-f", "--files-only"},
					Description: `Enables single file build into the root of the app's tree`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "file-or-dir-n",
					}},
				}, {
					Name:        []string{"-h", "--help"},
					Description: `Help for build`,
				}, {
					Name:        []string{"-t", "--tag"},
					Description: `The image tag`,
				}},
			}, {
				Name:        []string{"create"},
				Description: `Creates a new app using the given name and platform`,
				Args: []model.Arg{{
					Name:        "app",
					Description: `App name`,
					Generator:   nil, // TODO: port over generator
				}, {
					Name:        "platform",
					Description: `Platform of the app`,
					Generator:   nil, // TODO: port over generator
				}},
				Options: []model.Option{{
					Name:        []string{"-o", "--pool"},
					Description: `Filter applications by pool`,
					Args: []model.Arg{{
						Name:        "pool",
						Description: `Poll name`,
						Generator:   nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"-t", "--team"},
					Description: `Team that will own the app`,
					Args: []model.Arg{{
						Name:        "team",
						Description: `Pool where the app will be created`,
						Generator:   nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"-p", "--plan"},
					Description: `Plan to be used by the app`,
					Args: []model.Arg{{
						Name:        "plan",
						Description: `Plan to be used by the app`,
						Generator:   nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"-d", "--description"},
					Description: `Description of the app`,
				}, {
					Name:        []string{"-g", "--tag"},
					Description: `Tag to be used by the app`,
				}, {
					Name:        []string{"--router-opts"},
					Description: `Router options`,
				}},
			}, {
				Name:        []string{"deploy"},
				Description: `Deploys set of files and/or directories to tsuru server`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file-or-dir-n",
				}},
				Options: []model.Option{{
					Name:        []string{"-a", "--app"},
					Description: `App name`,
					Args: []model.Arg{{
						Name:        "app",
						Description: `App name`,
						Generator:   nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"-f", "--files-only"},
					Description: `Enables single file deployment into the root of the app's tree`,
				}, {
					Name:        []string{"-i", "--image"},
					Description: `The image to deploy in app`,
				}, {
					Name:        []string{"-m", "--message"},
					Description: `A message describing this deploy`,
				}, {
					Name:        []string{"--new-version"},
					Description: `Creates a new version for the current deployment while preserving existing versions`,
				}, {
					Name:        []string{"--override-old-versions"},
					Description: `Force replace all deployed versions by this new deploy`,
				}},
				Subcommands: []model.Subcommand{{
					Name:        []string{"list"},
					Description: `List information about deploys for an application`,
					Options: []model.Option{{
						Name:        []string{"-a", "--app"},
						Description: `App name`,
						Args: []model.Arg{{
							Name:        "app",
							Description: `App name`,
							Generator:   nil, // TODO: port over generator
						}},
					}},
				}, {
					Name:        []string{"rebuild"},
					Description: `Rebuild and deploy the last app image`,
					Options: []model.Option{{
						Name:        []string{"-a", "--app"},
						Description: `App name`,
						Args: []model.Arg{{
							Name:        "app",
							Description: `App name`,
							Generator:   nil, // TODO: port over generator
						}},
					}, {
						Name:        []string{"--new-version"},
						Description: `Creates a new version for the current deployment while preserving existing versions`,
					}, {
						Name:        []string{"--override-old-versions"},
						Description: `Force replace all deployed versions by this new deploy`,
					}},
				}, {
					Name:        []string{"rollback"},
					Description: `Deploys an existing image for an app`,
					Options: []model.Option{{
						Name:        []string{"-a", "--app"},
						Description: `App name`,
						Args: []model.Arg{{
							Name:        "app",
							Description: `App name`,
							Generator:   nil, // TODO: port over generator
						}},
					}, {
						Name:        []string{"--new-version"},
						Description: `Creates a new version for the current deployment while preserving existing versions`,
					}, {
						Name:        []string{"--override-old-versions"},
						Description: `Force replace all deployed versions by this new deploy`,
					}, {
						Name:        []string{"y", "--yes"},
						Description: `Answer yes to all questions`,
					}},
					Subcommands: []model.Subcommand{{
						Name:        []string{"update"},
						Description: `Locks an existing image of an app`,
						Options: []model.Option{{
							Name:        []string{"-a", "--app"},
							Description: `App name`,
							Args: []model.Arg{{
								Name:        "app",
								Description: `App name`,
								Generator:   nil, // TODO: port over generator
							}},
						}, {
							Name:        []string{"-d", "--disable"},
							Description: `Enables or disables the rollback on a specific image version`,
						}, {
							Name:        []string{"-i", "--image"},
							Description: `The image name for an app version`,
						}, {
							Name:        []string{"-r", "--reason"},
							Description: `The reason why the rollback has to be disabled`,
						}},
					}},
				}},
			}, {
				Name:        []string{"grant"},
				Description: `Allows a team to access an application`,
				Args: []model.Arg{{
					Name:        "team",
					Description: `Team name`,
					Generator:   nil, // TODO: port over generator
				}},
				Options: []model.Option{{
					Name:        []string{"-a", "--app"},
					Description: `App name`,
					Args: []model.Arg{{
						Name:        "app",
						Description: `App name`,
						Generator:   nil, // TODO: port over generator
					}},
				}},
			}, {
				Name:        []string{"info"},
				Description: `Shows information about an app`,
				Options: []model.Option{{
					Name:        []string{"-a", "--app"},
					Description: `App name`,
					Args: []model.Arg{{
						Name:        "app",
						Description: `App name`,
						Generator:   nil, // TODO: port over generator
					}},
				}},
			}, {
				Name:        []string{"list"},
				Description: `List all apps`,
				Options: []model.Option{{
					Name:        []string{"-n", "--name"},
					Description: `Filter applications by name`,
				}, {
					Name:        []string{"-o", "--pool"},
					Description: `Filter applications by pool`,
					Args: []model.Arg{{
						Name:        "pool",
						Description: `Poll name`,
						Generator:   nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"-p", "--platform"},
					Description: `Filter applications by platform`,
					Args: []model.Arg{{
						Name:        "platform",
						Description: `Platform`,
						Generator:   nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"-q"},
					Description: `Display only applications name`,
				}, {
					Name:        []string{"-s", "--status"},
					Description: `Filter applications by unit status. Accepts multiple values separated by commas. Possible values can be: building, created, starting, error, started, stopped, asleep`,
				}, {
					Name:        []string{"-t", "--team"},
					Description: `Team that will own the app`,
					Args: []model.Arg{{
						Name:        "team",
						Description: `Pool where the app will be created`,
						Generator:   nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"-u", "--user"},
					Description: `Filter applications by owner`,
				}},
			}, {
				Name:        []string{"log"},
				Description: `Shows the logs of an app`,
				Options: []model.Option{{
					Name:        []string{"-a", "--app"},
					Description: `App name`,
					Args: []model.Arg{{
						Name:        "app",
						Description: `App name`,
						Generator:   nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"-f", "--follow"},
					Description: `Follow log output`,
				}, {
					Name:        []string{"-l", "--lines"},
					Description: `Number of lines to show`,
				}, {
					Name:        []string{"no-data"},
					Description: `No date information`,
				}, {
					Name:        []string{"-s", "--source"},
					Description: `The log from the given source`,
				}, {
					Name:        []string{"-u", "--unit"},
					Description: `The log from the given unit`,
				}},
			}, {
				Name:        []string{"metadata"},
				Description: `Manage metadata for an app`,
				Subcommands: []model.Subcommand{{
					Name:        []string{"get"},
					Description: `Retrieves metadata for an application`,
					Options: []model.Option{{
						Name:        []string{"-a", "--app"},
						Description: `App name`,
						Args: []model.Arg{{
							Name:        "app",
							Description: `App name`,
							Generator:   nil, // TODO: port over generator
						}},
					}},
				}, {
					Name:        []string{"set"},
					Description: `Sets metadata for an application`,
					Args: []model.Arg{{
						Name:        "<NAME=value>",
						Description: `The metadata key`,
						IsVariadic:  true,
					}},
					Options: []model.Option{{
						Name:        []string{"-a", "--app"},
						Description: `App name`,
						Args: []model.Arg{{
							Name:        "app",
							Description: `App name`,
							Generator:   nil, // TODO: port over generator
						}},
					}, {
						Name:        []string{"--no-restart"},
						Description: `Do not restart the app after the metadata is set`,
					}, {
						Name:        []string{"-t", "--type"},
						Description: `Metadata type: annotation or label`,
					}},
				}, {
					Name:        []string{"unset"},
					Description: `Unsets metadata for an application`,
					Args: []model.Arg{{
						Name:        "NAME",
						Description: `The metadata key`,
						IsVariadic:  true,
					}},
					Options: []model.Option{{
						Name:        []string{"-a", "--app"},
						Description: `App name`,
						Args: []model.Arg{{
							Name:        "app",
							Description: `App name`,
							Generator:   nil, // TODO: port over generator
						}},
					}, {
						Name:        []string{"--no-restart"},
						Description: `Do not restart the app after the metadata is set`,
					}, {
						Name:        []string{"-t", "--type"},
						Description: `Metadata type: annotation or label`,
					}},
				}},
			}, {
				Name:        []string{"quota"},
				Description: `Shows the quota of an app`,
				Subcommands: []model.Subcommand{{
					Name:        []string{"change"},
					Description: `Changes the limit of units that an app can have`,
					Args: []model.Arg{{
						Name:        "limit",
						Description: `The new limit of units`,
					}},
					Options: []model.Option{{
						Name:        []string{"-a", "--app"},
						Description: `App name`,
						Args: []model.Arg{{
							Name:        "app",
							Description: `App name`,
							Generator:   nil, // TODO: port over generator
						}},
					}},
				}, {
					Name:        []string{"view"},
					Description: `Displays the current usage and limit of the given app`,
					Options: []model.Option{{
						Name:        []string{"-a", "--app"},
						Description: `App name`,
						Args: []model.Arg{{
							Name:        "app",
							Description: `App name`,
							Generator:   nil, // TODO: port over generator
						}},
					}},
				}},
			}, {
				Name:        []string{"remove"},
				Description: `Removes an app`,
				Options: []model.Option{{
					Name:        []string{"-a", "--app"},
					Description: `App name`,
					Args: []model.Arg{{
						Name:        "app",
						Description: `App name`,
						Generator:   nil, // TODO: port over generator
					}},
				}},
			}, {
				Name:        []string{"restart"},
				Description: `Restarts an application, or one of the processes of the application`,
				Options: []model.Option{{
					Name:        []string{"-a", "--app"},
					Description: `App name`,
					Args: []model.Arg{{
						Name:        "app",
						Description: `App name`,
						Generator:   nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"-p", "--process"},
					Description: `Process name`,
				}, {
					Name: []string{"--version"},
				}},
			}, {
				Name:        []string{"revoke"},
				Description: `Removes a team access to an application`,
				Args: []model.Arg{{
					Name:        "team",
					Description: `Team name`,
					Generator:   nil, // TODO: port over generator
				}},
				Options: []model.Option{{
					Name:        []string{"-a", "--app"},
					Description: `App name`,
					Args: []model.Arg{{
						Name:        "app",
						Description: `App name`,
						Generator:   nil, // TODO: port over generator
					}},
				}},
			}, {
				Name:        []string{"router"},
				Description: `Manage routers for an app`,
				Subcommands: []model.Subcommand{{
					Name:        []string{"add"},
					Description: `Adds a router to an app`,
					Args: []model.Arg{{
						Name:        "router",
						Description: `Router name`,
					}},
					Options: []model.Option{{
						Name:        []string{"-a", "--app"},
						Description: `App name`,
						Args: []model.Arg{{
							Name:        "app",
							Description: `App name`,
							Generator:   nil, // TODO: port over generator
						}},
					}, {
						Name:        []string{"-o", "--opts"},
						Description: `Custom options sent directly to router implementation`,
					}},
				}, {
					Name:        []string{"list"},
					Description: `List routers for an app`,
					Options: []model.Option{{
						Name:        []string{"-a", "--app"},
						Description: `App name`,
						Args: []model.Arg{{
							Name:        "app",
							Description: `App name`,
							Generator:   nil, // TODO: port over generator
						}},
					}},
				}, {
					Name:        []string{"remove"},
					Description: `Removes a router from an app`,
					Args: []model.Arg{{
						Name:        "router",
						Description: `Router name`,
					}},
					Options: []model.Option{{
						Name:        []string{"-a", "--app"},
						Description: `App name`,
						Args: []model.Arg{{
							Name:        "app",
							Description: `App name`,
							Generator:   nil, // TODO: port over generator
						}},
					}},
				}, {
					Name:        []string{"update"},
					Description: `Updates a router for an app`,
					Options: []model.Option{{
						Name:        []string{"-a", "--app"},
						Description: `App name`,
						Args: []model.Arg{{
							Name:        "app",
							Description: `App name`,
							Generator:   nil, // TODO: port over generator
						}},
					}, {
						Name:        []string{"-o", "--opts"},
						Description: `Custom options sent directly to router implementation`,
					}},
				}, {
					Name:        []string{"version"},
					Description: `Manage router versions for an app`,
					Subcommands: []model.Subcommand{{
						Name:        []string{"add"},
						Description: `Adds a router version to an app`,
						Args: []model.Arg{{
							Name: "version",
						}},
						Options: []model.Option{{
							Name:        []string{"-a", "--app"},
							Description: `App name`,
							Args: []model.Arg{{
								Name:        "app",
								Description: `App name`,
								Generator:   nil, // TODO: port over generator
							}},
						}},
					}, {
						Name:        []string{"remove"},
						Description: `Removes a router version from an app`,
						Args: []model.Arg{{
							Name: "version",
						}},
						Options: []model.Option{{
							Name:        []string{"-a", "--app"},
							Description: `App name`,
							Args: []model.Arg{{
								Name:        "app",
								Description: `App name`,
								Generator:   nil, // TODO: port over generator
							}},
						}},
					}},
				}},
			}, {
				Name:        []string{"routes"},
				Description: `List all routers`,
				Subcommands: []model.Subcommand{{
					Name:        []string{"rebuild"},
					Description: `Rebuild routes for an application`,
					Options: []model.Option{{
						Name:        []string{"-a", "--app"},
						Description: `App name`,
						Args: []model.Arg{{
							Name:        "app",
							Description: `App name`,
							Generator:   nil, // TODO: port over generator
						}},
					}},
				}},
			}, {
				Name:        []string{"run"},
				Description: `Runs a command inside an app`,
				Options: []model.Option{{
					Name:        []string{"-a", "--app"},
					Description: `App name`,
					Args: []model.Arg{{
						Name:        "app",
						Description: `App name`,
						Generator:   nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"-i", "--isolated"},
					Description: `Running in ephemeral container`,
				}, {
					Name:        []string{"-o", "--once"},
					Description: `Running only one unit`,
				}},
			}, {
				Name:        []string{"shell"},
				Description: `Opens a remote shell inside unit, using the API server as a proxy`,
				Args: []model.Arg{{
					Name:        "app",
					Description: `App name`,
					Generator:   nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"start"},
				Description: `Starts an app`,
				Options: []model.Option{{
					Name:        []string{"-a", "--app"},
					Description: `App name`,
					Args: []model.Arg{{
						Name:        "app",
						Description: `App name`,
						Generator:   nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"-p", "--process"},
					Description: `Process name`,
				}, {
					Name:        []string{"--version"},
					Description: `Version number`,
				}},
			}, {
				Name:        []string{"stop"},
				Description: `Stops an application`,
				Options: []model.Option{{
					Name:        []string{"-a", "--app"},
					Description: `App name`,
					Args: []model.Arg{{
						Name:        "app",
						Description: `App name`,
						Generator:   nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"-p", "--process"},
					Description: `Process name`,
				}, {
					Name:        []string{"--version"},
					Description: `Version number`,
				}},
			}, {
				Name:        []string{"swap"},
				Description: `Swaps routing between two apps`,
				Options: []model.Option{{
					Name:        []string{"-c", "--cname-only"},
					Description: `Swap only the cname`,
				}, {
					Name:        []string{"-f", "--force"},
					Description: `Force Swap among apps with different number of units or different platform`,
				}},
			}, {
				Name:        []string{"unlock"},
				Description: `Forces the removal of an application lock`,
				Options: []model.Option{{
					Name:        []string{"-a", "--app"},
					Description: `App name`,
					Args: []model.Arg{{
						Name:        "app",
						Description: `App name`,
						Generator:   nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"-y", "--assume-yes"},
					Description: `Don't ask for confirmation`,
				}},
			}, {
				Name:        []string{"update"},
				Description: `Updates an app`,
				Options: []model.Option{{
					Name:        []string{"-a", "--app"},
					Description: `App name`,
					Args: []model.Arg{{
						Name:        "app",
						Description: `App name`,
						Generator:   nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"--cpu"},
					Description: `CPU limit for app, this will override the plan cpu value. One cpu is equivalent to 1 vCPU/Core, fractional requests are allowed and the expression 0.1 is equivalent to the expression 100m`,
				}, {
					Name:        []string{"-d", "--description"},
					Description: `Changes description for the app`,
				}, {
					Name:        []string{"-g", "--tag"},
					Description: `Add tags for the app`,
				}, {
					Name:        []string{"-i", "--image-reset"},
					Description: `Forces next deploy to build app image from scratch`,
				}, {
					Name:        []string{"-p", "--platform"},
					Description: `Filter applications by platform`,
					Args: []model.Arg{{
						Name:        "platform",
						Description: `Platform`,
						Generator:   nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"--memory"},
					Description: `Memory limit for app, this will override the plan memory value. You can express memory as a bytes integer or using one of these suffixes: E, P, T, G, M, K, Ei, Pi, Ti, Gi, Mi, Ki`,
				}, {
					Name:        []string{"--no-restart"},
					Description: `Prevent tsuru from restarting the application`,
				}, {
					Name:        []string{"-o", "--pool"},
					Description: `Filter applications by pool`,
					Args: []model.Arg{{
						Name:        "pool",
						Description: `Poll name`,
						Generator:   nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"-p", "--plan"},
					Description: `Plan to be used by the app`,
					Args: []model.Arg{{
						Name:        "plan",
						Description: `Plan to be used by the app`,
						Generator:   nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"-t", "--team"},
					Description: `Team that will own the app`,
					Args: []model.Arg{{
						Name:        "team",
						Description: `Pool where the app will be created`,
						Generator:   nil, // TODO: port over generator
					}},
				}},
			}},
		}, {
			Name:        []string{"env"},
			Description: `App environment variables`,
			Options: []model.Option{{
				Name:        []string{"-a", "--app"},
				Description: `App name`,
				Args: []model.Arg{{
					Name:        "app",
					Description: `App name`,
					Generator:   nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"-p", "--private"},
				Description: `Private environment variables`,
			}, {
				Name:        []string{"--no-restart"},
				Description: `Don't restart the app after setting the env vars`,
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"get"},
				Description: `Get environment variables from an app`,
				Options: []model.Option{{
					Name:        []string{"-a", "--app"},
					Description: `App name`,
					Args: []model.Arg{{
						Name:        "app",
						Description: `App name`,
						Generator:   nil, // TODO: port over generator
					}},
				}},
			}, {
				Name:        []string{"set"},
				Description: `Set environment variables to an app`,
				Options: []model.Option{{
					Name:        []string{"-a", "--app"},
					Description: `App name`,
					Args: []model.Arg{{
						Name:        "app",
						Description: `App name`,
						Generator:   nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"-p", "--private"},
					Description: `Private environment variables`,
				}, {
					Name:        []string{"--no-restart"},
					Description: `Don't restart the app after setting the env vars`,
				}},
			}, {
				Name:        []string{"unset"},
				Description: `Unset environment variables from an app`,
				Options: []model.Option{{
					Name:        []string{"-a", "--app"},
					Description: `App name`,
					Args: []model.Arg{{
						Name:        "app",
						Description: `App name`,
						Generator:   nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"--no-restart"},
					Description: `Don't restart the app after setting the env vars`,
				}},
			}},
		}, {
			Name:        []string{"cluster"},
			Description: `Cluster commands`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"add"},
				Description: `Add a new cluster`,
			}, {
				Name:        []string{"list"},
				Description: `List all clusters`,
			}, {
				Name:        []string{"remove"},
				Description: `Remove a cluster`,
			}, {
				Name:        []string{"update"},
				Description: `Update a cluster`,
			}},
		}, {
			Name:        []string{"certificate"},
			Description: `Certificate commands`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"list"},
				Description: `List App TLS certificates`,
			}, {
				Name:        []string{"set"},
				Description: `Creates or update a TLS certificate into the specific app`,
			}, {
				Name:        []string{"unset"},
				Description: `Unset a TLS certificate from a specific app`,
			}},
		}, {
			Name:        []string{"login"},
			Description: `Login to tsuru server`,
			Args: []model.Arg{{
				Name: "email",
			}},
		}, {
			Name:        []string{"logout"},
			Description: `Logout from tsuru server`,
		}},
	}
}
