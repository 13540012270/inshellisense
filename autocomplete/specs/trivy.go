// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["trivy"] = model.Subcommand{
		Name:        []string{"trivy"},
		Description: `A simple and comprehensive vulnerability scanner`,
		Options: []model.Option{{
			Name:        []string{"--quiet", "-q"},
			Description: `Suppress progress bar and log output [$TRIVY_QUIET]`,
		}, {
			Name:        []string{"--debug", "-d"},
			Description: `Enable debug output [$TRIVY_DEBUG]`,
		}, {
			Name:        []string{"--cache-dir"},
			Description: `Cache directory [$TRIVY_CACHE_DIR]`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFolders},
				Name:      "cache-dir",
			}},
		}, {
			Name:         []string{"--help", "-h"},
			Description:  `Show help`,
			IsPersistent: true,
		}, {
			Name:        []string{"--version", "-v"},
			Description: `Print the version`,
		}},
		Subcommands: []model.Subcommand{{
			Name:        []string{"image", "i"},
			Description: `Scan an image`,
			Args: []model.Arg{{
				Name: "image_name",
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"--template", "-t"},
				Description: `Output template [$TRIVY_TEMPLATE]`,
				Args: []model.Arg{{
					Name: "output",
				}},
			}, {
				Name:        []string{"--format", "-f"},
				Description: `Format (table, json, sarif, template) (default: "table") [$TRIVY_FORMAT]`,
				Args: []model.Arg{{
					Name:        "format",
					Suggestions: []model.Suggestion{{Name: []string{`table`}}, {Name: []string{`json`}}, {Name: []string{`sarif`}}, {Name: []string{`template`}}},
				}},
			}, {
				Name:        []string{"--severity", "-s"},
				Description: `Severities of vulnerabilities to be displayed (comma separated) (default: "UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL") [$TRIVY_SEVERITY]`,
				Args: []model.Arg{{
					Name:      "severity",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--output", "-o"},
				Description: `Output file name [$TRIVY_OUTPUT]`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "input",
				}},
			}, {
				Name:        []string{"--exit-code"},
				Description: `Exit code when vulnerabilities were found (default: 0) [$TRIVY_EXIT_CODE]`,
				Args: []model.Arg{{
					Name: "exitCode",
				}},
			}, {
				Name:        []string{"--clear-cache", "-c"},
				Description: `Clear image caches without scanning [$TRIVY_CLEAR_CACHE]`,
			}, {
				Name:        []string{"--vuln-type"},
				Description: `Comma-separated list of vulnerability types (os,library) (default: "os,library") [$TRIVY_VULN_TYPE]`,
				Args: []model.Arg{{
					Name:      "vulnType",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--security-checks"},
				Description: `Comma-separated list of what security issues to detect (vuln,config) (default: "vuln") [$TRIVY_SECURITY_CHECKS]`,
				Args: []model.Arg{{
					Name:      "securityChecks",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--ignorefile"},
				Description: `Specify .trivyignore file (default: ".trivyignore") [$TRIVY_IGNOREFILE]]`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "ignorefile",
				}},
			}, {
				Name:        []string{"--timeout"},
				Description: `Timeout (default: 5m0s) [$TRIVY_TIMEOUT]`,
				Args: []model.Arg{{
					Name: "timeout",
				}},
			}, {
				Name:        []string{"--ignore-policy"},
				Description: `Specify the Rego file to evaluate each vulnerability [$TRIVY_IGNORE_POLICY]`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "ignorePolicy",
				}},
			}, {
				Name:        []string{"--list-all-pkgs"},
				Description: `Enabling the option will output all packages regardless of vulnerability (default: false) [$TRIVY_LIST_ALL_PKGS]`,
			}, {
				Name:        []string{"--cache-backend"},
				Description: `Cache backend (e.g. redis://localhost:6379) (default: "fs") [$TRIVY_CACHE_BACKEND]`,
				Args: []model.Arg{{
					Name: "cacheBackend",
				}},
			}, {
				Name:        []string{"--no-progress"},
				Description: `Suppress progress bar [$TRIVY_NO_PROGRESS]`,
			}, {
				Name:        []string{"--offline-scan"},
				Description: `Do not issue API requests to identify dependencies [$TRIVY_OFFLINE_SCAN]`,
			}, {
				Name:        []string{"--skip-files"},
				Description: `Specify the file paths to skip traversal [$TRIVY_SKIP_FILES]`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "skipFiles",
				}},
			}, {
				Name:        []string{"--skip-dirs"},
				Description: `Allow insecure server connections when using SSL [$TRIVY_INSECURE]`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "skipDirs",
				}},
			}, {
				Name:        []string{"--skip-db-update", "--skip-update"},
				Description: `Skip updating vulnerability database [$TRIVY_SKIP_UPDATE, $TRIVY_SKIP_DB_UPDATE]`,
			}, {
				Name:        []string{"--removed-pkgs"},
				Description: `Detect vulnerabilities of removed packages (default: false) [$TRIVY_REMOVED_PKGS]`,
			}, {
				Name:        []string{"--input", "-i"},
				Description: `Input file path instead of image name [$TRIVY_INPUT]`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "input",
				}},
			}, {
				Name:        []string{"--download-db-only"},
				Description: `Download/update vulnerability database but don't run a scan [$TRIVY_DOWNLOAD_DB_ONLY]`,
			}, {
				Name:        []string{"--reset"},
				Description: `Remove all caches and database [$TRIVY_RESET]`,
			}, {
				Name:        []string{"--ignore-unfixed"},
				Description: `Display only fixed vulnerabilities [$TRIVY_IGNORE_UNFIXED]`,
			}, {
				Name:        []string{"--light"},
				Description: `Deprecated [$TRIVY_LIGHT]`,
			}, {
				Name:        []string{"--insecure"},
				Description: `Allow insecure server connections when using SSL [$TRIVY_INSECURE]`,
			}},
		}, {
			Name:        []string{"filesystem", "fs"},
			Description: `Scan local filesystem for language-specific dependencies and config files`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "path",
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"--template", "-t"},
				Description: `Output template [$TRIVY_TEMPLATE]`,
				Args: []model.Arg{{
					Name: "output",
				}},
			}, {
				Name:        []string{"--format", "-f"},
				Description: `Format (table, json, sarif, template) (default: "table") [$TRIVY_FORMAT]`,
				Args: []model.Arg{{
					Name:        "format",
					Suggestions: []model.Suggestion{{Name: []string{`table`}}, {Name: []string{`json`}}, {Name: []string{`sarif`}}, {Name: []string{`template`}}},
				}},
			}, {
				Name:        []string{"--severity", "-s"},
				Description: `Severities of vulnerabilities to be displayed (comma separated) (default: "UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL") [$TRIVY_SEVERITY]`,
				Args: []model.Arg{{
					Name:      "severity",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--output", "-o"},
				Description: `Output file name [$TRIVY_OUTPUT]`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "input",
				}},
			}, {
				Name:        []string{"--exit-code"},
				Description: `Exit code when vulnerabilities were found (default: 0) [$TRIVY_EXIT_CODE]`,
				Args: []model.Arg{{
					Name: "exitCode",
				}},
			}, {
				Name:        []string{"--clear-cache", "-c"},
				Description: `Clear image caches without scanning [$TRIVY_CLEAR_CACHE]`,
			}, {
				Name:        []string{"--vuln-type"},
				Description: `Comma-separated list of vulnerability types (os,library) (default: "os,library") [$TRIVY_VULN_TYPE]`,
				Args: []model.Arg{{
					Name:      "vulnType",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--security-checks"},
				Description: `Comma-separated list of what security issues to detect (vuln,config) (default: "vuln") [$TRIVY_SECURITY_CHECKS]`,
				Args: []model.Arg{{
					Name:      "securityChecks",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--ignorefile"},
				Description: `Specify .trivyignore file (default: ".trivyignore") [$TRIVY_IGNOREFILE]]`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "ignorefile",
				}},
			}, {
				Name:        []string{"--timeout"},
				Description: `Timeout (default: 5m0s) [$TRIVY_TIMEOUT]`,
				Args: []model.Arg{{
					Name: "timeout",
				}},
			}, {
				Name:        []string{"--ignore-policy"},
				Description: `Specify the Rego file to evaluate each vulnerability [$TRIVY_IGNORE_POLICY]`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "ignorePolicy",
				}},
			}, {
				Name:        []string{"--list-all-pkgs"},
				Description: `Enabling the option will output all packages regardless of vulnerability (default: false) [$TRIVY_LIST_ALL_PKGS]`,
			}, {
				Name:        []string{"--cache-backend"},
				Description: `Cache backend (e.g. redis://localhost:6379) (default: "fs") [$TRIVY_CACHE_BACKEND]`,
				Args: []model.Arg{{
					Name: "cacheBackend",
				}},
			}, {
				Name:        []string{"--no-progress"},
				Description: `Suppress progress bar [$TRIVY_NO_PROGRESS]`,
			}, {
				Name:        []string{"--offline-scan"},
				Description: `Do not issue API requests to identify dependencies [$TRIVY_OFFLINE_SCAN]`,
			}, {
				Name:        []string{"--skip-files"},
				Description: `Specify the file paths to skip traversal [$TRIVY_SKIP_FILES]`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "skipFiles",
				}},
			}, {
				Name:        []string{"--skip-dirs"},
				Description: `Allow insecure server connections when using SSL [$TRIVY_INSECURE]`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "skipDirs",
				}},
			}, {
				Name:        []string{"--skip-policy-update"},
				Description: `Skip updating built-in policies [$TRIVY_SKIP_POLICY_UPDATE]`,
			}, {
				Name:        []string{"--ignore-unfixed"},
				Description: `Display only fixed vulnerabilities [$TRIVY_IGNORE_UNFIXED]`,
			}, {
				Name:        []string{"--config-policy"},
				Description: `Specify paths to the Rego policy files directory, applying config files [$TRIVY_CONFIG_POLICY]`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "configPolicy",
				}},
			}, {
				Name:        []string{"--config-data"},
				Description: `Specify paths from which data for the Rego policies will be recursively loaded [$TRIVY_CONFIG_DATA]`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "configData",
				}},
			}, {
				Name:        []string{"--policy-namespaces", "--namespaces"},
				Description: `Rego namespaces (default: "users") [$TRIVY_POLICY_NAMESPACES]`,
				Args: []model.Arg{{
					Name: "policyNamespaces",
				}},
			}, {
				Name:        []string{"--skip-db-update", "--skip-update"},
				Description: `Skip updating vulnerability database [$TRIVY_SKIP_UPDATE, $TRIVY_SKIP_DB_UPDATE]`,
			}, {
				Name:        []string{"--server"},
				Description: `Server address [$TRIVY_SERVER]`,
				Args: []model.Arg{{
					Name: "server",
				}},
			}, {
				Name:        []string{"--token"},
				Description: `For authentication in client/server mode [$TRIVY_TOKEN]`,
				Args: []model.Arg{{
					Name: "token",
				}},
			}, {
				Name:        []string{"--token-header"},
				Description: `Specify a header name for token in client/server mode (default: "Trivy-Token") [$TRIVY_TOKEN_HEADER]`,
				Args: []model.Arg{{
					Name: "tokenHeader",
				}},
			}, {
				Name:        []string{"--custom-headers"},
				Description: `Custom headers in client/server mode [$TRIVY_CUSTOM_HEADERS]`,
				Args: []model.Arg{{
					Name: "customHeaders",
				}},
			}},
		}, {
			Name:        []string{"rootfs"},
			Description: `Scan rootfs`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "path",
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"--template", "-t"},
				Description: `Output template [$TRIVY_TEMPLATE]`,
				Args: []model.Arg{{
					Name: "output",
				}},
			}, {
				Name:        []string{"--format", "-f"},
				Description: `Format (table, json, sarif, template) (default: "table") [$TRIVY_FORMAT]`,
				Args: []model.Arg{{
					Name:        "format",
					Suggestions: []model.Suggestion{{Name: []string{`table`}}, {Name: []string{`json`}}, {Name: []string{`sarif`}}, {Name: []string{`template`}}},
				}},
			}, {
				Name:        []string{"--severity", "-s"},
				Description: `Severities of vulnerabilities to be displayed (comma separated) (default: "UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL") [$TRIVY_SEVERITY]`,
				Args: []model.Arg{{
					Name:      "severity",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--output", "-o"},
				Description: `Output file name [$TRIVY_OUTPUT]`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "input",
				}},
			}, {
				Name:        []string{"--exit-code"},
				Description: `Exit code when vulnerabilities were found (default: 0) [$TRIVY_EXIT_CODE]`,
				Args: []model.Arg{{
					Name: "exitCode",
				}},
			}, {
				Name:        []string{"--clear-cache", "-c"},
				Description: `Clear image caches without scanning [$TRIVY_CLEAR_CACHE]`,
			}, {
				Name:        []string{"--vuln-type"},
				Description: `Comma-separated list of vulnerability types (os,library) (default: "os,library") [$TRIVY_VULN_TYPE]`,
				Args: []model.Arg{{
					Name:      "vulnType",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--security-checks"},
				Description: `Comma-separated list of what security issues to detect (vuln,config) (default: "vuln") [$TRIVY_SECURITY_CHECKS]`,
				Args: []model.Arg{{
					Name:      "securityChecks",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--ignorefile"},
				Description: `Specify .trivyignore file (default: ".trivyignore") [$TRIVY_IGNOREFILE]]`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "ignorefile",
				}},
			}, {
				Name:        []string{"--timeout"},
				Description: `Timeout (default: 5m0s) [$TRIVY_TIMEOUT]`,
				Args: []model.Arg{{
					Name: "timeout",
				}},
			}, {
				Name:        []string{"--ignore-policy"},
				Description: `Specify the Rego file to evaluate each vulnerability [$TRIVY_IGNORE_POLICY]`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "ignorePolicy",
				}},
			}, {
				Name:        []string{"--list-all-pkgs"},
				Description: `Enabling the option will output all packages regardless of vulnerability (default: false) [$TRIVY_LIST_ALL_PKGS]`,
			}, {
				Name:        []string{"--cache-backend"},
				Description: `Cache backend (e.g. redis://localhost:6379) (default: "fs") [$TRIVY_CACHE_BACKEND]`,
				Args: []model.Arg{{
					Name: "cacheBackend",
				}},
			}, {
				Name:        []string{"--no-progress"},
				Description: `Suppress progress bar [$TRIVY_NO_PROGRESS]`,
			}, {
				Name:        []string{"--offline-scan"},
				Description: `Do not issue API requests to identify dependencies [$TRIVY_OFFLINE_SCAN]`,
			}, {
				Name:        []string{"--skip-files"},
				Description: `Specify the file paths to skip traversal [$TRIVY_SKIP_FILES]`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "skipFiles",
				}},
			}, {
				Name:        []string{"--skip-dirs"},
				Description: `Allow insecure server connections when using SSL [$TRIVY_INSECURE]`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "skipDirs",
				}},
			}, {
				Name:        []string{"--skip-policy-update"},
				Description: `Skip updating built-in policies [$TRIVY_SKIP_POLICY_UPDATE]`,
			}, {
				Name:        []string{"--config-policy"},
				Description: `Specify paths to the Rego policy files directory, applying config files [$TRIVY_CONFIG_POLICY]`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "configPolicy",
				}},
			}, {
				Name:        []string{"--config-data"},
				Description: `Specify paths from which data for the Rego policies will be recursively loaded [$TRIVY_CONFIG_DATA]`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "configData",
				}},
			}, {
				Name:        []string{"--policy-namespaces", "--namespaces"},
				Description: `Rego namespaces (default: "users") [$TRIVY_POLICY_NAMESPACES]`,
				Args: []model.Arg{{
					Name: "policyNamespaces",
				}},
			}, {
				Name:        []string{"--skip-db-update", "--skip-update"},
				Description: `Skip updating vulnerability database [$TRIVY_SKIP_UPDATE, $TRIVY_SKIP_DB_UPDATE]`,
			}},
		}, {
			Name:        []string{"sbom"},
			Description: `Generate SBOM for an artifact`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"--output", "-o"},
				Description: `Output file name [$TRIVY_OUTPUT]`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "input",
				}},
			}, {
				Name:        []string{"--clear-cache", "-c"},
				Description: `Clear image caches without scanning [$TRIVY_CLEAR_CACHE]`,
			}, {
				Name:        []string{"--ignorefile"},
				Description: `Specify .trivyignore file (default: ".trivyignore") [$TRIVY_IGNOREFILE]]`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "ignorefile",
				}},
			}, {
				Name:        []string{"--timeout"},
				Description: `Timeout (default: 5m0s) [$TRIVY_TIMEOUT]`,
				Args: []model.Arg{{
					Name: "timeout",
				}},
			}, {
				Name:        []string{"--severity", "-s"},
				Description: `Severities of vulnerabilities to be displayed (comma separated) (default: "UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL") [$TRIVY_SEVERITY]`,
				Args: []model.Arg{{
					Name:      "severity",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--offline-scan"},
				Description: `Do not issue API requests to identify dependencies [$TRIVY_OFFLINE_SCAN]`,
			}, {
				Name:        []string{"--skip-files"},
				Description: `Specify the file paths to skip traversal [$TRIVY_SKIP_FILES]`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "skipFiles",
				}},
			}, {
				Name:        []string{"--skip-dirs"},
				Description: `Allow insecure server connections when using SSL [$TRIVY_INSECURE]`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "skipDirs",
				}},
			}, {
				Name:        []string{"--artifact-type", "--type"},
				Description: `Input artifact type (image, fs, repo, archive) (default: "image") [$TRIVY_ARTIFACT_TYPE]`,
				Args: []model.Arg{{
					Name:        "artifactType",
					Suggestions: []model.Suggestion{{Name: []string{`image`}}, {Name: []string{`fs`}}, {Name: []string{`repo`}}, {Name: []string{`archive`}}},
				}},
			}, {
				Name:        []string{"--sbom-format", "--format"},
				Description: `SBOM format (cyclonedx) (default: "cyclonedx") [$TRIVY_SBOM_FORMAT]`,
				Args: []model.Arg{{
					Name:        "sbomFormat",
					Suggestions: []model.Suggestion{{Name: []string{`cyclonedx`}}},
				}},
			}},
		}, {
			Name:        []string{"repository", "repo"},
			Description: `Scan remote repository`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"--template", "-t"},
				Description: `Output template [$TRIVY_TEMPLATE]`,
				Args: []model.Arg{{
					Name: "output",
				}},
			}, {
				Name:        []string{"--format", "-f"},
				Description: `Format (table, json, sarif, template) (default: "table") [$TRIVY_FORMAT]`,
				Args: []model.Arg{{
					Name:        "format",
					Suggestions: []model.Suggestion{{Name: []string{`table`}}, {Name: []string{`json`}}, {Name: []string{`sarif`}}, {Name: []string{`template`}}},
				}},
			}, {
				Name:        []string{"--severity", "-s"},
				Description: `Severities of vulnerabilities to be displayed (comma separated) (default: "UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL") [$TRIVY_SEVERITY]`,
				Args: []model.Arg{{
					Name:      "severity",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--output", "-o"},
				Description: `Output file name [$TRIVY_OUTPUT]`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "input",
				}},
			}, {
				Name:        []string{"--exit-code"},
				Description: `Exit code when vulnerabilities were found (default: 0) [$TRIVY_EXIT_CODE]`,
				Args: []model.Arg{{
					Name: "exitCode",
				}},
			}, {
				Name:        []string{"--clear-cache", "-c"},
				Description: `Clear image caches without scanning [$TRIVY_CLEAR_CACHE]`,
			}, {
				Name:        []string{"--vuln-type"},
				Description: `Comma-separated list of vulnerability types (os,library) (default: "os,library") [$TRIVY_VULN_TYPE]`,
				Args: []model.Arg{{
					Name:      "vulnType",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--security-checks"},
				Description: `Comma-separated list of what security issues to detect (vuln,config) (default: "vuln") [$TRIVY_SECURITY_CHECKS]`,
				Args: []model.Arg{{
					Name:      "securityChecks",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--ignorefile"},
				Description: `Specify .trivyignore file (default: ".trivyignore") [$TRIVY_IGNOREFILE]]`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "ignorefile",
				}},
			}, {
				Name:        []string{"--timeout"},
				Description: `Timeout (default: 5m0s) [$TRIVY_TIMEOUT]`,
				Args: []model.Arg{{
					Name: "timeout",
				}},
			}, {
				Name:        []string{"--ignore-policy"},
				Description: `Specify the Rego file to evaluate each vulnerability [$TRIVY_IGNORE_POLICY]`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "ignorePolicy",
				}},
			}, {
				Name:        []string{"--list-all-pkgs"},
				Description: `Enabling the option will output all packages regardless of vulnerability (default: false) [$TRIVY_LIST_ALL_PKGS]`,
			}, {
				Name:        []string{"--cache-backend"},
				Description: `Cache backend (e.g. redis://localhost:6379) (default: "fs") [$TRIVY_CACHE_BACKEND]`,
				Args: []model.Arg{{
					Name: "cacheBackend",
				}},
			}, {
				Name:        []string{"--no-progress"},
				Description: `Suppress progress bar [$TRIVY_NO_PROGRESS]`,
			}, {
				Name:        []string{"--offline-scan"},
				Description: `Do not issue API requests to identify dependencies [$TRIVY_OFFLINE_SCAN]`,
			}, {
				Name:        []string{"--skip-files"},
				Description: `Specify the file paths to skip traversal [$TRIVY_SKIP_FILES]`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "skipFiles",
				}},
			}, {
				Name:        []string{"--skip-dirs"},
				Description: `Allow insecure server connections when using SSL [$TRIVY_INSECURE]`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "skipDirs",
				}},
			}, {
				Name:        []string{"--skip-policy-update"},
				Description: `Skip updating built-in policies [$TRIVY_SKIP_POLICY_UPDATE]`,
			}, {
				Name:        []string{"--skip-db-update", "--skip-update"},
				Description: `Skip updating vulnerability database [$TRIVY_SKIP_UPDATE, $TRIVY_SKIP_DB_UPDATE]`,
			}, {
				Name:        []string{"--ignore-unfixed"},
				Description: `Display only fixed vulnerabilities [$TRIVY_IGNORE_UNFIXED]`,
			}, {
				Name:        []string{"--removed-pkgs"},
				Description: `Detect vulnerabilities of removed packages (default: false) [$TRIVY_REMOVED_PKGS]`,
			}, {
				Name:        []string{"--input", "-i"},
				Description: `Input file path instead of image name [$TRIVY_INPUT]`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "input",
				}},
			}, {
				Name:        []string{"--quiet", "-q"},
				Description: `Suppress progress bar and log output [$TRIVY_QUIET]`,
			}, {
				Name:        []string{"--insecure"},
				Description: `Allow insecure server connections when using SSL [$TRIVY_INSECURE]`,
			}},
		}, {
			Name:        []string{"client", "c"},
			Description: `Client mode`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"--template", "-t"},
				Description: `Output template [$TRIVY_TEMPLATE]`,
				Args: []model.Arg{{
					Name: "output",
				}},
			}, {
				Name:        []string{"--format", "-f"},
				Description: `Format (table, json, sarif, template) (default: "table") [$TRIVY_FORMAT]`,
				Args: []model.Arg{{
					Name:        "format",
					Suggestions: []model.Suggestion{{Name: []string{`table`}}, {Name: []string{`json`}}, {Name: []string{`sarif`}}, {Name: []string{`template`}}},
				}},
			}, {
				Name:        []string{"--severity", "-s"},
				Description: `Severities of vulnerabilities to be displayed (comma separated) (default: "UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL") [$TRIVY_SEVERITY]`,
				Args: []model.Arg{{
					Name:      "severity",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--output", "-o"},
				Description: `Output file name [$TRIVY_OUTPUT]`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "input",
				}},
			}, {
				Name:        []string{"--exit-code"},
				Description: `Exit code when vulnerabilities were found (default: 0) [$TRIVY_EXIT_CODE]`,
				Args: []model.Arg{{
					Name: "exitCode",
				}},
			}, {
				Name:        []string{"--clear-cache", "-c"},
				Description: `Clear image caches without scanning [$TRIVY_CLEAR_CACHE]`,
			}, {
				Name:        []string{"--vuln-type"},
				Description: `Comma-separated list of vulnerability types (os,library) (default: "os,library") [$TRIVY_VULN_TYPE]`,
				Args: []model.Arg{{
					Name:      "vulnType",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--security-checks"},
				Description: `Comma-separated list of what security issues to detect (vuln,config) (default: "vuln") [$TRIVY_SECURITY_CHECKS]`,
				Args: []model.Arg{{
					Name:      "securityChecks",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--ignorefile"},
				Description: `Specify .trivyignore file (default: ".trivyignore") [$TRIVY_IGNOREFILE]]`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "ignorefile",
				}},
			}, {
				Name:        []string{"--timeout"},
				Description: `Timeout (default: 5m0s) [$TRIVY_TIMEOUT]`,
				Args: []model.Arg{{
					Name: "timeout",
				}},
			}, {
				Name:        []string{"--ignore-policy"},
				Description: `Specify the Rego file to evaluate each vulnerability [$TRIVY_IGNORE_POLICY]`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "ignorePolicy",
				}},
			}, {
				Name:        []string{"--list-all-pkgs"},
				Description: `Enabling the option will output all packages regardless of vulnerability (default: false) [$TRIVY_LIST_ALL_PKGS]`,
			}, {
				Name:        []string{"--cache-backend"},
				Description: `Cache backend (e.g. redis://localhost:6379) (default: "fs") [$TRIVY_CACHE_BACKEND]`,
				Args: []model.Arg{{
					Name: "cacheBackend",
				}},
			}, {
				Name:        []string{"--no-progress"},
				Description: `Suppress progress bar [$TRIVY_NO_PROGRESS]`,
			}, {
				Name:        []string{"--offline-scan"},
				Description: `Do not issue API requests to identify dependencies [$TRIVY_OFFLINE_SCAN]`,
			}, {
				Name:        []string{"--skip-files"},
				Description: `Specify the file paths to skip traversal [$TRIVY_SKIP_FILES]`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "skipFiles",
				}},
			}, {
				Name:        []string{"--skip-dirs"},
				Description: `Allow insecure server connections when using SSL [$TRIVY_INSECURE]`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "skipDirs",
				}},
			}, {
				Name:        []string{"--severity", "-s"},
				Description: `Severities of vulnerabilities to be displayed (comma separated) (default: "UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL") [$TRIVY_SEVERITY]`,
				Args: []model.Arg{{
					Name:      "severity",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--input", "-i"},
				Description: `Input file path instead of image name [$TRIVY_INPUT]`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "input",
				}},
			}, {
				Name:        []string{"--ignore-unfixed"},
				Description: `Display only fixed vulnerabilities [$TRIVY_IGNORE_UNFIXED]`,
			}, {
				Name:        []string{"--insecure"},
				Description: `Allow insecure server connections when using SSL [$TRIVY_INSECURE]`,
			}, {
				Name:        []string{"--removed-pkgs"},
				Description: `Detect vulnerabilities of removed packages (default: false) [$TRIVY_REMOVED_PKGS]`,
			}, {
				Name:        []string{"--output", "-o"},
				Description: `Output file name [$TRIVY_OUTPUT]`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "input",
				}},
			}, {
				Name:        []string{"--config-policy"},
				Description: `Specify paths to the Rego policy files directory, applying config files [$TRIVY_CONFIG_POLICY]`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "configPolicy",
				}},
			}, {
				Name:        []string{"--skip-files"},
				Description: `Specify the file paths to skip traversal [$TRIVY_SKIP_FILES]`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "skipFiles",
				}},
			}, {
				Name:        []string{"--skip-dirs"},
				Description: `Allow insecure server connections when using SSL [$TRIVY_INSECURE]`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "skipDirs",
				}},
			}, {
				Name:        []string{"--token"},
				Description: `For authentication in client/server mode [$TRIVY_TOKEN]`,
				Args: []model.Arg{{
					Name: "token",
				}},
			}, {
				Name:        []string{"--token-header"},
				Description: `Specify a header name for token in client/server mode (default: "Trivy-Token") [$TRIVY_TOKEN_HEADER]`,
				Args: []model.Arg{{
					Name: "tokenHeader",
				}},
			}, {
				Name:        []string{"--custom-headers"},
				Description: `Custom headers in client/server mode [$TRIVY_CUSTOM_HEADERS]`,
				Args: []model.Arg{{
					Name: "customHeaders",
				}},
			}, {
				Name:        []string{"--remote"},
				Description: `Server address (default: "http://localhost:4954") [$TRIVY_REMOTE]`,
				Args: []model.Arg{{
					Name: "remote",
				}},
			}},
		}, {
			Name:        []string{"server", "s"},
			Description: `Server mode`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"--skip-db-update", "--skip-update"},
				Description: `Skip updating vulnerability database [$TRIVY_SKIP_UPDATE, $TRIVY_SKIP_DB_UPDATE]`,
			}, {
				Name:        []string{"--download-db-only"},
				Description: `Download/update vulnerability database but don't run a scan [$TRIVY_DOWNLOAD_DB_ONLY]`,
			}, {
				Name:        []string{"--reset"},
				Description: `Remove all caches and database [$TRIVY_RESET]`,
			}, {
				Name:        []string{"--cache-backend"},
				Description: `Cache backend (e.g. redis://localhost:6379) (default: "fs") [$TRIVY_CACHE_BACKEND]`,
				Args: []model.Arg{{
					Name: "cacheBackend",
				}},
			}, {
				Name:        []string{"--token"},
				Description: `For authentication in client/server mode [$TRIVY_TOKEN]`,
				Args: []model.Arg{{
					Name: "token",
				}},
			}, {
				Name:        []string{"--token-header"},
				Description: `Specify a header name for token in client/server mode (default: "Trivy-Token") [$TRIVY_TOKEN_HEADER]`,
				Args: []model.Arg{{
					Name: "tokenHeader",
				}},
			}, {
				Name:        []string{"--listen"},
				Description: `Listen address (default: "localhost:4954") [$TRIVY_LISTEN]`,
				Args: []model.Arg{{
					Name: "listen",
				}},
			}},
		}, {
			Name:        []string{"config", "conf"},
			Description: `Scan config files`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"--template", "-t"},
				Description: `Output template [$TRIVY_TEMPLATE]`,
				Args: []model.Arg{{
					Name: "output",
				}},
			}, {
				Name:        []string{"--format", "-f"},
				Description: `Format (table, json, sarif, template) (default: "table") [$TRIVY_FORMAT]`,
				Args: []model.Arg{{
					Name:        "format",
					Suggestions: []model.Suggestion{{Name: []string{`table`}}, {Name: []string{`json`}}, {Name: []string{`sarif`}}, {Name: []string{`template`}}},
				}},
			}, {
				Name:        []string{"--severity", "-s"},
				Description: `Severities of vulnerabilities to be displayed (comma separated) (default: "UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL") [$TRIVY_SEVERITY]`,
				Args: []model.Arg{{
					Name:      "severity",
					Generator: nil, // TODO: port over generator
				}},
			}, {
				Name:        []string{"--output", "-o"},
				Description: `Output file name [$TRIVY_OUTPUT]`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "input",
				}},
			}, {
				Name:        []string{"--exit-code"},
				Description: `Exit code when vulnerabilities were found (default: 0) [$TRIVY_EXIT_CODE]`,
				Args: []model.Arg{{
					Name: "exitCode",
				}},
			}, {
				Name:        []string{"--skip-policy-update"},
				Description: `Skip updating built-in policies [$TRIVY_SKIP_POLICY_UPDATE]`,
			}, {
				Name:        []string{"--reset"},
				Description: `Remove all caches and database [$TRIVY_RESET]`,
			}, {
				Name:        []string{"--clear-cache", "-c"},
				Description: `Clear image caches without scanning [$TRIVY_CLEAR_CACHE]`,
			}, {
				Name:        []string{"--ignorefile"},
				Description: `Specify .trivyignore file (default: ".trivyignore") [$TRIVY_IGNOREFILE]]`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "ignorefile",
				}},
			}, {
				Name:        []string{"--timeout"},
				Description: `Timeout (default: 5m0s) [$TRIVY_TIMEOUT]`,
				Args: []model.Arg{{
					Name: "timeout",
				}},
			}, {
				Name:        []string{"--skip-files"},
				Description: `Specify the file paths to skip traversal [$TRIVY_SKIP_FILES]`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "skipFiles",
				}},
			}, {
				Name:        []string{"--skip-dirs"},
				Description: `Allow insecure server connections when using SSL [$TRIVY_INSECURE]`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "skipDirs",
				}},
			}, {
				Name:        []string{"--config-policy"},
				Description: `Specify paths to the Rego policy files directory, applying config files [$TRIVY_CONFIG_POLICY]`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "configPolicy",
				}},
			}, {
				Name:        []string{"--config-data"},
				Description: `Specify paths from which data for the Rego policies will be recursively loaded [$TRIVY_CONFIG_DATA]`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "configData",
				}},
			}, {
				Name:        []string{"--policy-namespaces", "--namespaces"},
				Description: `Rego namespaces (default: "users") [$TRIVY_POLICY_NAMESPACES]`,
				Args: []model.Arg{{
					Name: "policyNamespaces",
				}},
			}, {
				Name:        []string{"--file-patterns"},
				Description: `Specify file patterns [$TRIVY_FILE_PATTERNS`,
				Args: []model.Arg{{
					Name: "filePatterns",
				}},
			}, {
				Name:        []string{"--include-non-failures"},
				Description: `Enable more verbose trace output for custom queries [$TRIVY_TRACE]`,
			}, {
				Name:        []string{"--trace"},
				Description: `Enable more verbose trace output for custom queries [$TRIVY_TRACE]`,
			}},
		}, {
			Name:        []string{"plugin", "p"},
			Description: `Manage plugins`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"install", "i"},
				Description: `Install a plugin`,
				Args: []model.Arg{{
					Name:        "plugin",
					Description: `URL | FILE_PATH`,
				}},
			}, {
				Name:        []string{"uninstall", "u"},
				Description: `Uninstall plugin`,
				Args: []model.Arg{{
					Name: "plugin",
				}},
			}, {
				Name:        []string{"list", "l"},
				Description: `List installed plugin`,
			}, {
				Name:        []string{"info"},
				Description: `Information about a plugin`,
				Args: []model.Arg{{
					Name: "plugin",
				}},
			}, {
				Name:        []string{"run", "r"},
				Description: `Run a plugin on the fly`,
				Args: []model.Arg{{
					Name: "plugin",
				}},
			}, {
				Name:        []string{"update"},
				Description: `Update an existing plugin`,
				Args: []model.Arg{{
					Name: "plugin",
				}},
			}, {
				Name:        []string{"help", "h"},
				Description: `Shows a list of commands or help for one command`,
				Args: []model.Arg{{
					Templates:  []model.Template{model.TemplateHelp},
					IsOptional: true,
				}},
			}},
		}, {
			Name:        []string{"version"},
			Description: `Print the version`,
		}, {
			Name:        []string{"help", "h"},
			Description: `Shows a list of commands or help for one command`,
		}},
	}
}
