// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.
//
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

package specs

import (
	"github.com/microsoft/clac/autocomplete/model"
)

func init() {
	Specs["swift"] = model.Subcommand{
		Name:        []string{"swift"},
		Description: `Swift compiler`,
		Options: []model.Option{{
			Name:        []string{"--help", "-h", "-help"},
			Description: `Show help information`,
		}, {
			Name:        []string{"--version"},
			Description: `Show the version`,
		}, {
			Name:        []string{"-access-notes-path"},
			Description: `Specify YAML file to override attributes on Swift declarations in this module`,
			Args: []model.Arg{{
				Name:        "path",
				Description: `Specify YAML file to override attributes on Swift declarations in this module`,
			}},
		}, {
			Name:        []string{"-assert-config"},
			Description: `Specify the assert_configuration replacement`,
			Args: []model.Arg{{
				Name:        "configuration",
				Description: `The assert_configuration replacement`,
				Suggestions: []model.Suggestion{{Name: []string{`Debug`}}, {Name: []string{`Release`}}, {Name: []string{`Unchecked`}}, {Name: []string{`DisableReplacement`}}},
			}},
		}, {
			Name:        []string{"-async-main"},
			Description: `Resolve main function as if it were called from an asynchronous context`,
		}, {
			Name:        []string{"-clang-target"},
			Description: `Separately set the target we should use for internal Clang instance`,
			Args: []model.Arg{{
				Name:        "target",
				Description: `The target we should use for internal Clang instance`,
			}},
		}, {
			Name:        []string{"-color-diagnostics"},
			Description: `Print diagnostics in color`,
		}, {
			Name:        []string{"-continue-building-after-errors"},
			Description: `Continue building, even after errors are encountered`,
		}, {
			Name:        []string{"-coverage-prefix-map"},
			Description: `Remap source paths in coverage info`,
			Args: []model.Arg{{
				Name:        "prefix",
				Description: `The remap source paths in coverage info`,
				Generator:   nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"-debug-info-format"},
			Description: `Specify the debug info format type`,
			Args: []model.Arg{{
				Name:        "type",
				Description: `The debug info format type`,
				Suggestions: []model.Suggestion{{Name: []string{`dwarf`}}, {Name: []string{`codeview`}}},
			}},
		}, {
			Name:        []string{"-debug-info-store-invocation"},
			Description: `Emit the compiler invocation in the debug info`,
		}, {
			Name:        []string{"-debug-prefix-map"},
			Description: `Remap source paths in debug info`,
			Args: []model.Arg{{
				Name:        "prefix=replacement",
				Description: `The remap source paths in debug info`,
				Generator:   nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"-diagnostic-style"},
			Description: `The formatting style used when printing diagnostics`,
			Args: []model.Arg{{
				Name:        "style",
				Description: `The formatting style used when printing diagnostics`,
				Suggestions: []model.Suggestion{{Name: []string{`swift`}}, {Name: []string{`llvm`}}},
			}},
		}, {
			Name:        []string{"-disable-actor-data-race-checks"},
			Description: `Disable runtime checks for actor data races`,
		}, {
			Name:        []string{"-disable-autolinking-runtime-compatibility-concurrency"},
			Description: `Do not use autolinking for the concurrency runtime compatibility library`,
		}, {
			Name:        []string{"-disable-autolinking-runtime-compatibility-dynamic-replacements"},
			Description: `Do not use autolinking for the dynamic replacement runtime compatibility library`,
		}, {
			Name:        []string{"-disable-autolinking-runtime-compatibility"},
			Description: `Do not use autolinking for runtime compatibility libraries`,
		}, {
			Name:        []string{"-disable-clang-target"},
			Description: `Disable a separately specified target triple for Clang instance to use`,
		}, {
			Name:        []string{"-disable-incremental-imports"},
			Description: `Disable cross-module incremental build metadata and driver scheduling for Swift modules`,
		}, {
			Name:        []string{"-disable-only-one-dependency-file"},
			Description: `Disables incremental build optimization that only produces one dependencies file`,
		}, {
			Name:        []string{"-disallow-use-new-driver"},
			Description: `Disable using new swift-driver`,
		}, {
			Name:        []string{"-D"},
			Description: `Marks a conditional compilation flag as true`,
			Args: []model.Arg{{
				Name:        "flag",
				Description: `The conditional compilation flag to mark as true`,
			}},
		}, {
			Name:        []string{"-embed-tbd-for-module"},
			Description: `Embed symbols from the module in the emitted tbd file`,
			Args: []model.Arg{{
				Name:        "module",
				Description: `Embed symbols from the module in the emitted tbd file`,
			}},
		}, {
			Name:        []string{"-enable-actor-data-race-checks"},
			Description: `Emit runtime checks for actor data races`,
		}, {
			Name:        []string{"-enable-bare-slash-regex"},
			Description: `Enable the use of forward slash regular-expression literal syntax`,
		}, {
			Name:        []string{"-enable-experimental-additive-arithmetic-derivation"},
			Description: `Enable experimental 'AdditiveArithmetic' derived conformances`,
		}, {
			Name:        []string{"-enable-experimental-concise-pound-file"},
			Description: `Enable experimental concise '#file' identifier`,
		}, {
			Name:        []string{"-enable-experimental-cxx-interop"},
			Description: `Allow importing C++ modules into Swift (experimental feature)`,
		}, {
			Name:        []string{"-enable-experimental-forward-mode-differentiation"},
			Description: `Enable experimental forward mode differentiation`,
		}, {
			Name:        []string{"-enable-incremental-imports"},
			Description: `Enable cross-module incremental build metadata and driver scheduling for Swift modules`,
		}, {
			Name:        []string{"-enable-library-evolution"},
			Description: `Build the module to allow binary-compatible library evolution`,
		}, {
			Name:        []string{"-enable-only-one-dependency-file"},
			Description: `Enables incremental build optimization that only produces one dependencies file`,
		}, {
			Name:        []string{"-enforce-exclusivity"},
			Description: `Enforce law of exclusivity`,
			Args: []model.Arg{{
				Name:        "enforcement",
				Description: `Enforce law of exclusivity`,
			}},
		}, {
			Name:        []string{"-experimental-cxx-stdlib"},
			Description: `C++ standard library to use; forwarded to Clang's -std lib flag`,
			Args: []model.Arg{{
				Name:        "stdlib",
				Description: `C++ standard library to use; forwarded to Clang's -std lib flag`,
			}},
		}, {
			Name:        []string{"-file-compilation-dir"},
			Description: `The compilation directory to embed in the debug info. Coverage mapping is not supported yet`,
			Args: []model.Arg{{
				Name:        "path",
				Description: `The compilation directory to embed in the debug info`,
			}},
		}, {
			Name:        []string{"-file-prefix-map"},
			Description: `Remap source paths in debug, coverage, and index info`,
			Args: []model.Arg{{
				Name:        "prefix",
				Description: `The remap source paths in debug, coverage, and index info`,
				Generator:   nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"-framework"},
			Description: `Specifies a framework which should be linked against`,
			Args: []model.Arg{{
				Name:        "framework",
				Description: `The framework which should be linked against`,
			}},
		}, {
			Name:        []string{"-Fsystem"},
			Description: `Add directory to system framework search path`,
			Args: []model.Arg{{
				Name:        "directory",
				Description: `The directory to add to the system framework search path`,
			}},
		}, {
			Name:        []string{"-F"},
			Description: `Add directory to framework search path`,
			Args: []model.Arg{{
				Name:        "directory",
				Description: `The directory to add to the framework search path`,
			}},
		}, {
			Name:        []string{"-gdwarf-types"},
			Description: `Emit full DWARF type info`,
		}, {
			Name:        []string{"-gline-tables-only"},
			Description: `Emit minimal debug info for backtraces only`,
		}, {
			Name:        []string{"-gnone"},
			Description: `Don't emit debug info`,
		}, {
			Name:        []string{"-g"},
			Description: `Emit debug info. This is the preferred setting for debugging with LLDB`,
		}, {
			Name:        []string{"-index-ignore-clang-modules"},
			Description: `Avoid indexing clang modules (pcms)`,
		}, {
			Name:        []string{"-index-store-path"},
			Description: `Store indexing data to path`,
			Args: []model.Arg{{
				Name:        "path",
				Description: `The path to store indexing data to`,
			}},
		}, {
			Name:        []string{"-index-unit-output-path"},
			Description: `Use the specified path as the output path in the produced index data`,
			Args: []model.Arg{{
				Name:        "path",
				Description: `The specified path as the output path in the produced index data`,
			}},
		}, {
			Name:        []string{"-I"},
			Description: `Add directory to the import search path`,
			Args: []model.Arg{{
				Name:        "directory",
				Description: `The directory to add to the import search path`,
			}},
		}, {
			Name:        []string{"-j"},
			Description: `Number of commands to execute in parallel`,
			Args: []model.Arg{{
				Name:        "value",
				Description: `The number of commands to execute in parallel`,
			}},
		}, {
			Name:        []string{"-libc"},
			Description: `The libc runtime library to use`,
			Args: []model.Arg{{
				Name:        "runtime",
				Description: `The libc runtime library to use`,
			}},
		}, {
			Name:        []string{"-locale"},
			Description: `Choose a language for diagnostic messages`,
			Args: []model.Arg{{
				Name:        "code",
				Description: `The locale code`,
			}},
		}, {
			Name:        []string{"-localization-path"},
			Description: `Path to localized diagnostic messages directory`,
			Args: []model.Arg{{
				Name:        "path",
				Description: `The path to localized diagnostic messages directory`,
			}},
		}, {
			Name:        []string{"-L"},
			Description: `Add directory to library link search path`,
			Args: []model.Arg{{
				Name:        "directory",
				Description: `The directory to add to the library link search path`,
			}},
		}, {
			Name:        []string{"-l"},
			Description: `Specifies a library which should be linked against`,
			Args: []model.Arg{{
				Name:        "path",
				Description: `Specifies a library which should be linked against`,
			}},
		}, {
			Name:        []string{"-module-abi-name"},
			Description: `ABI name to use for the contents of this module`,
			Args: []model.Arg{{
				Name:        "name",
				Description: `The ABI name to use for the contents of this module`,
			}},
		}, {
			Name:        []string{"-module-alias"},
			Description: `If a source file imports or references module <alias_name>, the <underlying_name> is used for the contents of the file`,
			Args: []model.Arg{{
				Name:        "alias",
				Description: `The module alias and the contents of the file to be used`,
				Generator:   nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"-module-cache-path"},
			Description: `Specifies the Clang module cache path`,
			Args: []model.Arg{{
				Name:        "path",
				Description: `Specifies the Clang module cache path`,
			}},
		}, {
			Name:        []string{"-module-link-name"},
			Description: `Library to link against when using this module`,
			Args: []model.Arg{{
				Name:        "name",
				Description: `Library to link against when using this module`,
			}},
		}, {
			Name:        []string{"-module-name"},
			Description: `Name of the module to build`,
			Args: []model.Arg{{
				Name:        "name",
				Description: `Name of the module to build`,
			}},
		}, {
			Name:        []string{"-no-color-diagnostics"},
			Description: `Do not print diagnostics in color`,
		}, {
			Name:        []string{"-no-warnings-as-errors"},
			Description: `Don't treat warnings as error`,
		}, {
			Name:        []string{"-nostdimport"},
			Description: `Don't search the standard library import path for modules`,
		}, {
			Name:        []string{"-num-threads"},
			Description: `Enable multi-threading and specify number of threads`,
			Args: []model.Arg{{
				Name:        "value",
				Description: `The number of threads`,
			}},
		}, {
			Name:        []string{"-Onone"},
			Description: `Compile without any optimization`,
		}, {
			Name:        []string{"-Osize"},
			Description: `Compile with optimizations and target small code size`,
		}, {
			Name:        []string{"-Ounchecked"},
			Description: `Compile with optimizations and remove runtime safety checks`,
		}, {
			Name:        []string{"-O"},
			Description: `Compile with optimizations`,
		}, {
			Name:        []string{"-prefix-serialized-debugging-options"},
			Description: `Apply debug prefix mappings to serialized debug info in Swiftmodule files`,
		}, {
			Name:        []string{"-pretty-print"},
			Description: `Pretty-print the output JSON`,
		}, {
			Name:        []string{"-print-educational-notes"},
			Description: `Include educational notes in printed diagnostic output, if available`,
		}, {
			Name:        []string{"-print-target-info"},
			Description: `Print target information for the given target <triple>, such as x86_64-apple-macos10.9`,
		}, {
			Name:        []string{"-Rcross-import"},
			Description: `Emit a remark if a cross-import of a module is triggered`,
		}, {
			Name:        []string{"-remove-runtime-asserts"},
			Description: `Remove runtime safety checks`,
		}, {
			Name:        []string{"-requirement-machine-abstract-signatures"},
			Description: `Control usage of experimental generic signature minimization`,
			Args: []model.Arg{{
				Name:        "value",
				Description: `The control usage of experimental generic signature minimization`,
				Suggestions: []model.Suggestion{{Name: []string{`on`}}, {Name: []string{`off`}}, {Name: []string{`verify`}}, {Name: []string{`check`}}},
			}},
		}, {
			Name:        []string{"-requirement-machine-inferred-signatures"},
			Description: `Control usage of experimental generic signature minimization`,
			Args: []model.Arg{{
				Name:        "value",
				Description: `The control usage of experimental generic signature minimization`,
				Suggestions: []model.Suggestion{{Name: []string{`on`}}, {Name: []string{`off`}}, {Name: []string{`verify`}}, {Name: []string{`check`}}},
			}},
		}, {
			Name:        []string{"-requirement-machine-protocol-signatures"},
			Description: `Control usage of experimental protocol requirement signature minimization`,
			Args: []model.Arg{{
				Name:        "value",
				Description: `The control usage of experimental protocol requirement signature minimization`,
				Suggestions: []model.Suggestion{{Name: []string{`on`}}, {Name: []string{`off`}}, {Name: []string{`verify`}}, {Name: []string{`check`}}},
			}},
		}, {
			Name:        []string{"-Rmodule-loading"},
			Description: `Emit a remark and file path of each loaded module`,
		}, {
			Name:        []string{"-Rpass-missed"},
			Description: `Report missed transformations by optimization passes whose name matches the given POSIX regular expression`,
			Args: []model.Arg{{
				Name:        "regex",
				Description: `Regex to match missed transformations`,
			}},
		}, {
			Name:        []string{"-Rpass"},
			Description: `Report performed transformations by optimization passes whose name matches the given POSIX regular expression`,
			Args: []model.Arg{{
				Name:        "regex",
				Description: `Regex to match performed transformations`,
			}},
		}, {
			Name:        []string{"-runtime-compatibility-version"},
			Description: `Link compatibility library for Swift runtime version, or 'none'`,
			Args: []model.Arg{{
				Name:        "version",
				Description: `Swift runtime version, or 'none'`,
			}},
		}, {
			Name:        []string{"-save-optimization-record-passes"},
			Description: `Only include passes which match a specified regular expression in the generated optimization record (by default, include all passes)`,
			Args: []model.Arg{{
				Name:        "regex",
				Description: `Regex to specify passes to be included in the optimization record`,
			}},
		}, {
			Name:        []string{"-save-optimization-record-path"},
			Description: `Specify the file name of any generated optimization record`,
			Args: []model.Arg{{
				Name:        "filename",
				Description: `The file name of any generated optimization record`,
			}},
		}, {
			Name:        []string{"-save-optimization-record"},
			Description: `Generate an optimization record file in a specific format`,
			Args: []model.Arg{{
				Name:        "format",
				Description: `The format`,
			}},
		}, {
			Name:        []string{"-save-optimization-record"},
			Description: `Generate a YAML optimization record file`,
		}, {
			Name:        []string{"-sdk"},
			Description: `Compile against a specific SDK`,
			Args: []model.Arg{{
				Name:        "sdk",
				Description: `The SDK to compile against`,
			}},
		}, {
			Name:        []string{"-serialize-diagnostics-path"},
			Description: `Emit a serialized diagnostics file`,
			Args: []model.Arg{{
				Name:        "path",
				Description: `The path to write the file to`,
			}},
		}, {
			Name:        []string{"-static-executable"},
			Description: `Statically link the executable`,
		}, {
			Name:        []string{"-static-stdlib"},
			Description: `Statically link the Swift standard library`,
		}, {
			Name:        []string{"-strict-concurrency"},
			Description: `Specify the how strict concurrency checking will be`,
			Args: []model.Arg{{
				Name:        "concurrency",
				Description: `The concurrency`,
				Suggestions: []model.Suggestion{{Name: []string{`minimal`}}, {Name: []string{`targeted`}}, {Name: []string{`complete`}}},
			}},
		}, {
			Name:        []string{"-suppress-warnings"},
			Description: `Suppress all warnings`,
		}, {
			Name:        []string{"-swift-isa-ptrauth-mode"},
			Description: `Mode for staging isa/super signing`,
			Args: []model.Arg{{
				Name:        "mode",
				Description: `Mode for staging isa/super signing`,
				Suggestions: []model.Suggestion{{Name: []string{`LegacyAndStrip`}}, {Name: []string{`NewAndStrip`}}, {Name: []string{`NewAndAuth`}}},
			}},
		}, {
			Name:        []string{"-swift-ptrauth-mode"},
			Description: `Mode for staging pointer authentication`,
			Args: []model.Arg{{
				Name:        "mode",
				Description: `Mode for staging pointer authentication`,
				Suggestions: []model.Suggestion{{Name: []string{`LegacyAndStrip`}}, {Name: []string{`NewAndStrip`}}, {Name: []string{`NewAndAuth`}}},
			}},
		}, {
			Name:        []string{"-swift-version"},
			Description: `Interpret input according to a specific Swift language version number`,
			Args: []model.Arg{{
				Name:        "version",
				Description: `Swift language version number`,
			}},
		}, {
			Name:        []string{"-target-cpu"},
			Description: `Generate code for a particular CPU variant`,
			Args: []model.Arg{{
				Name:        "cpu",
				Description: `The CPU variant`,
			}},
		}, {
			Name:        []string{"-target-min-inlining-version"},
			Description: `Require inlinable code with no '@available' attribute to back-deploy to this version of the '-target' OS`,
			Args: []model.Arg{{
				Name:        "version",
				Description: `The target version`,
			}},
		}, {
			Name:        []string{"-target-variant"},
			Description: `Generate 'zippered' code for macCatalyst that can run on the specified variant target triple in addition to the main -target triple`,
			Args: []model.Arg{{
				Name:        "variant",
				Description: `The target variant`,
			}},
		}, {
			Name:        []string{"-target"},
			Description: `Generate code for the given target <triple>, such as x86_64-apple-macos10.9`,
			Args: []model.Arg{{
				Name:        "triple",
				Description: `The target triple`,
			}},
		}, {
			Name:        []string{"-use-ld"},
			Description: `Specifies the linker to be used`,
			Args: []model.Arg{{
				Name:        "linker",
				Description: `The linker to be used`,
			}},
		}, {
			Name:        []string{"-user-module-version"},
			Description: `Module version specified from Swift module authors`,
			Args: []model.Arg{{
				Name:        "module",
				Description: `The module version`,
			}},
		}, {
			Name:        []string{"-vfsoverlay"},
			Description: `Add directory to VFS overlay file`,
			Args: []model.Arg{{
				Name:        "directory",
				Description: `The directory to the VFS overlay file`,
			}},
		}, {
			Name:        []string{"-v"},
			Description: `Show commands to run and use verbose output`,
		}, {
			Name:        []string{"-warn-concurrency"},
			Description: `Warn about code that is unsafe according to the Swift Concurrency model and will become ill-formed in a future language version`,
		}, {
			Name:        []string{"-warn-implicit-overrides"},
			Description: `Warn about implicit overrides of protocol members`,
		}, {
			Name:        []string{"-warn-swift3-objc-inference-complete"},
			Description: `Warn about deprecated @objc inference in Swift 3 for every declaration that will no longer be inferred as @objc in Swift 4`,
		}, {
			Name:        []string{"-warn-swift3-objc-inference-minimal"},
			Description: `Warn about deprecated @objc inference in Swift 3 based on direct uses of the Objective-C entrypoint`,
		}, {
			Name:        []string{"-warnings-as-errors"},
			Description: `Treat warnings as errors`,
		}, {
			Name:        []string{"-working-directory"},
			Description: `Resolve file paths relative to the specified directory`,
			Args: []model.Arg{{
				Name:        "directory",
				Description: `Resolve file paths relative to the specified directory`,
			}},
		}, {
			Name:        []string{"-Xcc"},
			Description: `Pass <arg> to the C/C++/Objective-C compiler`,
			Args: []model.Arg{{
				Name:        "arg",
				Description: `Argument to pass to the C/C++/Objective-C compiler`,
			}},
		}, {
			Name:        []string{"-Xlinker"},
			Description: `Specifies an option which should be passed to the linker`,
			Args: []model.Arg{{
				Name:        "arg",
				Description: `Option to be passed to the linker`,
			}},
		}},
		Subcommands: []model.Subcommand{{
			Name:        []string{"build"},
			Description: `Build sources into binary products`,
			Options: []model.Option{{
				Name:        []string{"--help", "-h", "-help"},
				Description: `Show help information`,
			}, {
				Name:        []string{"--version"},
				Description: `Show the version`,
			}, {
				Name:        []string{"--build-tests"},
				Description: `Build both source and test targets`,
			}, {
				Name:        []string{"--show-bin-path"},
				Description: `Print the binary output path`,
			}, {
				Name:        []string{"--target"},
				Description: `Build the specified target`,
				Args: []model.Arg{{
					Name:        "target",
					Description: `The name of the target to build`,
				}},
			}, {
				Name:        []string{"--product"},
				Description: `Build the specified product`,
				Args: []model.Arg{{
					Name:        "product",
					Description: `The name of the product to build`,
				}},
			}},
		}, {
			Name:        []string{"run"},
			Description: `Build and run an executable product`,
			Args: []model.Arg{{
				Name:        "executable",
				Description: `The executable to run`,
				IsOptional:  true,
			}, {
				Name:        "arguments",
				Description: `The arguments to pass to the executable`,
				IsOptional:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"--help", "-h", "-help"},
				Description: `Show help information`,
			}, {
				Name:        []string{"--version"},
				Description: `Show the version`,
			}, {
				Name:        []string{"--skip-build"},
				Description: `Skip building the executable product`,
			}, {
				Name:        []string{"--build-tests"},
				Description: `Build both source and test targets`,
			}, {
				Name:        []string{"--repl"},
				Description: `Launch Swift REPL for the package`,
			}},
		}, {
			Name:        []string{"test"},
			Description: `Build and run tests`,
			Options: []model.Option{{
				Name:        []string{"--help", "-h", "-help"},
				Description: `Show help information`,
			}, {
				Name:        []string{"--version"},
				Description: `Show the version`,
			}, {
				Name:        []string{"--skip-build"},
				Description: `Skip building the test target`,
			}, {
				Name:        []string{"--parallel"},
				Description: `Run the tests in parallel`,
			}, {
				Name:        []string{"--num-workers"},
				Description: `Number of tests to execute in parallel`,
				Args: []model.Arg{{
					Name:        "num-workers",
					Description: `Number of tests to execute in parallel`,
				}},
			}, {
				Name:        []string{"-l", "--list-tests"},
				Description: `Lists test methods in specifier format`,
			}, {
				Name:        []string{"--show-codecov-path"},
				Description: `Print the path of the exported code coverage JSON file`,
			}, {
				Name:        []string{"-s", "--specifier"},
				Description: ``,
			}, {
				Name:        []string{"--filter"},
				Description: `Run test cases matching regular expression`,
				Args: []model.Arg{{
					Name:        "regex",
					Description: `<test-target>.<test-case> or <test-target>.<test-case>/<test>`,
				}},
			}, {
				Name:        []string{"--skip"},
				Description: `Skip test cases matching regular expression`,
				Args: []model.Arg{{
					Name:        "regex",
					Description: `<test-target>.<test-case> or <test-target>.<test-case>/<test>`,
				}},
			}, {
				Name:        []string{"--xunit-output"},
				Description: `Path where the xUnit xml file should be generated`,
				Args: []model.Arg{{
					Name:        "path",
					Description: `Path where the xUnit xml file should be generated`,
				}},
			}, {
				Name:        []string{"--test-product"},
				Description: `Test the specified product`,
				Args: []model.Arg{{
					Name:        "product",
					Description: `The product to be tested`,
				}},
			}},
		}, {
			Name:        []string{"package"},
			Description: `Perform operations on Swift packages`,
			Options: []model.Option{{
				Name:        []string{"--help", "-h", "-help"},
				Description: `Show help information`,
			}, {
				Name:        []string{"--version"},
				Description: `Show the version`,
			}, {
				Name:        []string{"-Xcc"},
				Description: `Pass a flag through to all C compiler invocations`,
				Args: []model.Arg{{
					Name:        "flag",
					Description: `The flag to pass through to all C compiler invocations`,
				}},
			}, {
				Name:        []string{"-Xswiftc"},
				Description: `Pass a flag through to all Swift compiler invocations`,
				Args: []model.Arg{{
					Name:        "flag",
					Description: `The flag to pass through to all Swift compiler invocations`,
				}},
			}, {
				Name:        []string{"-Xlinker"},
				Description: `Pass a flag through to all linker invocations`,
				Args: []model.Arg{{
					Name:        "flag",
					Description: `The flag to pass through to all linker invocations`,
				}},
			}, {
				Name:        []string{"-c", "--configuration"},
				Description: `Build with configuration (default: debug)`,
				Args: []model.Arg{{
					Name:        "configuration",
					Description: `The build configuration`,
					Suggestions: []model.Suggestion{{Name: []string{`debug`}}, {Name: []string{`release`}}},
				}},
			}, {
				Name:        []string{"--build-path"},
				Description: `Specify build/cache directory`,
				Args: []model.Arg{{
					Name:        "path",
					Description: `The path to a specific build/cache directory`,
				}},
			}, {
				Name:        []string{"--cache-path"},
				Description: `Specify the shared cache directory`,
				Args: []model.Arg{{
					Name:        "path",
					Description: `The path to a specific shared cache directory`,
				}},
			}, {
				Name:        []string{"--enable-repository-cache"},
				Description: `Enable the use of a shared cache when fetching repositories (default: enabled)`,
				ExclusiveOn: []string{"--disable-repository-cache"},
			}, {
				Name:        []string{"--disable-repository-cache"},
				Description: `Disable the use of a shared cache when fetching repositories (default: enabled)`,
				ExclusiveOn: []string{"--enable-repository-cache"},
			}, {
				Name:        []string{"-C", "--chdir"},
				Description: `The custom working directory that the tool should operate in`,
				Args: []model.Arg{{
					Name:        "chdir",
					Description: ``,
				}},
			}, {
				Name:        []string{"--package-path"},
				Description: `Change working directory before any other operation`,
				Args: []model.Arg{{
					Name:        "path",
					Description: `The working directory path to change to`,
				}},
			}, {
				Name:        []string{"--multiroot-data-file"},
				Description: `The path to the file containing multiroot package data. This is currently Xcode's workspace file`,
				Args: []model.Arg{{
					Name:        "multiroot-data-file",
					Description: ``,
				}},
			}, {
				Name:        []string{"--enable-prefetching"},
				Description: `Enable prefetching in resolver which will kick off parallel git cloning (default: enabled)`,
				ExclusiveOn: []string{"--disable-prefetching"},
			}, {
				Name:        []string{"--disable-prefetching"},
				Description: `Disable  prefetching in resolver which will kick off parallel git cloning (default: enabled)`,
				ExclusiveOn: []string{"--enable-prefetching"},
			}, {
				Name:        []string{"-v", "--verbose"},
				Description: `Increase verbosity of informational output`,
			}, {
				Name:        []string{"--disable-sandbox"},
				Description: `Disable using the sandbox when executing subprocesses`,
			}, {
				Name:        []string{"--manifest-cache"},
				Description: `Caching mode of Package.swift manifests`,
				Args: []model.Arg{{
					Name:        "mode",
					Description: `The caching mode`,
					Suggestions: []model.Suggestion{{Name: []string{`shared`}}, {Name: []string{`local`}}, {Name: []string{`none`}}},
				}},
			}, {
				Name:        []string{"--destination"},
				Description: `Path to the compilation destination describing JSON file`,
				Args: []model.Arg{{
					Name:        "path",
					Description: `The path to the compilation destination describing JSON file`,
				}},
			}, {
				Name:        []string{"--triple"},
				Description: `The compilation destination's target triple`,
				Args: []model.Arg{{
					Name:        "triple",
					Description: `The compilation destination's target triple`,
				}},
			}, {
				Name:        []string{"--sdk"},
				Description: `Path to the compilation destination's SDK`,
				Args: []model.Arg{{
					Name:        "path",
					Description: `Path to the compilation destination's SDK`,
				}},
			}, {
				Name:        []string{"--toolchain"},
				Description: `Path to the compilation destination's toolchain`,
				Args: []model.Arg{{
					Name:        "path",
					Description: `Path to the compilation destination's toolchain`,
				}},
			}, {
				Name:        []string{"--static-swift-stdlib"},
				Description: `Link Swift stdlib statically (default: false)`,
				ExclusiveOn: []string{"--no-static-swift-stdlib"},
			}, {
				Name:        []string{"--no-static-swift-stdlib"},
				Description: `Don't link Swift stdlib statically (default: false)`,
				ExclusiveOn: []string{"--static-swift-stdlib"},
			}, {
				Name:        []string{"--skip-update"},
				Description: `Skip updating dependencies from their remote during a resolution`,
			}, {
				Name:        []string{"--sanitize"},
				Description: `Turn on runtime checks for erroneous behavior`,
				Args: []model.Arg{{
					Name:        "type",
					Description: `What to sanitize`,
					Suggestions: []model.Suggestion{{Name: []string{`address`}}, {Name: []string{`thread`}}, {Name: []string{`undefined`}}, {Name: []string{`scudo`}}},
				}},
			}, {
				Name:        []string{"--enable-code-coverage"},
				Description: `Enable code coverage (default: disabled)`,
				ExclusiveOn: []string{"--disable-code-coverage"},
			}, {
				Name:        []string{"--disable-code-coverage"},
				Description: `Disable code coverage (default: disabled)`,
				ExclusiveOn: []string{"--enable-code-coverage"},
			}, {
				Name:        []string{"--force-resolved-versions", "--disable-automatic-resolution", "--only-use-versions-from-resolved-file"},
				Description: `Only use versions from the Package.resolved file and fail resolution if it is out-of-date`,
			}, {
				Name:        []string{"--auto-index-store"},
				Description: `Enable or disable indexing-while-building feature (default: auto)`,
				ExclusiveOn: []string{"--enable-index-store", "--disable-index-store"},
			}, {
				Name:        []string{"--enable-index-store"},
				Description: `Enable indexing-while-building feature (default: auto)`,
				ExclusiveOn: []string{"--auto-index-store", "--disable-index-store"},
			}, {
				Name:        []string{"--disable-index-store"},
				Description: `Disable indexing-while-building feature (default: auto)`,
				ExclusiveOn: []string{"--auto-index-store", "--enable-index-store"},
			}, {
				Name:        []string{"--enable-parseable-module-interfaces"},
				Description: `Whether to enable generation of ".swiftinterface"s alongside ".swiftmodule"s`,
			}, {
				Name:        []string{"--trace-resolver"},
				Description: `Write dependency resolver trace to a file`,
			}, {
				Name:        []string{"-j", "--jobs"},
				Description: `The number of jobs to spawn in parallel during the build process`,
				Args: []model.Arg{{
					Name:        "jobs",
					Description: `The number of jobs to spawn in parallel during the build process`,
				}},
			}, {
				Name:        []string{"--enable-build-manifest-caching"},
				Description: `Whether to enable llbuild manifest caching (default: enabled)`,
			}, {
				Name:        []string{"--disable-build-manifest-caching"},
				Description: `Whether to disable llbuild manifest caching (default: enabled)`,
			}, {
				Name:        []string{"--emit-swift-module-separately"},
				Description: `Emit the Swift module separately from the object files`,
			}, {
				Name:        []string{"--use-integrated-swift-driver"},
				Description: `Whether to use the integrated Swift driver rather than shelling out to a separate process`,
			}, {
				Name:        []string{"--experimental-explicit-module-build"},
				Description: `Whether to use the explicit module build flow (with the integrated driver)`,
			}, {
				Name:        []string{"--print-manifest-job-graph"},
				Description: `Write the command graph for the build manifest as a graphviz file`,
			}, {
				Name:        []string{"--build-system"},
				Description: `The build system to use (default: native)`,
				Args: []model.Arg{{
					Name:        "build system",
					Description: `The build system to use`,
					Suggestions: []model.Suggestion{{Name: []string{`native`}}, {Name: []string{`xcode`}}},
				}},
			}, {
				Name:        []string{"--netrc"},
				Description: `Whether to load .netrc files for authenticating with remote servers when downloading binary artifacts or communicating with a registry`,
				Args: []model.Arg{{
					Name:        "bool",
					Description: `Whether to load .netrc files for authenticating with remote servers when downloading binary artifacts or communicating with a registry`,
				}},
			}, {
				Name:        []string{"--netrc-file"},
				Description: `The path to the .netrc file used when "netrc" is "true"`,
				Args: []model.Arg{{
					Name:        "path",
					Description: `The path to the .netrc file used when "netrc" is "true"`,
				}},
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"clean"},
				Description: `Delete build artifacts`,
				Options: []model.Option{{
					Name:        []string{"--help", "-h", "-help"},
					Description: `Show help information`,
				}, {
					Name:        []string{"--version"},
					Description: `Show the version`,
				}},
			}, {
				Name:        []string{"purge-cache"},
				Description: `Purge the global repository cache`,
				Options: []model.Option{{
					Name:        []string{"--help", "-h", "-help"},
					Description: `Show help information`,
				}, {
					Name:        []string{"--version"},
					Description: `Show the version`,
				}},
			}, {
				Name:        []string{"reset"},
				Description: `Reset the complete cache/build directory`,
				Options: []model.Option{{
					Name:        []string{"--help", "-h", "-help"},
					Description: `Show help information`,
				}, {
					Name:        []string{"--version"},
					Description: `Show the version`,
				}},
			}, {
				Name:        []string{"update"},
				Description: `Update package dependencies`,
				Options: []model.Option{{
					Name:        []string{"--help", "-h", "-help"},
					Description: `Show help information`,
				}, {
					Name:        []string{"--version"},
					Description: `Show the version`,
				}, {
					Name:        []string{"-n", "-dry-run"},
					Description: `Display the list of dependencies that can be updated`,
				}},
			}, {
				Name:        []string{"describe"},
				Description: `Describe the current package`,
				Options: []model.Option{{
					Name:        []string{"--help", "-h", "-help"},
					Description: `Show help information`,
				}, {
					Name:        []string{"--version"},
					Description: `Show the version`,
				}, {
					Name:        []string{"--type"},
					Description: `The output type`,
					Args: []model.Arg{{
						Name:        "type",
						Description: `The output type`,
						Suggestions: []model.Suggestion{{Name: []string{`json`}}, {Name: []string{`text`}}},
					}},
				}},
			}, {
				Name:        []string{"init"},
				Description: `Initialize a new package`,
				Options: []model.Option{{
					Name:        []string{"--help", "-h", "-help"},
					Description: `Show help information`,
				}, {
					Name:        []string{"--version"},
					Description: `Show the version`,
				}, {
					Name:        []string{"--type"},
					Description: `The package type`,
					Args: []model.Arg{{
						Name:        "type",
						Description: `The package type`,
						Suggestions: []model.Suggestion{{Name: []string{`empty`}}, {Name: []string{`library`}}, {Name: []string{`executable`}}, {Name: []string{`system-module`}}, {Name: []string{`manifest`}}},
					}},
				}, {
					Name:        []string{"--name"},
					Description: `Provide custom package name`,
					Args: []model.Arg{{
						Name:        "name",
						Description: `The package name`,
					}},
				}},
			}, {
				Name:        []string{"experimental-api-diff"},
				Description: `Diagnose API-breaking changes to Swift modules in a package`,
				Args: []model.Arg{{
					Name:        "treeish",
					Description: `The baseline treeish to compare to (e.g. a commit hash, branch name, tag, etc.)`,
				}},
				Options: []model.Option{{
					Name:        []string{"--help", "-h", "-help"},
					Description: `Show help information`,
				}, {
					Name:        []string{"--version"},
					Description: `Show the version`,
				}, {
					Name:        []string{"--invert-baseline"},
					Description: `Invert the baseline which is helpful for determining API additions`,
				}},
			}, {
				Name:        []string{"dump-symbol-graph"},
				Description: `Dump Symbol Graph`,
				Options: []model.Option{{
					Name:        []string{"--help", "-h", "-help"},
					Description: `Show help information`,
				}, {
					Name:        []string{"--version"},
					Description: `Show the version`,
				}},
			}, {
				Name:        []string{"dump-pif"},
				Description: `Dump PIF`,
				Options: []model.Option{{
					Name:        []string{"--help", "-h", "-help"},
					Description: `Show help information`,
				}, {
					Name:        []string{"--version"},
					Description: `Show the version`,
				}, {
					Name:        []string{"--preserve-structure"},
					Description: `Preserve the internal structure of PIF`,
				}},
			}, {
				Name:        []string{"dump-package"},
				Description: `Print parsed Package.swift as JSON`,
				Options: []model.Option{{
					Name:        []string{"--help", "-h", "-help"},
					Description: `Show help information`,
				}, {
					Name:        []string{"--version"},
					Description: `Show the version`,
				}},
			}, {
				Name:        []string{"edit"},
				Description: `Put a package in editable mode`,
				Options: []model.Option{{
					Name:        []string{"--help", "-h", "-help"},
					Description: `Show help information`,
				}, {
					Name:        []string{"--version"},
					Description: `Show the version`,
				}, {
					Name:        []string{"--revision"},
					Description: `The revision to edit`,
					Args: []model.Arg{{
						Name:        "revision",
						Description: `The revision to edit`,
					}},
				}, {
					Name:        []string{"--branch"},
					Description: `The branch to create`,
					Args: []model.Arg{{
						Name:        "branch",
						Description: `The branch to create`,
					}},
				}, {
					Name:        []string{"--path"},
					Description: `Create or use the checkout at this path`,
					Args: []model.Arg{{
						Name:        "path",
						Description: `Create or use the checkout at this path`,
					}},
				}},
			}, {
				Name:        []string{"unedit"},
				Description: `Remove a package from editable mode`,
				Args: []model.Arg{{
					Name:        "package-name",
					Description: `The name of the package to unedit`,
				}},
				Options: []model.Option{{
					Name:        []string{"--help", "-h", "-help"},
					Description: `Show help information`,
				}, {
					Name:        []string{"--version"},
					Description: `Show the version`,
				}, {
					Name:        []string{"--force"},
					Description: `Unedit the package even if it has uncommitted and unpushed changes`,
				}},
			}, {
				Name:        []string{"config"},
				Description: `Manipulate configuration of the package`,
				Options: []model.Option{{
					Name:        []string{"--help", "-h", "-help"},
					Description: `Show help information`,
				}, {
					Name:        []string{"--version"},
					Description: `Show the version`,
				}},
				Subcommands: []model.Subcommand{{
					Name:        []string{"set-mirror"},
					Description: `Set a mirror for a dependency`,
					Options: []model.Option{{
						Name:        []string{"--help", "-h", "-help"},
						Description: `Show help information`,
					}, {
						Name:        []string{"--version"},
						Description: `Show the version`,
					}, {
						Name:        []string{"--package-url"},
						Description: `The package dependency url`,
						Args: []model.Arg{{
							Name:        "package-url",
							Description: `The package dependency url`,
						}},
					}, {
						Name:        []string{"--original-url"},
						Description: `The original url`,
						Args: []model.Arg{{
							Name:        "original-url",
							Description: `The original url`,
						}},
					}, {
						Name:        []string{"--mirror-url"},
						Description: `The mirror url`,
						Args: []model.Arg{{
							Name:        "original-url",
							Description: `The mirror url`,
						}},
					}},
				}, {
					Name:        []string{"unset-mirror"},
					Description: `Remove an existing mirror`,
					Options: []model.Option{{
						Name:        []string{"--help", "-h", "-help"},
						Description: `Show help information`,
					}, {
						Name:        []string{"--version"},
						Description: `Show the version`,
					}, {
						Name:        []string{"--package-url"},
						Description: `The package dependency url`,
						Args: []model.Arg{{
							Name:        "package-url",
							Description: `The package dependency url`,
						}},
					}, {
						Name:        []string{"--original-url"},
						Description: `The original url`,
						Args: []model.Arg{{
							Name:        "original-url",
							Description: `The original url`,
						}},
					}, {
						Name:        []string{"--mirror-url"},
						Description: `The mirror url`,
						Args: []model.Arg{{
							Name:        "original-url",
							Description: `The mirror url`,
						}},
					}},
				}, {
					Name:        []string{"get-mirror"},
					Description: `Print mirror configuration for the given package dependency`,
					Options: []model.Option{{
						Name:        []string{"--help", "-h", "-help"},
						Description: `Show help information`,
					}, {
						Name:        []string{"--version"},
						Description: `Show the version`,
					}, {
						Name:        []string{"--package-url"},
						Description: `The package dependency url`,
						Args: []model.Arg{{
							Name:        "package-url",
							Description: `The package dependency url`,
						}},
					}, {
						Name:        []string{"--original-url"},
						Description: `The original url`,
						Args: []model.Arg{{
							Name:        "original-url",
							Description: `The original url`,
						}},
					}},
				}},
			}, {
				Name:        []string{"resolve"},
				Description: `Resolve package dependencies`,
				Args: []model.Arg{{
					Name:        "package-name",
					Description: `The name of the package to resolve`,
				}},
				Options: []model.Option{{
					Name:        []string{"--help", "-h", "-help"},
					Description: `Show help information`,
				}, {
					Name:        []string{"--version"},
					Description: `Show the version`,
					Args: []model.Arg{{
						Name:        "version",
						Description: `The version to resolve at`,
						IsOptional:  true,
					}},
				}, {
					Name:        []string{"--branch"},
					Description: `The branch to resolve at`,
					Args: []model.Arg{{
						Name:        "branch",
						Description: `The branch to resolve at`,
					}},
				}, {
					Name:        []string{"--revision"},
					Description: `The revision to resolve at`,
					Args: []model.Arg{{
						Name:        "revision",
						Description: `The revision to resolve at`,
					}},
				}},
			}, {
				Name:        []string{"show-dependencies"},
				Description: `Print the resolved dependency graph`,
				Options: []model.Option{{
					Name:        []string{"--help", "-h", "-help"},
					Description: `Show help information`,
				}, {
					Name:        []string{"--version"},
					Description: `Show the version`,
				}, {
					Name:        []string{"--format"},
					Description: `The format type`,
					Args: []model.Arg{{
						Name:        "format",
						Description: `The format type`,
						Suggestions: []model.Suggestion{{Name: []string{`text`}}, {Name: []string{`dot`}}, {Name: []string{`json`}}, {Name: []string{`flatlist`}}},
					}},
				}},
			}, {
				Name:        []string{"tools-version"},
				Description: `Manipulate tools version of the current package`,
				Options: []model.Option{{
					Name:        []string{"--help", "-h", "-help"},
					Description: `Show help information`,
				}, {
					Name:        []string{"--version"},
					Description: `Show the version`,
				}, {
					Name:        []string{"--format"},
					Description: `The format type`,
					Args: []model.Arg{{
						Name:        "format",
						Description: `The format type`,
						Suggestions: []model.Suggestion{{Name: []string{`text`}}, {Name: []string{`dot`}}, {Name: []string{`json`}}, {Name: []string{`flatlist`}}},
					}},
				}, {
					Name:        []string{"--set-current"},
					Description: `Set tools version of package to the current tools version in use`,
				}, {
					Name:        []string{"--set"},
					Description: `Set tools version of package to the given value`,
					Args: []model.Arg{{
						Name:        "tools version",
						Description: `The tools version`,
					}},
				}},
			}, {
				Name:        []string{"generate-xcodeproj"},
				Description: `Generates an Xcode project (this command will be deprecated soon)`,
				Options: []model.Option{{
					Name:        []string{"--help", "-h", "-help"},
					Description: `Show help information`,
				}, {
					Name:        []string{"--version"},
					Description: `Show the version`,
				}, {
					Name:        []string{"--xcconfig-overrides"},
					Description: `Path to xcconfig file`,
					Args: []model.Arg{{
						Name:        "path",
						Description: `Path to xcconfig file`,
					}},
				}, {
					Name:        []string{"--output"},
					Description: `Path where the Xcode project should be generated`,
					Args: []model.Arg{{
						Name:        "path",
						Description: `Path where the Xcode project should be generated`,
					}},
				}, {
					Name:        []string{"--legacy-scheme-generator"},
					Description: `Use the legacy scheme generator`,
				}, {
					Name:        []string{"--watch"},
					Description: `Watch for changes to the Package manifest to regenerate the Xcode project`,
				}, {
					Name:        []string{"--skip-extra-files"},
					Description: `Do not add file references for extra files to the generated Xcode project`,
				}},
			}, {
				Name:        []string{"compute-checksum"},
				Description: `Compute the checksum for a binary artifact`,
				Options: []model.Option{{
					Name:        []string{"--help", "-h", "-help"},
					Description: `Show help information`,
				}, {
					Name:        []string{"--version"},
					Description: `Show the version`,
				}},
			}, {
				Name:        []string{"archive-source"},
				Description: `Create a source archive for the package`,
				Options: []model.Option{{
					Name:        []string{"--help", "-h", "-help"},
					Description: `Show help information`,
				}, {
					Name:        []string{"--version"},
					Description: `Show the version`,
				}, {
					Name:        []string{"-o", "--output"},
					Description: `The absolute or relative path for the generated source archive`,
					Args: []model.Arg{{
						Name:        "path",
						Description: `The absolute or relative path for the generated source archive`,
					}},
				}},
			}, {
				Name:        []string{"completion-tool"},
				Description: `Completion tool (for shell completions)`,
				Args: []model.Arg{{
					Name:        "mode",
					Description: `The completion tool mode`,
					Suggestions: []model.Suggestion{{Name: []string{`generate-bash-script`}}, {Name: []string{`generate-zsh-script`}}, {Name: []string{`generate-fish-script`}}, {Name: []string{`list-dependencies`}}, {Name: []string{`list-executables`}}},
				}},
				Options: []model.Option{{
					Name:        []string{"--help", "-h", "-help"},
					Description: `Show help information`,
				}, {
					Name:        []string{"--version"},
					Description: `Show the version`,
				}},
			}},
		}},
	}
}
