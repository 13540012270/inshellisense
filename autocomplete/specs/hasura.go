// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.
//
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

package specs

import (
	"github.com/microsoft/clac/autocomplete/model"
)

func init() {
	Specs["hasura"] = model.Subcommand{
		Name:        []string{"hasura"},
		Description: `Hasura GraphQL engine command line tool`,
		Options: []model.Option{{
			Name:        []string{"--envfile"},
			Description: `.env filename to load ENV vars from`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "string",
			}},
		}, {
			Name:        []string{"-h", "--help"},
			Description: `Help for hasura`,
		}, {
			Name:        []string{"--log-level"},
			Description: `Log level`,
			Args: []model.Arg{{
				Name:        "string",
				Suggestions: []model.Suggestion{{Name: []string{`DEBUG`}}, {Name: []string{`INFO`}}, {Name: []string{`WARN`}}, {Name: []string{`ERROR`}}, {Name: []string{`FATAL`}}},
			}},
		}, {
			Name:        []string{"--no-color"},
			Description: `Do not colorize output`,
		}, {
			Name:        []string{"--project"},
			Description: `Directory where commands are executed`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFolders},
				Name:      "string",
			}},
		}, {
			Name:        []string{"--skip-update-check"},
			Description: `Skip automatic update check on command execution`,
		}},
		Subcommands: []model.Subcommand{{
			Name:        []string{"actions"},
			Description: `Manage Hasura actions`,
			Options: []model.Option{{
				Name:        []string{"--admin-secret"},
				Description: `Admin secret for Hasura GraphQL engine`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--certificate-authority"},
				Description: `Path to a cert file for the certificate authority`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "string",
				}},
			}, {
				Name:        []string{"--endpoint"},
				Description: `Http(s) endpoint for Hasura GraphQL engine (env "HASURA_GRAPHQL_ENDPOINT")`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--insecure-skip-tls-verify"},
				Description: `Skip TLS verification and disable cert checking`,
			}, {
				Name:        []string{"--envfile"},
				Description: `.env filename to load ENV vars from`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "string",
				}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Help for hasura`,
			}, {
				Name:        []string{"--log-level"},
				Description: `Log level`,
				Args: []model.Arg{{
					Name:        "string",
					Suggestions: []model.Suggestion{{Name: []string{`DEBUG`}}, {Name: []string{`INFO`}}, {Name: []string{`WARN`}}, {Name: []string{`ERROR`}}, {Name: []string{`FATAL`}}},
				}},
			}, {
				Name:        []string{"--no-color"},
				Description: `Do not colorize output`,
			}, {
				Name:        []string{"--project"},
				Description: `Directory where commands are executed`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "string",
				}},
			}, {
				Name:        []string{"--skip-update-check"},
				Description: `Skip automatic update check on command execution`,
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"codegen"},
				Description: `Generate code for actions`,
				Args: []model.Arg{{
					Name:       "action name",
					IsOptional: true,
					IsVariadic: true,
				}},
				Options: []model.Option{{
					Name:        []string{"--derive-from"},
					Description: `Derive action from a hasura operation`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--admin-secret"},
					Description: `Admin secret for Hasura GraphQL engine`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--certificate-authority"},
					Description: `Path to a cert file for the certificate authority`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "string",
					}},
				}, {
					Name:        []string{"--endpoint"},
					Description: `Http(s) endpoint for Hasura GraphQL engine (env "HASURA_GRAPHQL_ENDPOINT")`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--insecure-skip-tls-verify"},
					Description: `Skip TLS verification and disable cert checking`,
				}, {
					Name:        []string{"--envfile"},
					Description: `.env filename to load ENV vars from`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "string",
					}},
				}, {
					Name:        []string{"-h", "--help"},
					Description: `Help for hasura`,
				}, {
					Name:        []string{"--log-level"},
					Description: `Log level`,
					Args: []model.Arg{{
						Name:        "string",
						Suggestions: []model.Suggestion{{Name: []string{`DEBUG`}}, {Name: []string{`INFO`}}, {Name: []string{`WARN`}}, {Name: []string{`ERROR`}}, {Name: []string{`FATAL`}}},
					}},
				}, {
					Name:        []string{"--no-color"},
					Description: `Do not colorize output`,
				}, {
					Name:        []string{"--project"},
					Description: `Directory where commands are executed`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFolders},
						Name:      "string",
					}},
				}, {
					Name:        []string{"--skip-update-check"},
					Description: `Skip automatic update check on command execution`,
				}},
			}, {
				Name:        []string{"create"},
				Description: `Create a Hasura action`,
				Args: []model.Arg{{
					Name:       "action name",
					IsOptional: true,
				}},
				Options: []model.Option{{
					Name:        []string{"--derive-from"},
					Description: `Derive action from a Hasura operation`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--kind"},
					Description: `Kind to use in action`,
					Args: []model.Arg{{
						Name:        "string",
						Suggestions: []model.Suggestion{{Name: []string{`synchronous`}}, {Name: []string{`asynchronous`}}},
						IsOptional:  true,
					}},
				}, {
					Name:        []string{"--webhook"},
					Description: `Webhook to use in action`,
					Args: []model.Arg{{
						Name:       "webhook",
						IsOptional: true,
					}},
				}, {
					Name:        []string{"--with-codegen"},
					Description: `Create action along with codegen`,
				}, {
					Name:        []string{"--admin-secret"},
					Description: `Admin secret for Hasura GraphQL engine`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--certificate-authority"},
					Description: `Path to a cert file for the certificate authority`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "string",
					}},
				}, {
					Name:        []string{"--endpoint"},
					Description: `Http(s) endpoint for Hasura GraphQL engine (env "HASURA_GRAPHQL_ENDPOINT")`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--insecure-skip-tls-verify"},
					Description: `Skip TLS verification and disable cert checking`,
				}, {
					Name:        []string{"--envfile"},
					Description: `.env filename to load ENV vars from`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "string",
					}},
				}, {
					Name:        []string{"-h", "--help"},
					Description: `Help for hasura`,
				}, {
					Name:        []string{"--log-level"},
					Description: `Log level`,
					Args: []model.Arg{{
						Name:        "string",
						Suggestions: []model.Suggestion{{Name: []string{`DEBUG`}}, {Name: []string{`INFO`}}, {Name: []string{`WARN`}}, {Name: []string{`ERROR`}}, {Name: []string{`FATAL`}}},
					}},
				}, {
					Name:        []string{"--no-color"},
					Description: `Do not colorize output`,
				}, {
					Name:        []string{"--project"},
					Description: `Directory where commands are executed`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFolders},
						Name:      "string",
					}},
				}, {
					Name:        []string{"--skip-update-check"},
					Description: `Skip automatic update check on command execution`,
				}},
			}, {
				Name:        []string{"use-codegen"},
				Description: `Use the codegen to generate code for Hasura actions`,
				Options: []model.Option{{
					Name:        []string{"--framework"},
					Description: `Framework to be used by codegen`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--output-dir"},
					Description: `Directory to create the codegen files`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFolders},
						Name:      "string",
					}},
				}, {
					Name:        []string{"--with-starter-kit"},
					Description: `Clone starter kit for a framework`,
				}, {
					Name:        []string{"--admin-secret"},
					Description: `Admin secret for Hasura GraphQL engine`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--certificate-authority"},
					Description: `Path to a cert file for the certificate authority`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "string",
					}},
				}, {
					Name:        []string{"--endpoint"},
					Description: `Http(s) endpoint for Hasura GraphQL engine (env "HASURA_GRAPHQL_ENDPOINT")`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--insecure-skip-tls-verify"},
					Description: `Skip TLS verification and disable cert checking`,
				}, {
					Name:        []string{"--envfile"},
					Description: `.env filename to load ENV vars from`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "string",
					}},
				}, {
					Name:        []string{"-h", "--help"},
					Description: `Help for hasura`,
				}, {
					Name:        []string{"--log-level"},
					Description: `Log level`,
					Args: []model.Arg{{
						Name:        "string",
						Suggestions: []model.Suggestion{{Name: []string{`DEBUG`}}, {Name: []string{`INFO`}}, {Name: []string{`WARN`}}, {Name: []string{`ERROR`}}, {Name: []string{`FATAL`}}},
					}},
				}, {
					Name:        []string{"--no-color"},
					Description: `Do not colorize output`,
				}, {
					Name:        []string{"--project"},
					Description: `Directory where commands are executed`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFolders},
						Name:      "string",
					}},
				}, {
					Name:        []string{"--skip-update-check"},
					Description: `Skip automatic update check on command execution`,
				}},
			}},
		}, {
			Name:        []string{"completions"},
			Description: `Generate auto completion code`,
			Args: []model.Arg{{
				Name:        "shell",
				Suggestions: []model.Suggestion{{Name: []string{`bash`}}, {Name: []string{`zsh`}}},
				IsOptional:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"--file"},
				Description: `File to which output has to be written`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "string",
				}},
			}, {
				Name:        []string{"--envfile"},
				Description: `.env filename to load ENV vars from`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "string",
				}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Help for hasura`,
			}, {
				Name:        []string{"--log-level"},
				Description: `Log level`,
				Args: []model.Arg{{
					Name:        "string",
					Suggestions: []model.Suggestion{{Name: []string{`DEBUG`}}, {Name: []string{`INFO`}}, {Name: []string{`WARN`}}, {Name: []string{`ERROR`}}, {Name: []string{`FATAL`}}},
				}},
			}, {
				Name:        []string{"--no-color"},
				Description: `Do not colorize output`,
			}, {
				Name:        []string{"--project"},
				Description: `Directory where commands are executed`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "string",
				}},
			}, {
				Name:        []string{"--skip-update-check"},
				Description: `Skip automatic update check on command execution`,
			}},
		}, {
			Name:        []string{"console"},
			Description: `Open the console to manage the database and try out APIs`,
			Options: []model.Option{{
				Name:        []string{"--address"},
				Description: `Address to serve console and migration API from`,
				Args: []model.Arg{{
					Name:       "string",
					IsOptional: true,
				}},
			}, {
				Name:        []string{"--api-port"},
				Description: `Port for serving migrate api`,
				Args: []model.Arg{{
					Name:       "string",
					IsOptional: true,
				}},
			}, {
				Name:        []string{"--browser"},
				Description: `Open console in a specific browser`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--console-port"},
				Description: `Port for serving console`,
				Args: []model.Arg{{
					Name:       "string",
					IsOptional: true,
				}},
			}, {
				Name:        []string{"--insecure-skip-tls-verify"},
				Description: `Skip TLS verification and disable cert checking`,
			}, {
				Name:        []string{"--no-browser"},
				Description: `Do not automatically open console in browser`,
			}, {
				Name:        []string{"--static-dir"},
				Description: `Directory where static assets mentioned in the console html template can be served from`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "string",
				}},
			}, {
				Name:        []string{"--use-server-assets"},
				Description: `When rendering console, use assets provided by HGE server`,
			}, {
				Name:        []string{"--admin-secret"},
				Description: `Admin secret for Hasura GraphQL engine`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--certificate-authority"},
				Description: `Path to a cert file for the certificate authority`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "string",
				}},
			}, {
				Name:        []string{"--endpoint"},
				Description: `Http(s) endpoint for Hasura GraphQL engine (env "HASURA_GRAPHQL_ENDPOINT")`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--insecure-skip-tls-verify"},
				Description: `Skip TLS verification and disable cert checking`,
			}, {
				Name:        []string{"--envfile"},
				Description: `.env filename to load ENV vars from`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "string",
				}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Help for hasura`,
			}, {
				Name:        []string{"--log-level"},
				Description: `Log level`,
				Args: []model.Arg{{
					Name:        "string",
					Suggestions: []model.Suggestion{{Name: []string{`DEBUG`}}, {Name: []string{`INFO`}}, {Name: []string{`WARN`}}, {Name: []string{`ERROR`}}, {Name: []string{`FATAL`}}},
				}},
			}, {
				Name:        []string{"--no-color"},
				Description: `Do not colorize output`,
			}, {
				Name:        []string{"--project"},
				Description: `Directory where commands are executed`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "string",
				}},
			}, {
				Name:        []string{"--skip-update-check"},
				Description: `Skip automatic update check on command execution`,
			}},
		}, {
			Name:        []string{"init"},
			Description: `Initialize a directory for Hasura GraphQL engine migrations`,
			Args: []model.Arg{{
				Name:       "directory name",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"--admin-secret"},
				Description: `Admin secret for Hasura GraphQL engine`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--endpoint"},
				Description: `Http(s) endpoint for Hasura GraphQL engine (env "HASURA_GRAPHQL_ENDPOINT")`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--install-manifest"},
				Description: `Install manifest to be cloned`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--version"},
				Description: `Config version to be used`,
				Args: []model.Arg{{
					Name: "int",
				}},
			}},
		}, {
			Name: []string{"md", "metadata"},
			Options: []model.Option{{
				Name:        []string{"--admin-secret"},
				Description: `Admin secret for Hasura GraphQL engine`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--certificate-authority"},
				Description: `Path to a cert file for the certificate authority`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "string",
				}},
			}, {
				Name:        []string{"--endpoint"},
				Description: `Http(s) endpoint for Hasura GraphQL engine (env "HASURA_GRAPHQL_ENDPOINT")`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--insecure-skip-tls-verify"},
				Description: `Skip TLS verification and disable cert checking`,
			}, {
				Name:        []string{"--envfile"},
				Description: `.env filename to load ENV vars from`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "string",
				}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Help for hasura`,
			}, {
				Name:        []string{"--log-level"},
				Description: `Log level`,
				Args: []model.Arg{{
					Name:        "string",
					Suggestions: []model.Suggestion{{Name: []string{`DEBUG`}}, {Name: []string{`INFO`}}, {Name: []string{`WARN`}}, {Name: []string{`ERROR`}}, {Name: []string{`FATAL`}}},
				}},
			}, {
				Name:        []string{"--no-color"},
				Description: `Do not colorize output`,
			}, {
				Name:        []string{"--project"},
				Description: `Directory where commands are executed`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "string",
				}},
			}, {
				Name:        []string{"--skip-update-check"},
				Description: `Skip automatic update check on command execution`,
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"apply"},
				Description: `Apply Hasura metadata on a database`,
				Options: []model.Option{{
					Name:        []string{"--dry-run"},
					Description: `Show metadata generated from project directory without applying to server`,
				}, {
					Name:        []string{"-o", "--output"},
					Description: `Specify an output format to show applied metadata`,
					Args: []model.Arg{{
						Name:        "string",
						Suggestions: []model.Suggestion{{Name: []string{`json`}}, {Name: []string{`yaml`}}},
						IsOptional:  true,
					}},
				}, {
					Name:        []string{"--admin-secret"},
					Description: `Admin secret for Hasura GraphQL engine`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--certificate-authority"},
					Description: `Path to a cert file for the certificate authority`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "string",
					}},
				}, {
					Name:        []string{"--endpoint"},
					Description: `Http(s) endpoint for Hasura GraphQL engine (env "HASURA_GRAPHQL_ENDPOINT")`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--insecure-skip-tls-verify"},
					Description: `Skip TLS verification and disable cert checking`,
				}, {
					Name:        []string{"--envfile"},
					Description: `.env filename to load ENV vars from`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "string",
					}},
				}, {
					Name:        []string{"-h", "--help"},
					Description: `Help for hasura`,
				}, {
					Name:        []string{"--log-level"},
					Description: `Log level`,
					Args: []model.Arg{{
						Name:        "string",
						Suggestions: []model.Suggestion{{Name: []string{`DEBUG`}}, {Name: []string{`INFO`}}, {Name: []string{`WARN`}}, {Name: []string{`ERROR`}}, {Name: []string{`FATAL`}}},
					}},
				}, {
					Name:        []string{"--no-color"},
					Description: `Do not colorize output`,
				}, {
					Name:        []string{"--project"},
					Description: `Directory where commands are executed`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFolders},
						Name:      "string",
					}},
				}, {
					Name:        []string{"--skip-update-check"},
					Description: `Skip automatic update check on command execution`,
				}},
			}, {
				Name:        []string{"clear"},
				Description: `Clear Hasura GraphQL engine metadata on the database`,
				Options: []model.Option{{
					Name:        []string{"--admin-secret"},
					Description: `Admin secret for Hasura GraphQL engine`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--certificate-authority"},
					Description: `Path to a cert file for the certificate authority`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "string",
					}},
				}, {
					Name:        []string{"--endpoint"},
					Description: `Http(s) endpoint for Hasura GraphQL engine (env "HASURA_GRAPHQL_ENDPOINT")`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--insecure-skip-tls-verify"},
					Description: `Skip TLS verification and disable cert checking`,
				}, {
					Name:        []string{"--envfile"},
					Description: `.env filename to load ENV vars from`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "string",
					}},
				}, {
					Name:        []string{"-h", "--help"},
					Description: `Help for hasura`,
				}, {
					Name:        []string{"--log-level"},
					Description: `Log level`,
					Args: []model.Arg{{
						Name:        "string",
						Suggestions: []model.Suggestion{{Name: []string{`DEBUG`}}, {Name: []string{`INFO`}}, {Name: []string{`WARN`}}, {Name: []string{`ERROR`}}, {Name: []string{`FATAL`}}},
					}},
				}, {
					Name:        []string{"--no-color"},
					Description: `Do not colorize output`,
				}, {
					Name:        []string{"--project"},
					Description: `Directory where commands are executed`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFolders},
						Name:      "string",
					}},
				}, {
					Name:        []string{"--skip-update-check"},
					Description: `Skip automatic update check on command execution`,
				}},
			}, {
				Name:        []string{"diff"},
				Description: `Show a highlighted diff of Hasura metadata`,
				Args: []model.Arg{{
					Templates:  []model.Template{model.TemplateFilepaths},
					Name:       "file1",
					IsOptional: true,
				}, {
					Templates:  []model.Template{model.TemplateFilepaths},
					Name:       "file2",
					IsOptional: true,
				}},
				Options: []model.Option{{
					Name:        []string{"--admin-secret"},
					Description: `Admin secret for Hasura GraphQL engine`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--certificate-authority"},
					Description: `Path to a cert file for the certificate authority`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "string",
					}},
				}, {
					Name:        []string{"--endpoint"},
					Description: `Http(s) endpoint for Hasura GraphQL engine (env "HASURA_GRAPHQL_ENDPOINT")`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--insecure-skip-tls-verify"},
					Description: `Skip TLS verification and disable cert checking`,
				}, {
					Name:        []string{"--envfile"},
					Description: `.env filename to load ENV vars from`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "string",
					}},
				}, {
					Name:        []string{"-h", "--help"},
					Description: `Help for hasura`,
				}, {
					Name:        []string{"--log-level"},
					Description: `Log level`,
					Args: []model.Arg{{
						Name:        "string",
						Suggestions: []model.Suggestion{{Name: []string{`DEBUG`}}, {Name: []string{`INFO`}}, {Name: []string{`WARN`}}, {Name: []string{`ERROR`}}, {Name: []string{`FATAL`}}},
					}},
				}, {
					Name:        []string{"--no-color"},
					Description: `Do not colorize output`,
				}, {
					Name:        []string{"--project"},
					Description: `Directory where commands are executed`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFolders},
						Name:      "string",
					}},
				}, {
					Name:        []string{"--skip-update-check"},
					Description: `Skip automatic update check on command execution`,
				}},
			}, {
				Name:        []string{"export"},
				Description: `Export Hasura GraphQL engine metadata from the database`,
				Options: []model.Option{{
					Name:        []string{"-o", "--output"},
					Description: `Specify an output format for exported metadata`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}},
			}, {
				Name:        []string{"ic", "inconsistency", "inconsistencies"},
				Description: `Manage inconsistent objects in Hasura metadata`,
				Options: []model.Option{{
					Name:        []string{"--admin-secret"},
					Description: `Admin secret for Hasura GraphQL engine`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--certificate-authority"},
					Description: `Path to a cert file for the certificate authority`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "string",
					}},
				}, {
					Name:        []string{"--endpoint"},
					Description: `Http(s) endpoint for Hasura GraphQL engine (env "HASURA_GRAPHQL_ENDPOINT")`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--insecure-skip-tls-verify"},
					Description: `Skip TLS verification and disable cert checking`,
				}, {
					Name:        []string{"--envfile"},
					Description: `.env filename to load ENV vars from`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "string",
					}},
				}, {
					Name:        []string{"-h", "--help"},
					Description: `Help for hasura`,
				}, {
					Name:        []string{"--log-level"},
					Description: `Log level`,
					Args: []model.Arg{{
						Name:        "string",
						Suggestions: []model.Suggestion{{Name: []string{`DEBUG`}}, {Name: []string{`INFO`}}, {Name: []string{`WARN`}}, {Name: []string{`ERROR`}}, {Name: []string{`FATAL`}}},
					}},
				}, {
					Name:        []string{"--no-color"},
					Description: `Do not colorize output`,
				}, {
					Name:        []string{"--project"},
					Description: `Directory where commands are executed`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFolders},
						Name:      "string",
					}},
				}, {
					Name:        []string{"--skip-update-check"},
					Description: `Skip automatic update check on command execution`,
				}},
				Subcommands: []model.Subcommand{{
					Name:        []string{"drop"},
					Description: `Drop inconsistent objects from the metadata`,
					Options: []model.Option{{
						Name:        []string{"--admin-secret"},
						Description: `Admin secret for Hasura GraphQL engine`,
						Args: []model.Arg{{
							Name: "string",
						}},
					}, {
						Name:        []string{"--certificate-authority"},
						Description: `Path to a cert file for the certificate authority`,
						Args: []model.Arg{{
							Templates: []model.Template{model.TemplateFilepaths},
							Name:      "string",
						}},
					}, {
						Name:        []string{"--endpoint"},
						Description: `Http(s) endpoint for Hasura GraphQL engine (env "HASURA_GRAPHQL_ENDPOINT")`,
						Args: []model.Arg{{
							Name: "string",
						}},
					}, {
						Name:        []string{"--insecure-skip-tls-verify"},
						Description: `Skip TLS verification and disable cert checking`,
					}, {
						Name:        []string{"--envfile"},
						Description: `.env filename to load ENV vars from`,
						Args: []model.Arg{{
							Templates: []model.Template{model.TemplateFilepaths},
							Name:      "string",
						}},
					}, {
						Name:        []string{"-h", "--help"},
						Description: `Help for hasura`,
					}, {
						Name:        []string{"--log-level"},
						Description: `Log level`,
						Args: []model.Arg{{
							Name:        "string",
							Suggestions: []model.Suggestion{{Name: []string{`DEBUG`}}, {Name: []string{`INFO`}}, {Name: []string{`WARN`}}, {Name: []string{`ERROR`}}, {Name: []string{`FATAL`}}},
						}},
					}, {
						Name:        []string{"--no-color"},
						Description: `Do not colorize output`,
					}, {
						Name:        []string{"--project"},
						Description: `Directory where commands are executed`,
						Args: []model.Arg{{
							Templates: []model.Template{model.TemplateFolders},
							Name:      "string",
						}},
					}, {
						Name:        []string{"--skip-update-check"},
						Description: `Skip automatic update check on command execution`,
					}},
				}, {
					Name:        []string{"ls", "list"},
					Description: `List all inconsistent objects from the metadata`,
					Options: []model.Option{{
						Name:        []string{"--admin-secret"},
						Description: `Admin secret for Hasura GraphQL engine`,
						Args: []model.Arg{{
							Name: "string",
						}},
					}, {
						Name:        []string{"--certificate-authority"},
						Description: `Path to a cert file for the certificate authority`,
						Args: []model.Arg{{
							Templates: []model.Template{model.TemplateFilepaths},
							Name:      "string",
						}},
					}, {
						Name:        []string{"--endpoint"},
						Description: `Http(s) endpoint for Hasura GraphQL engine (env "HASURA_GRAPHQL_ENDPOINT")`,
						Args: []model.Arg{{
							Name: "string",
						}},
					}, {
						Name:        []string{"--insecure-skip-tls-verify"},
						Description: `Skip TLS verification and disable cert checking`,
					}, {
						Name:        []string{"--envfile"},
						Description: `.env filename to load ENV vars from`,
						Args: []model.Arg{{
							Templates: []model.Template{model.TemplateFilepaths},
							Name:      "string",
						}},
					}, {
						Name:        []string{"-h", "--help"},
						Description: `Help for hasura`,
					}, {
						Name:        []string{"--log-level"},
						Description: `Log level`,
						Args: []model.Arg{{
							Name:        "string",
							Suggestions: []model.Suggestion{{Name: []string{`DEBUG`}}, {Name: []string{`INFO`}}, {Name: []string{`WARN`}}, {Name: []string{`ERROR`}}, {Name: []string{`FATAL`}}},
						}},
					}, {
						Name:        []string{"--no-color"},
						Description: `Do not colorize output`,
					}, {
						Name:        []string{"--project"},
						Description: `Directory where commands are executed`,
						Args: []model.Arg{{
							Templates: []model.Template{model.TemplateFolders},
							Name:      "string",
						}},
					}, {
						Name:        []string{"--skip-update-check"},
						Description: `Skip automatic update check on command execution`,
					}},
				}, {
					Name:        []string{"status"},
					Description: `Check if the metadata is inconsistent or not`,
					Options: []model.Option{{
						Name:        []string{"--admin-secret"},
						Description: `Admin secret for Hasura GraphQL engine`,
						Args: []model.Arg{{
							Name: "string",
						}},
					}, {
						Name:        []string{"--certificate-authority"},
						Description: `Path to a cert file for the certificate authority`,
						Args: []model.Arg{{
							Templates: []model.Template{model.TemplateFilepaths},
							Name:      "string",
						}},
					}, {
						Name:        []string{"--endpoint"},
						Description: `Http(s) endpoint for Hasura GraphQL engine (env "HASURA_GRAPHQL_ENDPOINT")`,
						Args: []model.Arg{{
							Name: "string",
						}},
					}, {
						Name:        []string{"--insecure-skip-tls-verify"},
						Description: `Skip TLS verification and disable cert checking`,
					}, {
						Name:        []string{"--envfile"},
						Description: `.env filename to load ENV vars from`,
						Args: []model.Arg{{
							Templates: []model.Template{model.TemplateFilepaths},
							Name:      "string",
						}},
					}, {
						Name:        []string{"-h", "--help"},
						Description: `Help for hasura`,
					}, {
						Name:        []string{"--log-level"},
						Description: `Log level`,
						Args: []model.Arg{{
							Name:        "string",
							Suggestions: []model.Suggestion{{Name: []string{`DEBUG`}}, {Name: []string{`INFO`}}, {Name: []string{`WARN`}}, {Name: []string{`ERROR`}}, {Name: []string{`FATAL`}}},
						}},
					}, {
						Name:        []string{"--no-color"},
						Description: `Do not colorize output`,
					}, {
						Name:        []string{"--project"},
						Description: `Directory where commands are executed`,
						Args: []model.Arg{{
							Templates: []model.Template{model.TemplateFolders},
							Name:      "string",
						}},
					}, {
						Name:        []string{"--skip-update-check"},
						Description: `Skip automatic update check on command execution`,
					}},
				}},
			}, {
				Name:        []string{"reload"},
				Description: `Reload Hasura GraphQL engine metadata on the database`,
				Options: []model.Option{{
					Name:        []string{"--admin-secret"},
					Description: `Admin secret for Hasura GraphQL engine`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--certificate-authority"},
					Description: `Path to a cert file for the certificate authority`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "string",
					}},
				}, {
					Name:        []string{"--endpoint"},
					Description: `Http(s) endpoint for Hasura GraphQL engine (env "HASURA_GRAPHQL_ENDPOINT")`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--insecure-skip-tls-verify"},
					Description: `Skip TLS verification and disable cert checking`,
				}, {
					Name:        []string{"--envfile"},
					Description: `.env filename to load ENV vars from`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "string",
					}},
				}, {
					Name:        []string{"-h", "--help"},
					Description: `Help for hasura`,
				}, {
					Name:        []string{"--log-level"},
					Description: `Log level`,
					Args: []model.Arg{{
						Name:        "string",
						Suggestions: []model.Suggestion{{Name: []string{`DEBUG`}}, {Name: []string{`INFO`}}, {Name: []string{`WARN`}}, {Name: []string{`ERROR`}}, {Name: []string{`FATAL`}}},
					}},
				}, {
					Name:        []string{"--no-color"},
					Description: `Do not colorize output`,
				}, {
					Name:        []string{"--project"},
					Description: `Directory where commands are executed`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFolders},
						Name:      "string",
					}},
				}, {
					Name:        []string{"--skip-update-check"},
					Description: `Skip automatic update check on command execution`,
				}},
			}},
		}, {
			Name:        []string{"migrate"},
			Description: `Manage migrations on the database`,
			Options: []model.Option{{
				Name:        []string{"--admin-secret"},
				Description: `Admin secret for Hasura GraphQL engine`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--certificate-authority"},
				Description: `Path to a cert file for the certificate authority`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "string",
				}},
			}, {
				Name:        []string{"--endpoint"},
				Description: `Http(s) endpoint for Hasura GraphQL engine (env "HASURA_GRAPHQL_ENDPOINT")`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--insecure-skip-tls-verify"},
				Description: `Skip TLS verification and disable cert checking`,
			}, {
				Name:        []string{"--envfile"},
				Description: `.env filename to load ENV vars from`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "string",
				}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Help for hasura`,
			}, {
				Name:        []string{"--log-level"},
				Description: `Log level`,
				Args: []model.Arg{{
					Name:        "string",
					Suggestions: []model.Suggestion{{Name: []string{`DEBUG`}}, {Name: []string{`INFO`}}, {Name: []string{`WARN`}}, {Name: []string{`ERROR`}}, {Name: []string{`FATAL`}}},
				}},
			}, {
				Name:        []string{"--no-color"},
				Description: `Do not colorize output`,
			}, {
				Name:        []string{"--project"},
				Description: `Directory where commands are executed`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "string",
				}},
			}, {
				Name:        []string{"--skip-update-check"},
				Description: `Skip automatic update check on command execution`,
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"apply"},
				Description: `Apply migrations on the database`,
				Options: []model.Option{{
					Name:        []string{"--up"},
					Description: `Apply all or N up migration steps`,
					Args: []model.Arg{{
						Name:       "string",
						IsOptional: true,
					}},
				}, {
					Name:        []string{"--down"},
					Description: `Apply all or N up migration steps`,
					Args: []model.Arg{{
						Name:       "string",
						IsOptional: true,
					}},
				}, {
					Name:        []string{"goto"},
					Description: `Apply migration chain up to to the version specified`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--version"},
					Description: `Only apply this particular migration`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--skip-execution"},
					Description: `Skip executing the migration action, but mark them as applied`,
				}, {
					Name:        []string{"--type"},
					Description: `Type of migration to be used with version flag`,
					Args: []model.Arg{{
						Name:        "string",
						Suggestions: []model.Suggestion{{Name: []string{`up`}}, {Name: []string{`down`}}},
					}},
				}, {
					Name:        []string{"--dry-run"},
					Description: `Print the names of migrations which are going to be applied`,
				}, {
					Name:        []string{"--all-databases"},
					Description: `Set this flag to attempt to apply migrations on all databases present on server`,
				}, {
					Name:        []string{"--admin-secret"},
					Description: `Admin secret for Hasura GraphQL engine`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--certificate-authority"},
					Description: `Path to a cert file for the certificate authority`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "string",
					}},
				}, {
					Name:        []string{"--endpoint"},
					Description: `Http(s) endpoint for Hasura GraphQL engine (env "HASURA_GRAPHQL_ENDPOINT")`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--insecure-skip-tls-verify"},
					Description: `Skip TLS verification and disable cert checking`,
				}, {
					Name:        []string{"--envfile"},
					Description: `.env filename to load ENV vars from`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "string",
					}},
				}, {
					Name:        []string{"-h", "--help"},
					Description: `Help for hasura`,
				}, {
					Name:        []string{"--log-level"},
					Description: `Log level`,
					Args: []model.Arg{{
						Name:        "string",
						Suggestions: []model.Suggestion{{Name: []string{`DEBUG`}}, {Name: []string{`INFO`}}, {Name: []string{`WARN`}}, {Name: []string{`ERROR`}}, {Name: []string{`FATAL`}}},
					}},
				}, {
					Name:        []string{"--no-color"},
					Description: `Do not colorize output`,
				}, {
					Name:        []string{"--project"},
					Description: `Directory where commands are executed`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFolders},
						Name:      "string",
					}},
				}, {
					Name:        []string{"--skip-update-check"},
					Description: `Skip automatic update check on command execution`,
				}},
			}, {
				Name:        []string{"create"},
				Description: `Create files required for a migration`,
				Args: []model.Arg{{
					Name:       "migration name",
					IsOptional: true,
				}},
				Options: []model.Option{{
					Name:        []string{"--down-sql"},
					Description: `Sql string/query that is to be used to create a down migration`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--from-server"},
					Description: `Take pg_dump of schema and Hasura metadata from the server`,
				}, {
					Name:        []string{"--metadata-from-file"},
					Description: `Path to a hasura metadata file to be used for up actions`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "string",
					}},
				}, {
					Name:        []string{"--metadata-from-server"},
					Description: `Take metadata from the server and write it as an up migration file`,
				}, {
					Name:        []string{"--schema"},
					Description: `Name of Postgres schema to export as a migration`,
					Args: []model.Arg{{
						Name:       "strings",
						IsVariadic: true,
					}},
				}, {
					Name:        []string{"--sql-from-file"},
					Description: `Path to an SQL file which contains the SQL statements`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "string",
					}},
				}, {
					Name:        []string{"--sql-from-server"},
					Description: `Take pg_dump from the server and save it as a migration`,
				}, {
					Name:        []string{"--up-sql"},
					Description: `Sql string/query that is to be used to create an up migration`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--admin-secret"},
					Description: `Admin secret for Hasura GraphQL engine`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--certificate-authority"},
					Description: `Path to a cert file for the certificate authority`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "string",
					}},
				}, {
					Name:        []string{"--endpoint"},
					Description: `Http(s) endpoint for Hasura GraphQL engine (env "HASURA_GRAPHQL_ENDPOINT")`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--insecure-skip-tls-verify"},
					Description: `Skip TLS verification and disable cert checking`,
				}, {
					Name:        []string{"--envfile"},
					Description: `.env filename to load ENV vars from`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "string",
					}},
				}, {
					Name:        []string{"-h", "--help"},
					Description: `Help for hasura`,
				}, {
					Name:        []string{"--log-level"},
					Description: `Log level`,
					Args: []model.Arg{{
						Name:        "string",
						Suggestions: []model.Suggestion{{Name: []string{`DEBUG`}}, {Name: []string{`INFO`}}, {Name: []string{`WARN`}}, {Name: []string{`ERROR`}}, {Name: []string{`FATAL`}}},
					}},
				}, {
					Name:        []string{"--no-color"},
					Description: `Do not colorize output`,
				}, {
					Name:        []string{"--project"},
					Description: `Directory where commands are executed`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFolders},
						Name:      "string",
					}},
				}, {
					Name:        []string{"--skip-update-check"},
					Description: `Skip automatic update check on command execution`,
				}},
			}, {
				Name:        []string{"delete"},
				Description: `Clear migrations from local project and server`,
				Options: []model.Option{{
					Name:        []string{"--all"},
					Description: `Clears all migrations for selected database`,
				}, {
					Name:        []string{"--force"},
					Description: `Executes operation without any confirmation`,
				}, {
					Name:        []string{"--version"},
					Description: `Deletes the specified version in migrations`,
					Args: []model.Arg{{
						Name: "uint",
					}},
				}, {
					Name:        []string{"--admin-secret"},
					Description: `Admin secret for Hasura GraphQL engine`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--certificate-authority"},
					Description: `Path to a cert file for the certificate authority`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "string",
					}},
				}, {
					Name:        []string{"--endpoint"},
					Description: `Http(s) endpoint for Hasura GraphQL engine (env "HASURA_GRAPHQL_ENDPOINT")`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--insecure-skip-tls-verify"},
					Description: `Skip TLS verification and disable cert checking`,
				}, {
					Name:        []string{"--envfile"},
					Description: `.env filename to load ENV vars from`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "string",
					}},
				}, {
					Name:        []string{"-h", "--help"},
					Description: `Help for hasura`,
				}, {
					Name:        []string{"--log-level"},
					Description: `Log level`,
					Args: []model.Arg{{
						Name:        "string",
						Suggestions: []model.Suggestion{{Name: []string{`DEBUG`}}, {Name: []string{`INFO`}}, {Name: []string{`WARN`}}, {Name: []string{`ERROR`}}, {Name: []string{`FATAL`}}},
					}},
				}, {
					Name:        []string{"--no-color"},
					Description: `Do not colorize output`,
				}, {
					Name:        []string{"--project"},
					Description: `Directory where commands are executed`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFolders},
						Name:      "string",
					}},
				}, {
					Name:        []string{"--skip-update-check"},
					Description: `Skip automatic update check on command execution`,
				}},
			}, {
				Name:        []string{"squash"},
				Description: `Squash multiple migrations into a single one`,
				Options: []model.Option{{
					Name:        []string{"--delete-source"},
					Description: `Delete the source files after squashing without any confirmation`,
				}, {
					Name:        []string{"--from"},
					Description: `Start squashing from this version`,
					Args: []model.Arg{{
						Name: "uint",
					}},
				}, {
					Name:        []string{"--name"},
					Description: `Name for the new squashed migration`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--admin-secret"},
					Description: `Admin secret for Hasura GraphQL engine`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--certificate-authority"},
					Description: `Path to a cert file for the certificate authority`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "string",
					}},
				}, {
					Name:        []string{"--endpoint"},
					Description: `Http(s) endpoint for Hasura GraphQL engine (env "HASURA_GRAPHQL_ENDPOINT")`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--insecure-skip-tls-verify"},
					Description: `Skip TLS verification and disable cert checking`,
				}, {
					Name:        []string{"--envfile"},
					Description: `.env filename to load ENV vars from`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "string",
					}},
				}, {
					Name:        []string{"-h", "--help"},
					Description: `Help for hasura`,
				}, {
					Name:        []string{"--log-level"},
					Description: `Log level`,
					Args: []model.Arg{{
						Name:        "string",
						Suggestions: []model.Suggestion{{Name: []string{`DEBUG`}}, {Name: []string{`INFO`}}, {Name: []string{`WARN`}}, {Name: []string{`ERROR`}}, {Name: []string{`FATAL`}}},
					}},
				}, {
					Name:        []string{"--no-color"},
					Description: `Do not colorize output`,
				}, {
					Name:        []string{"--project"},
					Description: `Directory where commands are executed`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFolders},
						Name:      "string",
					}},
				}, {
					Name:        []string{"--skip-update-check"},
					Description: `Skip automatic update check on command execution`,
				}},
			}, {
				Name:        []string{"status"},
				Description: `Display current status of migrations on a database`,
			}},
		}, {
			Name:        []string{"plugin", "plugins"},
			Description: `Manage plugins for the CLI`,
			Options: []model.Option{{
				Name:        []string{"--envfile"},
				Description: `.env filename to load ENV vars from`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "string",
				}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Help for hasura`,
			}, {
				Name:        []string{"--log-level"},
				Description: `Log level`,
				Args: []model.Arg{{
					Name:        "string",
					Suggestions: []model.Suggestion{{Name: []string{`DEBUG`}}, {Name: []string{`INFO`}}, {Name: []string{`WARN`}}, {Name: []string{`ERROR`}}, {Name: []string{`FATAL`}}},
				}},
			}, {
				Name:        []string{"--no-color"},
				Description: `Do not colorize output`,
			}, {
				Name:        []string{"--project"},
				Description: `Directory where commands are executed`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "string",
				}},
			}, {
				Name:        []string{"--skip-update-check"},
				Description: `Skip automatic update check on command execution`,
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"install"},
				Description: `Install a plugin from the index`,
				Args: []model.Arg{{
					Name:       "plugin name",
					IsOptional: true,
				}},
				Options: []model.Option{{
					Name:        []string{"--version"},
					Description: `Version to be installed`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--envfile"},
					Description: `.env filename to load ENV vars from`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "string",
					}},
				}, {
					Name:        []string{"-h", "--help"},
					Description: `Help for hasura`,
				}, {
					Name:        []string{"--log-level"},
					Description: `Log level`,
					Args: []model.Arg{{
						Name:        "string",
						Suggestions: []model.Suggestion{{Name: []string{`DEBUG`}}, {Name: []string{`INFO`}}, {Name: []string{`WARN`}}, {Name: []string{`ERROR`}}, {Name: []string{`FATAL`}}},
					}},
				}, {
					Name:        []string{"--no-color"},
					Description: `Do not colorize output`,
				}, {
					Name:        []string{"--project"},
					Description: `Directory where commands are executed`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFolders},
						Name:      "string",
					}},
				}, {
					Name:        []string{"--skip-update-check"},
					Description: `Skip automatic update check on command execution`,
				}},
			}, {
				Name:        []string{"list"},
				Description: `List all available plugins from index, versions and installation status`,
				Options: []model.Option{{
					Name:        []string{"--dont-update-index"},
					Description: `Do not update the plugin index local cache, only show the list`,
				}, {
					Name:        []string{"--envfile"},
					Description: `.env filename to load ENV vars from`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "string",
					}},
				}, {
					Name:        []string{"-h", "--help"},
					Description: `Help for hasura`,
				}, {
					Name:        []string{"--log-level"},
					Description: `Log level`,
					Args: []model.Arg{{
						Name:        "string",
						Suggestions: []model.Suggestion{{Name: []string{`DEBUG`}}, {Name: []string{`INFO`}}, {Name: []string{`WARN`}}, {Name: []string{`ERROR`}}, {Name: []string{`FATAL`}}},
					}},
				}, {
					Name:        []string{"--no-color"},
					Description: `Do not colorize output`,
				}, {
					Name:        []string{"--project"},
					Description: `Directory where commands are executed`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFolders},
						Name:      "string",
					}},
				}, {
					Name:        []string{"--skip-update-check"},
					Description: `Skip automatic update check on command execution`,
				}},
			}, {
				Name:        []string{"uninstall"},
				Description: `Uninstall a plugin`,
				Args: []model.Arg{{
					Name:       "plugin name",
					IsOptional: true,
				}},
				Options: []model.Option{{
					Name:        []string{"--envfile"},
					Description: `.env filename to load ENV vars from`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "string",
					}},
				}, {
					Name:        []string{"-h", "--help"},
					Description: `Help for hasura`,
				}, {
					Name:        []string{"--log-level"},
					Description: `Log level`,
					Args: []model.Arg{{
						Name:        "string",
						Suggestions: []model.Suggestion{{Name: []string{`DEBUG`}}, {Name: []string{`INFO`}}, {Name: []string{`WARN`}}, {Name: []string{`ERROR`}}, {Name: []string{`FATAL`}}},
					}},
				}, {
					Name:        []string{"--no-color"},
					Description: `Do not colorize output`,
				}, {
					Name:        []string{"--project"},
					Description: `Directory where commands are executed`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFolders},
						Name:      "string",
					}},
				}, {
					Name:        []string{"--skip-update-check"},
					Description: `Skip automatic update check on command execution`,
				}},
			}, {
				Name:        []string{"upgrade"},
				Description: `Upgrade a plugin to a newer version`,
				Args: []model.Arg{{
					Name:       "plugin name",
					IsOptional: true,
				}},
				Options: []model.Option{{
					Name:        []string{"--version"},
					Description: `Version to be upgraded`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--envfile"},
					Description: `.env filename to load ENV vars from`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "string",
					}},
				}, {
					Name:        []string{"-h", "--help"},
					Description: `Help for hasura`,
				}, {
					Name:        []string{"--log-level"},
					Description: `Log level`,
					Args: []model.Arg{{
						Name:        "string",
						Suggestions: []model.Suggestion{{Name: []string{`DEBUG`}}, {Name: []string{`INFO`}}, {Name: []string{`WARN`}}, {Name: []string{`ERROR`}}, {Name: []string{`FATAL`}}},
					}},
				}, {
					Name:        []string{"--no-color"},
					Description: `Do not colorize output`,
				}, {
					Name:        []string{"--project"},
					Description: `Directory where commands are executed`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFolders},
						Name:      "string",
					}},
				}, {
					Name:        []string{"--skip-update-check"},
					Description: `Skip automatic update check on command execution`,
				}},
			}},
		}, {
			Name:        []string{"scripts"},
			Description: `Execute helper scripts to manage Hasura projects`,
			Options: []model.Option{{
				Name:        []string{"--envfile"},
				Description: `.env filename to load ENV vars from`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "string",
				}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Help for hasura`,
			}, {
				Name:        []string{"--log-level"},
				Description: `Log level`,
				Args: []model.Arg{{
					Name:        "string",
					Suggestions: []model.Suggestion{{Name: []string{`DEBUG`}}, {Name: []string{`INFO`}}, {Name: []string{`WARN`}}, {Name: []string{`ERROR`}}, {Name: []string{`FATAL`}}},
				}},
			}, {
				Name:        []string{"--no-color"},
				Description: `Do not colorize output`,
			}, {
				Name:        []string{"--project"},
				Description: `Directory where commands are executed`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "string",
				}},
			}, {
				Name:        []string{"--skip-update-check"},
				Description: `Skip automatic update check on command execution`,
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"update-project-v2"},
				Description: `Update the Hasura project from config v1 to v2`,
				Options: []model.Option{{
					Name:        []string{"--metadata-dir"},
					Description: `Metadata directory`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFolders},
						Name:      "string",
					}},
				}, {
					Name:        []string{"--admin-secret"},
					Description: `Admin secret for Hasura GraphQL engine`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--certificate-authority"},
					Description: `Path to a cert file for the certificate authority`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "string",
					}},
				}, {
					Name:        []string{"--endpoint"},
					Description: `Http(s) endpoint for Hasura GraphQL engine (env "HASURA_GRAPHQL_ENDPOINT")`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--insecure-skip-tls-verify"},
					Description: `Skip TLS verification and disable cert checking`,
				}, {
					Name:        []string{"--envfile"},
					Description: `.env filename to load ENV vars from`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "string",
					}},
				}, {
					Name:        []string{"-h", "--help"},
					Description: `Help for hasura`,
				}, {
					Name:        []string{"--log-level"},
					Description: `Log level`,
					Args: []model.Arg{{
						Name:        "string",
						Suggestions: []model.Suggestion{{Name: []string{`DEBUG`}}, {Name: []string{`INFO`}}, {Name: []string{`WARN`}}, {Name: []string{`ERROR`}}, {Name: []string{`FATAL`}}},
					}},
				}, {
					Name:        []string{"--no-color"},
					Description: `Do not colorize output`,
				}, {
					Name:        []string{"--project"},
					Description: `Directory where commands are executed`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFolders},
						Name:      "string",
					}},
				}, {
					Name:        []string{"--skip-update-check"},
					Description: `Skip automatic update check on command execution`,
				}},
			}, {
				Name:        []string{"update-project-v3"},
				Description: `Update the Hasura project from config v2 to v3`,
				Options: []model.Option{{
					Name:        []string{"--database-name"},
					Description: `Database name for which the current migrations / seeds belong to`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--force"},
					Description: `Do not ask for confirmation`,
				}, {
					Name:        []string{"--move-state-only"},
					Description: `Do only a state migration from old hdb_catalog`,
				}, {
					Name:        []string{"--admin-secret"},
					Description: `Admin secret for Hasura GraphQL engine`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--certificate-authority"},
					Description: `Path to a cert file for the certificate authority`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "string",
					}},
				}, {
					Name:        []string{"--endpoint"},
					Description: `Http(s) endpoint for Hasura GraphQL engine (env "HASURA_GRAPHQL_ENDPOINT")`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--insecure-skip-tls-verify"},
					Description: `Skip TLS verification and disable cert checking`,
				}, {
					Name:        []string{"--envfile"},
					Description: `.env filename to load ENV vars from`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "string",
					}},
				}, {
					Name:        []string{"-h", "--help"},
					Description: `Help for hasura`,
				}, {
					Name:        []string{"--log-level"},
					Description: `Log level`,
					Args: []model.Arg{{
						Name:        "string",
						Suggestions: []model.Suggestion{{Name: []string{`DEBUG`}}, {Name: []string{`INFO`}}, {Name: []string{`WARN`}}, {Name: []string{`ERROR`}}, {Name: []string{`FATAL`}}},
					}},
				}, {
					Name:        []string{"--no-color"},
					Description: `Do not colorize output`,
				}, {
					Name:        []string{"--project"},
					Description: `Directory where commands are executed`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFolders},
						Name:      "string",
					}},
				}, {
					Name:        []string{"--skip-update-check"},
					Description: `Skip automatic update check on command execution`,
				}},
			}},
		}, {
			Name:        []string{"sd", "seed", "seeds"},
			Description: `Manage seed data`,
			Options: []model.Option{{
				Name:        []string{"--database-name"},
				Description: `Database name for which the current migrations / seeds belong to`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--admin-secret"},
				Description: `Admin secret for Hasura GraphQL engine`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--certificate-authority"},
				Description: `Path to a cert file for the certificate authority`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "string",
				}},
			}, {
				Name:        []string{"--endpoint"},
				Description: `Http(s) endpoint for Hasura GraphQL engine (env "HASURA_GRAPHQL_ENDPOINT")`,
				Args: []model.Arg{{
					Name: "string",
				}},
			}, {
				Name:        []string{"--insecure-skip-tls-verify"},
				Description: `Skip TLS verification and disable cert checking`,
			}, {
				Name:        []string{"--envfile"},
				Description: `.env filename to load ENV vars from`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "string",
				}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Help for hasura`,
			}, {
				Name:        []string{"--log-level"},
				Description: `Log level`,
				Args: []model.Arg{{
					Name:        "string",
					Suggestions: []model.Suggestion{{Name: []string{`DEBUG`}}, {Name: []string{`INFO`}}, {Name: []string{`WARN`}}, {Name: []string{`ERROR`}}, {Name: []string{`FATAL`}}},
				}},
			}, {
				Name:        []string{"--no-color"},
				Description: `Do not colorize output`,
			}, {
				Name:        []string{"--project"},
				Description: `Directory where commands are executed`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "string",
				}},
			}, {
				Name:        []string{"--skip-update-check"},
				Description: `Skip automatic update check on command execution`,
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"apply"},
				Description: `Apply seed data`,
				Options: []model.Option{{
					Name:        []string{"-f", "--file"},
					Description: `Seed file to apply`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "string array",
					}},
				}, {
					Name:        []string{"--admin-secret"},
					Description: `Admin secret for Hasura GraphQL engine`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--certificate-authority"},
					Description: `Path to a cert file for the certificate authority`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "string",
					}},
				}, {
					Name:        []string{"--endpoint"},
					Description: `Http(s) endpoint for Hasura GraphQL engine (env "HASURA_GRAPHQL_ENDPOINT")`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--insecure-skip-tls-verify"},
					Description: `Skip TLS verification and disable cert checking`,
				}, {
					Name:        []string{"--envfile"},
					Description: `.env filename to load ENV vars from`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "string",
					}},
				}, {
					Name:        []string{"-h", "--help"},
					Description: `Help for hasura`,
				}, {
					Name:        []string{"--log-level"},
					Description: `Log level`,
					Args: []model.Arg{{
						Name:        "string",
						Suggestions: []model.Suggestion{{Name: []string{`DEBUG`}}, {Name: []string{`INFO`}}, {Name: []string{`WARN`}}, {Name: []string{`ERROR`}}, {Name: []string{`FATAL`}}},
					}},
				}, {
					Name:        []string{"--no-color"},
					Description: `Do not colorize output`,
				}, {
					Name:        []string{"--project"},
					Description: `Directory where commands are executed`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFolders},
						Name:      "string",
					}},
				}, {
					Name:        []string{"--skip-update-check"},
					Description: `Skip automatic update check on command execution`,
				}},
			}, {
				Name:        []string{"create"},
				Description: `Create a new seed file`,
				Args: []model.Arg{{
					Name: "seed name",
				}},
				Options: []model.Option{{
					Name:        []string{"--from-table"},
					Description: `Name of table from which seed file has to be initialized`,
					Args: []model.Arg{{
						Name: "string array",
					}},
				}, {
					Name:        []string{"--admin-secret"},
					Description: `Admin secret for Hasura GraphQL engine`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--certificate-authority"},
					Description: `Path to a cert file for the certificate authority`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "string",
					}},
				}, {
					Name:        []string{"--endpoint"},
					Description: `Http(s) endpoint for Hasura GraphQL engine (env "HASURA_GRAPHQL_ENDPOINT")`,
					Args: []model.Arg{{
						Name: "string",
					}},
				}, {
					Name:        []string{"--insecure-skip-tls-verify"},
					Description: `Skip TLS verification and disable cert checking`,
				}, {
					Name:        []string{"--envfile"},
					Description: `.env filename to load ENV vars from`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "string",
					}},
				}, {
					Name:        []string{"-h", "--help"},
					Description: `Help for hasura`,
				}, {
					Name:        []string{"--log-level"},
					Description: `Log level`,
					Args: []model.Arg{{
						Name:        "string",
						Suggestions: []model.Suggestion{{Name: []string{`DEBUG`}}, {Name: []string{`INFO`}}, {Name: []string{`WARN`}}, {Name: []string{`ERROR`}}, {Name: []string{`FATAL`}}},
					}},
				}, {
					Name:        []string{"--no-color"},
					Description: `Do not colorize output`,
				}, {
					Name:        []string{"--project"},
					Description: `Directory where commands are executed`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFolders},
						Name:      "string",
					}},
				}, {
					Name:        []string{"--skip-update-check"},
					Description: `Skip automatic update check on command execution`,
				}},
			}},
		}, {
			Name:        []string{"update-cli"},
			Description: `Update the CLI to latest or a specific version`,
			Options: []model.Option{{
				Name:        []string{"--version"},
				Description: `A specific version to install`,
				Args: []model.Arg{{
					Name:       "string",
					IsOptional: true,
				}},
			}, {
				Name:        []string{"--envfile"},
				Description: `.env filename to load ENV vars from`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "string",
				}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Help for hasura`,
			}, {
				Name:        []string{"--log-level"},
				Description: `Log level`,
				Args: []model.Arg{{
					Name:        "string",
					Suggestions: []model.Suggestion{{Name: []string{`DEBUG`}}, {Name: []string{`INFO`}}, {Name: []string{`WARN`}}, {Name: []string{`ERROR`}}, {Name: []string{`FATAL`}}},
				}},
			}, {
				Name:        []string{"--no-color"},
				Description: `Do not colorize output`,
			}, {
				Name:        []string{"--project"},
				Description: `Directory where commands are executed`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "string",
				}},
			}, {
				Name:        []string{"--skip-update-check"},
				Description: `Skip automatic update check on command execution`,
			}},
		}, {
			Name:        []string{"version"},
			Description: `Print the CLI version`,
			Options: []model.Option{{
				Name:        []string{"--envfile"},
				Description: `.env filename to load ENV vars from`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "string",
				}},
			}, {
				Name:        []string{"-h", "--help"},
				Description: `Help for hasura`,
			}, {
				Name:        []string{"--log-level"},
				Description: `Log level`,
				Args: []model.Arg{{
					Name:        "string",
					Suggestions: []model.Suggestion{{Name: []string{`DEBUG`}}, {Name: []string{`INFO`}}, {Name: []string{`WARN`}}, {Name: []string{`ERROR`}}, {Name: []string{`FATAL`}}},
				}},
			}, {
				Name:        []string{"--no-color"},
				Description: `Do not colorize output`,
			}, {
				Name:        []string{"--project"},
				Description: `Directory where commands are executed`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "string",
				}},
			}, {
				Name:        []string{"--skip-update-check"},
				Description: `Skip automatic update check on command execution`,
			}},
		}},
	}
}
