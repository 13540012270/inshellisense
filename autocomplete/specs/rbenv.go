// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.
//
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

package specs

import (
	"github.com/microsoft/clac/autocomplete/model"
)

func init() {
	Specs["rbenv"] = model.Subcommand{
		Name:        []string{"rbenv"},
		Description: `Pick a Ruby version for your application and guarantee that your development environment matches production`,
		Subcommands: []model.Subcommand{{
			Name:        []string{"commands"},
			Description: `List all available rbenv commands`,
			Options: []model.Option{{
				Name: []string{"--sh"},
			}, {
				Name: []string{"--no-sh"},
			}},
		}, {
			Name:        []string{"global"},
			Description: `Set or show the global Ruby version`,
			Args: []model.Arg{{
				Name:       "version",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name: []string{"--unset"},
			}},
		}, {
			Name:        []string{"install"},
			Description: `Install a Ruby version using ruby-build`,
			Options: []model.Option{{
				Name:        []string{"--version"},
				Description: `Show version of ruby-build`,
				Args: []model.Arg{{
					Name:       "version",
					IsOptional: true,
				}},
			}},
		}, {
			Name:        []string{"local"},
			Description: `Set or show the local application-specific Ruby version`,
			Args: []model.Arg{{
				Name:       "version",
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name: []string{"--unset"},
			}},
		}, {
			Name:        []string{"rehash"},
			Description: `Rehash rbenv shims (run this after installing executables)`,
		}, {
			Name:        []string{"shell"},
			Description: `Set or show the shell-specific Ruby version`,
			Args: []model.Arg{{
				Name:       "version",
				IsOptional: true,
			}},
		}, {
			Name:        []string{"uninstall"},
			Description: `Uninstall a specific Ruby version`,
			Options: []model.Option{{
				Name:        []string{"-f"},
				Description: `If the version does not exist, do not display an error message`,
				Args:        []model.Arg{{}},
			}},
		}, {
			Name:        []string{"versions"},
			Description: `List installed Ruby versions`,
		}, {
			Name:        []string{"whence"},
			Description: `List all Ruby versions that contain the given executable`,
		}, {
			Name:        []string{"which"},
			Description: `Display the full path to an executable`,
			Args: []model.Arg{{
				Name: "command",
			}},
		}},
	}
}
