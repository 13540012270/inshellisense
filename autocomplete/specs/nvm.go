// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["nvm"] = model.Subcommand{
		Name:        []string{"nvm"},
		Description: `Node Package Manager`,
		Options: []model.Option{{
			Name:        []string{"--help"},
			Description: `Show help page`,
		}, {
			Name:        []string{"--version"},
			Description: `Print out the installed version of nvm`,
		}, {
			Name:        []string{"--no-colors"},
			Description: `Suppress colored output`,
		}},
		Subcommands: []model.Subcommand{{
			Name:        []string{"install"},
			Description: `Download and install a <version>. Uses .nvmrc if available and version is omitted`,
			Args: []model.Arg{{
				Name:        "version",
				Description: `Node version`,
				Suggestions: []model.Suggestion{{
					Name:        []string{`node`},
					Description: `The latest version of node`,
				}, {
					Name:        []string{`iojs`},
					Description: `The latest version of io.js`,
				}, {
					Name:        []string{`system`},
					Description: `System-installed version of node`,
				}},
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"-s"},
				Description: `Skip binary download, install from source only`,
			}, {
				Name:        []string{"--reinstall-packages-from"},
				Description: `When installing, reinstall packages installed in <version>`,
				Args: []model.Arg{{
					Name:        "version",
					Description: `Node version`,
					Suggestions: []model.Suggestion{{
						Name:        []string{`node`},
						Description: `The latest version of node`,
					}, {
						Name:        []string{`iojs`},
						Description: `The latest version of io.js`,
					}, {
						Name:        []string{`system`},
						Description: `System-installed version of node`,
					}},
				}},
			}, {
				Name:        []string{"--lts"},
				Description: `When installing, only select from LTS (long-term support) versions`,
			}, {
				Name:        []string{"--lts"},
				Description: `When installing, only select from versions for a specific LTS line`,
				Args: []model.Arg{{
					Name: "LTS name",
				}},
			}, {
				Name:        []string{"--skip-default-packages"},
				Description: `When installing, skip the default-packages file if it exists`,
			}, {
				Name:        []string{"--latest-npm"},
				Description: `After installing, attempt to upgrade to the latest working npm on the given node version`,
			}, {
				Name:        []string{"--no-progress"},
				Description: `Disable the progress bar on any downloads`,
			}, {
				Name:        []string{"--alias"},
				Description: `After installing, set the alias specified to the version specified. (same as: nvm alias <name> <version>)`,
				Args: []model.Arg{{
					Name: "name",
				}},
			}, {
				Name:        []string{"--default"},
				Description: `After installing, set default alias to the version specified. (same as: nvm alias default <version>)`,
			}},
		}, {
			Name:        []string{"uninstall"},
			Description: `Uninstall a version`,
			Args: []model.Arg{{
				Name:        "version",
				Description: `Node version`,
				Suggestions: []model.Suggestion{{
					Name:        []string{`node`},
					Description: `The latest version of node`,
				}, {
					Name:        []string{`iojs`},
					Description: `The latest version of io.js`,
				}, {
					Name:        []string{`system`},
					Description: `System-installed version of node`,
				}},
			}},
			Options: []model.Option{{
				Name:        []string{"--lts"},
				Description: `Uninstall using automatic LTS (long-term support) alias "lts/*", if available`,
			}, {
				Name:        []string{"--lts"},
				Description: `Uninstall using automatic alias for provided LTS line, if available`,
				Args: []model.Arg{{
					Name: "LTS name",
				}},
			}},
		}, {
			Name:        []string{"use"},
			Description: `Modify PATH to use <version>. Uses .nvmrc if available and version is omitted`,
			Args: []model.Arg{{
				Name:        "version",
				Description: `Node version`,
				Suggestions: []model.Suggestion{{
					Name:        []string{`node`},
					Description: `The latest version of node`,
				}, {
					Name:        []string{`iojs`},
					Description: `The latest version of io.js`,
				}, {
					Name:        []string{`system`},
					Description: `System-installed version of node`,
				}},
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"--silent"},
				Description: `Silences stdout/stderr output`,
			}, {
				Name:        []string{"--lts"},
				Description: `Uses automatic LTS (long-term support) alias "lts/*", if available`,
			}, {
				Name:        []string{"--lts"},
				Description: `Uses automatic alias for provided LTS line, if available`,
				Args: []model.Arg{{
					Name: "LTS name",
				}},
			}},
		}, {
			Name:        []string{"exec"},
			Description: `Run <command> on <version>. Uses .nvmrc if available and version is omitted`,
			Args: []model.Arg{{
				Name:        "version",
				Description: `Node version`,
				Suggestions: []model.Suggestion{{
					Name:        []string{`node`},
					Description: `The latest version of node`,
				}, {
					Name:        []string{`iojs`},
					Description: `The latest version of io.js`,
				}, {
					Name:        []string{`system`},
					Description: `System-installed version of node`,
				}},
				IsOptional: true,
			}, {
				Name:       "command",
				IsVariadic: true,
			}},
			Options: []model.Option{{
				Name:        []string{"--silent"},
				Description: `Silences stdout/stderr output`,
			}, {
				Name:        []string{"--lts"},
				Description: `Uses automatic LTS (long-term support) alias "lts/*", if available`,
			}, {
				Name:        []string{"--lts"},
				Description: `Uses automatic alias for provided LTS line, if available`,
				Args: []model.Arg{{
					Name: "LTS name",
				}},
			}},
		}, {
			Name:        []string{"run"},
			Description: `Run "node" on <version> with <args> as arguments. Uses .nvmrc if available and version is omitted`,
			Args: []model.Arg{{
				Name:        "version",
				Description: `Node version`,
				Suggestions: []model.Suggestion{{
					Name:        []string{`node`},
					Description: `The latest version of node`,
				}, {
					Name:        []string{`iojs`},
					Description: `The latest version of io.js`,
				}, {
					Name:        []string{`system`},
					Description: `System-installed version of node`,
				}},
				IsOptional: true,
			}, {
				Name:       "args",
				IsVariadic: true,
			}},
			Options: []model.Option{{
				Name:        []string{"--silent"},
				Description: `Silences stdout/stderr output`,
			}, {
				Name:        []string{"--lts"},
				Description: `Uses automatic LTS (long-term support) alias "lts/*", if available`,
			}, {
				Name:        []string{"--lts"},
				Description: `Uses automatic alias for provided LTS line, if available`,
				Args: []model.Arg{{
					Name: "LTS name",
				}},
			}},
		}, {
			Name:        []string{"current"},
			Description: `Display currently activated version of Node`,
		}, {
			Name:        []string{"ls"},
			Description: `List installed versions, matching a given <version> if provided`,
			Args: []model.Arg{{
				Name:        "version",
				Description: `Node version`,
				Suggestions: []model.Suggestion{{
					Name:        []string{`node`},
					Description: `The latest version of node`,
				}, {
					Name:        []string{`iojs`},
					Description: `The latest version of io.js`,
				}, {
					Name:        []string{`system`},
					Description: `System-installed version of node`,
				}},
			}},
			Options: []model.Option{{
				Name:        []string{"--no-colors"},
				Description: `Suppress colored output`,
			}, {
				Name:        []string{"--no-alias"},
				Description: `Suppress "nvm alias" output`,
			}},
		}, {
			Name:        []string{"ls-remote"},
			Description: `List remote versions available for install, matching a given <version> if provided`,
			Args: []model.Arg{{
				Name:        "version",
				Description: `Node version`,
				Suggestions: []model.Suggestion{{
					Name:        []string{`node`},
					Description: `The latest version of node`,
				}, {
					Name:        []string{`iojs`},
					Description: `The latest version of io.js`,
				}, {
					Name:        []string{`system`},
					Description: `System-installed version of node`,
				}},
			}},
			Options: []model.Option{{
				Name:        []string{"--lts"},
				Description: `When listing, only show LTS (long-term support) versions`,
			}, {
				Name:        []string{"--lts"},
				Description: `When listing, only show versions for a specific LTS line`,
				Args: []model.Arg{{
					Name: "LTS name",
				}},
			}, {
				Name:        []string{"--no-colors"},
				Description: `Suppress colored output`,
			}},
		}, {
			Name:        []string{"version"},
			Description: `Resolve the given description to a single local version`,
			Args: []model.Arg{{
				Name:        "version",
				Description: `Node version`,
				Suggestions: []model.Suggestion{{
					Name:        []string{`node`},
					Description: `The latest version of node`,
				}, {
					Name:        []string{`iojs`},
					Description: `The latest version of io.js`,
				}, {
					Name:        []string{`system`},
					Description: `System-installed version of node`,
				}},
			}},
		}, {
			Name:        []string{"version-remote"},
			Description: `Resolve the given description to a single remote version`,
			Args: []model.Arg{{
				Name:        "version",
				Description: `Node version`,
				Suggestions: []model.Suggestion{{
					Name:        []string{`node`},
					Description: `The latest version of node`,
				}, {
					Name:        []string{`iojs`},
					Description: `The latest version of io.js`,
				}, {
					Name:        []string{`system`},
					Description: `System-installed version of node`,
				}},
			}},
			Options: []model.Option{{
				Name:        []string{"--lts"},
				Description: `When listing, only show LTS (long-term support) versions`,
			}, {
				Name:        []string{"--lts"},
				Description: `When listing, only show versions for a specific LTS line`,
				Args: []model.Arg{{
					Name: "LTS name",
				}},
			}},
		}, {
			Name:        []string{"deactivate"},
			Description: `Undo effects of "nvm" on current shell`,
			Options: []model.Option{{
				Name:        []string{"--silent"},
				Description: `Silences stdout/stderr output`,
			}},
		}, {
			Name:        []string{"alias"},
			Description: `Show all aliases beginning with <pattern> or Set an alias named <name> pointing to <version>`,
			Args: []model.Arg{{
				Name:        "pattern or name",
				Description: `Pattern or name`,
			}, {
				Name:       "version",
				IsOptional: true,
			}},
		}, {
			Name:        []string{"unalias"},
			Description: `Deletes the alias named <name>`,
			Args: []model.Arg{{
				Name: "name",
			}},
		}, {
			Name:        []string{"install-latest-npm"},
			Description: `Attempt to upgrade to the latest working "npm" on the current node version`,
		}, {
			Name:        []string{"reinstall-packages"},
			Description: `Reinstall global "npm" packages contained in <version> to current version`,
			Args: []model.Arg{{
				Name:        "version",
				Description: `Node version`,
				Suggestions: []model.Suggestion{{
					Name:        []string{`node`},
					Description: `The latest version of node`,
				}, {
					Name:        []string{`iojs`},
					Description: `The latest version of io.js`,
				}, {
					Name:        []string{`system`},
					Description: `System-installed version of node`,
				}},
			}},
		}, {
			Name:        []string{"unload"},
			Description: `Unload "nvm" from shell`,
		}, {
			Name:        []string{"which"},
			Description: `Display path to installed node version. Uses .nvmrc if available and version is omitted`,
			Args: []model.Arg{{
				Name:        "version",
				Description: `Node version`,
				Suggestions: []model.Suggestion{{
					Name:        []string{`node`},
					Description: `The latest version of node`,
				}, {
					Name:        []string{`iojs`},
					Description: `The latest version of io.js`,
				}, {
					Name:        []string{`system`},
					Description: `System-installed version of node`,
				}},
				IsOptional: true,
			}},
			Options: []model.Option{{
				Name:        []string{"--silent"},
				Description: `Silences stdout/stderr output when a version is omitted`,
			}},
			Subcommands: []model.Subcommand{{
				Name: []string{"current"},
			}},
		}, {
			Name: []string{"cache"},
			Args: []model.Arg{{
				Suggestions: []model.Suggestion{{
					Name:        []string{`dir`},
					Description: `Display path to the cache directory for nvm`,
				}, {
					Name:        []string{`clear`},
					Description: `Empty cache directory for nvm`,
				}},
			}},
		}, {
			Name:        []string{"set-colors"},
			Description: `Set five text colors using format "yMeBg". Available when supported`,
			Args: []model.Arg{{
				Name:        "color codes",
				Description: `Using format "yMeBg"`,
			}},
		}},
	}
}
