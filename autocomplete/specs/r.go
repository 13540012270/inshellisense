// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["r"] = model.Subcommand{
		Name:        []string{"R"},
		Description: `Start R or invoke an R tool using CMD`,
		Options: []model.Option{{
			Name:        []string{"--help", "-h"},
			Description: `Print help message and exit`,
		}, {
			Name:        []string{"--version", "-v"},
			Description: `Print version info and exit`,
		}, {
			Name:        []string{"--encoding"},
			Description: `Specify encoding to be used for stdin`,
			Args: []model.Arg{{
				Name:        "encoding",
				Suggestions: []model.Suggestion{{Name: []string{`UTF-8`}}},
			}},
		}, {
			Name:        []string{"--save"},
			Description: `Save workspace at the end of the session`,
			ExclusiveOn: []string{"--no-save", "--vanilla"},
		}, {
			Name:        []string{"--no-save"},
			Description: `Do not save workspace at the end of the session`,
			ExclusiveOn: []string{"--save"},
		}, {
			Name:        []string{"--no-environ"},
			Description: `Do not read the site and user environment files`,
		}, {
			Name:        []string{"--no-site-file"},
			Description: `Do not read the site-wide Rprofile`,
		}, {
			Name:        []string{"--no-init-file"},
			Description: `Do not read the user R profile`,
		}, {
			Name:        []string{"--restore"},
			Description: `Do restore previously saved objects at startup`,
			ExclusiveOn: []string{"--no-restore-data", "--vanilla"},
		}, {
			Name:        []string{"--no-restore-data"},
			Description: `Do not restore previously saved objects`,
			ExclusiveOn: []string{"--restore"},
		}, {
			Name:        []string{"--no-restore-history"},
			Description: `Do not restore the R history file`,
		}, {
			Name:        []string{"--no-restore"},
			Description: `Do not restore anything`,
		}, {
			Name:        []string{"--vanilla"},
			Description: `Combine --no-save, --no-restore, --no-site-file, --no-init-file and --no-environ`,
			ExclusiveOn: []string{"--save", "--restore"},
		}, {
			Name:        []string{"--no-readline"},
			Description: `Do not use readline for command-line editing`,
		}, {
			Name:        []string{"--max-ppsize"},
			Description: `Set max size of protect stack`,
			Args: []model.Arg{{
				Name:        "max size",
				Description: `Max size of protect stack`,
			}},
		}, {
			Name:        []string{"--min-nsize"},
			Description: `Set min number of fixed size obj's ('cons cells')`,
			Args: []model.Arg{{
				Name:        "min size",
				Description: `Minimum number of fixed size objects`,
			}},
		}, {
			Name:        []string{"--min-vsize"},
			Description: `Set vector heap minimum (in bytes or '4M' = 4 MegaB)`,
			Args: []model.Arg{{
				Name:        "min vsize",
				Description: `Minimum vector heap size`,
			}},
		}, {
			Name:        []string{"--quiet", "--silent", "-q"},
			Description: `Do not print startup message`,
			ExclusiveOn: []string{"--verbose"},
		}, {
			Name:        []string{"--no-echo", "-s"},
			Description: `Make R run as quietly as possible`,
		}, {
			Name:        []string{"--interactive"},
			Description: `Force an interactive session`,
		}, {
			Name:        []string{"--verbose"},
			Description: `Print more information about progress`,
			ExclusiveOn: []string{"--quiet", "--silent", "-q", "--no-echo", "-s"},
		}, {
			Name:        []string{"--debugger", "-d"},
			Description: `Run R through a debugger`,
			Args: []model.Arg{{
				Name:        "debugger",
				Description: `Debugger to use`,
			}},
		}, {
			Name:        []string{"--debugger-args"},
			Description: `Pass arguments to the debugger`,
			Args: []model.Arg{{
				Name:        "args",
				Description: `Arguments for the debugger`,
			}},
		}, {
			Name:        []string{"--gui", "-g"},
			Description: `Type of GUI to use`,
			Args: []model.Arg{{
				Name:        "gui",
				Description: `Type of GUI`,
				Suggestions: []model.Suggestion{{Name: []string{`X11`}}, {Name: []string{`Tk`}}},
			}},
		}, {
			Name:        []string{"--arch"},
			Description: `Specify a sub-architecture`,
			Args: []model.Arg{{
				Name:        "arch",
				Description: `Sub-architecture`,
			}},
		}, {
			Name:        []string{"--args"},
			Description: `Skip the rest of the command line`,
		}, {
			Name:        []string{"--file", "-f"},
			Description: `Take input from a file`,
			Args: []model.Arg{{
				Name:        "file",
				Description: `File to run`,
				Generator:   nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"-e"},
			Description: `Execute and R expression and exit`,
			Args: []model.Arg{{
				Name:        "expr",
				Description: `Expression to evaluate`,
			}},
		}},
		Subcommands: []model.Subcommand{{
			Name:        []string{"RHOME"},
			Description: `Print path to R home directory and exit`,
		}, {
			Name:        []string{"CMD"},
			Description: `Invoke an R tool`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"BATCH"},
				Description: `Batch Execution of R`,
				Args: []model.Arg{{
					Name:        "infile",
					Description: `A file with R code to be executed`,
					Generator:   nil, // TODO: port over generator
				}, {
					Name:        "outfile",
					Description: `A file to which to write output. If not given, the name used is that of infile, with a possible .R extension stripped, and .Rout appended`,
				}},
				Options: []model.Option{{
					Name:        []string{"--help", "-h"},
					Description: `Print help message and exit`,
				}, {
					Name:        []string{"--version", "-v"},
					Description: `Print version info and exit`,
				}, {
					Name:        []string{"--no-timing"},
					Description: `Do not report the timings`,
				}, {
					Name:        []string{"--"},
					Description: `End processing of options`,
				}},
			}, {
				Name:        []string{"COMPILE"},
				Description: `Compile files for use with R (not available on Windows)`,
				Args: []model.Arg{{
					Name:        "files",
					Description: `Source files to be compiled`,
					Generator:   nil, // TODO: port over generator
					IsVariadic:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"--help", "-h"},
					Description: `Print help message and exit`,
				}, {
					Name:        []string{"--version", "-v"},
					Description: `Print version info and exit`,
				}},
			}, {
				Name:        []string{"SHLIB"},
				Description: `Compile the given source files and then link all specified object files`,
				Args: []model.Arg{{
					Name:        "files",
					Description: `The object files to be included in the shared object/DLL`,
					Generator:   nil, // TODO: port over generator
					IsVariadic:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"--help", "-h"},
					Description: `Print help message and exit`,
				}, {
					Name:        []string{"--version", "-v"},
					Description: `Print version info and exit`,
				}, {
					Name:        []string{"--clean", "-c"},
					Description: `Remove files created during compilation`,
				}, {
					Name:        []string{"--preclean"},
					Description: `Remove files created during a previous run`,
				}, {
					Name:        []string{"--output", "-o"},
					Description: `Name for the built library`,
					Args: []model.Arg{{
						Name:        "LIB",
						Description: `Full name for the built library`,
					}},
				}, {
					Name:        []string{"--dry-run", "-n"},
					Description: `Dry run; shows commands that would be used`,
				}, {
					Name:        []string{"--use-LTO"},
					Description: `Use Link-Time Optimization`,
					ExclusiveOn: []string{"--no-use-LTO"},
				}, {
					Name:        []string{"--no-use-LTO"},
					Description: `Do not use Link-Time Optimization`,
					ExclusiveOn: []string{"--use-LTO"},
				}, {
					Name:        []string{"--debug", "-d"},
					Description: `Build a debug DLL (Windows only)`,
				}},
			}, {
				Name:        []string{"INSTALL"},
				Description: `Utility for installing add-on packages`,
				Args: []model.Arg{{
					Name:        "packages",
					Description: `Directories with the package sources`,
					Generator:   nil, // TODO: port over generator
				}},
				Options: []model.Option{{
					Name:        []string{"--help", "-h"},
					Description: `Print help message and exit`,
				}, {
					Name:        []string{"--version", "-v"},
					Description: `Print version info and exit`,
				}, {
					Name:        []string{"--clean", "-c"},
					Description: `Remove files created during compilation`,
				}, {
					Name:        []string{"--preclean"},
					Description: `Remove files created during a previous run`,
				}, {
					Name:        []string{"--debug", "-d"},
					Description: `Turn on debugging messages`,
				}, {
					Name:        []string{"--library", "-l"},
					Description: `Install packages to library tree LIB`,
					Args: []model.Arg{{
						Name:        "LIB",
						Description: `Path to the R library tree to install to`,
						Generator:   nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"--no-configure"},
					Description: `Do not use the package's configure script`,
				}, {
					Name:        []string{"--no-docs"},
					Description: `Do not install HTML, LaTeX or examples help`,
				}, {
					Name:        []string{"--html"},
					Description: `Build HTML help`,
					ExclusiveOn: []string{"--no-html"},
				}, {
					Name:        []string{"--no-html"},
					Description: `Do not build HTML help`,
					ExclusiveOn: []string{"--html"},
				}, {
					Name:        []string{"--latex"},
					Description: `Install LaTeX help`,
				}, {
					Name:        []string{"--example"},
					Description: `Install R code for help examples`,
				}, {
					Name:        []string{"--fake"},
					Description: `Do minimal install for testing purposes`,
				}, {
					Name:        []string{"--no-lock"},
					Description: `Install on top of any existing installation without using a lock directory`,
					ExclusiveOn: []string{"--lock", "--pkglock"},
				}, {
					Name:        []string{"--lock"},
					Description: `Use a per-library lock directory (default)`,
					ExclusiveOn: []string{"--no-lock", "--pkglock"},
				}, {
					Name:        []string{"--pkglock"},
					Description: `Use a per-package lock directory (default for a single package)`,
					ExclusiveOn: []string{"--no-lock", "--lock"},
				}, {
					Name:        []string{"--build"},
					Description: `Build binaries of the installed package(s)`,
				}, {
					Name:        []string{"--install-tests"},
					Description: `Install package-specific tests (if any)`,
				}, {
					Name:        []string{"--no-R"},
					Description: `Suppress installation of the package R code`,
				}, {
					Name:        []string{"--no-libs"},
					Description: `Suppress installation of the package libs`,
				}, {
					Name:        []string{"--no-data"},
					Description: `Suppress installation of the package data`,
				}, {
					Name:        []string{"--no-help"},
					Description: `Suppress installation of the package help`,
				}, {
					Name:        []string{"--no-demo"},
					Description: `Suppress installation of the package demo`,
				}, {
					Name:        []string{"--no-exec"},
					Description: `Suppress installation of the 'exec' directory`,
				}, {
					Name:        []string{"--no-inst"},
					Description: `Suppress installation of the 'inst' directory`,
				}, {
					Name:        []string{"--no-multiarch"},
					Description: `Build only the main architecture`,
				}, {
					Name:        []string{"--libs-only"},
					Description: `Only install the libs directory`,
				}, {
					Name:        []string{"--data-compress"},
					Description: `Compression to be used for lazy-loading of data`,
					Args: []model.Arg{{
						Name:        "compression",
						Description: `Compression method`,
						Suggestions: []model.Suggestion{{Name: []string{`gzip`}}, {Name: []string{`none`}}, {Name: []string{`bzip2`}}, {Name: []string{`xz`}}},
					}},
				}, {
					Name:        []string{"--resave-data"},
					Description: `Re-save data files as compactly as possible`,
				}, {
					Name:        []string{"--compact-docs"},
					Description: `Re-compress PDF files under inst/doc`,
				}, {
					Name:        []string{"--with-keep.source"},
					Description: `'keep.source' for R code`,
					ExclusiveOn: []string{"--without-keep.source"},
				}, {
					Name:        []string{"--without-keep.source"},
					Description: `Do not use 'keep.source' for R code`,
					ExclusiveOn: []string{"--with-keep.source"},
				}, {
					Name:        []string{"--with-keep.parse.data"},
					Description: `Use 'keep.parse.data' for R code`,
					ExclusiveOn: []string{"--without-keep.parse.data"},
				}, {
					Name:        []string{"--without-keep.parse.data"},
					Description: `Do not 'keep.parse.data' for R code`,
					ExclusiveOn: []string{"--with-keep.parse.data"},
				}, {
					Name:        []string{"--byte-compile"},
					Description: `Byte-compile R code`,
					ExclusiveOn: []string{"--no-byte-compile"},
				}, {
					Name:        []string{"--no-byte-compile"},
					Description: `Do not byte-compile R code`,
					ExclusiveOn: []string{"--byte-compile"},
				}, {
					Name:        []string{"--staged-install"},
					Description: `Install to a temporary directory and then move to the target directory (default)`,
					ExclusiveOn: []string{"--staged-install"},
				}, {
					Name:        []string{"--no-staged-install"},
					Description: `Install directly to the target directory`,
					ExclusiveOn: []string{"--no-staged-install"},
				}, {
					Name:        []string{"--no-test-load"},
					Description: `Skip test of loading installed package`,
				}, {
					Name:        []string{"--no-clean-on-error"},
					Description: `Do not remove installed package on error`,
				}, {
					Name:        []string{"--merge-multiarch"},
					Description: `Multi-arch by merging (from a single tarball only)`,
				}, {
					Name:        []string{"--use-vanilla"},
					Description: `Do not read any Renviron or Rprofile files`,
				}, {
					Name:        []string{"--use-LTO"},
					Description: `Use Link-Time Optimization`,
					ExclusiveOn: []string{"--no-use-LTO"},
				}, {
					Name:        []string{"--no-use-LTO"},
					Description: `Do not use Link-Time Optimization`,
					ExclusiveOn: []string{"--use-LTO"},
				}, {
					Name:        []string{"--configure-args"},
					Description: `Set arguments for the configure scripts`,
					Args: []model.Arg{{
						Name:        "ARGS",
						Description: `Arguments for the configure script`,
					}},
				}, {
					Name:        []string{"--configure-vars"},
					Description: `Set variables for the configure scripts`,
					Args: []model.Arg{{
						Name:        "ARGS",
						Description: `Variables for the configure scripts`,
					}},
				}, {
					Name:        []string{"--strip"},
					Description: `Strip shared object(s) (Unix only)`,
				}, {
					Name:        []string{"--strip-lib"},
					Description: `Strip static/dynamic libraries under 'lib/' (Unix only)`,
				}, {
					Name:        []string{"--dsym"},
					Description: `Generate dSYM directory (macOS only)`,
				}, {
					Name:        []string{"--built-timestamp"},
					Description: `Set timestamp for 'Built' entry in DESCRIPTION (Unix only)`,
					Args: []model.Arg{{
						Name:        "STAMP",
						Description: `A timestamp for the build (Unix only)`,
					}},
				}, {
					Name:        []string{"--force-biarch"},
					Description: `Attempt to build both architectures (Windows only)`,
				}, {
					Name:        []string{"--compile-both"},
					Description: `Compile both architectures on 32-bit Windows (Windows only)`,
				}},
			}, {
				Name:        []string{"REMOVE"},
				Description: `Remove add-on packages`,
				Args: []model.Arg{{
					Name:        "packages",
					Description: `Packages to remove`,
					IsVariadic:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"--help", "-h"},
					Description: `Print help message and exit`,
				}, {
					Name:        []string{"--version", "-v"},
					Description: `Print version info and exit`,
				}, {
					Name:        []string{"--library", "-l"},
					Description: `The library tree to remove from`,
					Args: []model.Arg{{
						Name:        "LIB",
						Description: `Library tree`,
						Generator:   nil, // TODO: port over generator
					}},
				}},
			}, {
				Name:        []string{"build"},
				Description: `Build R packages from package sources`,
				Args: []model.Arg{{
					Name:        "pakgdirs",
					Description: `Package directories`,
					Generator:   nil, // TODO: port over generator
					IsVariadic:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"--help", "-h"},
					Description: `Print help message and exit`,
				}, {
					Name:        []string{"--version", "-v"},
					Description: `Print version info and exit`,
				}, {
					Name:        []string{"--force"},
					Description: `Force removal of INDEX file`,
				}, {
					Name:        []string{"--keep-empty-dirs"},
					Description: `Do not remove empty dirs`,
				}, {
					Name:        []string{"--no-build-vignettes"},
					Description: `Do not (re)build package vignettes`,
				}, {
					Name:        []string{"--no-manual"},
					Description: `Do not build the PDF manual`,
				}, {
					Name:        []string{"--resave-data"},
					Description: `Re-save data files as compactly as possible`,
					Args: []model.Arg{{
						Name:        "Compression method",
						Suggestions: []model.Suggestion{{Name: []string{`best`}}, {Name: []string{`gzip`}}, {Name: []string{`no`}}},
						IsOptional:  true,
					}},
					ExclusiveOn: []string{"--no-resave-data"},
				}, {
					Name:        []string{"--no-resave-data"},
					Description: `Do not save data`,
					ExclusiveOn: []string{"--resave-data"},
				}, {
					Name:        []string{"--compact-vignettes"},
					Description: `Try to compact PDF files under 'inst/doc'`,
					Args: []model.Arg{{
						Name:        "Compression method",
						Suggestions: []model.Suggestion{{Name: []string{`no`}}, {Name: []string{`qpdf`}}, {Name: []string{`gs`}}, {Name: []string{`gs+qpdf`}}, {Name: []string{`both`}}},
						IsOptional:  true,
					}},
				}, {
					Name:        []string{"--compression"},
					Description: `Type of compression to be used on tarball`,
					Args: []model.Arg{{
						Name:        "Compression method",
						Suggestions: []model.Suggestion{{Name: []string{`gzip`}}, {Name: []string{`none`}}, {Name: []string{`bzip2`}}, {Name: []string{`xz`}}},
						IsOptional:  true,
					}},
				}, {
					Name:        []string{"--md5"},
					Description: `Add MD5 sums`,
				}, {
					Name:        []string{"--log"},
					Description: `Log to file 'pkg-00build.log' when processing the pkgdir with basename 'pkg'`,
				}},
			}, {
				Name:        []string{"check"},
				Description: `Check R packages from package sources`,
				Args: []model.Arg{{
					Name:        "packages",
					Description: `Packages to check`,
					Generator:   nil, // TODO: port over generator
					IsVariadic:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"--help", "-h"},
					Description: `Print help message and exit`,
				}, {
					Name:        []string{"--version", "-v"},
					Description: `Print version info and exit`,
				}, {
					Name:        []string{"--library", "-lib"},
					Description: `Library used for test installation of packages`,
					Args: []model.Arg{{
						Name:        "LIB",
						Description: `Library tree`,
						Generator:   nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"--output", "-o"},
					Description: `Directory for output`,
					Args: []model.Arg{{
						Name:        "directory",
						Description: `Directory for output`,
						Generator:   nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"--no-clean"},
					Description: `Do not clean 'outdir' before using it`,
				}, {
					Name:        []string{"--no-codoc"},
					Description: `Do not check for code/documentation mismatches`,
				}, {
					Name:        []string{"--no-examples"},
					Description: `Do not run the examples in the Rd files`,
				}, {
					Name:        []string{"--no-install"},
					Description: `Skip installation and associated tests`,
				}, {
					Name:        []string{"--no-tests"},
					Description: `Do not run code in 'tests' subdirectory`,
				}, {
					Name:        []string{"--no-manual"},
					Description: `Do not produce the PDF manual`,
				}, {
					Name:        []string{"--no-vignettes"},
					Description: `Do not run R code in vignettes nor build outputs`,
				}, {
					Name:        []string{"--no-build-vignettes"},
					Description: `Do not build vignette outputs`,
				}, {
					Name:        []string{"--ignore-vignettes"},
					Description: `Skip all tests on vignettes`,
				}, {
					Name:        []string{"--run-dontrun"},
					Description: `Do run "dontrun{}" sections in the Rd files`,
				}, {
					Name:        []string{"--run-donttest"},
					Description: `Do run "donttest{}" sections in the Rd files`,
				}, {
					Name:        []string{"--use-gct"},
					Description: `Use "gctorture(TRUE)" when running examples, tests`,
				}, {
					Name:        []string{"--use-valgrind"},
					Description: `Use "valgrind" when running examples, tests, vignettes`,
				}, {
					Name:        []string{"--timings"},
					Description: `Record timings for examples`,
				}, {
					Name:        []string{"--install-args"},
					Description: `Command-line args to be passed to INSTALL`,
					Args: []model.Arg{{
						Name:        "args",
						Description: `Command-line args to be passed to INSTALL`,
					}},
				}, {
					Name:        []string{"--test-dir"},
					Description: `Look in this subdirectory for test scripts`,
					Args: []model.Arg{{
						Name:        "directory",
						Description: `Directory with the tests directory`,
						Generator:   nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"--no-stop-on-test-error"},
					Description: `Do not stop running tests after first error`,
				}, {
					Name:        []string{"--check-subdirs"},
					Description: `Run checks on the package subdirectories`,
					Args: []model.Arg{{
						Name:        "yes-or-no",
						Description: `Run checks on subdirectories?`,
						Suggestions: []model.Suggestion{{Name: []string{`default`}}, {Name: []string{`yes`}}, {Name: []string{`no`}}},
					}},
				}, {
					Name:        []string{"--as-cran"},
					Description: `Select customizations similar to those used by CRAN`,
				}, {
					Name:        []string{"--extra-arch"},
					Description: `Do only runtime tests needed for an additional sub-architecture`,
				}, {
					Name:        []string{"--multiarch"},
					Description: `Do runtime tests on all installed sub-archs`,
					ExclusiveOn: []string{"--no-multiarch"},
				}, {
					Name:        []string{"--no-multiarch"},
					Description: `Do runtime tests only on the main sub-architecture`,
					ExclusiveOn: []string{"--multiarch"},
				}, {
					Name:        []string{"--force-multiarch"},
					Description: `Run tests on all sub-archs even for packages with no compiled code`,
					ExclusiveOn: []string{"--no-multiarch"},
				}},
			}, {
				Name:        []string{"LINK"},
				Description: `Perform the specified linkcmd`,
				Args: []model.Arg{{
					Name:        "linkcmd",
					Description: `Command for linkcmd`,
				}},
				Options: []model.Option{{
					Name:        []string{"--help", "-h"},
					Description: `Print help message and exit`,
				}, {
					Name:        []string{"--version", "-v"},
					Description: `Print version info and exit`,
				}},
			}, {
				Name:        []string{"rprof"},
				Description: `Post-process profiling information from "Rprof()"`,
				Args: []model.Arg{{
					Name:        "Rprof output file",
					Description: `File generated by "Rprof()"`,
					Generator:   nil, // TODO: port over generator
					IsOptional:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"--help", "-h"},
					Description: `Print help message and exit`,
				}, {
					Name:        []string{"--version", "-v"},
					Description: `Print version info and exit`,
				}, {
					Name:        []string{"--lines"},
					Description: `Print line information`,
				}, {
					Name:        []string{"--total"},
					Description: `Print only by total`,
				}, {
					Name:        []string{"--self"},
					Description: `Print only by self`,
				}, {
					Name:        []string{"--linesonly"},
					Description: `Print only by line`,
				}, {
					Name:        []string{"--min%total"},
					Description: `Minimum % to print for 'by total'`,
					Args: []model.Arg{{
						Name:        "min % total",
						Description: `Minimum % to print for 'by total'`,
						Suggestions: []model.Suggestion{{Name: []string{`1`}}, {Name: []string{`10`}}, {Name: []string{`50`}}},
					}},
				}, {
					Name:        []string{"--min%self"},
					Description: `Minimum % to print for 'by self'`,
					Args: []model.Arg{{
						Name:        "min % self",
						Description: `Minimum % to print for 'by self'`,
						Suggestions: []model.Suggestion{{Name: []string{`1`}}, {Name: []string{`10`}}, {Name: []string{`50`}}},
					}},
				}},
			}, {
				Name:        []string{"Rdconv"},
				Description: `Convert R documentation to other formats`,
				Args: []model.Arg{{
					Name:        "file",
					Description: `R doc file to convert`,
					Generator:   nil, // TODO: port over generator
				}},
				Options: []model.Option{{
					Name:        []string{"--help", "-h"},
					Description: `Print help message and exit`,
				}, {
					Name:        []string{"--version", "-v"},
					Description: `Print version info and exit`,
				}, {
					Name:        []string{"--type", "-t"},
					Description: `Output format type`,
					Args: []model.Arg{{
						Name:        "type",
						Description: `Output format type`,
						Suggestions: []model.Suggestion{{Name: []string{`txt`}}, {Name: []string{`html`}}, {Name: []string{`latex`}}, {Name: []string{`example`}}},
					}},
				}, {
					Name:        []string{"--encoding"},
					Description: `Encoding of the output`,
					Args: []model.Arg{{
						Name:        "enc",
						Description: `Output encoding`,
					}},
				}, {
					Name:        []string{"--package"},
					Description: `Package name`,
					Args: []model.Arg{{
						Name:        "package",
						Description: `Package name`,
					}},
				}, {
					Name:        []string{"--output", "-o"},
					Description: `The output file`,
					Args: []model.Arg{{
						Name:        "output file",
						Description: `Name of the output file, '""' to use the input file without '.Rd'`,
						Suggestions: []model.Suggestion{{Name: []string{`""`}}, {Name: []string{`-`}}},
					}},
				}, {
					Name:        []string{"--os", "--OS"},
					Description: `Set name of OS ('unix' or 'windows')`,
					Args: []model.Arg{{
						Name:        "OS",
						Description: `Name of the OS`,
						Suggestions: []model.Suggestion{{Name: []string{`unix`}}, {Name: []string{`windows`}}},
					}},
				}, {
					Name:        []string{"--RdMacros"},
					Description: `Packages from which to get Rd macros`,
					Args: []model.Arg{{
						Name:        "package list",
						Description: `List of packages`,
					}},
				}},
			}, {
				Name:        []string{"Rd2pdf"},
				Description: `Generate PDF output from R documentation files`,
				Args: []model.Arg{{
					Name:        "files or pkgs",
					Description: `Rd files, or a directory with the sources of a pkg, or an installed pkg`,
					Generator:   nil, // TODO: port over generator
				}},
				Options: []model.Option{{
					Name:        []string{"--help", "-h"},
					Description: `Print help message and exit`,
				}, {
					Name:        []string{"--version", "-v"},
					Description: `Print version info and exit`,
				}, {
					Name:        []string{"--batch"},
					Description: `No interaction between files`,
				}, {
					Name:        []string{"--no-clean"},
					Description: `Do not remove created temporary files`,
				}, {
					Name:        []string{"--no-preview"},
					Description: `Do not preview generated PDF file`,
				}, {
					Name:        []string{"--encoding"},
					Description: `Set the default input encoding`,
					Args: []model.Arg{{
						Name:        "enc",
						Description: `Output encoding`,
					}},
				}, {
					Name:        []string{"--outputEncoding"},
					Description: `Set the default output encoding`,
					Args: []model.Arg{{
						Name:        "enc",
						Description: `Output encoding`,
					}},
				}, {
					Name:        []string{"--os", "--OS"},
					Description: `Set name of OS ('unix' or 'windows')`,
					Args: []model.Arg{{
						Name:        "OS",
						Description: `Name of the OS`,
						Suggestions: []model.Suggestion{{Name: []string{`unix`}}, {Name: []string{`windows`}}},
					}},
				}, {
					Name:        []string{"--output", "-o"},
					Description: `Write output to a file`,
					Args: []model.Arg{{
						Name:        "file",
						Description: `Name of output file`,
					}},
				}, {
					Name:        []string{"--force"},
					Description: `Overwrite output file if it exists`,
				}, {
					Name:        []string{"--title"},
					Description: `Set the title of the document`,
					Args: []model.Arg{{
						Name:        "title",
						Description: `Title of the document`,
					}},
				}, {
					Name:        []string{"--no-index"},
					Description: `Do not index output`,
				}, {
					Name:        []string{"--no-description"},
					Description: `Do not typeset the description of a package`,
				}, {
					Name:        []string{"--internals"},
					Description: `Typeset 'internal' documentation (usually skipped)`,
				}, {
					Name:        []string{"--build_dir"},
					Description: `Set the working directory`,
					Args: []model.Arg{{
						Name:        "working dir",
						Description: `Working directory for the build`,
						Generator:   nil, // TODO: port over generator
					}},
				}, {
					Name:        []string{"--RdMacros"},
					Description: `Packages from which to get Rd macros`,
					Args: []model.Arg{{
						Name:        "package list",
						Description: `List of packages`,
					}},
				}},
			}, {
				Name:        []string{"Rd2txt"},
				Description: `Convert R documentation to text`,
				Args: []model.Arg{{
					Name:        "file",
					Description: `R doc file to convert`,
					Generator:   nil, // TODO: port over generator
				}},
				Options: []model.Option{{
					Name:        []string{"--help", "-h"},
					Description: `Print help message and exit`,
				}, {
					Name:        []string{"--version", "-v"},
					Description: `Print version info and exit`,
				}, {
					Name:        []string{"--type", "-t"},
					Description: `Output format type`,
					Args: []model.Arg{{
						Name:        "type",
						Description: `Output format type`,
						Suggestions: []model.Suggestion{{Name: []string{`txt`}}, {Name: []string{`html`}}, {Name: []string{`latex`}}, {Name: []string{`example`}}},
					}},
				}, {
					Name:        []string{"--encoding"},
					Description: `Encoding of the output`,
					Args: []model.Arg{{
						Name:        "enc",
						Description: `Output encoding`,
					}},
				}, {
					Name:        []string{"--package"},
					Description: `Package name`,
					Args: []model.Arg{{
						Name:        "package",
						Description: `Package name`,
					}},
				}, {
					Name:        []string{"--output", "-o"},
					Description: `The output file`,
					Args: []model.Arg{{
						Name:        "output file",
						Description: `Name of the output file, '""' to use the input file without '.Rd'`,
						Suggestions: []model.Suggestion{{Name: []string{`""`}}, {Name: []string{`-`}}},
					}},
				}, {
					Name:        []string{"--os", "--OS"},
					Description: `Set name of OS ('unix' or 'windows')`,
					Args: []model.Arg{{
						Name:        "OS",
						Description: `Name of the OS`,
						Suggestions: []model.Suggestion{{Name: []string{`unix`}}, {Name: []string{`windows`}}},
					}},
				}, {
					Name:        []string{"--RdMacros"},
					Description: `Packages from which to get Rd macros`,
					Args: []model.Arg{{
						Name:        "package list",
						Description: `List of packages`,
					}},
				}},
			}, {
				Name:        []string{"Stangle"},
				Description: `A front-end for Stangle and other vignette engines`,
				Args: []model.Arg{{
					Name:        "file",
					Description: `File to process`,
					Generator:   nil, // TODO: port over generator
				}},
				Options: []model.Option{{
					Name:        []string{"--help", "-h"},
					Description: `Print help message and exit`,
				}, {
					Name:        []string{"--version", "-v"},
					Description: `Print version info and exit`,
				}, {
					Name:        []string{"--engine"},
					Description: `Use named vignette engine`,
					Args: []model.Arg{{
						Name:        "pkg::engine",
						Description: `Vignette engine`,
						Suggestions: []model.Suggestion{{Name: []string{`Stangle`}}, {Name: []string{`knitr::knit`}}, {Name: []string{`utils::Sweave`}}},
					}},
				}, {
					Name:        []string{"--encoding"},
					Description: `Set the encoding for file`,
					Args: []model.Arg{{
						Name:        "enc",
						Description: `File encoding`,
					}},
				}, {
					Name:        []string{"--options"},
					Description: `Comma-separated list of Stangle options`,
					Args: []model.Arg{{
						Name:        "options",
						Description: `Options for Stangle`,
					}},
				}},
			}, {
				Name:        []string{"Sweave"},
				Description: `A front-end for Sweave and other vignette engines`,
				Args: []model.Arg{{
					Name:        "file",
					Description: `Vignette to build`,
					Generator:   nil, // TODO: port over generator
				}},
				Options: []model.Option{{
					Name:        []string{"--help", "-h"},
					Description: `Print help message and exit`,
				}, {
					Name:        []string{"--version", "-v"},
					Description: `Print version info and exit`,
				}, {
					Name:        []string{"--driver"},
					Description: `Use named Sweave driver`,
					Args: []model.Arg{{
						Name:        "driver",
						Description: `Sweave driver`,
					}},
				}, {
					Name:        []string{"--engine"},
					Description: `Use named vignette engine`,
					Args: []model.Arg{{
						Name:        "pkg::engine",
						Description: `Vignette engine`,
					}},
				}, {
					Name:        []string{"--encoding=enc"},
					Description: `Default encoding 'enc' for file`,
					Args: []model.Arg{{
						Name:        "enc",
						Description: `File encoding`,
					}},
				}, {
					Name:        []string{"--clean"},
					Description: `Remove some of the created files`,
					Args: []model.Arg{{
						Name:        "method",
						Description: `How to clean the results`,
						Suggestions: []model.Suggestion{{Name: []string{`default`}}, {Name: []string{`keepOuts`}}},
						IsOptional:  true,
					}},
				}, {
					Name:        []string{"--options"},
					Description: `Comma-separated list of Sweave/engine options`,
					Args: []model.Arg{{
						Name:        "options",
						Description: `Options for Sweave/engine`,
					}},
				}, {
					Name:        []string{"--pdf"},
					Description: `Convert to PDF document`,
				}, {
					Name:        []string{"--compact"},
					Description: `Try to compact PDF document`,
					Args: []model.Arg{{
						Name:        "Compacting method",
						Description: `How to compact the PDF doc`,
						Suggestions: []model.Suggestion{{Name: []string{`no`}}, {Name: []string{`qpdf`}}, {Name: []string{`gs`}}, {Name: []string{`gs+qpdf`}}, {Name: []string{`both`}}},
						IsOptional:  true,
					}},
				}},
			}, {
				Name:        []string{"Rdiff"},
				Description: `Diff R output files, discarding the R startup message`,
				Args: []model.Arg{{
					Name:        "from",
					Description: `'From' R output file (or '-' for stdin)`,
					Generator:   nil, // TODO: port over generator
				}, {
					Name:        "to",
					Description: `'To' R output file`,
					Generator:   nil, // TODO: port over generator
				}},
				Options: []model.Option{{
					Name:        []string{"--help", "-h"},
					Description: `Print help message and exit`,
				}, {
					Name:        []string{"--version", "-v"},
					Description: `Print version info and exit`,
				}},
			}, {
				Name:        []string{"config"},
				Description: `Get the value of a basic R configure variable`,
				Args: []model.Arg{{
					Name:        "variable",
					Description: `R config variable`,
					Suggestions: []model.Suggestion{{Name: []string{`AR`}}, {Name: []string{`BLAS_LIBS`}}, {Name: []string{`CC`}}, {Name: []string{`CFLAGS`}}, {Name: []string{`CPICFLAGS`}}, {Name: []string{`CPPFLAGS`}}, {Name: []string{`CXX`}}, {Name: []string{`CXXFLAGS`}}, {Name: []string{`CXXPICFLAGS`}}, {Name: []string{`CXX11`}}, {Name: []string{`CXX11STD`}}, {Name: []string{`CXX11FLAGS`}}, {Name: []string{`CXX11PICFLAGS`}}, {Name: []string{`CXX14`}}, {Name: []string{`CXX14STD`}}, {Name: []string{`CXX14FLAGS`}}, {Name: []string{`CXX14PICFLAGS`}}, {Name: []string{`CXX17`}}, {Name: []string{`CXX17STD`}}, {Name: []string{`CXX17FLAGS`}}, {Name: []string{`CXX17PICFLAGS`}}, {Name: []string{`CXX20`}}, {Name: []string{`CXX20STD`}}, {Name: []string{`CXX20FLAGS`}}, {Name: []string{`CXX20PICFLAGS`}}, {Name: []string{`DYLIB_EXT`}}, {Name: []string{`DYLIB_LD`}}, {Name: []string{`DYLIB_LDFLAGS`}}, {Name: []string{`FC`}}, {Name: []string{`FFLAGS`}}, {Name: []string{`FCFLAGS`}}, {Name: []string{`FLIBS`}}, {Name: []string{`FPICFLAGS`}}, {Name: []string{`JAR`}}, {Name: []string{`JAVA`}}, {Name: []string{`JAVAC`}}, {Name: []string{`JAVAH`}}, {Name: []string{`JAVA_HOME`}}, {Name: []string{`JAVA_LIBS`}}, {Name: []string{`JAVA_CPPFLAGS`}}, {Name: []string{`LAPACK_LIBS`}}, {Name: []string{`LIBnn`}}, {Name: []string{`LDFLAGS`}}, {Name: []string{`LTO`}}, {Name: []string{`MAKE`}}, {Name: []string{`NM`}}, {Name: []string{`OBJC`}}, {Name: []string{`OBJCFLAGS`}}, {Name: []string{`RANLIB`}}, {Name: []string{`SAFE_FFLAGS`}}, {Name: []string{`SHLIB_CFLAGS`}}, {Name: []string{`SHLIB_CXXFLAGS`}}, {Name: []string{`SHLIB_CXXLD`}}, {Name: []string{`SHLIB_CXXLDFLAGS`}}, {Name: []string{`SHLIB_EXT`}}, {Name: []string{`SHLIB_FFLAGS`}}, {Name: []string{`SHLIB_LD`}}, {Name: []string{`SHLIB_LDFLAGS`}}, {Name: []string{`TCLTK_CPPFLAGS`}}, {Name: []string{`TCLTK_LIBS`}}},
				}},
				Options: []model.Option{{
					Name:        []string{"--help", "-h"},
					Description: `Print help message and exit`,
				}, {
					Name:        []string{"--version", "-v"},
					Description: `Print version info and exit`,
				}, {
					Name:        []string{"--cppflags"},
					Description: `Print pre-processor flags required to compile a C/C++ file as part of a front-end using R as a library`,
				}, {
					Name:        []string{"--ldflags"},
					Description: `Print linker flags needed for linking a front-end against the R library`,
				}, {
					Name:        []string{"--no-user-files"},
					Description: `Ignore customization files under '~/.R'`,
				}, {
					Name:        []string{"--no-site-files"},
					Description: `Ignore site customization files under 'R_HOME/etc'`,
				}, {
					Name:        []string{"--all"},
					Description: `Print names and values of all variables`,
				}},
			}, {
				Name:        []string{"javareconf"},
				Description: `Detect current Java setup and update the corresponding configuration in R`,
				Args: []model.Arg{{
					Name:        "expression",
					Description: `Evaluate the corresponding expression`,
					Suggestions: []model.Suggestion{{Name: []string{`JAVA_HOME=/usr/lib/java`}}, {Name: []string{`JAVAC=/usr/bin/javac`}}, {Name: []string{`JAR=/usr/bin/jar`}}},
					IsOptional:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"--help", "-h"},
					Description: `Print help message and exit`,
				}, {
					Name:        []string{"--version", "-v"},
					Description: `Print version info and exit`,
				}, {
					Name:        []string{"-n", "--dry-run"},
					Description: `Perform Java detection, but don't touch any configuration files`,
				}, {
					Name:        []string{"-e"},
					Description: `Same as -n but exports all detected variables and runs '<prog>'`,
					Args: []model.Arg{{
						Name:        "program",
						Description: `Program to run or '' to use shell`,
					}},
				}},
			}, {
				Name:        []string{"rtags"},
				Description: `Tag C, R, and Rd files under a directory`,
				Args: []model.Arg{{
					Name:        "path",
					Description: `Directory in which files will be tagged`,
					IsOptional:  true,
				}},
				Options: []model.Option{{
					Name:        []string{"--help", "-h"},
					Description: `Print help message and exit`,
				}, {
					Name:        []string{"--version", "-v"},
					Description: `Print version info and exit`,
				}, {
					Name:        []string{"--output", "-o"},
					Description: `Write output to a file`,
					Args: []model.Arg{{
						Name:        "file",
						Description: `Output file name`,
						IsOptional:  true,
					}},
				}, {
					Name:        []string{"--no-c"},
					Description: `Do not tag C (.c, .h) files`,
				}, {
					Name:        []string{"--no-R"},
					Description: `Do not tag R (.R, .r, .S, .s) files`,
				}, {
					Name:        []string{"--no-Rd"},
					Description: `Do not tag Rd (.Rd) files`,
				}, {
					Name:        []string{"--ctags"},
					Description: `Write Ctags format (default is Etags)`,
				}, {
					Name:        []string{"--append", "-a"},
					Description: `Append to output file (overwrites by default)`,
				}, {
					Name:        []string{"--verbose", "-V"},
					Description: `Echo the name of files processed`,
				}},
			}},
		}},
	}
}
