// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["trex"] = model.Subcommand{
		Name:        []string{"trex"},
		Description: `Advanced package management for deno, based on import_map.json`,
		Options: []model.Option{{
			Name:         []string{"-h", "--help"},
			Description:  `Print help info`,
			IsPersistent: true,
		}, {
			Name:        []string{"-v", "--version"},
			Description: `Print version`,
		}, {
			Name:        []string{"-c", "--custom"},
			Description: `Install custom package`,
			Args: []model.Arg{{
				Name:        "custom package",
				Description: `Install a package from a custom URL source, eg: React=https://dev.jspm.io/react/index.js`,
			}},
		}},
		Subcommands: []model.Subcommand{{
			Name:        []string{"i", "install"},
			Description: `Install a package`,
			Options: []model.Option{{
				Name:        []string{"-m", "--map"},
				Description: `Install package from deno.land`,
				Args: []model.Arg{{
					Name:        "package name",
					Description: `Deno.land package name`,
				}},
			}, {
				Name:        []string{"-n", "--nest"},
				Description: `Install package from nest.land`,
				Args: []model.Arg{{
					Name:        "package name",
					Description: `Nest.land package name`,
				}},
			}, {
				Name:        []string{"-p", "--pkg"},
				Description: `Install package from some repository`,
				Args: []model.Arg{{
					Name:        "repository",
					Description: `[user]/[repo or repo@tag/branch]/[path/to/file]`,
				}, {
					Name:        "Package Name",
					Description: `Prefered package alias`,
				}},
			}},
		}, {
			Name:        []string{"delete"},
			Description: `Delete a package`,
			Args: []model.Arg{{
				Name:           "package name",
				FilterStrategy: model.FilterStrategyFuzzy,
				Generator:      nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"upgrade"},
			Description: `Upgrade trex`,
			Options: []model.Option{{
				Name:        []string{"--canary"},
				Description: `Install from dev branch`,
			}},
		}, {
			Name:        []string{"tree"},
			Description: `View dependency tree`,
		}, {
			Name:        []string{"run"},
			Description: `Run a script alias in a file run.json`,
			Args: []model.Arg{{
				Name:      "script alias",
				Generator: nil, // TODO: port over generator
			}},
			Options: []model.Option{{
				Name:        []string{"-w", "--watch"},
				Description: `Use reboot script alias protocol (rsap)`,
			}, {
				Name:        []string{"-wv"},
				Description: `Verbose output in --watch mode (rsap)`,
			}},
		}, {
			Name:        []string{"purge"},
			Description: `Remove a package or url from cache`,
			Args: []model.Arg{{
				Name:           "package | url",
				FilterStrategy: model.FilterStrategyFuzzy,
				Generator:      nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"ls"},
			Description: `Shows the list of installed packages`,
		}, {
			Name:        []string{"exec"},
			Description: `Execute a cli tool with out install then`,
			Args: []model.Arg{{
				Name: "cli tool",
			}},
			Options: []model.Option{{
				Name:        []string{"--perms"},
				Description: `Specify cli permisions`,
			}},
		}, {
			Name:        []string{"check"},
			Description: `Check deno.land [std/x] dependencies updates`,
			Options: []model.Option{{
				Name:        []string{"-f", "--fix"},
				Description: `Update outdated dependencies`,
			}},
		}},
	}
}
