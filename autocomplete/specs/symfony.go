// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.
//
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

package specs

import (
	"github.com/microsoft/clac/autocomplete/model"
)

func init() {
	Specs["symfony"] = model.Subcommand{
		Name:        []string{"symfony"},
		Description: `Symfony Binary`,
		Options: []model.Option{{
			Name:        []string{"-h", "--help"},
			Description: `Show help`,
		}, {
			Name:        []string{"-q", "--quiet"},
			Description: `Do not output any message`,
		}, {
			Name:        []string{"--no-ansi"},
			Description: `Disable ANSI output`,
		}, {
			Name:        []string{"--ansi"},
			Description: `Force ANSI output`,
		}, {
			Name:        []string{"--no-interaction"},
			Description: `Do not ask any interactive question`,
		}, {
			Name:        []string{"-v", "--verbose"},
			Description: `Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug`,
		}, {
			Name:        []string{"-V"},
			Description: `Print the version`,
		}},
		Subcommands: []model.Subcommand{{
			Name:        []string{"book:check-requirements", "book:check"},
			Description: `Check that you have all the pre-requisites locally to code while reading the "Symfony: The Fast Track" book`,
		}, {
			Name:        []string{"book:checkout"},
			Description: `Check out a step of the "Symfony: The Fast Track" book repository`,
		}, {
			Name:        []string{"cloud:clear-cache", "cloud:clearcache", "cloud:cc"},
			Description: `Clear the CLI cache`,
		}, {
			Name:        []string{"cloud:docs"},
			Description: `Open the online documentation`,
		}, {
			Name:        []string{"cloud:multi"},
			Description: `Execute a command on multiple projects`,
		}, {
			Name:        []string{"cloud:web"},
			Description: `Open the Web UI`,
		}, {
			Name:        []string{"cloud:activity:cancel"},
			Description: `Cancel an activity`,
		}, {
			Name:        []string{"cloud:activity:get"},
			Description: `View detailed information on a single activity`,
		}, {
			Name:        []string{"cloud:activity:list", "cloud:activities", "cloud:act"},
			Description: `Get a list of activities for an environment or project`,
		}, {
			Name:        []string{"cloud:activity:log"},
			Description: `Display the log for an activity`,
		}, {
			Name:        []string{"cloud:app:config-get"},
			Description: `View the configuration of an app`,
		}, {
			Name:        []string{"cloud:app:list"},
			Description: `List apps in the project`,
		}, {
			Name:        []string{"cloud:auth:api-token-login"},
			Description: `Log in to Platform.sh using an API token`,
		}, {
			Name:        []string{"cloud:auth:browser-login", "cloud:login"},
			Description: `Log in to Platform.sh via a browse`,
		}, {
			Name:        []string{"cloud:auth:info"},
			Description: `Display your account information`,
		}, {
			Name:        []string{"cloud:auth:logout", "cloud:logout"},
			Description: `Log out of Platform.sh`,
		}, {
			Name:        []string{"cloud:backup:create", "cloud:backup", "cloud:snapshot:create", "cloud:environment:backup"},
			Description: `Make a backup of an environment`,
		}, {
			Name:        []string{"cloud:backup:list", "cloud:backups", "cloud:snapshots", "cloud:snapshot:list"},
			Description: `List available backups of an environment`,
		}, {
			Name:        []string{"cloud:backup:restore", "cloud:environment:restore", "cloud:snapshot:restore"},
			Description: `Restore an environment backup`,
		}, {
			Name:        []string{"cloud:certificate:add"},
			Description: `Add an SSL certificate to the project`,
		}, {
			Name:        []string{"cloud:certificate:delete"},
			Description: `Delete a certificate from the project`,
		}, {
			Name:        []string{"cloud:certificate:get"},
			Description: `View a certificate`,
		}, {
			Name:        []string{"cloud:certificate:list", "cloud:certificates", "cloud:certs"},
			Description: `List project certificates`,
		}, {
			Name:        []string{"cloud:commit:get"},
			Description: `Show commit details`,
		}, {
			Name:        []string{"cloud:commit:list", "cloud:commits"},
			Description: `List commits`,
		}, {
			Name:        []string{"cloud:db:dump", "cloud:sql-dump", "cloud-environment:sql-dump"},
			Description: `Create a local dump of the remote database`,
		}, {
			Name:        []string{"cloud:db:size"},
			Description: `Estimate the disk usage of a database`,
		}, {
			Name:        []string{"cloud:db:sql", "cloud:sql", "cloud:environment:sql"},
			Description: `Run SQL on the remote database`,
		}, {
			Name:        []string{"cloud:domain:add"},
			Description: `Add a new domain to the project`,
		}, {
			Name:        []string{"cloud:domain:delete"},
			Description: `Delete a domain from the project`,
		}, {
			Name:        []string{"cloud:domain:get"},
			Description: `Show detailed information for a domain`,
		}, {
			Name:        []string{"cloud:domain:list", "cloud:domains"},
			Description: `Get a list of all domains`,
		}, {
			Name:        []string{"cloud:domain:update"},
			Description: `Update a domain`,
		}, {
			Name:        []string{"coud:environment:activate"},
			Description: `Activate an environment`,
		}, {
			Name:        []string{"cloud:environment:branch", "cloud:branch"},
			Description: `Branch an environment`,
		}, {
			Name:        []string{"cloud:environment:checkout", "cloud:checkout"},
			Description: `Check out an environment`,
		}, {
			Name:        []string{"cloud:environment:debug", "environment:debug"},
			Description: `Debug an environment by switching Symfony to the debug mode temporarily`,
		}, {
			Name:        []string{"cloud:environment:delete", "cloud:environment:deactivate"},
			Description: `Delete one or more environments`,
		}, {
			Name:        []string{"cloud:environment:http-access", "cloud:httpaccess"},
			Description: `Update HTTP access settings for an environment`,
		}, {
			Name:        []string{"cloud:environment:info", "cloud:environment:metadata"},
			Description: `Read or set properties for an environment`,
		}, {
			Name:        []string{"cloud:environment:init"},
			Description: `Initialize an environment from a public Git repository`,
		}, {
			Name:        []string{"cloud:environment:list", "cloud:environments", "cloud:env"},
			Description: `Get a list of environments`,
		}, {
			Name:        []string{"cloud:environment:logs", "cloud:log", "cloud:logs"},
			Description: `Read an environment's logs`,
		}, {
			Name:        []string{"cloud:environment:merge", "cloud:merge"},
			Description: `Merge an environment`,
		}, {
			Name:        []string{"cloud:environment:push", "cloud:push", "deploy", "cloud:deploy"},
			Description: `Push code to an environment`,
		}, {
			Name:        []string{"cloud:environment:redeploy", "cloud:redeploy"},
			Description: `Redeploy an environment`,
		}, {
			Name:        []string{"cloud:environment:relationships", "cloud:relationships"},
			Description: `Show an environment's relationships`,
		}, {
			Name:        []string{"cloud:environment:scp", "cloud:scp"},
			Description: `Copy files to and from current environment using scp`,
		}, {
			Name:        []string{"cloud:environment:ssh", "cloud:ssh"},
			Description: `SSH to the current environment`,
		}, {
			Name:        []string{"cloud:environment:synchronize", "cloud:sync"},
			Description: `Synchronize an environment's code and/or data from its parent`,
		}, {
			Name:        []string{"cloud:environment:url", "cloud:url"},
			Description: `Get the public URLs of an environment`,
		}, {
			Name:        []string{"cloud:environment:xdebug", "cloud:xdebug"},
			Description: `Open a tunnel to Xdebug on the environment`,
		}, {
			Name:        []string{"cloud:integration:activity:get"},
			Description: `View detailed information on a single integration activity`,
		}, {
			Name:        []string{"cloud:integration:activity:list", "cloud:i:act", "cloud:integration:activities"},
			Description: `Get a list of activities for an integration`,
		}, {
			Name:        []string{"cloud:integration:activity:log"},
			Description: `Display the log for an integration activity`,
		}, {
			Name:        []string{"cloud:integration:add"},
			Description: `Add an integration to the project`,
		}, {
			Name:        []string{"cloud:integration:delete"},
			Description: `Delete an integration from a project`,
		}, {
			Name:        []string{"cloud:integration:get"},
			Description: `View details of an integration`,
		}, {
			Name:        []string{"cloud:integration:list", "cloud:integrations"},
			Description: `View a list of project integration(s)`,
		}, {
			Name:        []string{"cloud:integration:update"},
			Description: `Update an integration`,
		}, {
			Name:        []string{"cloud:integration:validate"},
			Description: `Validate an existing integration`,
		}, {
			Name:        []string{"cloud:mount:download"},
			Description: `Download files from a mount, using rsync`,
		}, {
			Name:        []string{"cloud:mount:list", "cloud:mounts"},
			Description: `Get a list of mounts`,
		}, {
			Name:        []string{"cloud:mount:size"},
			Description: `Check the disk usage of mounts`,
		}, {
			Name:        []string{"cloud:mount:upload"},
			Description: `Upload files to a mount, using rsync`,
		}, {
			Name:        []string{"cloud:organization:billing:address"},
			Description: `View or change an organization's billing address`,
		}, {
			Name:        []string{"cloud:organization:billing:profile"},
			Description: `View or change an organization's billing profile`,
		}, {
			Name:        []string{"cloud:organization:create"},
			Description: `Create a new organization`,
		}, {
			Name:        []string{"cloud:organization:delete"},
			Description: `Delete an organization`,
		}, {
			Name:        []string{"cloud:organization:info"},
			Description: `View or change organization details`,
		}, {
			Name:        []string{"cloud:organization:list", "cloud:orgs", "cloud:organizations"},
			Description: `List organizations`,
		}, {
			Name:        []string{"cloud:organization:subscription:list", "cloud:organization:subscriptions"},
			Description: `List subscriptions within an organization`,
		}, {
			Name:        []string{"cloud:organization:user:add"},
			Description: `Invite a user to an organization`,
		}, {
			Name:        []string{"cloud:organization:user:delete"},
			Description: `Remove a user from an organization`,
		}, {
			Name:        []string{"cloud:organization:user:get"},
			Description: `View an organization user`,
		}, {
			Name:        []string{"cloud:organization:user:list", "cloud:organization:users"},
			Description: `List organization users`,
		}, {
			Name:        []string{"cloud:organization:user:update"},
			Description: `Update an organization user`,
		}, {
			Name:        []string{"cloud:project:clear-build-cache"},
			Description: `Clear a project's build cache`,
		}, {
			Name:        []string{"cloud:project:create", "cloud:create"},
			Description: `Create a new project`,
		}, {
			Name:        []string{"cloud:project:delete"},
			Description: `Delete a project`,
		}, {
			Name:        []string{"cloud:project:get", "cloud:get"},
			Description: `Clone a project locally`,
		}, {
			Name:        []string{"cloud:project:info", "cloud:project:metadata"},
			Description: `Read or set properties for a project`,
		}, {
			Name:        []string{"cloud:project:list", "cloud:projects", "cloud:pro"},
			Description: `Get a list of all active projects`,
		}, {
			Name:        []string{"cloud:project:set-remote"},
			Description: `Set the remote project for the current Git repository`,
		}, {
			Name:        []string{"cloud:repo:cat"},
			Description: `Read a file in the project repository`,
		}, {
			Name:        []string{"cloud:repo:ls"},
			Description: `List files in the project repository`,
		}, {
			Name:        []string{"cloud:repo:read", "cloud:read"},
			Description: `Read a directory or file in the project repository`,
		}, {
			Name:        []string{"cloud:route:get"},
			Description: `View detailed information about a route`,
		}, {
			Name:        []string{"cloud:route:list", "cloud:routes", "cloud:environment:routes"},
			Description: `List all routes for an environment`,
		}, {
			Name:        []string{"cloud:service:list", "cloud:services"},
			Description: `List services in the project`,
		}, {
			Name:        []string{"cloud:service:mongo:dump", "cloud:mongodump"},
			Description: `Create a binary archive dump of data from MongoDB`,
		}, {
			Name:        []string{"cloud:service:mongo:export", "cloud:mongoexport"},
			Description: `Export data from MongoDB`,
		}, {
			Name:        []string{"cloud:service:mongo:restore", "cloud:mongorestore"},
			Description: `Restore a binary archive dump of data into MongoDB`,
		}, {
			Name:        []string{"cloud:service:mongo:shell", "cloud:mongo"},
			Description: `Use the MongoDB shell`,
		}, {
			Name:        []string{"cloud:service:redis-cli", "cloud:redis"},
			Description: `Access the Redis CLI`,
		}, {
			Name:        []string{"cloud:ssh-cert:load"},
			Description: `Generate an SSH certificate`,
		}, {
			Name:        []string{"cloud:ssh-key:add"},
			Description: `Add a new SSH key`,
		}, {
			Name:        []string{"cloud:ssh-key:delete"},
			Description: `Delete an SSH key`,
		}, {
			Name:        []string{"cloud:ssh-key:list", "cloud:ssh-keys"},
			Description: `Get a list of SSH keys in your accountt`,
		}, {
			Name:        []string{"cloud:subscription:info"},
			Description: `Read or modify subscription properties`,
		}, {
			Name:        []string{"cloud:tunnel:close"},
			Description: `Close SSH tunnels`,
		}, {
			Name:        []string{"cloud:tunnel:info"},
			Description: `View relationship info for SSH tunnels`,
		}, {
			Name:        []string{"cloud:tunnel:list", "cloud:tunnels"},
			Description: `List SSH tunnels`,
		}, {
			Name:        []string{"cloud:tunnel:open"},
			Description: `Open SSH tunnels to an app's relationships`,
		}, {
			Name:        []string{"cloud:tunnel:single"},
			Description: `Open a single SSH tunnel to an app relationship`,
		}, {
			Name:        []string{"cloud:user:add"},
			Description: `Add a user to the project`,
		}, {
			Name:        []string{"cloud:user:delete"},
			Description: `Delete a user from the project`,
		}, {
			Name:        []string{"cloud:user:get", "cloud:vget"},
			Description: `View a user's role(s)`,
		}, {
			Name:        []string{"cloud:user:list", "cloud:variables", "cloud:var"},
			Description: `List project users`,
		}, {
			Name:        []string{"cloud:user:update"},
			Description: `Update user role(s) on a project`,
		}, {
			Name:        []string{"cloud:variable:create"},
			Description: `Create a variable`,
		}, {
			Name:        []string{"cloud:variable:delete"},
			Description: `Delete a variable`,
		}, {
			Name:        []string{"cloud:variable:get"},
			Description: `View a variable`,
		}, {
			Name:        []string{"cloud:variable:list"},
			Description: `List variables`,
		}, {
			Name:        []string{"cloud:variable:update"},
			Description: `Update a variable`,
		}, {
			Name:        []string{"cloud:worker:list", "cloud:workers"},
			Description: `Get a list of all deployed workers`,
		}, {
			Name:        []string{"local:check:requirements", "check-requirements", "check:req"},
			Description: `Checks requirements for running Symfony and gives useful recommendations to optimize PHP for Symfony`,
		}, {
			Name:        []string{"local:check:security", "security:check", "check:security", "local:security:check"},
			Description: `Check security issues in project dependencies`,
		}, {
			Name:        []string{"local:new", "new"},
			Description: `Create a new Symfony project`,
		}, {
			Name:        []string{"local:php:list"},
			Description: `List locally available PHP versions`,
		}, {
			Name:        []string{"local:php:refresh"},
			Description: `Auto-discover the list of available PHP version`,
		}, {
			Name:        []string{"local:proxy:domain:attach", "proxy:domain:attach"},
			Description: `Attach a local domain for the proxy`,
		}, {
			Name:        []string{"local:proxy:domain:detach", "proxy:domain:detach"},
			Description: `Detach domains from the proxy`,
		}, {
			Name:        []string{"local:proxy:start", "proxy:start"},
			Description: `Start the local proxy server (local domains support)`,
		}, {
			Name:        []string{"local:proxy:status", "proxy:status"},
			Description: `Get the local proxy server status`,
		}, {
			Name:        []string{"local:proxy:stop", "proxy:stop"},
			Description: `Stop the local proxy server`,
		}, {
			Name:        []string{"local:run", "run"},
			Description: `Run a program with environment variables set depending on the current context`,
		}, {
			Name:        []string{"local:server:ca:install", "server:ca:install"},
			Description: `Create a local Certificate Authority for serving HTTPS`,
		}, {
			Name:        []string{"local:server:ca:uninstall", "server:ca:uninstall"},
			Description: `Uninstall the local Certificate Authority`,
		}, {
			Name:        []string{"local:server:list", "server:list"},
			Description: `List all configured local web servers`,
		}, {
			Name:        []string{"local:server:log", "server:log"},
			Description: `Display local web server logs`,
		}, {
			Name:        []string{"local:server:prod", "server:prod"},
			Description: `Switch a project to use Symfony's production environment`,
		}, {
			Name:        []string{"local:server:start", "server:start", "serve"},
			Description: `Run a local web server`,
		}, {
			Name:        []string{"local:server:status", "server:status"},
			Description: `Get the local web server status`,
		}, {
			Name:        []string{"local:server:stop", "server:stop"},
			Description: `Stop the local web server`,
		}, {
			Name:        []string{"local:var:expose-from-tunnel", "var:expose-from-tunnel"},
			Description: `Expose tunnel service environment variables locally`,
		}, {
			Name:        []string{"open:local"},
			Description: `Open the local project in a browser`,
		}, {
			Name:        []string{"open:local:rabbitmq"},
			Description: `Open the local project RabbitMQ web management interface in a browser`,
		}, {
			Name:        []string{"open:local:webmail"},
			Description: `Open the local project mail catcher web interface in a browser`,
		}, {
			Name:        []string{"project:init", "init"},
			Description: `Initialize a new project using templates`,
		}, {
			Name:        []string{"self:help", "help", "list"},
			Description: `Display help for a command or a category of commands`,
		}, {
			Name:        []string{"self:version", "version"},
			Description: `Display the application version`,
		}, {
			Name:        []string{"var:export"},
			Description: `Export environment variables depending on the current context`,
		}, {
			Name:        []string{"composer"},
			Description: `Runs Composer without memory limit`,
		}, {
			Name:        []string{"php"},
			Description: `Runs the binary using the configured PHP version`,
		}, {
			Name:        []string{"pecl"},
			Description: `Runs the binary using the configured PHP version`,
		}, {
			Name:        []string{"pear"},
			Description: `Runs the binary using the configured PHP version`,
		}, {
			Name:        []string{"php-fdp"},
			Description: `Runs the binary using the configured PHP version`,
		}, {
			Name:        []string{"php-cgi"},
			Description: `Runs the binary using the configured PHP version`,
		}, {
			Name:        []string{"php-config"},
			Description: `Runs the binary using the configured PHP version`,
		}, {
			Name:        []string{"phpdbg"},
			Description: `Runs the binary using the configured PHP version`,
		}, {
			Name:        []string{"phpize"},
			Description: `Runs the binary using the configured PHP version`,
		}, {
			Name:        []string{"console"},
			Description: `Runs the Symfony Console (bin/console) for current project`,
		}},
	}
}
