// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["gradle"] = model.Subcommand{
		Name:        []string{"gradle"},
		Description: `Gradle is an open-source build automation tool that is designed to be flexible enough to build almost any type of software`,
		Args: []model.Arg{{
			Name:       "task name",
			IsOptional: true,
			IsVariadic: true,
		}},
		Options: []model.Option{{
			Name:        []string{"-?", "-h", "--help"},
			Description: `Shows a help message with all available CLI options`,
		}, {
			Name:        []string{"-v", "--version"},
			Description: `Prints Gradle, Groovy, Ant, JVM, and operating system version information`,
		}, {
			Name:        []string{"-S", "--full-stacktrace"},
			Description: `Print out the full (very verbose) stacktrace for any exceptions`,
		}, {
			Name:        []string{"-s", "--stacktrace"},
			Description: `Print out the stacktrace also for user exceptions (e.g. compile error)`,
		}, {
			Name:        []string{"--scan"},
			Description: `Create a build scan with fine-grained information about all aspects of your Gradle build`,
		}, {
			Name:        []string{"-Dorg.gradle.debug"},
			Description: `Debug Gradle client (non-Daemon) process. Gradle will wait for you to attach a debugger at localhost:5005 by default`,
		}, {
			Name:        []string{"-Dorg.gradle.daemon.debug"},
			Description: `Debug Gradle Daemon process`,
		}, {
			Name:        []string{"--build-cache"},
			Description: `Toggles the Gradle build cache. Gradle will try to reuse outputs from previous builds. Default is off`,
			ExclusiveOn: []string{"--no-build-cache"},
		}, {
			Name:        []string{"--no-build-cache"},
			Description: `Toggles the Gradle build cache. Gradle will try to reuse outputs from previous builds. Default is off`,
			ExclusiveOn: []string{"--build-cache"},
		}, {
			Name:        []string{"--configure-on-demand"},
			Description: `Toggles Configure-on-demand. Only relevant projects are configured in this build run. Default is off`,
			ExclusiveOn: []string{"--configure-on-demand"},
		}, {
			Name:        []string{"--no-configure-on-demand"},
			Description: `Toggles Configure-on-demand. Only relevant projects are configured in this build run. Default is off`,
			ExclusiveOn: []string{"--configure-on-demand"},
		}, {
			Name:        []string{"--max-workers"},
			Description: `Sets maximum number of workers that Gradle may use. Default is number of processors`,
			Args: []model.Arg{{
				Name: "number",
			}},
		}, {
			Name:        []string{"--parallel"},
			Description: `Build projects in parallel. For limitations of this option, see Parallel Project Execution. Default is off`,
			ExclusiveOn: []string{"--no-parallel"},
		}, {
			Name:        []string{"--no-parallel"},
			Description: `Disables --parallel`,
			ExclusiveOn: []string{"--parallel"},
		}, {
			Name:        []string{"--priority"},
			Description: `Specifies the scheduling priority for the Gradle daemon and all processes launched by it`,
			Args: []model.Arg{{
				Name:        "priority",
				Suggestions: []model.Suggestion{{Name: []string{`normal`}}, {Name: []string{`low`}}},
			}},
		}, {
			Name:        []string{"--profile"},
			Description: `Generates a high-level performance report in the $buildDir/reports/profile directory. --scan is preferred`,
		}, {
			Name:        []string{"--scan"},
			Description: `Generate a build scan with detailed performance diagnostics`,
		}, {
			Name:        []string{"--watch-fs"},
			Description: `Toggles watching the file system. When enabled Gradle re-uses information it collects about the file system between builds. Enabled by default on operating systems where Gradle supports this feature`,
			ExclusiveOn: []string{"--no-watch-fs"},
		}, {
			Name:        []string{"--no-watch-fs"},
			Description: `Toggles watching the file system. When enabled Gradle re-uses information it collects about the file system between builds. Enabled by default on operating systems where Gradle supports this feature`,
			ExclusiveOn: []string{"--watch-fs"},
		}, {
			Name:        []string{"--daemon"},
			Description: `Use the Gradle Daemon to run the build. Starts the daemon if not running or existing daemon busy. Default is on`,
			ExclusiveOn: []string{"--no-daemon"},
		}, {
			Name:        []string{"--no-daemon"},
			Description: `Disables --daemon`,
			ExclusiveOn: []string{"--daemon"},
		}, {
			Name:        []string{"--foreground"},
			Description: `Starts the Gradle Daemon in a foreground process`,
		}, {
			Name:        []string{"-Dorg.gradle.daemon.idletimeout"},
			Description: `Gradle Daemon will stop itself after this number of milliseconds of idle time`,
			Args: []model.Arg{{
				Name: "milliseconds",
			}},
		}, {
			Name:        []string{"-Dorg.gradle.logging.level"},
			Description: `Set logging level via Gradle properties`,
			Args: []model.Arg{{
				Name:        "level",
				Suggestions: []model.Suggestion{{Name: []string{`quiet`}}, {Name: []string{`warn`}}, {Name: []string{`lifecycle`}}, {Name: []string{`info`}}, {Name: []string{`debug`}}},
			}},
		}, {
			Name:        []string{"-q", "--quiet"},
			Description: `Log errors only`,
		}, {
			Name:        []string{"-w", "--warn"},
			Description: `Set log level to warn`,
		}, {
			Name:        []string{"-i", "--info"},
			Description: `Set log level to info`,
		}, {
			Name:        []string{"-d", "--debug"},
			Description: `Log in debug mode (includes normal stacktrace)`,
		}, {
			Name:        []string{"-Dorg.gradle.console"},
			Description: `Specify console mode via Gradle properties`,
			Args: []model.Arg{{
				Name: "mode",
				Suggestions: []model.Suggestion{{
					Name:        []string{`auto`},
					Description: `Enables color and other rich output in the console output when the build process is attached to a console, or to generate plain text only when not attached to a console`,
				}, {
					Name:        []string{`plain`},
					Description: `Disables all color and other rich output in the console output. This is the default when Gradle is not attached to a terminal`,
				}, {
					Name:        []string{`rich`},
					Description: `Enables color and other rich output in the console output, regardless of whether the build process is not attached to a console`,
				}, {
					Name:        []string{`verbose`},
					Description: `Enables color and other rich output like the rich, but output task names and outcomes at the lifecycle log level, as is done by default in Gradle 3.5 and earlier`,
				}},
			}},
		}, {
			Name:        []string{"--console"},
			Description: `Specifies which type of console output to generate`,
			Args: []model.Arg{{
				Name: "mode",
				Suggestions: []model.Suggestion{{
					Name:        []string{`auto`},
					Description: `Enables color and other rich output in the console output when the build process is attached to a console, or to generate plain text only when not attached to a console`,
				}, {
					Name:        []string{`plain`},
					Description: `Disables all color and other rich output in the console output. This is the default when Gradle is not attached to a terminal`,
				}, {
					Name:        []string{`rich`},
					Description: `Enables color and other rich output in the console output, regardless of whether the build process is not attached to a console`,
				}, {
					Name:        []string{`verbose`},
					Description: `Enables color and other rich output like the rich, but output task names and outcomes at the lifecycle log level, as is done by default in Gradle 3.5 and earlier`,
				}},
			}},
		}, {
			Name:        []string{"-Dorg.gradle.warning.mode"},
			Description: `Specify warning mode via Gradle properties`,
			Args: []model.Arg{{
				Name: "mode",
				Suggestions: []model.Suggestion{{
					Name:        []string{`all`},
					Description: `Log all warnings`,
				}, {
					Name:        []string{`fail`},
					Description: `Log all warnings and fail the build if there are any warnings`,
				}, {
					Name:        []string{`summary`},
					Description: `Suppress all warnings and log a summary at the end of the build`,
				}, {
					Name:        []string{`none`},
					Description: `Suppress all warnings, including the summary at the end of the build`,
				}},
			}},
		}, {
			Name:        []string{"--warning-mode"},
			Description: `Specifies how to log warning`,
			Args: []model.Arg{{
				Name: "mode",
				Suggestions: []model.Suggestion{{
					Name:        []string{`all`},
					Description: `Log all warnings`,
				}, {
					Name:        []string{`fail`},
					Description: `Log all warnings and fail the build if there are any warnings`,
				}, {
					Name:        []string{`summary`},
					Description: `Suppress all warnings and log a summary at the end of the build`,
				}, {
					Name:        []string{`none`},
					Description: `Suppress all warnings, including the summary at the end of the build`,
				}},
			}},
		}, {
			Name:        []string{"--include-build"},
			Description: `Run the build as a composite, including the specified build`,
		}, {
			Name:        []string{"--offline"},
			Description: `Specifies that the build should operate without accessing network resources`,
		}, {
			Name:        []string{"--refresh-dependencies"},
			Description: `Refresh the state of dependencies`,
		}, {
			Name:        []string{"--dry-run"},
			Description: `Run Gradle with all task actions disabled. Use this to show which task would have executed`,
		}, {
			Name:        []string{"--write-locks"},
			Description: `Indicates that all resolved configurations that are lockable should have their lock state persisted`,
		}, {
			Name:        []string{"--update-locks"},
			Description: `Indicates that versions for the specified modules have to be updated in the lock file`,
			Args: []model.Arg{{
				Name:       "group:name",
				IsVariadic: true,
			}},
		}, {
			Name:        []string{"--no-rebuild"},
			Description: `Do not rebuild project dependencies. Useful for debugging and fine-tuning buildSrc, but can lead to wrong results. Use with caution`,
		}, {
			Name:        []string{"-b", "--build-file"},
			Description: `Specifies the build file. For example: gradle --build-file=foo.gradle`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "file",
			}},
		}, {
			Name:        []string{"-c", "--settings-file"},
			Description: `Specifies the settings file. For example: gradle --settings-file=somewhere/else/settings.gradle`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFilepaths},
				Name:      "file",
			}},
		}, {
			Name:        []string{"-g", "--gradle-user-home"},
			Description: `Specifies the Gradle user home directory. The default is the .gradle directory in the user’s home directory`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFolders},
				Name:      "directory",
			}},
		}, {
			Name:        []string{"-p", "--project-dir"},
			Description: `Specifies the start directory for Gradle`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFolders},
				Name:      "directory",
			}},
		}, {
			Name:        []string{"--project-cache-dir"},
			Description: `Specifies the project-specific cache directory. Default value is .gradle in the root project directory`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFolders},
				Name:      "directory",
			}},
		}, {
			Name:        []string{"-D", "--system-prop"},
			Description: `Sets a system property of the JVM, for example -Dmyprop=myvalue`,
			Args: []model.Arg{{
				Name: "system property",
			}},
		}, {
			Name:        []string{"-I", "--init-script"},
			Description: `Specifies an initialization script`,
		}, {
			Name:        []string{"-P", "--project-prop"},
			Description: `Sets a project property of the root project, for example -Pmyprop=myvalue`,
			Args: []model.Arg{{
				Name: "system property",
			}},
		}, {
			Name:        []string{"-Dorg.gradle.jvmargs"},
			Description: `Set JVM arguments`,
			Args: []model.Arg{{
				Name: "arguments",
			}},
		}, {
			Name:        []string{"-Dorg.gradle.java.home"},
			Description: `Set JDK home dir`,
			Args: []model.Arg{{
				Templates: []model.Template{model.TemplateFolders},
				Name:      "directory",
			}},
		}},
		Subcommands: []model.Subcommand{{
			Name:        []string{"build"},
			Description: `Compute all outputs`,
			Options: []model.Option{{
				Name:        []string{"-?", "-h", "--help"},
				Description: `Shows a help message with all available CLI options`,
			}, {
				Name:        []string{"-v", "--version"},
				Description: `Prints Gradle, Groovy, Ant, JVM, and operating system version information`,
			}, {
				Name:        []string{"-S", "--full-stacktrace"},
				Description: `Print out the full (very verbose) stacktrace for any exceptions`,
			}, {
				Name:        []string{"-s", "--stacktrace"},
				Description: `Print out the stacktrace also for user exceptions (e.g. compile error)`,
			}, {
				Name:        []string{"--scan"},
				Description: `Create a build scan with fine-grained information about all aspects of your Gradle build`,
			}, {
				Name:        []string{"-Dorg.gradle.debug"},
				Description: `Debug Gradle client (non-Daemon) process. Gradle will wait for you to attach a debugger at localhost:5005 by default`,
			}, {
				Name:        []string{"-Dorg.gradle.daemon.debug"},
				Description: `Debug Gradle Daemon process`,
			}, {
				Name:        []string{"--build-cache"},
				Description: `Toggles the Gradle build cache. Gradle will try to reuse outputs from previous builds. Default is off`,
				ExclusiveOn: []string{"--no-build-cache"},
			}, {
				Name:        []string{"--no-build-cache"},
				Description: `Toggles the Gradle build cache. Gradle will try to reuse outputs from previous builds. Default is off`,
				ExclusiveOn: []string{"--build-cache"},
			}, {
				Name:        []string{"--configure-on-demand"},
				Description: `Toggles Configure-on-demand. Only relevant projects are configured in this build run. Default is off`,
				ExclusiveOn: []string{"--configure-on-demand"},
			}, {
				Name:        []string{"--no-configure-on-demand"},
				Description: `Toggles Configure-on-demand. Only relevant projects are configured in this build run. Default is off`,
				ExclusiveOn: []string{"--configure-on-demand"},
			}, {
				Name:        []string{"--max-workers"},
				Description: `Sets maximum number of workers that Gradle may use. Default is number of processors`,
				Args: []model.Arg{{
					Name: "number",
				}},
			}, {
				Name:        []string{"--parallel"},
				Description: `Build projects in parallel. For limitations of this option, see Parallel Project Execution. Default is off`,
				ExclusiveOn: []string{"--no-parallel"},
			}, {
				Name:        []string{"--no-parallel"},
				Description: `Disables --parallel`,
				ExclusiveOn: []string{"--parallel"},
			}, {
				Name:        []string{"--priority"},
				Description: `Specifies the scheduling priority for the Gradle daemon and all processes launched by it`,
				Args: []model.Arg{{
					Name:        "priority",
					Suggestions: []model.Suggestion{{Name: []string{`normal`}}, {Name: []string{`low`}}},
				}},
			}, {
				Name:        []string{"--profile"},
				Description: `Generates a high-level performance report in the $buildDir/reports/profile directory. --scan is preferred`,
			}, {
				Name:        []string{"--scan"},
				Description: `Generate a build scan with detailed performance diagnostics`,
			}, {
				Name:        []string{"--watch-fs"},
				Description: `Toggles watching the file system. When enabled Gradle re-uses information it collects about the file system between builds. Enabled by default on operating systems where Gradle supports this feature`,
				ExclusiveOn: []string{"--no-watch-fs"},
			}, {
				Name:        []string{"--no-watch-fs"},
				Description: `Toggles watching the file system. When enabled Gradle re-uses information it collects about the file system between builds. Enabled by default on operating systems where Gradle supports this feature`,
				ExclusiveOn: []string{"--watch-fs"},
			}, {
				Name:        []string{"--daemon"},
				Description: `Use the Gradle Daemon to run the build. Starts the daemon if not running or existing daemon busy. Default is on`,
				ExclusiveOn: []string{"--no-daemon"},
			}, {
				Name:        []string{"--no-daemon"},
				Description: `Disables --daemon`,
				ExclusiveOn: []string{"--daemon"},
			}, {
				Name:        []string{"--foreground"},
				Description: `Starts the Gradle Daemon in a foreground process`,
			}, {
				Name:        []string{"-Dorg.gradle.daemon.idletimeout"},
				Description: `Gradle Daemon will stop itself after this number of milliseconds of idle time`,
				Args: []model.Arg{{
					Name: "milliseconds",
				}},
			}, {
				Name:        []string{"-Dorg.gradle.logging.level"},
				Description: `Set logging level via Gradle properties`,
				Args: []model.Arg{{
					Name:        "level",
					Suggestions: []model.Suggestion{{Name: []string{`quiet`}}, {Name: []string{`warn`}}, {Name: []string{`lifecycle`}}, {Name: []string{`info`}}, {Name: []string{`debug`}}},
				}},
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Log errors only`,
			}, {
				Name:        []string{"-w", "--warn"},
				Description: `Set log level to warn`,
			}, {
				Name:        []string{"-i", "--info"},
				Description: `Set log level to info`,
			}, {
				Name:        []string{"-d", "--debug"},
				Description: `Log in debug mode (includes normal stacktrace)`,
			}, {
				Name:        []string{"-Dorg.gradle.console"},
				Description: `Specify console mode via Gradle properties`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`auto`},
						Description: `Enables color and other rich output in the console output when the build process is attached to a console, or to generate plain text only when not attached to a console`,
					}, {
						Name:        []string{`plain`},
						Description: `Disables all color and other rich output in the console output. This is the default when Gradle is not attached to a terminal`,
					}, {
						Name:        []string{`rich`},
						Description: `Enables color and other rich output in the console output, regardless of whether the build process is not attached to a console`,
					}, {
						Name:        []string{`verbose`},
						Description: `Enables color and other rich output like the rich, but output task names and outcomes at the lifecycle log level, as is done by default in Gradle 3.5 and earlier`,
					}},
				}},
			}, {
				Name:        []string{"--console"},
				Description: `Specifies which type of console output to generate`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`auto`},
						Description: `Enables color and other rich output in the console output when the build process is attached to a console, or to generate plain text only when not attached to a console`,
					}, {
						Name:        []string{`plain`},
						Description: `Disables all color and other rich output in the console output. This is the default when Gradle is not attached to a terminal`,
					}, {
						Name:        []string{`rich`},
						Description: `Enables color and other rich output in the console output, regardless of whether the build process is not attached to a console`,
					}, {
						Name:        []string{`verbose`},
						Description: `Enables color and other rich output like the rich, but output task names and outcomes at the lifecycle log level, as is done by default in Gradle 3.5 and earlier`,
					}},
				}},
			}, {
				Name:        []string{"-Dorg.gradle.warning.mode"},
				Description: `Specify warning mode via Gradle properties`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`all`},
						Description: `Log all warnings`,
					}, {
						Name:        []string{`fail`},
						Description: `Log all warnings and fail the build if there are any warnings`,
					}, {
						Name:        []string{`summary`},
						Description: `Suppress all warnings and log a summary at the end of the build`,
					}, {
						Name:        []string{`none`},
						Description: `Suppress all warnings, including the summary at the end of the build`,
					}},
				}},
			}, {
				Name:        []string{"--warning-mode"},
				Description: `Specifies how to log warning`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`all`},
						Description: `Log all warnings`,
					}, {
						Name:        []string{`fail`},
						Description: `Log all warnings and fail the build if there are any warnings`,
					}, {
						Name:        []string{`summary`},
						Description: `Suppress all warnings and log a summary at the end of the build`,
					}, {
						Name:        []string{`none`},
						Description: `Suppress all warnings, including the summary at the end of the build`,
					}},
				}},
			}, {
				Name:        []string{"--include-build"},
				Description: `Run the build as a composite, including the specified build`,
			}, {
				Name:        []string{"--offline"},
				Description: `Specifies that the build should operate without accessing network resources`,
			}, {
				Name:        []string{"--refresh-dependencies"},
				Description: `Refresh the state of dependencies`,
			}, {
				Name:        []string{"--dry-run"},
				Description: `Run Gradle with all task actions disabled. Use this to show which task would have executed`,
			}, {
				Name:        []string{"--write-locks"},
				Description: `Indicates that all resolved configurations that are lockable should have their lock state persisted`,
			}, {
				Name:        []string{"--update-locks"},
				Description: `Indicates that versions for the specified modules have to be updated in the lock file`,
				Args: []model.Arg{{
					Name:       "group:name",
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"--no-rebuild"},
				Description: `Do not rebuild project dependencies. Useful for debugging and fine-tuning buildSrc, but can lead to wrong results. Use with caution`,
			}, {
				Name:        []string{"-b", "--build-file"},
				Description: `Specifies the build file. For example: gradle --build-file=foo.gradle`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"-c", "--settings-file"},
				Description: `Specifies the settings file. For example: gradle --settings-file=somewhere/else/settings.gradle`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"-g", "--gradle-user-home"},
				Description: `Specifies the Gradle user home directory. The default is the .gradle directory in the user’s home directory`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}, {
				Name:        []string{"-p", "--project-dir"},
				Description: `Specifies the start directory for Gradle`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}, {
				Name:        []string{"--project-cache-dir"},
				Description: `Specifies the project-specific cache directory. Default value is .gradle in the root project directory`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}, {
				Name:        []string{"-D", "--system-prop"},
				Description: `Sets a system property of the JVM, for example -Dmyprop=myvalue`,
				Args: []model.Arg{{
					Name: "system property",
				}},
			}, {
				Name:        []string{"-I", "--init-script"},
				Description: `Specifies an initialization script`,
			}, {
				Name:        []string{"-P", "--project-prop"},
				Description: `Sets a project property of the root project, for example -Pmyprop=myvalue`,
				Args: []model.Arg{{
					Name: "system property",
				}},
			}, {
				Name:        []string{"-Dorg.gradle.jvmargs"},
				Description: `Set JVM arguments`,
				Args: []model.Arg{{
					Name: "arguments",
				}},
			}, {
				Name:        []string{"-Dorg.gradle.java.home"},
				Description: `Set JDK home dir`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}},
		}, {
			Name:        []string{"run"},
			Description: `Run applications`,
			Options: []model.Option{{
				Name:        []string{"-?", "-h", "--help"},
				Description: `Shows a help message with all available CLI options`,
			}, {
				Name:        []string{"-v", "--version"},
				Description: `Prints Gradle, Groovy, Ant, JVM, and operating system version information`,
			}, {
				Name:        []string{"-S", "--full-stacktrace"},
				Description: `Print out the full (very verbose) stacktrace for any exceptions`,
			}, {
				Name:        []string{"-s", "--stacktrace"},
				Description: `Print out the stacktrace also for user exceptions (e.g. compile error)`,
			}, {
				Name:        []string{"--scan"},
				Description: `Create a build scan with fine-grained information about all aspects of your Gradle build`,
			}, {
				Name:        []string{"-Dorg.gradle.debug"},
				Description: `Debug Gradle client (non-Daemon) process. Gradle will wait for you to attach a debugger at localhost:5005 by default`,
			}, {
				Name:        []string{"-Dorg.gradle.daemon.debug"},
				Description: `Debug Gradle Daemon process`,
			}, {
				Name:        []string{"--build-cache"},
				Description: `Toggles the Gradle build cache. Gradle will try to reuse outputs from previous builds. Default is off`,
				ExclusiveOn: []string{"--no-build-cache"},
			}, {
				Name:        []string{"--no-build-cache"},
				Description: `Toggles the Gradle build cache. Gradle will try to reuse outputs from previous builds. Default is off`,
				ExclusiveOn: []string{"--build-cache"},
			}, {
				Name:        []string{"--configure-on-demand"},
				Description: `Toggles Configure-on-demand. Only relevant projects are configured in this build run. Default is off`,
				ExclusiveOn: []string{"--configure-on-demand"},
			}, {
				Name:        []string{"--no-configure-on-demand"},
				Description: `Toggles Configure-on-demand. Only relevant projects are configured in this build run. Default is off`,
				ExclusiveOn: []string{"--configure-on-demand"},
			}, {
				Name:        []string{"--max-workers"},
				Description: `Sets maximum number of workers that Gradle may use. Default is number of processors`,
				Args: []model.Arg{{
					Name: "number",
				}},
			}, {
				Name:        []string{"--parallel"},
				Description: `Build projects in parallel. For limitations of this option, see Parallel Project Execution. Default is off`,
				ExclusiveOn: []string{"--no-parallel"},
			}, {
				Name:        []string{"--no-parallel"},
				Description: `Disables --parallel`,
				ExclusiveOn: []string{"--parallel"},
			}, {
				Name:        []string{"--priority"},
				Description: `Specifies the scheduling priority for the Gradle daemon and all processes launched by it`,
				Args: []model.Arg{{
					Name:        "priority",
					Suggestions: []model.Suggestion{{Name: []string{`normal`}}, {Name: []string{`low`}}},
				}},
			}, {
				Name:        []string{"--profile"},
				Description: `Generates a high-level performance report in the $buildDir/reports/profile directory. --scan is preferred`,
			}, {
				Name:        []string{"--scan"},
				Description: `Generate a build scan with detailed performance diagnostics`,
			}, {
				Name:        []string{"--watch-fs"},
				Description: `Toggles watching the file system. When enabled Gradle re-uses information it collects about the file system between builds. Enabled by default on operating systems where Gradle supports this feature`,
				ExclusiveOn: []string{"--no-watch-fs"},
			}, {
				Name:        []string{"--no-watch-fs"},
				Description: `Toggles watching the file system. When enabled Gradle re-uses information it collects about the file system between builds. Enabled by default on operating systems where Gradle supports this feature`,
				ExclusiveOn: []string{"--watch-fs"},
			}, {
				Name:        []string{"--daemon"},
				Description: `Use the Gradle Daemon to run the build. Starts the daemon if not running or existing daemon busy. Default is on`,
				ExclusiveOn: []string{"--no-daemon"},
			}, {
				Name:        []string{"--no-daemon"},
				Description: `Disables --daemon`,
				ExclusiveOn: []string{"--daemon"},
			}, {
				Name:        []string{"--foreground"},
				Description: `Starts the Gradle Daemon in a foreground process`,
			}, {
				Name:        []string{"-Dorg.gradle.daemon.idletimeout"},
				Description: `Gradle Daemon will stop itself after this number of milliseconds of idle time`,
				Args: []model.Arg{{
					Name: "milliseconds",
				}},
			}, {
				Name:        []string{"-Dorg.gradle.logging.level"},
				Description: `Set logging level via Gradle properties`,
				Args: []model.Arg{{
					Name:        "level",
					Suggestions: []model.Suggestion{{Name: []string{`quiet`}}, {Name: []string{`warn`}}, {Name: []string{`lifecycle`}}, {Name: []string{`info`}}, {Name: []string{`debug`}}},
				}},
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Log errors only`,
			}, {
				Name:        []string{"-w", "--warn"},
				Description: `Set log level to warn`,
			}, {
				Name:        []string{"-i", "--info"},
				Description: `Set log level to info`,
			}, {
				Name:        []string{"-d", "--debug"},
				Description: `Log in debug mode (includes normal stacktrace)`,
			}, {
				Name:        []string{"-Dorg.gradle.console"},
				Description: `Specify console mode via Gradle properties`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`auto`},
						Description: `Enables color and other rich output in the console output when the build process is attached to a console, or to generate plain text only when not attached to a console`,
					}, {
						Name:        []string{`plain`},
						Description: `Disables all color and other rich output in the console output. This is the default when Gradle is not attached to a terminal`,
					}, {
						Name:        []string{`rich`},
						Description: `Enables color and other rich output in the console output, regardless of whether the build process is not attached to a console`,
					}, {
						Name:        []string{`verbose`},
						Description: `Enables color and other rich output like the rich, but output task names and outcomes at the lifecycle log level, as is done by default in Gradle 3.5 and earlier`,
					}},
				}},
			}, {
				Name:        []string{"--console"},
				Description: `Specifies which type of console output to generate`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`auto`},
						Description: `Enables color and other rich output in the console output when the build process is attached to a console, or to generate plain text only when not attached to a console`,
					}, {
						Name:        []string{`plain`},
						Description: `Disables all color and other rich output in the console output. This is the default when Gradle is not attached to a terminal`,
					}, {
						Name:        []string{`rich`},
						Description: `Enables color and other rich output in the console output, regardless of whether the build process is not attached to a console`,
					}, {
						Name:        []string{`verbose`},
						Description: `Enables color and other rich output like the rich, but output task names and outcomes at the lifecycle log level, as is done by default in Gradle 3.5 and earlier`,
					}},
				}},
			}, {
				Name:        []string{"-Dorg.gradle.warning.mode"},
				Description: `Specify warning mode via Gradle properties`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`all`},
						Description: `Log all warnings`,
					}, {
						Name:        []string{`fail`},
						Description: `Log all warnings and fail the build if there are any warnings`,
					}, {
						Name:        []string{`summary`},
						Description: `Suppress all warnings and log a summary at the end of the build`,
					}, {
						Name:        []string{`none`},
						Description: `Suppress all warnings, including the summary at the end of the build`,
					}},
				}},
			}, {
				Name:        []string{"--warning-mode"},
				Description: `Specifies how to log warning`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`all`},
						Description: `Log all warnings`,
					}, {
						Name:        []string{`fail`},
						Description: `Log all warnings and fail the build if there are any warnings`,
					}, {
						Name:        []string{`summary`},
						Description: `Suppress all warnings and log a summary at the end of the build`,
					}, {
						Name:        []string{`none`},
						Description: `Suppress all warnings, including the summary at the end of the build`,
					}},
				}},
			}, {
				Name:        []string{"--include-build"},
				Description: `Run the build as a composite, including the specified build`,
			}, {
				Name:        []string{"--offline"},
				Description: `Specifies that the build should operate without accessing network resources`,
			}, {
				Name:        []string{"--refresh-dependencies"},
				Description: `Refresh the state of dependencies`,
			}, {
				Name:        []string{"--dry-run"},
				Description: `Run Gradle with all task actions disabled. Use this to show which task would have executed`,
			}, {
				Name:        []string{"--write-locks"},
				Description: `Indicates that all resolved configurations that are lockable should have their lock state persisted`,
			}, {
				Name:        []string{"--update-locks"},
				Description: `Indicates that versions for the specified modules have to be updated in the lock file`,
				Args: []model.Arg{{
					Name:       "group:name",
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"--no-rebuild"},
				Description: `Do not rebuild project dependencies. Useful for debugging and fine-tuning buildSrc, but can lead to wrong results. Use with caution`,
			}, {
				Name:        []string{"-b", "--build-file"},
				Description: `Specifies the build file. For example: gradle --build-file=foo.gradle`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"-c", "--settings-file"},
				Description: `Specifies the settings file. For example: gradle --settings-file=somewhere/else/settings.gradle`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"-g", "--gradle-user-home"},
				Description: `Specifies the Gradle user home directory. The default is the .gradle directory in the user’s home directory`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}, {
				Name:        []string{"-p", "--project-dir"},
				Description: `Specifies the start directory for Gradle`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}, {
				Name:        []string{"--project-cache-dir"},
				Description: `Specifies the project-specific cache directory. Default value is .gradle in the root project directory`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}, {
				Name:        []string{"-D", "--system-prop"},
				Description: `Sets a system property of the JVM, for example -Dmyprop=myvalue`,
				Args: []model.Arg{{
					Name: "system property",
				}},
			}, {
				Name:        []string{"-I", "--init-script"},
				Description: `Specifies an initialization script`,
			}, {
				Name:        []string{"-P", "--project-prop"},
				Description: `Sets a project property of the root project, for example -Pmyprop=myvalue`,
				Args: []model.Arg{{
					Name: "system property",
				}},
			}, {
				Name:        []string{"-Dorg.gradle.jvmargs"},
				Description: `Set JVM arguments`,
				Args: []model.Arg{{
					Name: "arguments",
				}},
			}, {
				Name:        []string{"-Dorg.gradle.java.home"},
				Description: `Set JDK home dir`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}},
		}, {
			Name:        []string{"check"},
			Description: `Run all checks`,
			Options: []model.Option{{
				Name:        []string{"-?", "-h", "--help"},
				Description: `Shows a help message with all available CLI options`,
			}, {
				Name:        []string{"-v", "--version"},
				Description: `Prints Gradle, Groovy, Ant, JVM, and operating system version information`,
			}, {
				Name:        []string{"-S", "--full-stacktrace"},
				Description: `Print out the full (very verbose) stacktrace for any exceptions`,
			}, {
				Name:        []string{"-s", "--stacktrace"},
				Description: `Print out the stacktrace also for user exceptions (e.g. compile error)`,
			}, {
				Name:        []string{"--scan"},
				Description: `Create a build scan with fine-grained information about all aspects of your Gradle build`,
			}, {
				Name:        []string{"-Dorg.gradle.debug"},
				Description: `Debug Gradle client (non-Daemon) process. Gradle will wait for you to attach a debugger at localhost:5005 by default`,
			}, {
				Name:        []string{"-Dorg.gradle.daemon.debug"},
				Description: `Debug Gradle Daemon process`,
			}, {
				Name:        []string{"--build-cache"},
				Description: `Toggles the Gradle build cache. Gradle will try to reuse outputs from previous builds. Default is off`,
				ExclusiveOn: []string{"--no-build-cache"},
			}, {
				Name:        []string{"--no-build-cache"},
				Description: `Toggles the Gradle build cache. Gradle will try to reuse outputs from previous builds. Default is off`,
				ExclusiveOn: []string{"--build-cache"},
			}, {
				Name:        []string{"--configure-on-demand"},
				Description: `Toggles Configure-on-demand. Only relevant projects are configured in this build run. Default is off`,
				ExclusiveOn: []string{"--configure-on-demand"},
			}, {
				Name:        []string{"--no-configure-on-demand"},
				Description: `Toggles Configure-on-demand. Only relevant projects are configured in this build run. Default is off`,
				ExclusiveOn: []string{"--configure-on-demand"},
			}, {
				Name:        []string{"--max-workers"},
				Description: `Sets maximum number of workers that Gradle may use. Default is number of processors`,
				Args: []model.Arg{{
					Name: "number",
				}},
			}, {
				Name:        []string{"--parallel"},
				Description: `Build projects in parallel. For limitations of this option, see Parallel Project Execution. Default is off`,
				ExclusiveOn: []string{"--no-parallel"},
			}, {
				Name:        []string{"--no-parallel"},
				Description: `Disables --parallel`,
				ExclusiveOn: []string{"--parallel"},
			}, {
				Name:        []string{"--priority"},
				Description: `Specifies the scheduling priority for the Gradle daemon and all processes launched by it`,
				Args: []model.Arg{{
					Name:        "priority",
					Suggestions: []model.Suggestion{{Name: []string{`normal`}}, {Name: []string{`low`}}},
				}},
			}, {
				Name:        []string{"--profile"},
				Description: `Generates a high-level performance report in the $buildDir/reports/profile directory. --scan is preferred`,
			}, {
				Name:        []string{"--scan"},
				Description: `Generate a build scan with detailed performance diagnostics`,
			}, {
				Name:        []string{"--watch-fs"},
				Description: `Toggles watching the file system. When enabled Gradle re-uses information it collects about the file system between builds. Enabled by default on operating systems where Gradle supports this feature`,
				ExclusiveOn: []string{"--no-watch-fs"},
			}, {
				Name:        []string{"--no-watch-fs"},
				Description: `Toggles watching the file system. When enabled Gradle re-uses information it collects about the file system between builds. Enabled by default on operating systems where Gradle supports this feature`,
				ExclusiveOn: []string{"--watch-fs"},
			}, {
				Name:        []string{"--daemon"},
				Description: `Use the Gradle Daemon to run the build. Starts the daemon if not running or existing daemon busy. Default is on`,
				ExclusiveOn: []string{"--no-daemon"},
			}, {
				Name:        []string{"--no-daemon"},
				Description: `Disables --daemon`,
				ExclusiveOn: []string{"--daemon"},
			}, {
				Name:        []string{"--foreground"},
				Description: `Starts the Gradle Daemon in a foreground process`,
			}, {
				Name:        []string{"-Dorg.gradle.daemon.idletimeout"},
				Description: `Gradle Daemon will stop itself after this number of milliseconds of idle time`,
				Args: []model.Arg{{
					Name: "milliseconds",
				}},
			}, {
				Name:        []string{"-Dorg.gradle.logging.level"},
				Description: `Set logging level via Gradle properties`,
				Args: []model.Arg{{
					Name:        "level",
					Suggestions: []model.Suggestion{{Name: []string{`quiet`}}, {Name: []string{`warn`}}, {Name: []string{`lifecycle`}}, {Name: []string{`info`}}, {Name: []string{`debug`}}},
				}},
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Log errors only`,
			}, {
				Name:        []string{"-w", "--warn"},
				Description: `Set log level to warn`,
			}, {
				Name:        []string{"-i", "--info"},
				Description: `Set log level to info`,
			}, {
				Name:        []string{"-d", "--debug"},
				Description: `Log in debug mode (includes normal stacktrace)`,
			}, {
				Name:        []string{"-Dorg.gradle.console"},
				Description: `Specify console mode via Gradle properties`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`auto`},
						Description: `Enables color and other rich output in the console output when the build process is attached to a console, or to generate plain text only when not attached to a console`,
					}, {
						Name:        []string{`plain`},
						Description: `Disables all color and other rich output in the console output. This is the default when Gradle is not attached to a terminal`,
					}, {
						Name:        []string{`rich`},
						Description: `Enables color and other rich output in the console output, regardless of whether the build process is not attached to a console`,
					}, {
						Name:        []string{`verbose`},
						Description: `Enables color and other rich output like the rich, but output task names and outcomes at the lifecycle log level, as is done by default in Gradle 3.5 and earlier`,
					}},
				}},
			}, {
				Name:        []string{"--console"},
				Description: `Specifies which type of console output to generate`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`auto`},
						Description: `Enables color and other rich output in the console output when the build process is attached to a console, or to generate plain text only when not attached to a console`,
					}, {
						Name:        []string{`plain`},
						Description: `Disables all color and other rich output in the console output. This is the default when Gradle is not attached to a terminal`,
					}, {
						Name:        []string{`rich`},
						Description: `Enables color and other rich output in the console output, regardless of whether the build process is not attached to a console`,
					}, {
						Name:        []string{`verbose`},
						Description: `Enables color and other rich output like the rich, but output task names and outcomes at the lifecycle log level, as is done by default in Gradle 3.5 and earlier`,
					}},
				}},
			}, {
				Name:        []string{"-Dorg.gradle.warning.mode"},
				Description: `Specify warning mode via Gradle properties`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`all`},
						Description: `Log all warnings`,
					}, {
						Name:        []string{`fail`},
						Description: `Log all warnings and fail the build if there are any warnings`,
					}, {
						Name:        []string{`summary`},
						Description: `Suppress all warnings and log a summary at the end of the build`,
					}, {
						Name:        []string{`none`},
						Description: `Suppress all warnings, including the summary at the end of the build`,
					}},
				}},
			}, {
				Name:        []string{"--warning-mode"},
				Description: `Specifies how to log warning`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`all`},
						Description: `Log all warnings`,
					}, {
						Name:        []string{`fail`},
						Description: `Log all warnings and fail the build if there are any warnings`,
					}, {
						Name:        []string{`summary`},
						Description: `Suppress all warnings and log a summary at the end of the build`,
					}, {
						Name:        []string{`none`},
						Description: `Suppress all warnings, including the summary at the end of the build`,
					}},
				}},
			}, {
				Name:        []string{"--include-build"},
				Description: `Run the build as a composite, including the specified build`,
			}, {
				Name:        []string{"--offline"},
				Description: `Specifies that the build should operate without accessing network resources`,
			}, {
				Name:        []string{"--refresh-dependencies"},
				Description: `Refresh the state of dependencies`,
			}, {
				Name:        []string{"--dry-run"},
				Description: `Run Gradle with all task actions disabled. Use this to show which task would have executed`,
			}, {
				Name:        []string{"--write-locks"},
				Description: `Indicates that all resolved configurations that are lockable should have their lock state persisted`,
			}, {
				Name:        []string{"--update-locks"},
				Description: `Indicates that versions for the specified modules have to be updated in the lock file`,
				Args: []model.Arg{{
					Name:       "group:name",
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"--no-rebuild"},
				Description: `Do not rebuild project dependencies. Useful for debugging and fine-tuning buildSrc, but can lead to wrong results. Use with caution`,
			}, {
				Name:        []string{"-b", "--build-file"},
				Description: `Specifies the build file. For example: gradle --build-file=foo.gradle`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"-c", "--settings-file"},
				Description: `Specifies the settings file. For example: gradle --settings-file=somewhere/else/settings.gradle`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"-g", "--gradle-user-home"},
				Description: `Specifies the Gradle user home directory. The default is the .gradle directory in the user’s home directory`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}, {
				Name:        []string{"-p", "--project-dir"},
				Description: `Specifies the start directory for Gradle`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}, {
				Name:        []string{"--project-cache-dir"},
				Description: `Specifies the project-specific cache directory. Default value is .gradle in the root project directory`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}, {
				Name:        []string{"-D", "--system-prop"},
				Description: `Sets a system property of the JVM, for example -Dmyprop=myvalue`,
				Args: []model.Arg{{
					Name: "system property",
				}},
			}, {
				Name:        []string{"-I", "--init-script"},
				Description: `Specifies an initialization script`,
			}, {
				Name:        []string{"-P", "--project-prop"},
				Description: `Sets a project property of the root project, for example -Pmyprop=myvalue`,
				Args: []model.Arg{{
					Name: "system property",
				}},
			}, {
				Name:        []string{"-Dorg.gradle.jvmargs"},
				Description: `Set JVM arguments`,
				Args: []model.Arg{{
					Name: "arguments",
				}},
			}, {
				Name:        []string{"-Dorg.gradle.java.home"},
				Description: `Set JDK home dir`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}},
		}, {
			Name:        []string{"clean"},
			Description: `Clear the contents of the build directory`,
			Options: []model.Option{{
				Name:        []string{"-?", "-h", "--help"},
				Description: `Shows a help message with all available CLI options`,
			}, {
				Name:        []string{"-v", "--version"},
				Description: `Prints Gradle, Groovy, Ant, JVM, and operating system version information`,
			}, {
				Name:        []string{"-S", "--full-stacktrace"},
				Description: `Print out the full (very verbose) stacktrace for any exceptions`,
			}, {
				Name:        []string{"-s", "--stacktrace"},
				Description: `Print out the stacktrace also for user exceptions (e.g. compile error)`,
			}, {
				Name:        []string{"--scan"},
				Description: `Create a build scan with fine-grained information about all aspects of your Gradle build`,
			}, {
				Name:        []string{"-Dorg.gradle.debug"},
				Description: `Debug Gradle client (non-Daemon) process. Gradle will wait for you to attach a debugger at localhost:5005 by default`,
			}, {
				Name:        []string{"-Dorg.gradle.daemon.debug"},
				Description: `Debug Gradle Daemon process`,
			}, {
				Name:        []string{"--build-cache"},
				Description: `Toggles the Gradle build cache. Gradle will try to reuse outputs from previous builds. Default is off`,
				ExclusiveOn: []string{"--no-build-cache"},
			}, {
				Name:        []string{"--no-build-cache"},
				Description: `Toggles the Gradle build cache. Gradle will try to reuse outputs from previous builds. Default is off`,
				ExclusiveOn: []string{"--build-cache"},
			}, {
				Name:        []string{"--configure-on-demand"},
				Description: `Toggles Configure-on-demand. Only relevant projects are configured in this build run. Default is off`,
				ExclusiveOn: []string{"--configure-on-demand"},
			}, {
				Name:        []string{"--no-configure-on-demand"},
				Description: `Toggles Configure-on-demand. Only relevant projects are configured in this build run. Default is off`,
				ExclusiveOn: []string{"--configure-on-demand"},
			}, {
				Name:        []string{"--max-workers"},
				Description: `Sets maximum number of workers that Gradle may use. Default is number of processors`,
				Args: []model.Arg{{
					Name: "number",
				}},
			}, {
				Name:        []string{"--parallel"},
				Description: `Build projects in parallel. For limitations of this option, see Parallel Project Execution. Default is off`,
				ExclusiveOn: []string{"--no-parallel"},
			}, {
				Name:        []string{"--no-parallel"},
				Description: `Disables --parallel`,
				ExclusiveOn: []string{"--parallel"},
			}, {
				Name:        []string{"--priority"},
				Description: `Specifies the scheduling priority for the Gradle daemon and all processes launched by it`,
				Args: []model.Arg{{
					Name:        "priority",
					Suggestions: []model.Suggestion{{Name: []string{`normal`}}, {Name: []string{`low`}}},
				}},
			}, {
				Name:        []string{"--profile"},
				Description: `Generates a high-level performance report in the $buildDir/reports/profile directory. --scan is preferred`,
			}, {
				Name:        []string{"--scan"},
				Description: `Generate a build scan with detailed performance diagnostics`,
			}, {
				Name:        []string{"--watch-fs"},
				Description: `Toggles watching the file system. When enabled Gradle re-uses information it collects about the file system between builds. Enabled by default on operating systems where Gradle supports this feature`,
				ExclusiveOn: []string{"--no-watch-fs"},
			}, {
				Name:        []string{"--no-watch-fs"},
				Description: `Toggles watching the file system. When enabled Gradle re-uses information it collects about the file system between builds. Enabled by default on operating systems where Gradle supports this feature`,
				ExclusiveOn: []string{"--watch-fs"},
			}, {
				Name:        []string{"--daemon"},
				Description: `Use the Gradle Daemon to run the build. Starts the daemon if not running or existing daemon busy. Default is on`,
				ExclusiveOn: []string{"--no-daemon"},
			}, {
				Name:        []string{"--no-daemon"},
				Description: `Disables --daemon`,
				ExclusiveOn: []string{"--daemon"},
			}, {
				Name:        []string{"--foreground"},
				Description: `Starts the Gradle Daemon in a foreground process`,
			}, {
				Name:        []string{"-Dorg.gradle.daemon.idletimeout"},
				Description: `Gradle Daemon will stop itself after this number of milliseconds of idle time`,
				Args: []model.Arg{{
					Name: "milliseconds",
				}},
			}, {
				Name:        []string{"-Dorg.gradle.logging.level"},
				Description: `Set logging level via Gradle properties`,
				Args: []model.Arg{{
					Name:        "level",
					Suggestions: []model.Suggestion{{Name: []string{`quiet`}}, {Name: []string{`warn`}}, {Name: []string{`lifecycle`}}, {Name: []string{`info`}}, {Name: []string{`debug`}}},
				}},
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Log errors only`,
			}, {
				Name:        []string{"-w", "--warn"},
				Description: `Set log level to warn`,
			}, {
				Name:        []string{"-i", "--info"},
				Description: `Set log level to info`,
			}, {
				Name:        []string{"-d", "--debug"},
				Description: `Log in debug mode (includes normal stacktrace)`,
			}, {
				Name:        []string{"-Dorg.gradle.console"},
				Description: `Specify console mode via Gradle properties`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`auto`},
						Description: `Enables color and other rich output in the console output when the build process is attached to a console, or to generate plain text only when not attached to a console`,
					}, {
						Name:        []string{`plain`},
						Description: `Disables all color and other rich output in the console output. This is the default when Gradle is not attached to a terminal`,
					}, {
						Name:        []string{`rich`},
						Description: `Enables color and other rich output in the console output, regardless of whether the build process is not attached to a console`,
					}, {
						Name:        []string{`verbose`},
						Description: `Enables color and other rich output like the rich, but output task names and outcomes at the lifecycle log level, as is done by default in Gradle 3.5 and earlier`,
					}},
				}},
			}, {
				Name:        []string{"--console"},
				Description: `Specifies which type of console output to generate`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`auto`},
						Description: `Enables color and other rich output in the console output when the build process is attached to a console, or to generate plain text only when not attached to a console`,
					}, {
						Name:        []string{`plain`},
						Description: `Disables all color and other rich output in the console output. This is the default when Gradle is not attached to a terminal`,
					}, {
						Name:        []string{`rich`},
						Description: `Enables color and other rich output in the console output, regardless of whether the build process is not attached to a console`,
					}, {
						Name:        []string{`verbose`},
						Description: `Enables color and other rich output like the rich, but output task names and outcomes at the lifecycle log level, as is done by default in Gradle 3.5 and earlier`,
					}},
				}},
			}, {
				Name:        []string{"-Dorg.gradle.warning.mode"},
				Description: `Specify warning mode via Gradle properties`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`all`},
						Description: `Log all warnings`,
					}, {
						Name:        []string{`fail`},
						Description: `Log all warnings and fail the build if there are any warnings`,
					}, {
						Name:        []string{`summary`},
						Description: `Suppress all warnings and log a summary at the end of the build`,
					}, {
						Name:        []string{`none`},
						Description: `Suppress all warnings, including the summary at the end of the build`,
					}},
				}},
			}, {
				Name:        []string{"--warning-mode"},
				Description: `Specifies how to log warning`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`all`},
						Description: `Log all warnings`,
					}, {
						Name:        []string{`fail`},
						Description: `Log all warnings and fail the build if there are any warnings`,
					}, {
						Name:        []string{`summary`},
						Description: `Suppress all warnings and log a summary at the end of the build`,
					}, {
						Name:        []string{`none`},
						Description: `Suppress all warnings, including the summary at the end of the build`,
					}},
				}},
			}, {
				Name:        []string{"--include-build"},
				Description: `Run the build as a composite, including the specified build`,
			}, {
				Name:        []string{"--offline"},
				Description: `Specifies that the build should operate without accessing network resources`,
			}, {
				Name:        []string{"--refresh-dependencies"},
				Description: `Refresh the state of dependencies`,
			}, {
				Name:        []string{"--dry-run"},
				Description: `Run Gradle with all task actions disabled. Use this to show which task would have executed`,
			}, {
				Name:        []string{"--write-locks"},
				Description: `Indicates that all resolved configurations that are lockable should have their lock state persisted`,
			}, {
				Name:        []string{"--update-locks"},
				Description: `Indicates that versions for the specified modules have to be updated in the lock file`,
				Args: []model.Arg{{
					Name:       "group:name",
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"--no-rebuild"},
				Description: `Do not rebuild project dependencies. Useful for debugging and fine-tuning buildSrc, but can lead to wrong results. Use with caution`,
			}, {
				Name:        []string{"-b", "--build-file"},
				Description: `Specifies the build file. For example: gradle --build-file=foo.gradle`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"-c", "--settings-file"},
				Description: `Specifies the settings file. For example: gradle --settings-file=somewhere/else/settings.gradle`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"-g", "--gradle-user-home"},
				Description: `Specifies the Gradle user home directory. The default is the .gradle directory in the user’s home directory`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}, {
				Name:        []string{"-p", "--project-dir"},
				Description: `Specifies the start directory for Gradle`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}, {
				Name:        []string{"--project-cache-dir"},
				Description: `Specifies the project-specific cache directory. Default value is .gradle in the root project directory`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}, {
				Name:        []string{"-D", "--system-prop"},
				Description: `Sets a system property of the JVM, for example -Dmyprop=myvalue`,
				Args: []model.Arg{{
					Name: "system property",
				}},
			}, {
				Name:        []string{"-I", "--init-script"},
				Description: `Specifies an initialization script`,
			}, {
				Name:        []string{"-P", "--project-prop"},
				Description: `Sets a project property of the root project, for example -Pmyprop=myvalue`,
				Args: []model.Arg{{
					Name: "system property",
				}},
			}, {
				Name:        []string{"-Dorg.gradle.jvmargs"},
				Description: `Set JVM arguments`,
				Args: []model.Arg{{
					Name: "arguments",
				}},
			}, {
				Name:        []string{"-Dorg.gradle.java.home"},
				Description: `Set JDK home dir`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}},
		}, {
			Name:        []string{"projects"},
			Description: `List of all sub-projects`,
			Options: []model.Option{{
				Name:        []string{"-?", "-h", "--help"},
				Description: `Shows a help message with all available CLI options`,
			}, {
				Name:        []string{"-v", "--version"},
				Description: `Prints Gradle, Groovy, Ant, JVM, and operating system version information`,
			}, {
				Name:        []string{"-S", "--full-stacktrace"},
				Description: `Print out the full (very verbose) stacktrace for any exceptions`,
			}, {
				Name:        []string{"-s", "--stacktrace"},
				Description: `Print out the stacktrace also for user exceptions (e.g. compile error)`,
			}, {
				Name:        []string{"--scan"},
				Description: `Create a build scan with fine-grained information about all aspects of your Gradle build`,
			}, {
				Name:        []string{"-Dorg.gradle.debug"},
				Description: `Debug Gradle client (non-Daemon) process. Gradle will wait for you to attach a debugger at localhost:5005 by default`,
			}, {
				Name:        []string{"-Dorg.gradle.daemon.debug"},
				Description: `Debug Gradle Daemon process`,
			}, {
				Name:        []string{"--build-cache"},
				Description: `Toggles the Gradle build cache. Gradle will try to reuse outputs from previous builds. Default is off`,
				ExclusiveOn: []string{"--no-build-cache"},
			}, {
				Name:        []string{"--no-build-cache"},
				Description: `Toggles the Gradle build cache. Gradle will try to reuse outputs from previous builds. Default is off`,
				ExclusiveOn: []string{"--build-cache"},
			}, {
				Name:        []string{"--configure-on-demand"},
				Description: `Toggles Configure-on-demand. Only relevant projects are configured in this build run. Default is off`,
				ExclusiveOn: []string{"--configure-on-demand"},
			}, {
				Name:        []string{"--no-configure-on-demand"},
				Description: `Toggles Configure-on-demand. Only relevant projects are configured in this build run. Default is off`,
				ExclusiveOn: []string{"--configure-on-demand"},
			}, {
				Name:        []string{"--max-workers"},
				Description: `Sets maximum number of workers that Gradle may use. Default is number of processors`,
				Args: []model.Arg{{
					Name: "number",
				}},
			}, {
				Name:        []string{"--parallel"},
				Description: `Build projects in parallel. For limitations of this option, see Parallel Project Execution. Default is off`,
				ExclusiveOn: []string{"--no-parallel"},
			}, {
				Name:        []string{"--no-parallel"},
				Description: `Disables --parallel`,
				ExclusiveOn: []string{"--parallel"},
			}, {
				Name:        []string{"--priority"},
				Description: `Specifies the scheduling priority for the Gradle daemon and all processes launched by it`,
				Args: []model.Arg{{
					Name:        "priority",
					Suggestions: []model.Suggestion{{Name: []string{`normal`}}, {Name: []string{`low`}}},
				}},
			}, {
				Name:        []string{"--profile"},
				Description: `Generates a high-level performance report in the $buildDir/reports/profile directory. --scan is preferred`,
			}, {
				Name:        []string{"--scan"},
				Description: `Generate a build scan with detailed performance diagnostics`,
			}, {
				Name:        []string{"--watch-fs"},
				Description: `Toggles watching the file system. When enabled Gradle re-uses information it collects about the file system between builds. Enabled by default on operating systems where Gradle supports this feature`,
				ExclusiveOn: []string{"--no-watch-fs"},
			}, {
				Name:        []string{"--no-watch-fs"},
				Description: `Toggles watching the file system. When enabled Gradle re-uses information it collects about the file system between builds. Enabled by default on operating systems where Gradle supports this feature`,
				ExclusiveOn: []string{"--watch-fs"},
			}, {
				Name:        []string{"--daemon"},
				Description: `Use the Gradle Daemon to run the build. Starts the daemon if not running or existing daemon busy. Default is on`,
				ExclusiveOn: []string{"--no-daemon"},
			}, {
				Name:        []string{"--no-daemon"},
				Description: `Disables --daemon`,
				ExclusiveOn: []string{"--daemon"},
			}, {
				Name:        []string{"--foreground"},
				Description: `Starts the Gradle Daemon in a foreground process`,
			}, {
				Name:        []string{"-Dorg.gradle.daemon.idletimeout"},
				Description: `Gradle Daemon will stop itself after this number of milliseconds of idle time`,
				Args: []model.Arg{{
					Name: "milliseconds",
				}},
			}, {
				Name:        []string{"-Dorg.gradle.logging.level"},
				Description: `Set logging level via Gradle properties`,
				Args: []model.Arg{{
					Name:        "level",
					Suggestions: []model.Suggestion{{Name: []string{`quiet`}}, {Name: []string{`warn`}}, {Name: []string{`lifecycle`}}, {Name: []string{`info`}}, {Name: []string{`debug`}}},
				}},
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Log errors only`,
			}, {
				Name:        []string{"-w", "--warn"},
				Description: `Set log level to warn`,
			}, {
				Name:        []string{"-i", "--info"},
				Description: `Set log level to info`,
			}, {
				Name:        []string{"-d", "--debug"},
				Description: `Log in debug mode (includes normal stacktrace)`,
			}, {
				Name:        []string{"-Dorg.gradle.console"},
				Description: `Specify console mode via Gradle properties`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`auto`},
						Description: `Enables color and other rich output in the console output when the build process is attached to a console, or to generate plain text only when not attached to a console`,
					}, {
						Name:        []string{`plain`},
						Description: `Disables all color and other rich output in the console output. This is the default when Gradle is not attached to a terminal`,
					}, {
						Name:        []string{`rich`},
						Description: `Enables color and other rich output in the console output, regardless of whether the build process is not attached to a console`,
					}, {
						Name:        []string{`verbose`},
						Description: `Enables color and other rich output like the rich, but output task names and outcomes at the lifecycle log level, as is done by default in Gradle 3.5 and earlier`,
					}},
				}},
			}, {
				Name:        []string{"--console"},
				Description: `Specifies which type of console output to generate`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`auto`},
						Description: `Enables color and other rich output in the console output when the build process is attached to a console, or to generate plain text only when not attached to a console`,
					}, {
						Name:        []string{`plain`},
						Description: `Disables all color and other rich output in the console output. This is the default when Gradle is not attached to a terminal`,
					}, {
						Name:        []string{`rich`},
						Description: `Enables color and other rich output in the console output, regardless of whether the build process is not attached to a console`,
					}, {
						Name:        []string{`verbose`},
						Description: `Enables color and other rich output like the rich, but output task names and outcomes at the lifecycle log level, as is done by default in Gradle 3.5 and earlier`,
					}},
				}},
			}, {
				Name:        []string{"-Dorg.gradle.warning.mode"},
				Description: `Specify warning mode via Gradle properties`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`all`},
						Description: `Log all warnings`,
					}, {
						Name:        []string{`fail`},
						Description: `Log all warnings and fail the build if there are any warnings`,
					}, {
						Name:        []string{`summary`},
						Description: `Suppress all warnings and log a summary at the end of the build`,
					}, {
						Name:        []string{`none`},
						Description: `Suppress all warnings, including the summary at the end of the build`,
					}},
				}},
			}, {
				Name:        []string{"--warning-mode"},
				Description: `Specifies how to log warning`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`all`},
						Description: `Log all warnings`,
					}, {
						Name:        []string{`fail`},
						Description: `Log all warnings and fail the build if there are any warnings`,
					}, {
						Name:        []string{`summary`},
						Description: `Suppress all warnings and log a summary at the end of the build`,
					}, {
						Name:        []string{`none`},
						Description: `Suppress all warnings, including the summary at the end of the build`,
					}},
				}},
			}, {
				Name:        []string{"--include-build"},
				Description: `Run the build as a composite, including the specified build`,
			}, {
				Name:        []string{"--offline"},
				Description: `Specifies that the build should operate without accessing network resources`,
			}, {
				Name:        []string{"--refresh-dependencies"},
				Description: `Refresh the state of dependencies`,
			}, {
				Name:        []string{"--dry-run"},
				Description: `Run Gradle with all task actions disabled. Use this to show which task would have executed`,
			}, {
				Name:        []string{"--write-locks"},
				Description: `Indicates that all resolved configurations that are lockable should have their lock state persisted`,
			}, {
				Name:        []string{"--update-locks"},
				Description: `Indicates that versions for the specified modules have to be updated in the lock file`,
				Args: []model.Arg{{
					Name:       "group:name",
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"--no-rebuild"},
				Description: `Do not rebuild project dependencies. Useful for debugging and fine-tuning buildSrc, but can lead to wrong results. Use with caution`,
			}, {
				Name:        []string{"-b", "--build-file"},
				Description: `Specifies the build file. For example: gradle --build-file=foo.gradle`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"-c", "--settings-file"},
				Description: `Specifies the settings file. For example: gradle --settings-file=somewhere/else/settings.gradle`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"-g", "--gradle-user-home"},
				Description: `Specifies the Gradle user home directory. The default is the .gradle directory in the user’s home directory`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}, {
				Name:        []string{"-p", "--project-dir"},
				Description: `Specifies the start directory for Gradle`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}, {
				Name:        []string{"--project-cache-dir"},
				Description: `Specifies the project-specific cache directory. Default value is .gradle in the root project directory`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}, {
				Name:        []string{"-D", "--system-prop"},
				Description: `Sets a system property of the JVM, for example -Dmyprop=myvalue`,
				Args: []model.Arg{{
					Name: "system property",
				}},
			}, {
				Name:        []string{"-I", "--init-script"},
				Description: `Specifies an initialization script`,
			}, {
				Name:        []string{"-P", "--project-prop"},
				Description: `Sets a project property of the root project, for example -Pmyprop=myvalue`,
				Args: []model.Arg{{
					Name: "system property",
				}},
			}, {
				Name:        []string{"-Dorg.gradle.jvmargs"},
				Description: `Set JVM arguments`,
				Args: []model.Arg{{
					Name: "arguments",
				}},
			}, {
				Name:        []string{"-Dorg.gradle.java.home"},
				Description: `Set JDK home dir`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}},
		}, {
			Name:        []string{"tasks"},
			Description: `List of main tasks of the selected project`,
			Options: []model.Option{{
				Name:        []string{"--all"},
				Description: `By default, this report shows only those tasks which have been assigned to a task group. You can obtain more information in the task listing using the --all option`,
			}, {
				Name:        []string{"--group"},
				Description: `If you need to be more precise, you can display only the tasks from a specific group`,
				Args: []model.Arg{{
					Name: "group",
				}},
			}, {
				Name:        []string{"-?", "-h", "--help"},
				Description: `Shows a help message with all available CLI options`,
			}, {
				Name:        []string{"-v", "--version"},
				Description: `Prints Gradle, Groovy, Ant, JVM, and operating system version information`,
			}, {
				Name:        []string{"-S", "--full-stacktrace"},
				Description: `Print out the full (very verbose) stacktrace for any exceptions`,
			}, {
				Name:        []string{"-s", "--stacktrace"},
				Description: `Print out the stacktrace also for user exceptions (e.g. compile error)`,
			}, {
				Name:        []string{"--scan"},
				Description: `Create a build scan with fine-grained information about all aspects of your Gradle build`,
			}, {
				Name:        []string{"-Dorg.gradle.debug"},
				Description: `Debug Gradle client (non-Daemon) process. Gradle will wait for you to attach a debugger at localhost:5005 by default`,
			}, {
				Name:        []string{"-Dorg.gradle.daemon.debug"},
				Description: `Debug Gradle Daemon process`,
			}, {
				Name:        []string{"--build-cache"},
				Description: `Toggles the Gradle build cache. Gradle will try to reuse outputs from previous builds. Default is off`,
				ExclusiveOn: []string{"--no-build-cache"},
			}, {
				Name:        []string{"--no-build-cache"},
				Description: `Toggles the Gradle build cache. Gradle will try to reuse outputs from previous builds. Default is off`,
				ExclusiveOn: []string{"--build-cache"},
			}, {
				Name:        []string{"--configure-on-demand"},
				Description: `Toggles Configure-on-demand. Only relevant projects are configured in this build run. Default is off`,
				ExclusiveOn: []string{"--configure-on-demand"},
			}, {
				Name:        []string{"--no-configure-on-demand"},
				Description: `Toggles Configure-on-demand. Only relevant projects are configured in this build run. Default is off`,
				ExclusiveOn: []string{"--configure-on-demand"},
			}, {
				Name:        []string{"--max-workers"},
				Description: `Sets maximum number of workers that Gradle may use. Default is number of processors`,
				Args: []model.Arg{{
					Name: "number",
				}},
			}, {
				Name:        []string{"--parallel"},
				Description: `Build projects in parallel. For limitations of this option, see Parallel Project Execution. Default is off`,
				ExclusiveOn: []string{"--no-parallel"},
			}, {
				Name:        []string{"--no-parallel"},
				Description: `Disables --parallel`,
				ExclusiveOn: []string{"--parallel"},
			}, {
				Name:        []string{"--priority"},
				Description: `Specifies the scheduling priority for the Gradle daemon and all processes launched by it`,
				Args: []model.Arg{{
					Name:        "priority",
					Suggestions: []model.Suggestion{{Name: []string{`normal`}}, {Name: []string{`low`}}},
				}},
			}, {
				Name:        []string{"--profile"},
				Description: `Generates a high-level performance report in the $buildDir/reports/profile directory. --scan is preferred`,
			}, {
				Name:        []string{"--scan"},
				Description: `Generate a build scan with detailed performance diagnostics`,
			}, {
				Name:        []string{"--watch-fs"},
				Description: `Toggles watching the file system. When enabled Gradle re-uses information it collects about the file system between builds. Enabled by default on operating systems where Gradle supports this feature`,
				ExclusiveOn: []string{"--no-watch-fs"},
			}, {
				Name:        []string{"--no-watch-fs"},
				Description: `Toggles watching the file system. When enabled Gradle re-uses information it collects about the file system between builds. Enabled by default on operating systems where Gradle supports this feature`,
				ExclusiveOn: []string{"--watch-fs"},
			}, {
				Name:        []string{"--daemon"},
				Description: `Use the Gradle Daemon to run the build. Starts the daemon if not running or existing daemon busy. Default is on`,
				ExclusiveOn: []string{"--no-daemon"},
			}, {
				Name:        []string{"--no-daemon"},
				Description: `Disables --daemon`,
				ExclusiveOn: []string{"--daemon"},
			}, {
				Name:        []string{"--foreground"},
				Description: `Starts the Gradle Daemon in a foreground process`,
			}, {
				Name:        []string{"-Dorg.gradle.daemon.idletimeout"},
				Description: `Gradle Daemon will stop itself after this number of milliseconds of idle time`,
				Args: []model.Arg{{
					Name: "milliseconds",
				}},
			}, {
				Name:        []string{"-Dorg.gradle.logging.level"},
				Description: `Set logging level via Gradle properties`,
				Args: []model.Arg{{
					Name:        "level",
					Suggestions: []model.Suggestion{{Name: []string{`quiet`}}, {Name: []string{`warn`}}, {Name: []string{`lifecycle`}}, {Name: []string{`info`}}, {Name: []string{`debug`}}},
				}},
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Log errors only`,
			}, {
				Name:        []string{"-w", "--warn"},
				Description: `Set log level to warn`,
			}, {
				Name:        []string{"-i", "--info"},
				Description: `Set log level to info`,
			}, {
				Name:        []string{"-d", "--debug"},
				Description: `Log in debug mode (includes normal stacktrace)`,
			}, {
				Name:        []string{"-Dorg.gradle.console"},
				Description: `Specify console mode via Gradle properties`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`auto`},
						Description: `Enables color and other rich output in the console output when the build process is attached to a console, or to generate plain text only when not attached to a console`,
					}, {
						Name:        []string{`plain`},
						Description: `Disables all color and other rich output in the console output. This is the default when Gradle is not attached to a terminal`,
					}, {
						Name:        []string{`rich`},
						Description: `Enables color and other rich output in the console output, regardless of whether the build process is not attached to a console`,
					}, {
						Name:        []string{`verbose`},
						Description: `Enables color and other rich output like the rich, but output task names and outcomes at the lifecycle log level, as is done by default in Gradle 3.5 and earlier`,
					}},
				}},
			}, {
				Name:        []string{"--console"},
				Description: `Specifies which type of console output to generate`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`auto`},
						Description: `Enables color and other rich output in the console output when the build process is attached to a console, or to generate plain text only when not attached to a console`,
					}, {
						Name:        []string{`plain`},
						Description: `Disables all color and other rich output in the console output. This is the default when Gradle is not attached to a terminal`,
					}, {
						Name:        []string{`rich`},
						Description: `Enables color and other rich output in the console output, regardless of whether the build process is not attached to a console`,
					}, {
						Name:        []string{`verbose`},
						Description: `Enables color and other rich output like the rich, but output task names and outcomes at the lifecycle log level, as is done by default in Gradle 3.5 and earlier`,
					}},
				}},
			}, {
				Name:        []string{"-Dorg.gradle.warning.mode"},
				Description: `Specify warning mode via Gradle properties`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`all`},
						Description: `Log all warnings`,
					}, {
						Name:        []string{`fail`},
						Description: `Log all warnings and fail the build if there are any warnings`,
					}, {
						Name:        []string{`summary`},
						Description: `Suppress all warnings and log a summary at the end of the build`,
					}, {
						Name:        []string{`none`},
						Description: `Suppress all warnings, including the summary at the end of the build`,
					}},
				}},
			}, {
				Name:        []string{"--warning-mode"},
				Description: `Specifies how to log warning`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`all`},
						Description: `Log all warnings`,
					}, {
						Name:        []string{`fail`},
						Description: `Log all warnings and fail the build if there are any warnings`,
					}, {
						Name:        []string{`summary`},
						Description: `Suppress all warnings and log a summary at the end of the build`,
					}, {
						Name:        []string{`none`},
						Description: `Suppress all warnings, including the summary at the end of the build`,
					}},
				}},
			}, {
				Name:        []string{"--include-build"},
				Description: `Run the build as a composite, including the specified build`,
			}, {
				Name:        []string{"--offline"},
				Description: `Specifies that the build should operate without accessing network resources`,
			}, {
				Name:        []string{"--refresh-dependencies"},
				Description: `Refresh the state of dependencies`,
			}, {
				Name:        []string{"--dry-run"},
				Description: `Run Gradle with all task actions disabled. Use this to show which task would have executed`,
			}, {
				Name:        []string{"--write-locks"},
				Description: `Indicates that all resolved configurations that are lockable should have their lock state persisted`,
			}, {
				Name:        []string{"--update-locks"},
				Description: `Indicates that versions for the specified modules have to be updated in the lock file`,
				Args: []model.Arg{{
					Name:       "group:name",
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"--no-rebuild"},
				Description: `Do not rebuild project dependencies. Useful for debugging and fine-tuning buildSrc, but can lead to wrong results. Use with caution`,
			}, {
				Name:        []string{"-b", "--build-file"},
				Description: `Specifies the build file. For example: gradle --build-file=foo.gradle`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"-c", "--settings-file"},
				Description: `Specifies the settings file. For example: gradle --settings-file=somewhere/else/settings.gradle`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"-g", "--gradle-user-home"},
				Description: `Specifies the Gradle user home directory. The default is the .gradle directory in the user’s home directory`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}, {
				Name:        []string{"-p", "--project-dir"},
				Description: `Specifies the start directory for Gradle`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}, {
				Name:        []string{"--project-cache-dir"},
				Description: `Specifies the project-specific cache directory. Default value is .gradle in the root project directory`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}, {
				Name:        []string{"-D", "--system-prop"},
				Description: `Sets a system property of the JVM, for example -Dmyprop=myvalue`,
				Args: []model.Arg{{
					Name: "system property",
				}},
			}, {
				Name:        []string{"-I", "--init-script"},
				Description: `Specifies an initialization script`,
			}, {
				Name:        []string{"-P", "--project-prop"},
				Description: `Sets a project property of the root project, for example -Pmyprop=myvalue`,
				Args: []model.Arg{{
					Name: "system property",
				}},
			}, {
				Name:        []string{"-Dorg.gradle.jvmargs"},
				Description: `Set JVM arguments`,
				Args: []model.Arg{{
					Name: "arguments",
				}},
			}, {
				Name:        []string{"-Dorg.gradle.java.home"},
				Description: `Set JDK home dir`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}},
		}, {
			Name:        []string{"help"},
			Description: `Display task usage information`,
			Options: []model.Option{{
				Name: []string{"--task"},
				Args: []model.Arg{{
					Name: "task",
				}},
			}, {
				Name:        []string{"-?", "-h", "--help"},
				Description: `Shows a help message with all available CLI options`,
			}, {
				Name:        []string{"-v", "--version"},
				Description: `Prints Gradle, Groovy, Ant, JVM, and operating system version information`,
			}, {
				Name:        []string{"-S", "--full-stacktrace"},
				Description: `Print out the full (very verbose) stacktrace for any exceptions`,
			}, {
				Name:        []string{"-s", "--stacktrace"},
				Description: `Print out the stacktrace also for user exceptions (e.g. compile error)`,
			}, {
				Name:        []string{"--scan"},
				Description: `Create a build scan with fine-grained information about all aspects of your Gradle build`,
			}, {
				Name:        []string{"-Dorg.gradle.debug"},
				Description: `Debug Gradle client (non-Daemon) process. Gradle will wait for you to attach a debugger at localhost:5005 by default`,
			}, {
				Name:        []string{"-Dorg.gradle.daemon.debug"},
				Description: `Debug Gradle Daemon process`,
			}, {
				Name:        []string{"--build-cache"},
				Description: `Toggles the Gradle build cache. Gradle will try to reuse outputs from previous builds. Default is off`,
				ExclusiveOn: []string{"--no-build-cache"},
			}, {
				Name:        []string{"--no-build-cache"},
				Description: `Toggles the Gradle build cache. Gradle will try to reuse outputs from previous builds. Default is off`,
				ExclusiveOn: []string{"--build-cache"},
			}, {
				Name:        []string{"--configure-on-demand"},
				Description: `Toggles Configure-on-demand. Only relevant projects are configured in this build run. Default is off`,
				ExclusiveOn: []string{"--configure-on-demand"},
			}, {
				Name:        []string{"--no-configure-on-demand"},
				Description: `Toggles Configure-on-demand. Only relevant projects are configured in this build run. Default is off`,
				ExclusiveOn: []string{"--configure-on-demand"},
			}, {
				Name:        []string{"--max-workers"},
				Description: `Sets maximum number of workers that Gradle may use. Default is number of processors`,
				Args: []model.Arg{{
					Name: "number",
				}},
			}, {
				Name:        []string{"--parallel"},
				Description: `Build projects in parallel. For limitations of this option, see Parallel Project Execution. Default is off`,
				ExclusiveOn: []string{"--no-parallel"},
			}, {
				Name:        []string{"--no-parallel"},
				Description: `Disables --parallel`,
				ExclusiveOn: []string{"--parallel"},
			}, {
				Name:        []string{"--priority"},
				Description: `Specifies the scheduling priority for the Gradle daemon and all processes launched by it`,
				Args: []model.Arg{{
					Name:        "priority",
					Suggestions: []model.Suggestion{{Name: []string{`normal`}}, {Name: []string{`low`}}},
				}},
			}, {
				Name:        []string{"--profile"},
				Description: `Generates a high-level performance report in the $buildDir/reports/profile directory. --scan is preferred`,
			}, {
				Name:        []string{"--scan"},
				Description: `Generate a build scan with detailed performance diagnostics`,
			}, {
				Name:        []string{"--watch-fs"},
				Description: `Toggles watching the file system. When enabled Gradle re-uses information it collects about the file system between builds. Enabled by default on operating systems where Gradle supports this feature`,
				ExclusiveOn: []string{"--no-watch-fs"},
			}, {
				Name:        []string{"--no-watch-fs"},
				Description: `Toggles watching the file system. When enabled Gradle re-uses information it collects about the file system between builds. Enabled by default on operating systems where Gradle supports this feature`,
				ExclusiveOn: []string{"--watch-fs"},
			}, {
				Name:        []string{"--daemon"},
				Description: `Use the Gradle Daemon to run the build. Starts the daemon if not running or existing daemon busy. Default is on`,
				ExclusiveOn: []string{"--no-daemon"},
			}, {
				Name:        []string{"--no-daemon"},
				Description: `Disables --daemon`,
				ExclusiveOn: []string{"--daemon"},
			}, {
				Name:        []string{"--foreground"},
				Description: `Starts the Gradle Daemon in a foreground process`,
			}, {
				Name:        []string{"-Dorg.gradle.daemon.idletimeout"},
				Description: `Gradle Daemon will stop itself after this number of milliseconds of idle time`,
				Args: []model.Arg{{
					Name: "milliseconds",
				}},
			}, {
				Name:        []string{"-Dorg.gradle.logging.level"},
				Description: `Set logging level via Gradle properties`,
				Args: []model.Arg{{
					Name:        "level",
					Suggestions: []model.Suggestion{{Name: []string{`quiet`}}, {Name: []string{`warn`}}, {Name: []string{`lifecycle`}}, {Name: []string{`info`}}, {Name: []string{`debug`}}},
				}},
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Log errors only`,
			}, {
				Name:        []string{"-w", "--warn"},
				Description: `Set log level to warn`,
			}, {
				Name:        []string{"-i", "--info"},
				Description: `Set log level to info`,
			}, {
				Name:        []string{"-d", "--debug"},
				Description: `Log in debug mode (includes normal stacktrace)`,
			}, {
				Name:        []string{"-Dorg.gradle.console"},
				Description: `Specify console mode via Gradle properties`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`auto`},
						Description: `Enables color and other rich output in the console output when the build process is attached to a console, or to generate plain text only when not attached to a console`,
					}, {
						Name:        []string{`plain`},
						Description: `Disables all color and other rich output in the console output. This is the default when Gradle is not attached to a terminal`,
					}, {
						Name:        []string{`rich`},
						Description: `Enables color and other rich output in the console output, regardless of whether the build process is not attached to a console`,
					}, {
						Name:        []string{`verbose`},
						Description: `Enables color and other rich output like the rich, but output task names and outcomes at the lifecycle log level, as is done by default in Gradle 3.5 and earlier`,
					}},
				}},
			}, {
				Name:        []string{"--console"},
				Description: `Specifies which type of console output to generate`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`auto`},
						Description: `Enables color and other rich output in the console output when the build process is attached to a console, or to generate plain text only when not attached to a console`,
					}, {
						Name:        []string{`plain`},
						Description: `Disables all color and other rich output in the console output. This is the default when Gradle is not attached to a terminal`,
					}, {
						Name:        []string{`rich`},
						Description: `Enables color and other rich output in the console output, regardless of whether the build process is not attached to a console`,
					}, {
						Name:        []string{`verbose`},
						Description: `Enables color and other rich output like the rich, but output task names and outcomes at the lifecycle log level, as is done by default in Gradle 3.5 and earlier`,
					}},
				}},
			}, {
				Name:        []string{"-Dorg.gradle.warning.mode"},
				Description: `Specify warning mode via Gradle properties`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`all`},
						Description: `Log all warnings`,
					}, {
						Name:        []string{`fail`},
						Description: `Log all warnings and fail the build if there are any warnings`,
					}, {
						Name:        []string{`summary`},
						Description: `Suppress all warnings and log a summary at the end of the build`,
					}, {
						Name:        []string{`none`},
						Description: `Suppress all warnings, including the summary at the end of the build`,
					}},
				}},
			}, {
				Name:        []string{"--warning-mode"},
				Description: `Specifies how to log warning`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`all`},
						Description: `Log all warnings`,
					}, {
						Name:        []string{`fail`},
						Description: `Log all warnings and fail the build if there are any warnings`,
					}, {
						Name:        []string{`summary`},
						Description: `Suppress all warnings and log a summary at the end of the build`,
					}, {
						Name:        []string{`none`},
						Description: `Suppress all warnings, including the summary at the end of the build`,
					}},
				}},
			}, {
				Name:        []string{"--include-build"},
				Description: `Run the build as a composite, including the specified build`,
			}, {
				Name:        []string{"--offline"},
				Description: `Specifies that the build should operate without accessing network resources`,
			}, {
				Name:        []string{"--refresh-dependencies"},
				Description: `Refresh the state of dependencies`,
			}, {
				Name:        []string{"--dry-run"},
				Description: `Run Gradle with all task actions disabled. Use this to show which task would have executed`,
			}, {
				Name:        []string{"--write-locks"},
				Description: `Indicates that all resolved configurations that are lockable should have their lock state persisted`,
			}, {
				Name:        []string{"--update-locks"},
				Description: `Indicates that versions for the specified modules have to be updated in the lock file`,
				Args: []model.Arg{{
					Name:       "group:name",
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"--no-rebuild"},
				Description: `Do not rebuild project dependencies. Useful for debugging and fine-tuning buildSrc, but can lead to wrong results. Use with caution`,
			}, {
				Name:        []string{"-b", "--build-file"},
				Description: `Specifies the build file. For example: gradle --build-file=foo.gradle`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"-c", "--settings-file"},
				Description: `Specifies the settings file. For example: gradle --settings-file=somewhere/else/settings.gradle`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"-g", "--gradle-user-home"},
				Description: `Specifies the Gradle user home directory. The default is the .gradle directory in the user’s home directory`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}, {
				Name:        []string{"-p", "--project-dir"},
				Description: `Specifies the start directory for Gradle`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}, {
				Name:        []string{"--project-cache-dir"},
				Description: `Specifies the project-specific cache directory. Default value is .gradle in the root project directory`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}, {
				Name:        []string{"-D", "--system-prop"},
				Description: `Sets a system property of the JVM, for example -Dmyprop=myvalue`,
				Args: []model.Arg{{
					Name: "system property",
				}},
			}, {
				Name:        []string{"-I", "--init-script"},
				Description: `Specifies an initialization script`,
			}, {
				Name:        []string{"-P", "--project-prop"},
				Description: `Sets a project property of the root project, for example -Pmyprop=myvalue`,
				Args: []model.Arg{{
					Name: "system property",
				}},
			}, {
				Name:        []string{"-Dorg.gradle.jvmargs"},
				Description: `Set JVM arguments`,
				Args: []model.Arg{{
					Name: "arguments",
				}},
			}, {
				Name:        []string{"-Dorg.gradle.java.home"},
				Description: `Set JDK home dir`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}},
		}, {
			Name:        []string{"dependencies"},
			Description: `Gives you a list of the dependencies of the selected project, broken down by configuration`,
			Options: []model.Option{{
				Name:        []string{"-?", "-h", "--help"},
				Description: `Shows a help message with all available CLI options`,
			}, {
				Name:        []string{"-v", "--version"},
				Description: `Prints Gradle, Groovy, Ant, JVM, and operating system version information`,
			}, {
				Name:        []string{"-S", "--full-stacktrace"},
				Description: `Print out the full (very verbose) stacktrace for any exceptions`,
			}, {
				Name:        []string{"-s", "--stacktrace"},
				Description: `Print out the stacktrace also for user exceptions (e.g. compile error)`,
			}, {
				Name:        []string{"--scan"},
				Description: `Create a build scan with fine-grained information about all aspects of your Gradle build`,
			}, {
				Name:        []string{"-Dorg.gradle.debug"},
				Description: `Debug Gradle client (non-Daemon) process. Gradle will wait for you to attach a debugger at localhost:5005 by default`,
			}, {
				Name:        []string{"-Dorg.gradle.daemon.debug"},
				Description: `Debug Gradle Daemon process`,
			}, {
				Name:        []string{"--build-cache"},
				Description: `Toggles the Gradle build cache. Gradle will try to reuse outputs from previous builds. Default is off`,
				ExclusiveOn: []string{"--no-build-cache"},
			}, {
				Name:        []string{"--no-build-cache"},
				Description: `Toggles the Gradle build cache. Gradle will try to reuse outputs from previous builds. Default is off`,
				ExclusiveOn: []string{"--build-cache"},
			}, {
				Name:        []string{"--configure-on-demand"},
				Description: `Toggles Configure-on-demand. Only relevant projects are configured in this build run. Default is off`,
				ExclusiveOn: []string{"--configure-on-demand"},
			}, {
				Name:        []string{"--no-configure-on-demand"},
				Description: `Toggles Configure-on-demand. Only relevant projects are configured in this build run. Default is off`,
				ExclusiveOn: []string{"--configure-on-demand"},
			}, {
				Name:        []string{"--max-workers"},
				Description: `Sets maximum number of workers that Gradle may use. Default is number of processors`,
				Args: []model.Arg{{
					Name: "number",
				}},
			}, {
				Name:        []string{"--parallel"},
				Description: `Build projects in parallel. For limitations of this option, see Parallel Project Execution. Default is off`,
				ExclusiveOn: []string{"--no-parallel"},
			}, {
				Name:        []string{"--no-parallel"},
				Description: `Disables --parallel`,
				ExclusiveOn: []string{"--parallel"},
			}, {
				Name:        []string{"--priority"},
				Description: `Specifies the scheduling priority for the Gradle daemon and all processes launched by it`,
				Args: []model.Arg{{
					Name:        "priority",
					Suggestions: []model.Suggestion{{Name: []string{`normal`}}, {Name: []string{`low`}}},
				}},
			}, {
				Name:        []string{"--profile"},
				Description: `Generates a high-level performance report in the $buildDir/reports/profile directory. --scan is preferred`,
			}, {
				Name:        []string{"--scan"},
				Description: `Generate a build scan with detailed performance diagnostics`,
			}, {
				Name:        []string{"--watch-fs"},
				Description: `Toggles watching the file system. When enabled Gradle re-uses information it collects about the file system between builds. Enabled by default on operating systems where Gradle supports this feature`,
				ExclusiveOn: []string{"--no-watch-fs"},
			}, {
				Name:        []string{"--no-watch-fs"},
				Description: `Toggles watching the file system. When enabled Gradle re-uses information it collects about the file system between builds. Enabled by default on operating systems where Gradle supports this feature`,
				ExclusiveOn: []string{"--watch-fs"},
			}, {
				Name:        []string{"--daemon"},
				Description: `Use the Gradle Daemon to run the build. Starts the daemon if not running or existing daemon busy. Default is on`,
				ExclusiveOn: []string{"--no-daemon"},
			}, {
				Name:        []string{"--no-daemon"},
				Description: `Disables --daemon`,
				ExclusiveOn: []string{"--daemon"},
			}, {
				Name:        []string{"--foreground"},
				Description: `Starts the Gradle Daemon in a foreground process`,
			}, {
				Name:        []string{"-Dorg.gradle.daemon.idletimeout"},
				Description: `Gradle Daemon will stop itself after this number of milliseconds of idle time`,
				Args: []model.Arg{{
					Name: "milliseconds",
				}},
			}, {
				Name:        []string{"-Dorg.gradle.logging.level"},
				Description: `Set logging level via Gradle properties`,
				Args: []model.Arg{{
					Name:        "level",
					Suggestions: []model.Suggestion{{Name: []string{`quiet`}}, {Name: []string{`warn`}}, {Name: []string{`lifecycle`}}, {Name: []string{`info`}}, {Name: []string{`debug`}}},
				}},
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Log errors only`,
			}, {
				Name:        []string{"-w", "--warn"},
				Description: `Set log level to warn`,
			}, {
				Name:        []string{"-i", "--info"},
				Description: `Set log level to info`,
			}, {
				Name:        []string{"-d", "--debug"},
				Description: `Log in debug mode (includes normal stacktrace)`,
			}, {
				Name:        []string{"-Dorg.gradle.console"},
				Description: `Specify console mode via Gradle properties`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`auto`},
						Description: `Enables color and other rich output in the console output when the build process is attached to a console, or to generate plain text only when not attached to a console`,
					}, {
						Name:        []string{`plain`},
						Description: `Disables all color and other rich output in the console output. This is the default when Gradle is not attached to a terminal`,
					}, {
						Name:        []string{`rich`},
						Description: `Enables color and other rich output in the console output, regardless of whether the build process is not attached to a console`,
					}, {
						Name:        []string{`verbose`},
						Description: `Enables color and other rich output like the rich, but output task names and outcomes at the lifecycle log level, as is done by default in Gradle 3.5 and earlier`,
					}},
				}},
			}, {
				Name:        []string{"--console"},
				Description: `Specifies which type of console output to generate`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`auto`},
						Description: `Enables color and other rich output in the console output when the build process is attached to a console, or to generate plain text only when not attached to a console`,
					}, {
						Name:        []string{`plain`},
						Description: `Disables all color and other rich output in the console output. This is the default when Gradle is not attached to a terminal`,
					}, {
						Name:        []string{`rich`},
						Description: `Enables color and other rich output in the console output, regardless of whether the build process is not attached to a console`,
					}, {
						Name:        []string{`verbose`},
						Description: `Enables color and other rich output like the rich, but output task names and outcomes at the lifecycle log level, as is done by default in Gradle 3.5 and earlier`,
					}},
				}},
			}, {
				Name:        []string{"-Dorg.gradle.warning.mode"},
				Description: `Specify warning mode via Gradle properties`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`all`},
						Description: `Log all warnings`,
					}, {
						Name:        []string{`fail`},
						Description: `Log all warnings and fail the build if there are any warnings`,
					}, {
						Name:        []string{`summary`},
						Description: `Suppress all warnings and log a summary at the end of the build`,
					}, {
						Name:        []string{`none`},
						Description: `Suppress all warnings, including the summary at the end of the build`,
					}},
				}},
			}, {
				Name:        []string{"--warning-mode"},
				Description: `Specifies how to log warning`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`all`},
						Description: `Log all warnings`,
					}, {
						Name:        []string{`fail`},
						Description: `Log all warnings and fail the build if there are any warnings`,
					}, {
						Name:        []string{`summary`},
						Description: `Suppress all warnings and log a summary at the end of the build`,
					}, {
						Name:        []string{`none`},
						Description: `Suppress all warnings, including the summary at the end of the build`,
					}},
				}},
			}, {
				Name:        []string{"--include-build"},
				Description: `Run the build as a composite, including the specified build`,
			}, {
				Name:        []string{"--offline"},
				Description: `Specifies that the build should operate without accessing network resources`,
			}, {
				Name:        []string{"--refresh-dependencies"},
				Description: `Refresh the state of dependencies`,
			}, {
				Name:        []string{"--dry-run"},
				Description: `Run Gradle with all task actions disabled. Use this to show which task would have executed`,
			}, {
				Name:        []string{"--write-locks"},
				Description: `Indicates that all resolved configurations that are lockable should have their lock state persisted`,
			}, {
				Name:        []string{"--update-locks"},
				Description: `Indicates that versions for the specified modules have to be updated in the lock file`,
				Args: []model.Arg{{
					Name:       "group:name",
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"--no-rebuild"},
				Description: `Do not rebuild project dependencies. Useful for debugging and fine-tuning buildSrc, but can lead to wrong results. Use with caution`,
			}, {
				Name:        []string{"-b", "--build-file"},
				Description: `Specifies the build file. For example: gradle --build-file=foo.gradle`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"-c", "--settings-file"},
				Description: `Specifies the settings file. For example: gradle --settings-file=somewhere/else/settings.gradle`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"-g", "--gradle-user-home"},
				Description: `Specifies the Gradle user home directory. The default is the .gradle directory in the user’s home directory`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}, {
				Name:        []string{"-p", "--project-dir"},
				Description: `Specifies the start directory for Gradle`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}, {
				Name:        []string{"--project-cache-dir"},
				Description: `Specifies the project-specific cache directory. Default value is .gradle in the root project directory`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}, {
				Name:        []string{"-D", "--system-prop"},
				Description: `Sets a system property of the JVM, for example -Dmyprop=myvalue`,
				Args: []model.Arg{{
					Name: "system property",
				}},
			}, {
				Name:        []string{"-I", "--init-script"},
				Description: `Specifies an initialization script`,
			}, {
				Name:        []string{"-P", "--project-prop"},
				Description: `Sets a project property of the root project, for example -Pmyprop=myvalue`,
				Args: []model.Arg{{
					Name: "system property",
				}},
			}, {
				Name:        []string{"-Dorg.gradle.jvmargs"},
				Description: `Set JVM arguments`,
				Args: []model.Arg{{
					Name: "arguments",
				}},
			}, {
				Name:        []string{"-Dorg.gradle.java.home"},
				Description: `Set JDK home dir`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}},
		}, {
			Name:        []string{"buildEnvironment"},
			Description: `Visualises the buildscript dependencies of the selected project`,
			Options: []model.Option{{
				Name:        []string{"-?", "-h", "--help"},
				Description: `Shows a help message with all available CLI options`,
			}, {
				Name:        []string{"-v", "--version"},
				Description: `Prints Gradle, Groovy, Ant, JVM, and operating system version information`,
			}, {
				Name:        []string{"-S", "--full-stacktrace"},
				Description: `Print out the full (very verbose) stacktrace for any exceptions`,
			}, {
				Name:        []string{"-s", "--stacktrace"},
				Description: `Print out the stacktrace also for user exceptions (e.g. compile error)`,
			}, {
				Name:        []string{"--scan"},
				Description: `Create a build scan with fine-grained information about all aspects of your Gradle build`,
			}, {
				Name:        []string{"-Dorg.gradle.debug"},
				Description: `Debug Gradle client (non-Daemon) process. Gradle will wait for you to attach a debugger at localhost:5005 by default`,
			}, {
				Name:        []string{"-Dorg.gradle.daemon.debug"},
				Description: `Debug Gradle Daemon process`,
			}, {
				Name:        []string{"--build-cache"},
				Description: `Toggles the Gradle build cache. Gradle will try to reuse outputs from previous builds. Default is off`,
				ExclusiveOn: []string{"--no-build-cache"},
			}, {
				Name:        []string{"--no-build-cache"},
				Description: `Toggles the Gradle build cache. Gradle will try to reuse outputs from previous builds. Default is off`,
				ExclusiveOn: []string{"--build-cache"},
			}, {
				Name:        []string{"--configure-on-demand"},
				Description: `Toggles Configure-on-demand. Only relevant projects are configured in this build run. Default is off`,
				ExclusiveOn: []string{"--configure-on-demand"},
			}, {
				Name:        []string{"--no-configure-on-demand"},
				Description: `Toggles Configure-on-demand. Only relevant projects are configured in this build run. Default is off`,
				ExclusiveOn: []string{"--configure-on-demand"},
			}, {
				Name:        []string{"--max-workers"},
				Description: `Sets maximum number of workers that Gradle may use. Default is number of processors`,
				Args: []model.Arg{{
					Name: "number",
				}},
			}, {
				Name:        []string{"--parallel"},
				Description: `Build projects in parallel. For limitations of this option, see Parallel Project Execution. Default is off`,
				ExclusiveOn: []string{"--no-parallel"},
			}, {
				Name:        []string{"--no-parallel"},
				Description: `Disables --parallel`,
				ExclusiveOn: []string{"--parallel"},
			}, {
				Name:        []string{"--priority"},
				Description: `Specifies the scheduling priority for the Gradle daemon and all processes launched by it`,
				Args: []model.Arg{{
					Name:        "priority",
					Suggestions: []model.Suggestion{{Name: []string{`normal`}}, {Name: []string{`low`}}},
				}},
			}, {
				Name:        []string{"--profile"},
				Description: `Generates a high-level performance report in the $buildDir/reports/profile directory. --scan is preferred`,
			}, {
				Name:        []string{"--scan"},
				Description: `Generate a build scan with detailed performance diagnostics`,
			}, {
				Name:        []string{"--watch-fs"},
				Description: `Toggles watching the file system. When enabled Gradle re-uses information it collects about the file system between builds. Enabled by default on operating systems where Gradle supports this feature`,
				ExclusiveOn: []string{"--no-watch-fs"},
			}, {
				Name:        []string{"--no-watch-fs"},
				Description: `Toggles watching the file system. When enabled Gradle re-uses information it collects about the file system between builds. Enabled by default on operating systems where Gradle supports this feature`,
				ExclusiveOn: []string{"--watch-fs"},
			}, {
				Name:        []string{"--daemon"},
				Description: `Use the Gradle Daemon to run the build. Starts the daemon if not running or existing daemon busy. Default is on`,
				ExclusiveOn: []string{"--no-daemon"},
			}, {
				Name:        []string{"--no-daemon"},
				Description: `Disables --daemon`,
				ExclusiveOn: []string{"--daemon"},
			}, {
				Name:        []string{"--foreground"},
				Description: `Starts the Gradle Daemon in a foreground process`,
			}, {
				Name:        []string{"-Dorg.gradle.daemon.idletimeout"},
				Description: `Gradle Daemon will stop itself after this number of milliseconds of idle time`,
				Args: []model.Arg{{
					Name: "milliseconds",
				}},
			}, {
				Name:        []string{"-Dorg.gradle.logging.level"},
				Description: `Set logging level via Gradle properties`,
				Args: []model.Arg{{
					Name:        "level",
					Suggestions: []model.Suggestion{{Name: []string{`quiet`}}, {Name: []string{`warn`}}, {Name: []string{`lifecycle`}}, {Name: []string{`info`}}, {Name: []string{`debug`}}},
				}},
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Log errors only`,
			}, {
				Name:        []string{"-w", "--warn"},
				Description: `Set log level to warn`,
			}, {
				Name:        []string{"-i", "--info"},
				Description: `Set log level to info`,
			}, {
				Name:        []string{"-d", "--debug"},
				Description: `Log in debug mode (includes normal stacktrace)`,
			}, {
				Name:        []string{"-Dorg.gradle.console"},
				Description: `Specify console mode via Gradle properties`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`auto`},
						Description: `Enables color and other rich output in the console output when the build process is attached to a console, or to generate plain text only when not attached to a console`,
					}, {
						Name:        []string{`plain`},
						Description: `Disables all color and other rich output in the console output. This is the default when Gradle is not attached to a terminal`,
					}, {
						Name:        []string{`rich`},
						Description: `Enables color and other rich output in the console output, regardless of whether the build process is not attached to a console`,
					}, {
						Name:        []string{`verbose`},
						Description: `Enables color and other rich output like the rich, but output task names and outcomes at the lifecycle log level, as is done by default in Gradle 3.5 and earlier`,
					}},
				}},
			}, {
				Name:        []string{"--console"},
				Description: `Specifies which type of console output to generate`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`auto`},
						Description: `Enables color and other rich output in the console output when the build process is attached to a console, or to generate plain text only when not attached to a console`,
					}, {
						Name:        []string{`plain`},
						Description: `Disables all color and other rich output in the console output. This is the default when Gradle is not attached to a terminal`,
					}, {
						Name:        []string{`rich`},
						Description: `Enables color and other rich output in the console output, regardless of whether the build process is not attached to a console`,
					}, {
						Name:        []string{`verbose`},
						Description: `Enables color and other rich output like the rich, but output task names and outcomes at the lifecycle log level, as is done by default in Gradle 3.5 and earlier`,
					}},
				}},
			}, {
				Name:        []string{"-Dorg.gradle.warning.mode"},
				Description: `Specify warning mode via Gradle properties`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`all`},
						Description: `Log all warnings`,
					}, {
						Name:        []string{`fail`},
						Description: `Log all warnings and fail the build if there are any warnings`,
					}, {
						Name:        []string{`summary`},
						Description: `Suppress all warnings and log a summary at the end of the build`,
					}, {
						Name:        []string{`none`},
						Description: `Suppress all warnings, including the summary at the end of the build`,
					}},
				}},
			}, {
				Name:        []string{"--warning-mode"},
				Description: `Specifies how to log warning`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`all`},
						Description: `Log all warnings`,
					}, {
						Name:        []string{`fail`},
						Description: `Log all warnings and fail the build if there are any warnings`,
					}, {
						Name:        []string{`summary`},
						Description: `Suppress all warnings and log a summary at the end of the build`,
					}, {
						Name:        []string{`none`},
						Description: `Suppress all warnings, including the summary at the end of the build`,
					}},
				}},
			}, {
				Name:        []string{"--include-build"},
				Description: `Run the build as a composite, including the specified build`,
			}, {
				Name:        []string{"--offline"},
				Description: `Specifies that the build should operate without accessing network resources`,
			}, {
				Name:        []string{"--refresh-dependencies"},
				Description: `Refresh the state of dependencies`,
			}, {
				Name:        []string{"--dry-run"},
				Description: `Run Gradle with all task actions disabled. Use this to show which task would have executed`,
			}, {
				Name:        []string{"--write-locks"},
				Description: `Indicates that all resolved configurations that are lockable should have their lock state persisted`,
			}, {
				Name:        []string{"--update-locks"},
				Description: `Indicates that versions for the specified modules have to be updated in the lock file`,
				Args: []model.Arg{{
					Name:       "group:name",
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"--no-rebuild"},
				Description: `Do not rebuild project dependencies. Useful for debugging and fine-tuning buildSrc, but can lead to wrong results. Use with caution`,
			}, {
				Name:        []string{"-b", "--build-file"},
				Description: `Specifies the build file. For example: gradle --build-file=foo.gradle`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"-c", "--settings-file"},
				Description: `Specifies the settings file. For example: gradle --settings-file=somewhere/else/settings.gradle`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"-g", "--gradle-user-home"},
				Description: `Specifies the Gradle user home directory. The default is the .gradle directory in the user’s home directory`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}, {
				Name:        []string{"-p", "--project-dir"},
				Description: `Specifies the start directory for Gradle`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}, {
				Name:        []string{"--project-cache-dir"},
				Description: `Specifies the project-specific cache directory. Default value is .gradle in the root project directory`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}, {
				Name:        []string{"-D", "--system-prop"},
				Description: `Sets a system property of the JVM, for example -Dmyprop=myvalue`,
				Args: []model.Arg{{
					Name: "system property",
				}},
			}, {
				Name:        []string{"-I", "--init-script"},
				Description: `Specifies an initialization script`,
			}, {
				Name:        []string{"-P", "--project-prop"},
				Description: `Sets a project property of the root project, for example -Pmyprop=myvalue`,
				Args: []model.Arg{{
					Name: "system property",
				}},
			}, {
				Name:        []string{"-Dorg.gradle.jvmargs"},
				Description: `Set JVM arguments`,
				Args: []model.Arg{{
					Name: "arguments",
				}},
			}, {
				Name:        []string{"-Dorg.gradle.java.home"},
				Description: `Set JDK home dir`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}},
		}, {
			Name:        []string{"dependencyInsight"},
			Description: `Gives you an insight into a particular dependency (or dependencies) that match specified input`,
			Options: []model.Option{{
				Name:        []string{"-?", "-h", "--help"},
				Description: `Shows a help message with all available CLI options`,
			}, {
				Name:        []string{"-v", "--version"},
				Description: `Prints Gradle, Groovy, Ant, JVM, and operating system version information`,
			}, {
				Name:        []string{"-S", "--full-stacktrace"},
				Description: `Print out the full (very verbose) stacktrace for any exceptions`,
			}, {
				Name:        []string{"-s", "--stacktrace"},
				Description: `Print out the stacktrace also for user exceptions (e.g. compile error)`,
			}, {
				Name:        []string{"--scan"},
				Description: `Create a build scan with fine-grained information about all aspects of your Gradle build`,
			}, {
				Name:        []string{"-Dorg.gradle.debug"},
				Description: `Debug Gradle client (non-Daemon) process. Gradle will wait for you to attach a debugger at localhost:5005 by default`,
			}, {
				Name:        []string{"-Dorg.gradle.daemon.debug"},
				Description: `Debug Gradle Daemon process`,
			}, {
				Name:        []string{"--build-cache"},
				Description: `Toggles the Gradle build cache. Gradle will try to reuse outputs from previous builds. Default is off`,
				ExclusiveOn: []string{"--no-build-cache"},
			}, {
				Name:        []string{"--no-build-cache"},
				Description: `Toggles the Gradle build cache. Gradle will try to reuse outputs from previous builds. Default is off`,
				ExclusiveOn: []string{"--build-cache"},
			}, {
				Name:        []string{"--configure-on-demand"},
				Description: `Toggles Configure-on-demand. Only relevant projects are configured in this build run. Default is off`,
				ExclusiveOn: []string{"--configure-on-demand"},
			}, {
				Name:        []string{"--no-configure-on-demand"},
				Description: `Toggles Configure-on-demand. Only relevant projects are configured in this build run. Default is off`,
				ExclusiveOn: []string{"--configure-on-demand"},
			}, {
				Name:        []string{"--max-workers"},
				Description: `Sets maximum number of workers that Gradle may use. Default is number of processors`,
				Args: []model.Arg{{
					Name: "number",
				}},
			}, {
				Name:        []string{"--parallel"},
				Description: `Build projects in parallel. For limitations of this option, see Parallel Project Execution. Default is off`,
				ExclusiveOn: []string{"--no-parallel"},
			}, {
				Name:        []string{"--no-parallel"},
				Description: `Disables --parallel`,
				ExclusiveOn: []string{"--parallel"},
			}, {
				Name:        []string{"--priority"},
				Description: `Specifies the scheduling priority for the Gradle daemon and all processes launched by it`,
				Args: []model.Arg{{
					Name:        "priority",
					Suggestions: []model.Suggestion{{Name: []string{`normal`}}, {Name: []string{`low`}}},
				}},
			}, {
				Name:        []string{"--profile"},
				Description: `Generates a high-level performance report in the $buildDir/reports/profile directory. --scan is preferred`,
			}, {
				Name:        []string{"--scan"},
				Description: `Generate a build scan with detailed performance diagnostics`,
			}, {
				Name:        []string{"--watch-fs"},
				Description: `Toggles watching the file system. When enabled Gradle re-uses information it collects about the file system between builds. Enabled by default on operating systems where Gradle supports this feature`,
				ExclusiveOn: []string{"--no-watch-fs"},
			}, {
				Name:        []string{"--no-watch-fs"},
				Description: `Toggles watching the file system. When enabled Gradle re-uses information it collects about the file system between builds. Enabled by default on operating systems where Gradle supports this feature`,
				ExclusiveOn: []string{"--watch-fs"},
			}, {
				Name:        []string{"--daemon"},
				Description: `Use the Gradle Daemon to run the build. Starts the daemon if not running or existing daemon busy. Default is on`,
				ExclusiveOn: []string{"--no-daemon"},
			}, {
				Name:        []string{"--no-daemon"},
				Description: `Disables --daemon`,
				ExclusiveOn: []string{"--daemon"},
			}, {
				Name:        []string{"--foreground"},
				Description: `Starts the Gradle Daemon in a foreground process`,
			}, {
				Name:        []string{"-Dorg.gradle.daemon.idletimeout"},
				Description: `Gradle Daemon will stop itself after this number of milliseconds of idle time`,
				Args: []model.Arg{{
					Name: "milliseconds",
				}},
			}, {
				Name:        []string{"-Dorg.gradle.logging.level"},
				Description: `Set logging level via Gradle properties`,
				Args: []model.Arg{{
					Name:        "level",
					Suggestions: []model.Suggestion{{Name: []string{`quiet`}}, {Name: []string{`warn`}}, {Name: []string{`lifecycle`}}, {Name: []string{`info`}}, {Name: []string{`debug`}}},
				}},
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Log errors only`,
			}, {
				Name:        []string{"-w", "--warn"},
				Description: `Set log level to warn`,
			}, {
				Name:        []string{"-i", "--info"},
				Description: `Set log level to info`,
			}, {
				Name:        []string{"-d", "--debug"},
				Description: `Log in debug mode (includes normal stacktrace)`,
			}, {
				Name:        []string{"-Dorg.gradle.console"},
				Description: `Specify console mode via Gradle properties`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`auto`},
						Description: `Enables color and other rich output in the console output when the build process is attached to a console, or to generate plain text only when not attached to a console`,
					}, {
						Name:        []string{`plain`},
						Description: `Disables all color and other rich output in the console output. This is the default when Gradle is not attached to a terminal`,
					}, {
						Name:        []string{`rich`},
						Description: `Enables color and other rich output in the console output, regardless of whether the build process is not attached to a console`,
					}, {
						Name:        []string{`verbose`},
						Description: `Enables color and other rich output like the rich, but output task names and outcomes at the lifecycle log level, as is done by default in Gradle 3.5 and earlier`,
					}},
				}},
			}, {
				Name:        []string{"--console"},
				Description: `Specifies which type of console output to generate`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`auto`},
						Description: `Enables color and other rich output in the console output when the build process is attached to a console, or to generate plain text only when not attached to a console`,
					}, {
						Name:        []string{`plain`},
						Description: `Disables all color and other rich output in the console output. This is the default when Gradle is not attached to a terminal`,
					}, {
						Name:        []string{`rich`},
						Description: `Enables color and other rich output in the console output, regardless of whether the build process is not attached to a console`,
					}, {
						Name:        []string{`verbose`},
						Description: `Enables color and other rich output like the rich, but output task names and outcomes at the lifecycle log level, as is done by default in Gradle 3.5 and earlier`,
					}},
				}},
			}, {
				Name:        []string{"-Dorg.gradle.warning.mode"},
				Description: `Specify warning mode via Gradle properties`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`all`},
						Description: `Log all warnings`,
					}, {
						Name:        []string{`fail`},
						Description: `Log all warnings and fail the build if there are any warnings`,
					}, {
						Name:        []string{`summary`},
						Description: `Suppress all warnings and log a summary at the end of the build`,
					}, {
						Name:        []string{`none`},
						Description: `Suppress all warnings, including the summary at the end of the build`,
					}},
				}},
			}, {
				Name:        []string{"--warning-mode"},
				Description: `Specifies how to log warning`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`all`},
						Description: `Log all warnings`,
					}, {
						Name:        []string{`fail`},
						Description: `Log all warnings and fail the build if there are any warnings`,
					}, {
						Name:        []string{`summary`},
						Description: `Suppress all warnings and log a summary at the end of the build`,
					}, {
						Name:        []string{`none`},
						Description: `Suppress all warnings, including the summary at the end of the build`,
					}},
				}},
			}, {
				Name:        []string{"--include-build"},
				Description: `Run the build as a composite, including the specified build`,
			}, {
				Name:        []string{"--offline"},
				Description: `Specifies that the build should operate without accessing network resources`,
			}, {
				Name:        []string{"--refresh-dependencies"},
				Description: `Refresh the state of dependencies`,
			}, {
				Name:        []string{"--dry-run"},
				Description: `Run Gradle with all task actions disabled. Use this to show which task would have executed`,
			}, {
				Name:        []string{"--write-locks"},
				Description: `Indicates that all resolved configurations that are lockable should have their lock state persisted`,
			}, {
				Name:        []string{"--update-locks"},
				Description: `Indicates that versions for the specified modules have to be updated in the lock file`,
				Args: []model.Arg{{
					Name:       "group:name",
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"--no-rebuild"},
				Description: `Do not rebuild project dependencies. Useful for debugging and fine-tuning buildSrc, but can lead to wrong results. Use with caution`,
			}, {
				Name:        []string{"-b", "--build-file"},
				Description: `Specifies the build file. For example: gradle --build-file=foo.gradle`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"-c", "--settings-file"},
				Description: `Specifies the settings file. For example: gradle --settings-file=somewhere/else/settings.gradle`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"-g", "--gradle-user-home"},
				Description: `Specifies the Gradle user home directory. The default is the .gradle directory in the user’s home directory`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}, {
				Name:        []string{"-p", "--project-dir"},
				Description: `Specifies the start directory for Gradle`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}, {
				Name:        []string{"--project-cache-dir"},
				Description: `Specifies the project-specific cache directory. Default value is .gradle in the root project directory`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}, {
				Name:        []string{"-D", "--system-prop"},
				Description: `Sets a system property of the JVM, for example -Dmyprop=myvalue`,
				Args: []model.Arg{{
					Name: "system property",
				}},
			}, {
				Name:        []string{"-I", "--init-script"},
				Description: `Specifies an initialization script`,
			}, {
				Name:        []string{"-P", "--project-prop"},
				Description: `Sets a project property of the root project, for example -Pmyprop=myvalue`,
				Args: []model.Arg{{
					Name: "system property",
				}},
			}, {
				Name:        []string{"-Dorg.gradle.jvmargs"},
				Description: `Set JVM arguments`,
				Args: []model.Arg{{
					Name: "arguments",
				}},
			}, {
				Name:        []string{"-Dorg.gradle.java.home"},
				Description: `Set JDK home dir`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}},
		}, {
			Name:        []string{"properties"},
			Description: `Gives you a list of the properties of the selected project`,
			Options: []model.Option{{
				Name:        []string{"-?", "-h", "--help"},
				Description: `Shows a help message with all available CLI options`,
			}, {
				Name:        []string{"-v", "--version"},
				Description: `Prints Gradle, Groovy, Ant, JVM, and operating system version information`,
			}, {
				Name:        []string{"-S", "--full-stacktrace"},
				Description: `Print out the full (very verbose) stacktrace for any exceptions`,
			}, {
				Name:        []string{"-s", "--stacktrace"},
				Description: `Print out the stacktrace also for user exceptions (e.g. compile error)`,
			}, {
				Name:        []string{"--scan"},
				Description: `Create a build scan with fine-grained information about all aspects of your Gradle build`,
			}, {
				Name:        []string{"-Dorg.gradle.debug"},
				Description: `Debug Gradle client (non-Daemon) process. Gradle will wait for you to attach a debugger at localhost:5005 by default`,
			}, {
				Name:        []string{"-Dorg.gradle.daemon.debug"},
				Description: `Debug Gradle Daemon process`,
			}, {
				Name:        []string{"--build-cache"},
				Description: `Toggles the Gradle build cache. Gradle will try to reuse outputs from previous builds. Default is off`,
				ExclusiveOn: []string{"--no-build-cache"},
			}, {
				Name:        []string{"--no-build-cache"},
				Description: `Toggles the Gradle build cache. Gradle will try to reuse outputs from previous builds. Default is off`,
				ExclusiveOn: []string{"--build-cache"},
			}, {
				Name:        []string{"--configure-on-demand"},
				Description: `Toggles Configure-on-demand. Only relevant projects are configured in this build run. Default is off`,
				ExclusiveOn: []string{"--configure-on-demand"},
			}, {
				Name:        []string{"--no-configure-on-demand"},
				Description: `Toggles Configure-on-demand. Only relevant projects are configured in this build run. Default is off`,
				ExclusiveOn: []string{"--configure-on-demand"},
			}, {
				Name:        []string{"--max-workers"},
				Description: `Sets maximum number of workers that Gradle may use. Default is number of processors`,
				Args: []model.Arg{{
					Name: "number",
				}},
			}, {
				Name:        []string{"--parallel"},
				Description: `Build projects in parallel. For limitations of this option, see Parallel Project Execution. Default is off`,
				ExclusiveOn: []string{"--no-parallel"},
			}, {
				Name:        []string{"--no-parallel"},
				Description: `Disables --parallel`,
				ExclusiveOn: []string{"--parallel"},
			}, {
				Name:        []string{"--priority"},
				Description: `Specifies the scheduling priority for the Gradle daemon and all processes launched by it`,
				Args: []model.Arg{{
					Name:        "priority",
					Suggestions: []model.Suggestion{{Name: []string{`normal`}}, {Name: []string{`low`}}},
				}},
			}, {
				Name:        []string{"--profile"},
				Description: `Generates a high-level performance report in the $buildDir/reports/profile directory. --scan is preferred`,
			}, {
				Name:        []string{"--scan"},
				Description: `Generate a build scan with detailed performance diagnostics`,
			}, {
				Name:        []string{"--watch-fs"},
				Description: `Toggles watching the file system. When enabled Gradle re-uses information it collects about the file system between builds. Enabled by default on operating systems where Gradle supports this feature`,
				ExclusiveOn: []string{"--no-watch-fs"},
			}, {
				Name:        []string{"--no-watch-fs"},
				Description: `Toggles watching the file system. When enabled Gradle re-uses information it collects about the file system between builds. Enabled by default on operating systems where Gradle supports this feature`,
				ExclusiveOn: []string{"--watch-fs"},
			}, {
				Name:        []string{"--daemon"},
				Description: `Use the Gradle Daemon to run the build. Starts the daemon if not running or existing daemon busy. Default is on`,
				ExclusiveOn: []string{"--no-daemon"},
			}, {
				Name:        []string{"--no-daemon"},
				Description: `Disables --daemon`,
				ExclusiveOn: []string{"--daemon"},
			}, {
				Name:        []string{"--foreground"},
				Description: `Starts the Gradle Daemon in a foreground process`,
			}, {
				Name:        []string{"-Dorg.gradle.daemon.idletimeout"},
				Description: `Gradle Daemon will stop itself after this number of milliseconds of idle time`,
				Args: []model.Arg{{
					Name: "milliseconds",
				}},
			}, {
				Name:        []string{"-Dorg.gradle.logging.level"},
				Description: `Set logging level via Gradle properties`,
				Args: []model.Arg{{
					Name:        "level",
					Suggestions: []model.Suggestion{{Name: []string{`quiet`}}, {Name: []string{`warn`}}, {Name: []string{`lifecycle`}}, {Name: []string{`info`}}, {Name: []string{`debug`}}},
				}},
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Log errors only`,
			}, {
				Name:        []string{"-w", "--warn"},
				Description: `Set log level to warn`,
			}, {
				Name:        []string{"-i", "--info"},
				Description: `Set log level to info`,
			}, {
				Name:        []string{"-d", "--debug"},
				Description: `Log in debug mode (includes normal stacktrace)`,
			}, {
				Name:        []string{"-Dorg.gradle.console"},
				Description: `Specify console mode via Gradle properties`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`auto`},
						Description: `Enables color and other rich output in the console output when the build process is attached to a console, or to generate plain text only when not attached to a console`,
					}, {
						Name:        []string{`plain`},
						Description: `Disables all color and other rich output in the console output. This is the default when Gradle is not attached to a terminal`,
					}, {
						Name:        []string{`rich`},
						Description: `Enables color and other rich output in the console output, regardless of whether the build process is not attached to a console`,
					}, {
						Name:        []string{`verbose`},
						Description: `Enables color and other rich output like the rich, but output task names and outcomes at the lifecycle log level, as is done by default in Gradle 3.5 and earlier`,
					}},
				}},
			}, {
				Name:        []string{"--console"},
				Description: `Specifies which type of console output to generate`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`auto`},
						Description: `Enables color and other rich output in the console output when the build process is attached to a console, or to generate plain text only when not attached to a console`,
					}, {
						Name:        []string{`plain`},
						Description: `Disables all color and other rich output in the console output. This is the default when Gradle is not attached to a terminal`,
					}, {
						Name:        []string{`rich`},
						Description: `Enables color and other rich output in the console output, regardless of whether the build process is not attached to a console`,
					}, {
						Name:        []string{`verbose`},
						Description: `Enables color and other rich output like the rich, but output task names and outcomes at the lifecycle log level, as is done by default in Gradle 3.5 and earlier`,
					}},
				}},
			}, {
				Name:        []string{"-Dorg.gradle.warning.mode"},
				Description: `Specify warning mode via Gradle properties`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`all`},
						Description: `Log all warnings`,
					}, {
						Name:        []string{`fail`},
						Description: `Log all warnings and fail the build if there are any warnings`,
					}, {
						Name:        []string{`summary`},
						Description: `Suppress all warnings and log a summary at the end of the build`,
					}, {
						Name:        []string{`none`},
						Description: `Suppress all warnings, including the summary at the end of the build`,
					}},
				}},
			}, {
				Name:        []string{"--warning-mode"},
				Description: `Specifies how to log warning`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`all`},
						Description: `Log all warnings`,
					}, {
						Name:        []string{`fail`},
						Description: `Log all warnings and fail the build if there are any warnings`,
					}, {
						Name:        []string{`summary`},
						Description: `Suppress all warnings and log a summary at the end of the build`,
					}, {
						Name:        []string{`none`},
						Description: `Suppress all warnings, including the summary at the end of the build`,
					}},
				}},
			}, {
				Name:        []string{"--include-build"},
				Description: `Run the build as a composite, including the specified build`,
			}, {
				Name:        []string{"--offline"},
				Description: `Specifies that the build should operate without accessing network resources`,
			}, {
				Name:        []string{"--refresh-dependencies"},
				Description: `Refresh the state of dependencies`,
			}, {
				Name:        []string{"--dry-run"},
				Description: `Run Gradle with all task actions disabled. Use this to show which task would have executed`,
			}, {
				Name:        []string{"--write-locks"},
				Description: `Indicates that all resolved configurations that are lockable should have their lock state persisted`,
			}, {
				Name:        []string{"--update-locks"},
				Description: `Indicates that versions for the specified modules have to be updated in the lock file`,
				Args: []model.Arg{{
					Name:       "group:name",
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"--no-rebuild"},
				Description: `Do not rebuild project dependencies. Useful for debugging and fine-tuning buildSrc, but can lead to wrong results. Use with caution`,
			}, {
				Name:        []string{"-b", "--build-file"},
				Description: `Specifies the build file. For example: gradle --build-file=foo.gradle`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"-c", "--settings-file"},
				Description: `Specifies the settings file. For example: gradle --settings-file=somewhere/else/settings.gradle`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"-g", "--gradle-user-home"},
				Description: `Specifies the Gradle user home directory. The default is the .gradle directory in the user’s home directory`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}, {
				Name:        []string{"-p", "--project-dir"},
				Description: `Specifies the start directory for Gradle`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}, {
				Name:        []string{"--project-cache-dir"},
				Description: `Specifies the project-specific cache directory. Default value is .gradle in the root project directory`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}, {
				Name:        []string{"-D", "--system-prop"},
				Description: `Sets a system property of the JVM, for example -Dmyprop=myvalue`,
				Args: []model.Arg{{
					Name: "system property",
				}},
			}, {
				Name:        []string{"-I", "--init-script"},
				Description: `Specifies an initialization script`,
			}, {
				Name:        []string{"-P", "--project-prop"},
				Description: `Sets a project property of the root project, for example -Pmyprop=myvalue`,
				Args: []model.Arg{{
					Name: "system property",
				}},
			}, {
				Name:        []string{"-Dorg.gradle.jvmargs"},
				Description: `Set JVM arguments`,
				Args: []model.Arg{{
					Name: "arguments",
				}},
			}, {
				Name:        []string{"-Dorg.gradle.java.home"},
				Description: `Set JDK home dir`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}},
		}, {
			Name:        []string{"--status"},
			Description: `(Standalone command) List running and recently stopped Gradle daemons. Only displays daemons of the same Gradle version`,
		}, {
			Name:        []string{"--stop"},
			Description: `(Standalone command) Stop all Gradle Daemons of the same version`,
		}, {
			Name:        []string{"init"},
			Description: `Create new Gradle builds, with new or existing projects`,
			Options: []model.Option{{
				Name:        []string{"--type"},
				Description: `Specify project type`,
				Args: []model.Arg{{
					Name:        "type",
					Suggestions: []model.Suggestion{{Name: []string{`basic`}}, {Name: []string{`java-library`}}, {Name: []string{`java-application`}}},
				}},
			}, {
				Name:        []string{"-?", "-h", "--help"},
				Description: `Shows a help message with all available CLI options`,
			}, {
				Name:        []string{"-v", "--version"},
				Description: `Prints Gradle, Groovy, Ant, JVM, and operating system version information`,
			}, {
				Name:        []string{"-S", "--full-stacktrace"},
				Description: `Print out the full (very verbose) stacktrace for any exceptions`,
			}, {
				Name:        []string{"-s", "--stacktrace"},
				Description: `Print out the stacktrace also for user exceptions (e.g. compile error)`,
			}, {
				Name:        []string{"--scan"},
				Description: `Create a build scan with fine-grained information about all aspects of your Gradle build`,
			}, {
				Name:        []string{"-Dorg.gradle.debug"},
				Description: `Debug Gradle client (non-Daemon) process. Gradle will wait for you to attach a debugger at localhost:5005 by default`,
			}, {
				Name:        []string{"-Dorg.gradle.daemon.debug"},
				Description: `Debug Gradle Daemon process`,
			}, {
				Name:        []string{"--build-cache"},
				Description: `Toggles the Gradle build cache. Gradle will try to reuse outputs from previous builds. Default is off`,
				ExclusiveOn: []string{"--no-build-cache"},
			}, {
				Name:        []string{"--no-build-cache"},
				Description: `Toggles the Gradle build cache. Gradle will try to reuse outputs from previous builds. Default is off`,
				ExclusiveOn: []string{"--build-cache"},
			}, {
				Name:        []string{"--configure-on-demand"},
				Description: `Toggles Configure-on-demand. Only relevant projects are configured in this build run. Default is off`,
				ExclusiveOn: []string{"--configure-on-demand"},
			}, {
				Name:        []string{"--no-configure-on-demand"},
				Description: `Toggles Configure-on-demand. Only relevant projects are configured in this build run. Default is off`,
				ExclusiveOn: []string{"--configure-on-demand"},
			}, {
				Name:        []string{"--max-workers"},
				Description: `Sets maximum number of workers that Gradle may use. Default is number of processors`,
				Args: []model.Arg{{
					Name: "number",
				}},
			}, {
				Name:        []string{"--parallel"},
				Description: `Build projects in parallel. For limitations of this option, see Parallel Project Execution. Default is off`,
				ExclusiveOn: []string{"--no-parallel"},
			}, {
				Name:        []string{"--no-parallel"},
				Description: `Disables --parallel`,
				ExclusiveOn: []string{"--parallel"},
			}, {
				Name:        []string{"--priority"},
				Description: `Specifies the scheduling priority for the Gradle daemon and all processes launched by it`,
				Args: []model.Arg{{
					Name:        "priority",
					Suggestions: []model.Suggestion{{Name: []string{`normal`}}, {Name: []string{`low`}}},
				}},
			}, {
				Name:        []string{"--profile"},
				Description: `Generates a high-level performance report in the $buildDir/reports/profile directory. --scan is preferred`,
			}, {
				Name:        []string{"--scan"},
				Description: `Generate a build scan with detailed performance diagnostics`,
			}, {
				Name:        []string{"--watch-fs"},
				Description: `Toggles watching the file system. When enabled Gradle re-uses information it collects about the file system between builds. Enabled by default on operating systems where Gradle supports this feature`,
				ExclusiveOn: []string{"--no-watch-fs"},
			}, {
				Name:        []string{"--no-watch-fs"},
				Description: `Toggles watching the file system. When enabled Gradle re-uses information it collects about the file system between builds. Enabled by default on operating systems where Gradle supports this feature`,
				ExclusiveOn: []string{"--watch-fs"},
			}, {
				Name:        []string{"--daemon"},
				Description: `Use the Gradle Daemon to run the build. Starts the daemon if not running or existing daemon busy. Default is on`,
				ExclusiveOn: []string{"--no-daemon"},
			}, {
				Name:        []string{"--no-daemon"},
				Description: `Disables --daemon`,
				ExclusiveOn: []string{"--daemon"},
			}, {
				Name:        []string{"--foreground"},
				Description: `Starts the Gradle Daemon in a foreground process`,
			}, {
				Name:        []string{"-Dorg.gradle.daemon.idletimeout"},
				Description: `Gradle Daemon will stop itself after this number of milliseconds of idle time`,
				Args: []model.Arg{{
					Name: "milliseconds",
				}},
			}, {
				Name:        []string{"-Dorg.gradle.logging.level"},
				Description: `Set logging level via Gradle properties`,
				Args: []model.Arg{{
					Name:        "level",
					Suggestions: []model.Suggestion{{Name: []string{`quiet`}}, {Name: []string{`warn`}}, {Name: []string{`lifecycle`}}, {Name: []string{`info`}}, {Name: []string{`debug`}}},
				}},
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Log errors only`,
			}, {
				Name:        []string{"-w", "--warn"},
				Description: `Set log level to warn`,
			}, {
				Name:        []string{"-i", "--info"},
				Description: `Set log level to info`,
			}, {
				Name:        []string{"-d", "--debug"},
				Description: `Log in debug mode (includes normal stacktrace)`,
			}, {
				Name:        []string{"-Dorg.gradle.console"},
				Description: `Specify console mode via Gradle properties`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`auto`},
						Description: `Enables color and other rich output in the console output when the build process is attached to a console, or to generate plain text only when not attached to a console`,
					}, {
						Name:        []string{`plain`},
						Description: `Disables all color and other rich output in the console output. This is the default when Gradle is not attached to a terminal`,
					}, {
						Name:        []string{`rich`},
						Description: `Enables color and other rich output in the console output, regardless of whether the build process is not attached to a console`,
					}, {
						Name:        []string{`verbose`},
						Description: `Enables color and other rich output like the rich, but output task names and outcomes at the lifecycle log level, as is done by default in Gradle 3.5 and earlier`,
					}},
				}},
			}, {
				Name:        []string{"--console"},
				Description: `Specifies which type of console output to generate`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`auto`},
						Description: `Enables color and other rich output in the console output when the build process is attached to a console, or to generate plain text only when not attached to a console`,
					}, {
						Name:        []string{`plain`},
						Description: `Disables all color and other rich output in the console output. This is the default when Gradle is not attached to a terminal`,
					}, {
						Name:        []string{`rich`},
						Description: `Enables color and other rich output in the console output, regardless of whether the build process is not attached to a console`,
					}, {
						Name:        []string{`verbose`},
						Description: `Enables color and other rich output like the rich, but output task names and outcomes at the lifecycle log level, as is done by default in Gradle 3.5 and earlier`,
					}},
				}},
			}, {
				Name:        []string{"-Dorg.gradle.warning.mode"},
				Description: `Specify warning mode via Gradle properties`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`all`},
						Description: `Log all warnings`,
					}, {
						Name:        []string{`fail`},
						Description: `Log all warnings and fail the build if there are any warnings`,
					}, {
						Name:        []string{`summary`},
						Description: `Suppress all warnings and log a summary at the end of the build`,
					}, {
						Name:        []string{`none`},
						Description: `Suppress all warnings, including the summary at the end of the build`,
					}},
				}},
			}, {
				Name:        []string{"--warning-mode"},
				Description: `Specifies how to log warning`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`all`},
						Description: `Log all warnings`,
					}, {
						Name:        []string{`fail`},
						Description: `Log all warnings and fail the build if there are any warnings`,
					}, {
						Name:        []string{`summary`},
						Description: `Suppress all warnings and log a summary at the end of the build`,
					}, {
						Name:        []string{`none`},
						Description: `Suppress all warnings, including the summary at the end of the build`,
					}},
				}},
			}, {
				Name:        []string{"--include-build"},
				Description: `Run the build as a composite, including the specified build`,
			}, {
				Name:        []string{"--offline"},
				Description: `Specifies that the build should operate without accessing network resources`,
			}, {
				Name:        []string{"--refresh-dependencies"},
				Description: `Refresh the state of dependencies`,
			}, {
				Name:        []string{"--dry-run"},
				Description: `Run Gradle with all task actions disabled. Use this to show which task would have executed`,
			}, {
				Name:        []string{"--write-locks"},
				Description: `Indicates that all resolved configurations that are lockable should have their lock state persisted`,
			}, {
				Name:        []string{"--update-locks"},
				Description: `Indicates that versions for the specified modules have to be updated in the lock file`,
				Args: []model.Arg{{
					Name:       "group:name",
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"--no-rebuild"},
				Description: `Do not rebuild project dependencies. Useful for debugging and fine-tuning buildSrc, but can lead to wrong results. Use with caution`,
			}, {
				Name:        []string{"-b", "--build-file"},
				Description: `Specifies the build file. For example: gradle --build-file=foo.gradle`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"-c", "--settings-file"},
				Description: `Specifies the settings file. For example: gradle --settings-file=somewhere/else/settings.gradle`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"-g", "--gradle-user-home"},
				Description: `Specifies the Gradle user home directory. The default is the .gradle directory in the user’s home directory`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}, {
				Name:        []string{"-p", "--project-dir"},
				Description: `Specifies the start directory for Gradle`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}, {
				Name:        []string{"--project-cache-dir"},
				Description: `Specifies the project-specific cache directory. Default value is .gradle in the root project directory`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}, {
				Name:        []string{"-D", "--system-prop"},
				Description: `Sets a system property of the JVM, for example -Dmyprop=myvalue`,
				Args: []model.Arg{{
					Name: "system property",
				}},
			}, {
				Name:        []string{"-I", "--init-script"},
				Description: `Specifies an initialization script`,
			}, {
				Name:        []string{"-P", "--project-prop"},
				Description: `Sets a project property of the root project, for example -Pmyprop=myvalue`,
				Args: []model.Arg{{
					Name: "system property",
				}},
			}, {
				Name:        []string{"-Dorg.gradle.jvmargs"},
				Description: `Set JVM arguments`,
				Args: []model.Arg{{
					Name: "arguments",
				}},
			}, {
				Name:        []string{"-Dorg.gradle.java.home"},
				Description: `Set JDK home dir`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}},
		}, {
			Name:        []string{"wrapper"},
			Description: `Generates a script, gradlew, that invokes a declared version of Gradle, downloading it beforehand if necessary`,
			Options: []model.Option{{
				Name:        []string{"--gradle-version"},
				Description: `The Gradle version used for downloading and executing the Wrapper`,
				Args: []model.Arg{{
					Name: "version",
				}},
			}, {
				Name:        []string{"--distribution-type"},
				Description: `The Gradle distribution type used for the Wrapper`,
				Args: []model.Arg{{
					Name:        "type",
					Suggestions: []model.Suggestion{{Name: []string{`bin`}}, {Name: []string{`all`}}},
				}},
			}, {
				Name:        []string{"--gradle-distribution-url"},
				Description: `The full URL pointing to Gradle distribution ZIP file`,
				Args: []model.Arg{{
					Name: "url",
				}},
			}, {
				Name:        []string{"--gradle-distribution-sha256-sum"},
				Description: `The SHA256 hash sum used for verifying the downloaded Gradle distribution`,
				Args: []model.Arg{{
					Name: "SHA256 hash sum",
				}},
			}, {
				Name:        []string{"-?", "-h", "--help"},
				Description: `Shows a help message with all available CLI options`,
			}, {
				Name:        []string{"-v", "--version"},
				Description: `Prints Gradle, Groovy, Ant, JVM, and operating system version information`,
			}, {
				Name:        []string{"-S", "--full-stacktrace"},
				Description: `Print out the full (very verbose) stacktrace for any exceptions`,
			}, {
				Name:        []string{"-s", "--stacktrace"},
				Description: `Print out the stacktrace also for user exceptions (e.g. compile error)`,
			}, {
				Name:        []string{"--scan"},
				Description: `Create a build scan with fine-grained information about all aspects of your Gradle build`,
			}, {
				Name:        []string{"-Dorg.gradle.debug"},
				Description: `Debug Gradle client (non-Daemon) process. Gradle will wait for you to attach a debugger at localhost:5005 by default`,
			}, {
				Name:        []string{"-Dorg.gradle.daemon.debug"},
				Description: `Debug Gradle Daemon process`,
			}, {
				Name:        []string{"--build-cache"},
				Description: `Toggles the Gradle build cache. Gradle will try to reuse outputs from previous builds. Default is off`,
				ExclusiveOn: []string{"--no-build-cache"},
			}, {
				Name:        []string{"--no-build-cache"},
				Description: `Toggles the Gradle build cache. Gradle will try to reuse outputs from previous builds. Default is off`,
				ExclusiveOn: []string{"--build-cache"},
			}, {
				Name:        []string{"--configure-on-demand"},
				Description: `Toggles Configure-on-demand. Only relevant projects are configured in this build run. Default is off`,
				ExclusiveOn: []string{"--configure-on-demand"},
			}, {
				Name:        []string{"--no-configure-on-demand"},
				Description: `Toggles Configure-on-demand. Only relevant projects are configured in this build run. Default is off`,
				ExclusiveOn: []string{"--configure-on-demand"},
			}, {
				Name:        []string{"--max-workers"},
				Description: `Sets maximum number of workers that Gradle may use. Default is number of processors`,
				Args: []model.Arg{{
					Name: "number",
				}},
			}, {
				Name:        []string{"--parallel"},
				Description: `Build projects in parallel. For limitations of this option, see Parallel Project Execution. Default is off`,
				ExclusiveOn: []string{"--no-parallel"},
			}, {
				Name:        []string{"--no-parallel"},
				Description: `Disables --parallel`,
				ExclusiveOn: []string{"--parallel"},
			}, {
				Name:        []string{"--priority"},
				Description: `Specifies the scheduling priority for the Gradle daemon and all processes launched by it`,
				Args: []model.Arg{{
					Name:        "priority",
					Suggestions: []model.Suggestion{{Name: []string{`normal`}}, {Name: []string{`low`}}},
				}},
			}, {
				Name:        []string{"--profile"},
				Description: `Generates a high-level performance report in the $buildDir/reports/profile directory. --scan is preferred`,
			}, {
				Name:        []string{"--scan"},
				Description: `Generate a build scan with detailed performance diagnostics`,
			}, {
				Name:        []string{"--watch-fs"},
				Description: `Toggles watching the file system. When enabled Gradle re-uses information it collects about the file system between builds. Enabled by default on operating systems where Gradle supports this feature`,
				ExclusiveOn: []string{"--no-watch-fs"},
			}, {
				Name:        []string{"--no-watch-fs"},
				Description: `Toggles watching the file system. When enabled Gradle re-uses information it collects about the file system between builds. Enabled by default on operating systems where Gradle supports this feature`,
				ExclusiveOn: []string{"--watch-fs"},
			}, {
				Name:        []string{"--daemon"},
				Description: `Use the Gradle Daemon to run the build. Starts the daemon if not running or existing daemon busy. Default is on`,
				ExclusiveOn: []string{"--no-daemon"},
			}, {
				Name:        []string{"--no-daemon"},
				Description: `Disables --daemon`,
				ExclusiveOn: []string{"--daemon"},
			}, {
				Name:        []string{"--foreground"},
				Description: `Starts the Gradle Daemon in a foreground process`,
			}, {
				Name:        []string{"-Dorg.gradle.daemon.idletimeout"},
				Description: `Gradle Daemon will stop itself after this number of milliseconds of idle time`,
				Args: []model.Arg{{
					Name: "milliseconds",
				}},
			}, {
				Name:        []string{"-Dorg.gradle.logging.level"},
				Description: `Set logging level via Gradle properties`,
				Args: []model.Arg{{
					Name:        "level",
					Suggestions: []model.Suggestion{{Name: []string{`quiet`}}, {Name: []string{`warn`}}, {Name: []string{`lifecycle`}}, {Name: []string{`info`}}, {Name: []string{`debug`}}},
				}},
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Log errors only`,
			}, {
				Name:        []string{"-w", "--warn"},
				Description: `Set log level to warn`,
			}, {
				Name:        []string{"-i", "--info"},
				Description: `Set log level to info`,
			}, {
				Name:        []string{"-d", "--debug"},
				Description: `Log in debug mode (includes normal stacktrace)`,
			}, {
				Name:        []string{"-Dorg.gradle.console"},
				Description: `Specify console mode via Gradle properties`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`auto`},
						Description: `Enables color and other rich output in the console output when the build process is attached to a console, or to generate plain text only when not attached to a console`,
					}, {
						Name:        []string{`plain`},
						Description: `Disables all color and other rich output in the console output. This is the default when Gradle is not attached to a terminal`,
					}, {
						Name:        []string{`rich`},
						Description: `Enables color and other rich output in the console output, regardless of whether the build process is not attached to a console`,
					}, {
						Name:        []string{`verbose`},
						Description: `Enables color and other rich output like the rich, but output task names and outcomes at the lifecycle log level, as is done by default in Gradle 3.5 and earlier`,
					}},
				}},
			}, {
				Name:        []string{"--console"},
				Description: `Specifies which type of console output to generate`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`auto`},
						Description: `Enables color and other rich output in the console output when the build process is attached to a console, or to generate plain text only when not attached to a console`,
					}, {
						Name:        []string{`plain`},
						Description: `Disables all color and other rich output in the console output. This is the default when Gradle is not attached to a terminal`,
					}, {
						Name:        []string{`rich`},
						Description: `Enables color and other rich output in the console output, regardless of whether the build process is not attached to a console`,
					}, {
						Name:        []string{`verbose`},
						Description: `Enables color and other rich output like the rich, but output task names and outcomes at the lifecycle log level, as is done by default in Gradle 3.5 and earlier`,
					}},
				}},
			}, {
				Name:        []string{"-Dorg.gradle.warning.mode"},
				Description: `Specify warning mode via Gradle properties`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`all`},
						Description: `Log all warnings`,
					}, {
						Name:        []string{`fail`},
						Description: `Log all warnings and fail the build if there are any warnings`,
					}, {
						Name:        []string{`summary`},
						Description: `Suppress all warnings and log a summary at the end of the build`,
					}, {
						Name:        []string{`none`},
						Description: `Suppress all warnings, including the summary at the end of the build`,
					}},
				}},
			}, {
				Name:        []string{"--warning-mode"},
				Description: `Specifies how to log warning`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`all`},
						Description: `Log all warnings`,
					}, {
						Name:        []string{`fail`},
						Description: `Log all warnings and fail the build if there are any warnings`,
					}, {
						Name:        []string{`summary`},
						Description: `Suppress all warnings and log a summary at the end of the build`,
					}, {
						Name:        []string{`none`},
						Description: `Suppress all warnings, including the summary at the end of the build`,
					}},
				}},
			}, {
				Name:        []string{"--include-build"},
				Description: `Run the build as a composite, including the specified build`,
			}, {
				Name:        []string{"--offline"},
				Description: `Specifies that the build should operate without accessing network resources`,
			}, {
				Name:        []string{"--refresh-dependencies"},
				Description: `Refresh the state of dependencies`,
			}, {
				Name:        []string{"--dry-run"},
				Description: `Run Gradle with all task actions disabled. Use this to show which task would have executed`,
			}, {
				Name:        []string{"--write-locks"},
				Description: `Indicates that all resolved configurations that are lockable should have their lock state persisted`,
			}, {
				Name:        []string{"--update-locks"},
				Description: `Indicates that versions for the specified modules have to be updated in the lock file`,
				Args: []model.Arg{{
					Name:       "group:name",
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"--no-rebuild"},
				Description: `Do not rebuild project dependencies. Useful for debugging and fine-tuning buildSrc, but can lead to wrong results. Use with caution`,
			}, {
				Name:        []string{"-b", "--build-file"},
				Description: `Specifies the build file. For example: gradle --build-file=foo.gradle`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"-c", "--settings-file"},
				Description: `Specifies the settings file. For example: gradle --settings-file=somewhere/else/settings.gradle`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"-g", "--gradle-user-home"},
				Description: `Specifies the Gradle user home directory. The default is the .gradle directory in the user’s home directory`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}, {
				Name:        []string{"-p", "--project-dir"},
				Description: `Specifies the start directory for Gradle`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}, {
				Name:        []string{"--project-cache-dir"},
				Description: `Specifies the project-specific cache directory. Default value is .gradle in the root project directory`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}, {
				Name:        []string{"-D", "--system-prop"},
				Description: `Sets a system property of the JVM, for example -Dmyprop=myvalue`,
				Args: []model.Arg{{
					Name: "system property",
				}},
			}, {
				Name:        []string{"-I", "--init-script"},
				Description: `Specifies an initialization script`,
			}, {
				Name:        []string{"-P", "--project-prop"},
				Description: `Sets a project property of the root project, for example -Pmyprop=myvalue`,
				Args: []model.Arg{{
					Name: "system property",
				}},
			}, {
				Name:        []string{"-Dorg.gradle.jvmargs"},
				Description: `Set JVM arguments`,
				Args: []model.Arg{{
					Name: "arguments",
				}},
			}, {
				Name:        []string{"-Dorg.gradle.java.home"},
				Description: `Set JDK home dir`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}},
		}, {
			Name:        []string{"test"},
			Description: `Run a test task`,
			Options: []model.Option{{
				Name:        []string{"--continuous"},
				Description: `Allows you to automatically re-execute the requested tasks when task inputs change`,
			}, {
				Name:        []string{"--rerun-tasks"},
				Description: `This will force test and all task dependencies of test to execute`,
			}, {
				Name:        []string{"--continue"},
				Description: `Gradle will execute every task to be executed where all of the dependencies for that task completed without failure`,
			}, {
				Name:        []string{"-?", "-h", "--help"},
				Description: `Shows a help message with all available CLI options`,
			}, {
				Name:        []string{"-v", "--version"},
				Description: `Prints Gradle, Groovy, Ant, JVM, and operating system version information`,
			}, {
				Name:        []string{"-S", "--full-stacktrace"},
				Description: `Print out the full (very verbose) stacktrace for any exceptions`,
			}, {
				Name:        []string{"-s", "--stacktrace"},
				Description: `Print out the stacktrace also for user exceptions (e.g. compile error)`,
			}, {
				Name:        []string{"--scan"},
				Description: `Create a build scan with fine-grained information about all aspects of your Gradle build`,
			}, {
				Name:        []string{"-Dorg.gradle.debug"},
				Description: `Debug Gradle client (non-Daemon) process. Gradle will wait for you to attach a debugger at localhost:5005 by default`,
			}, {
				Name:        []string{"-Dorg.gradle.daemon.debug"},
				Description: `Debug Gradle Daemon process`,
			}, {
				Name:        []string{"--build-cache"},
				Description: `Toggles the Gradle build cache. Gradle will try to reuse outputs from previous builds. Default is off`,
				ExclusiveOn: []string{"--no-build-cache"},
			}, {
				Name:        []string{"--no-build-cache"},
				Description: `Toggles the Gradle build cache. Gradle will try to reuse outputs from previous builds. Default is off`,
				ExclusiveOn: []string{"--build-cache"},
			}, {
				Name:        []string{"--configure-on-demand"},
				Description: `Toggles Configure-on-demand. Only relevant projects are configured in this build run. Default is off`,
				ExclusiveOn: []string{"--configure-on-demand"},
			}, {
				Name:        []string{"--no-configure-on-demand"},
				Description: `Toggles Configure-on-demand. Only relevant projects are configured in this build run. Default is off`,
				ExclusiveOn: []string{"--configure-on-demand"},
			}, {
				Name:        []string{"--max-workers"},
				Description: `Sets maximum number of workers that Gradle may use. Default is number of processors`,
				Args: []model.Arg{{
					Name: "number",
				}},
			}, {
				Name:        []string{"--parallel"},
				Description: `Build projects in parallel. For limitations of this option, see Parallel Project Execution. Default is off`,
				ExclusiveOn: []string{"--no-parallel"},
			}, {
				Name:        []string{"--no-parallel"},
				Description: `Disables --parallel`,
				ExclusiveOn: []string{"--parallel"},
			}, {
				Name:        []string{"--priority"},
				Description: `Specifies the scheduling priority for the Gradle daemon and all processes launched by it`,
				Args: []model.Arg{{
					Name:        "priority",
					Suggestions: []model.Suggestion{{Name: []string{`normal`}}, {Name: []string{`low`}}},
				}},
			}, {
				Name:        []string{"--profile"},
				Description: `Generates a high-level performance report in the $buildDir/reports/profile directory. --scan is preferred`,
			}, {
				Name:        []string{"--scan"},
				Description: `Generate a build scan with detailed performance diagnostics`,
			}, {
				Name:        []string{"--watch-fs"},
				Description: `Toggles watching the file system. When enabled Gradle re-uses information it collects about the file system between builds. Enabled by default on operating systems where Gradle supports this feature`,
				ExclusiveOn: []string{"--no-watch-fs"},
			}, {
				Name:        []string{"--no-watch-fs"},
				Description: `Toggles watching the file system. When enabled Gradle re-uses information it collects about the file system between builds. Enabled by default on operating systems where Gradle supports this feature`,
				ExclusiveOn: []string{"--watch-fs"},
			}, {
				Name:        []string{"--daemon"},
				Description: `Use the Gradle Daemon to run the build. Starts the daemon if not running or existing daemon busy. Default is on`,
				ExclusiveOn: []string{"--no-daemon"},
			}, {
				Name:        []string{"--no-daemon"},
				Description: `Disables --daemon`,
				ExclusiveOn: []string{"--daemon"},
			}, {
				Name:        []string{"--foreground"},
				Description: `Starts the Gradle Daemon in a foreground process`,
			}, {
				Name:        []string{"-Dorg.gradle.daemon.idletimeout"},
				Description: `Gradle Daemon will stop itself after this number of milliseconds of idle time`,
				Args: []model.Arg{{
					Name: "milliseconds",
				}},
			}, {
				Name:        []string{"-Dorg.gradle.logging.level"},
				Description: `Set logging level via Gradle properties`,
				Args: []model.Arg{{
					Name:        "level",
					Suggestions: []model.Suggestion{{Name: []string{`quiet`}}, {Name: []string{`warn`}}, {Name: []string{`lifecycle`}}, {Name: []string{`info`}}, {Name: []string{`debug`}}},
				}},
			}, {
				Name:        []string{"-q", "--quiet"},
				Description: `Log errors only`,
			}, {
				Name:        []string{"-w", "--warn"},
				Description: `Set log level to warn`,
			}, {
				Name:        []string{"-i", "--info"},
				Description: `Set log level to info`,
			}, {
				Name:        []string{"-d", "--debug"},
				Description: `Log in debug mode (includes normal stacktrace)`,
			}, {
				Name:        []string{"-Dorg.gradle.console"},
				Description: `Specify console mode via Gradle properties`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`auto`},
						Description: `Enables color and other rich output in the console output when the build process is attached to a console, or to generate plain text only when not attached to a console`,
					}, {
						Name:        []string{`plain`},
						Description: `Disables all color and other rich output in the console output. This is the default when Gradle is not attached to a terminal`,
					}, {
						Name:        []string{`rich`},
						Description: `Enables color and other rich output in the console output, regardless of whether the build process is not attached to a console`,
					}, {
						Name:        []string{`verbose`},
						Description: `Enables color and other rich output like the rich, but output task names and outcomes at the lifecycle log level, as is done by default in Gradle 3.5 and earlier`,
					}},
				}},
			}, {
				Name:        []string{"--console"},
				Description: `Specifies which type of console output to generate`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`auto`},
						Description: `Enables color and other rich output in the console output when the build process is attached to a console, or to generate plain text only when not attached to a console`,
					}, {
						Name:        []string{`plain`},
						Description: `Disables all color and other rich output in the console output. This is the default when Gradle is not attached to a terminal`,
					}, {
						Name:        []string{`rich`},
						Description: `Enables color and other rich output in the console output, regardless of whether the build process is not attached to a console`,
					}, {
						Name:        []string{`verbose`},
						Description: `Enables color and other rich output like the rich, but output task names and outcomes at the lifecycle log level, as is done by default in Gradle 3.5 and earlier`,
					}},
				}},
			}, {
				Name:        []string{"-Dorg.gradle.warning.mode"},
				Description: `Specify warning mode via Gradle properties`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`all`},
						Description: `Log all warnings`,
					}, {
						Name:        []string{`fail`},
						Description: `Log all warnings and fail the build if there are any warnings`,
					}, {
						Name:        []string{`summary`},
						Description: `Suppress all warnings and log a summary at the end of the build`,
					}, {
						Name:        []string{`none`},
						Description: `Suppress all warnings, including the summary at the end of the build`,
					}},
				}},
			}, {
				Name:        []string{"--warning-mode"},
				Description: `Specifies how to log warning`,
				Args: []model.Arg{{
					Name: "mode",
					Suggestions: []model.Suggestion{{
						Name:        []string{`all`},
						Description: `Log all warnings`,
					}, {
						Name:        []string{`fail`},
						Description: `Log all warnings and fail the build if there are any warnings`,
					}, {
						Name:        []string{`summary`},
						Description: `Suppress all warnings and log a summary at the end of the build`,
					}, {
						Name:        []string{`none`},
						Description: `Suppress all warnings, including the summary at the end of the build`,
					}},
				}},
			}, {
				Name:        []string{"--include-build"},
				Description: `Run the build as a composite, including the specified build`,
			}, {
				Name:        []string{"--offline"},
				Description: `Specifies that the build should operate without accessing network resources`,
			}, {
				Name:        []string{"--refresh-dependencies"},
				Description: `Refresh the state of dependencies`,
			}, {
				Name:        []string{"--dry-run"},
				Description: `Run Gradle with all task actions disabled. Use this to show which task would have executed`,
			}, {
				Name:        []string{"--write-locks"},
				Description: `Indicates that all resolved configurations that are lockable should have their lock state persisted`,
			}, {
				Name:        []string{"--update-locks"},
				Description: `Indicates that versions for the specified modules have to be updated in the lock file`,
				Args: []model.Arg{{
					Name:       "group:name",
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"--no-rebuild"},
				Description: `Do not rebuild project dependencies. Useful for debugging and fine-tuning buildSrc, but can lead to wrong results. Use with caution`,
			}, {
				Name:        []string{"-b", "--build-file"},
				Description: `Specifies the build file. For example: gradle --build-file=foo.gradle`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"-c", "--settings-file"},
				Description: `Specifies the settings file. For example: gradle --settings-file=somewhere/else/settings.gradle`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "file",
				}},
			}, {
				Name:        []string{"-g", "--gradle-user-home"},
				Description: `Specifies the Gradle user home directory. The default is the .gradle directory in the user’s home directory`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}, {
				Name:        []string{"-p", "--project-dir"},
				Description: `Specifies the start directory for Gradle`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}, {
				Name:        []string{"--project-cache-dir"},
				Description: `Specifies the project-specific cache directory. Default value is .gradle in the root project directory`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}, {
				Name:        []string{"-D", "--system-prop"},
				Description: `Sets a system property of the JVM, for example -Dmyprop=myvalue`,
				Args: []model.Arg{{
					Name: "system property",
				}},
			}, {
				Name:        []string{"-I", "--init-script"},
				Description: `Specifies an initialization script`,
			}, {
				Name:        []string{"-P", "--project-prop"},
				Description: `Sets a project property of the root project, for example -Pmyprop=myvalue`,
				Args: []model.Arg{{
					Name: "system property",
				}},
			}, {
				Name:        []string{"-Dorg.gradle.jvmargs"},
				Description: `Set JVM arguments`,
				Args: []model.Arg{{
					Name: "arguments",
				}},
			}, {
				Name:        []string{"-Dorg.gradle.java.home"},
				Description: `Set JDK home dir`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFolders},
					Name:      "directory",
				}},
			}},
		}},
	}
}
