// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["prisma"] = model.Subcommand{
		Name:        []string{"prisma"},
		Description: `Prisma is a modern DB toolkit to query, migrate and model your database`,
		Subcommands: []model.Subcommand{{
			Name:        []string{"init"},
			Description: `Setup Prisma for your app`,
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Display this help message`,
			}, {
				Name:        []string{"--datasource-provider"},
				Description: `Define the datasource provider to use`,
				Args: []model.Arg{{
					Description: `Choose provider`,
					Suggestions: []model.Suggestion{{Name: []string{`PostgreSQL`}}, {Name: []string{`MySQL`}}, {Name: []string{`SQLite`}}, {Name: []string{`SQLServer`}}, {Name: []string{`MongoDB`}}, {Name: []string{`CockroachDB`}}},
				}},
			}, {
				Name:        []string{"--url"},
				Description: `Define a custom datasource url`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "full url",
				}},
			}},
		}, {
			Name:        []string{"generate"},
			Description: `Generate artifacts (e.g. Prisma Client)`,
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Display this help message`,
			}, {
				Name:        []string{"--schema"},
				Description: `Custom path to your Prisma schema`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "Schema path",
				}},
			}, {
				Name:        []string{"--data-proxy"},
				Description: `Enable the Data Proxy in the Prisma Client`,
			}, {
				Name:        []string{"--watch"},
				Description: `Watch the Prisma schema and rerun after a change`,
			}},
		}, {
			Name:        []string{"studio"},
			Description: `Open Prisma Studio`,
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Display this help message`,
			}, {
				Name:        []string{"--schema"},
				Description: `Custom path to your Prisma schema`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "Schema path",
				}},
			}, {
				Name:        []string{"-p", "--port"},
				Description: `Port to start Studio on`,
				Args: []model.Arg{{
					Name: "port",
				}},
			}, {
				Name:        []string{"-b", "--browser"},
				Description: `Browser to open Studio in`,
				Args: []model.Arg{{
					Name:        "Browser choice",
					Suggestions: []model.Suggestion{{Name: []string{`firefox`}}, {Name: []string{`chrome`}}, {Name: []string{`safari`}}, {Name: []string{`none`}}},
				}},
			}, {
				Name:        []string{"-n", "--hostname"},
				Description: `Hostname to bind the Express server to`,
				Args: []model.Arg{{
					Name: "port",
				}},
			}},
		}, {
			Name:        []string{"format"},
			Description: `Format your schema`,
			Options: []model.Option{{
				Name:        []string{"-h", "--help"},
				Description: `Display this help message`,
			}, {
				Name:        []string{"--schema"},
				Description: `Custom path to your Prisma schema`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "Schema path",
				}},
			}},
		}, {
			Name:        []string{"migrate"},
			Description: `Migrate your database`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"dev"},
				Description: `The migrate dev command updates your database using migrations files during development`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Display this help message`,
				}, {
					Name:        []string{"--schema"},
					Description: `Custom path to your Prisma schema`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "Schema path",
					}},
				}, {
					Name:        []string{"--skip-seed"},
					Description: `Skip triggering seed`,
				}, {
					Name:        []string{"--skip-generate"},
					Description: `Skip triggering generators (e.g. Prisma Client)`,
				}, {
					Name:        []string{"--create-only"},
					Description: `Create a new migration but do not apply it. The migration will be empty if there are no changes in Prisma schema`,
				}, {
					Name:        []string{"-n", "--name"},
					Description: `The name of the migration. If no name is provided, the CLI will prompt you`,
					Args: []model.Arg{{
						Name:       "filename",
						IsOptional: true,
					}},
				}},
			}, {
				Name:        []string{"reset"},
				Description: `Reset your database and apply all migrations, all data will be lost`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Display this help message`,
				}, {
					Name:        []string{"--schema"},
					Description: `Custom path to your Prisma schema`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "Schema path",
					}},
				}, {
					Name:        []string{"--skip-seed"},
					Description: `Skip triggering seed`,
				}, {
					Name:        []string{"--skip-generate"},
					Description: `Skip triggering generators (e.g. Prisma Client)`,
				}, {
					Name:        []string{"-f", "--force"},
					Description: `Skip the confirmation prompt`,
				}},
			}, {
				Name:        []string{"deploy"},
				Description: `Apply pending migrations to update the database schema in production/staging`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Display this help message`,
				}, {
					Name:        []string{"--schema"},
					Description: `Custom path to your Prisma schema`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "Schema path",
					}},
				}},
			}, {
				Name:        []string{"resolve"},
				Description: `Resolve issues with database migrations in deployment databases`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Display this help message`,
				}, {
					Name:        []string{"--schema"},
					Description: `Custom path to your Prisma schema`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "Schema path",
					}},
				}, {
					Name:        []string{"--applied"},
					Description: `Record a specific migration as applied`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "migration file path",
					}},
				}, {
					Name:        []string{"--rolled-back"},
					Description: `Record a specific migration as rolled back`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "migration file path",
					}},
				}},
			}, {
				Name:        []string{"status"},
				Description: `Check the status of your database migrations`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Display this help message`,
				}, {
					Name:        []string{"--schema"},
					Description: `Custom path to your Prisma schema`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "Schema path",
					}},
				}},
			}, {
				Name:        []string{"diff"},
				Description: `Compares the database schema from two arbitrary sources, and outputs the differences either as a human-readable summary (by default) or an executable script`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Display this help message`,
				}, {
					Name:        []string{"--from-url"},
					Description: `A datasource url`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "full url",
					}},
				}, {
					Name:        []string{"--to-url"},
					Description: `A datasource url`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "full url",
					}},
				}, {
					Name:        []string{"--from-empty"},
					Description: `Flag to assume from is an empty datamodel`,
				}, {
					Name:        []string{"--to-empty"},
					Description: `Flag to assume to is an empty datamodel`,
				}, {
					Name:        []string{"--from-schema-datamodel"},
					Description: `Path to a Prisma schema file, uses the 'datamodel' for the diff`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "filepath",
					}},
				}, {
					Name:        []string{"--to-schema-datamodel"},
					Description: `Path to a Prisma schema file, uses the 'datamodel' for the diff`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "filepath",
					}},
				}, {
					Name:        []string{"--from-schema-datasource"},
					Description: `Path to a Prisma schema file, uses the 'datasource url' for the diff`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "filepath",
					}},
				}, {
					Name:        []string{"--to-schema-datasource"},
					Description: `Path to a Prisma schema file, uses the 'datasource url' for the diff`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "filepath",
					}},
				}, {
					Name:        []string{"--from-migrations"},
					Description: `Path to the Prisma Migrate migrations directory`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFolders},
						Name:      "folder",
					}},
				}, {
					Name:        []string{"--to-migrations"},
					Description: `Path to the Prisma Migrate migrations directory`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFolders},
						Name:      "folder",
					}},
				}, {
					Name:        []string{"--shadow-database-url"},
					Description: `URL for the shadow database. Only required if using --from-migrations or --to-migrations`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "full url",
					}},
				}, {
					Name:        []string{"--script"},
					Description: `Render a SQL script to stdout instead of the default human readable summary (not supported on MongoDB)`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "filepath",
					}},
				}, {
					Name:        []string{"--exit-code"},
					Description: `Change the exit code behavior to signal if the diff is empty or not (Empty: 0, Error: 1, Not empty: 2). Default behavior is Success: 0, Error: 1."`,
				}},
			}},
		}, {
			Name:        []string{"db"},
			Description: `Manage your database schema and lifecycle (Preview)`,
			Subcommands: []model.Subcommand{{
				Name: []string{"pull"},
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Display this help message`,
				}, {
					Name:        []string{"--schema"},
					Description: `Custom path to your Prisma schema`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "Schema path",
					}},
				}, {
					Name:        []string{"--force"},
					Description: `Ignore current Prisma schema file`,
				}, {
					Name:        []string{"--print"},
					Description: `Print the introspected Prisma schema to stdout`,
				}, {
					Name:        []string{"--url"},
					Description: `The datasource url`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "full url",
					}},
				}, {
					Name:        []string{"--composite-type-depth"},
					Description: `Specify the depth for introspecting composite types (e.g. Embedded Documents in MongoDB). Number, default is -1 for infinite depth, 0 = off`,
					Args: []model.Arg{{
						Name: "number",
					}},
				}},
			}, {
				Name:        []string{"push"},
				Description: `This command pushes the state of your Prisma schema file to the database without using migrations files`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Display this help message`,
				}, {
					Name:        []string{"--schema"},
					Description: `Custom path to your Prisma schema`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "Schema path",
					}},
				}, {
					Name:        []string{"--skip-generate"},
					Description: `Skip generation of artifacts such as Prisma Client`,
				}, {
					Name:        []string{"--force-reset"},
					Description: `Resets the database and then updates the schema - useful if you need to start from scratch due to unexecutable migrations`,
				}, {
					Name:        []string{"--accept-data-loss"},
					Description: `Ignore data loss warnings. This option is required if as a result of making the schema changes, data may be lost`,
				}},
			}, {
				Name:        []string{"seed"},
				Description: `Seed your database`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Display this help message`,
				}, {
					Name:        []string{"--schema"},
					Description: `Custom path to your Prisma schema`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "Schema path",
					}},
				}},
			}, {
				Name:        []string{"execute"},
				Description: `Execute native commands to your database`,
				Options: []model.Option{{
					Name:        []string{"-h", "--help"},
					Description: `Display this help message`,
				}, {
					Name:        []string{"--schema"},
					Description: `Custom path to your Prisma schema`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "Schema path",
					}},
				}, {
					Name:        []string{"--url"},
					Description: `The datasource url`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "full url",
					}},
				}, {
					Name:        []string{"--file"},
					Description: `Path to a file. The content will be sent as the script to be executed`,
					Args: []model.Arg{{
						Templates: []model.Template{model.TemplateFilepaths},
						Name:      "filepath",
					}},
				}, {
					Name:        []string{"--stdin"},
					Description: `Use the terminal standard input as the script to be executed`,
				}},
			}},
		}, {
			Name:        []string{"version", "-v"},
			Description: `Print current version of Prisma components`,
			Subcommands: []model.Subcommand{{
				Name:        []string{"--json"},
				Description: `Output JSON`,
			}},
		}},
	}
}
