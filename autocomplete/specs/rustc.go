// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["rustc"] = model.Subcommand{
		Name:        []string{"rustc"},
		Description: `CLI for rustc`,
		Args: []model.Arg{{
			Templates: []model.Template{model.TemplateFilepaths},
			Name:      "filepath",
		}},
		Options: []model.Option{{
			Name:        []string{"-h", "--help"},
			Description: `Prints out help info`,
		}, {
			Name:        []string{"--cfg"},
			Description: `Configures compilation settings`,
			Args: []model.Arg{{
				Name:        "Spec",
				Description: `Ex: verbose' or 'feature="serde"'`,
			}},
		}, {
			Name:        []string{"-L"},
			Description: `Adds a directory to the library search path`,
			Args: []model.Arg{{
				Name:        "kind",
				Description: `The kind of search path`,
				Suggestions: []model.Suggestion{{
					Name:        []string{`dependency`},
					Description: `Only search for transitive dependencies in this directory`,
				}, {
					Name:        []string{`crate`},
					Description: `Only search for this crate's direct dependencies in this directory`,
				}, {
					Name:        []string{`native`},
					Description: `Only search for native libraries in this directory`,
				}, {
					Name:        []string{`framework`},
					Description: `Only search for macOS frameworks in this directory`,
				}, {
					Name:        []string{`all`},
					Description: `Search for all library kinds in this directory`,
				}},
				IsOptional: true,
			}, {
				Templates:   []model.Template{model.TemplateFolders},
				Name:        "path",
				Description: `Path to search for external crates and libraries`,
			}},
		}, {
			Name:        []string{"--l"},
			Description: `Links the generated crate to a native library`,
			Args: []model.Arg{{
				Name:        "kind",
				Description: `Kind of library`,
				Suggestions: []model.Suggestion{{
					Name:        []string{`dylib`},
					Description: `A native dynamic library`,
				}, {
					Name:        []string{`static`},
					Description: `A native static library`,
				}, {
					Name:        []string{`framework`},
					Description: `A macOS framework`,
				}},
				IsOptional: true,
			}, {
				Name:        "Name",
				Description: `Native library name`,
			}},
		}, {
			Name:        []string{"--crate-type"},
			Description: `Specify types of crates for the compiler to emit`,
			Args: []model.Arg{{
				Name:        "type",
				Description: `Type of crates`,
				Suggestions: []model.Suggestion{{
					Name:        []string{`bin`},
					Description: `A runnable executable program`,
				}, {
					Name:        []string{`lib`},
					Description: `Generates a library kind preferred by the compiler`,
				}, {
					Name:        []string{`rlib`},
					Description: `A Rust static library`,
				}, {
					Name:        []string{`dylib`},
					Description: `A native dynamic library`,
				}, {
					Name:        []string{`cdylib`},
					Description: `A native static library`,
				}, {
					Name:        []string{`staticlib`},
					Description: `A macOS framework`,
				}, {
					Name:        []string{`proc-macro`},
					Description: `Generates a format suitable for a procedural macro library that may be loaded by the compiler`,
				}},
			}},
		}, {
			Name:        []string{"--crate-name"},
			Description: `Specify the name of the crate being built`,
			Args: []model.Arg{{
				Name: "Name",
			}},
		}, {
			Name:        []string{"--edition"},
			Description: `Specify the edition to use`,
			Args: []model.Arg{{
				Name:        "edition",
				Suggestions: []model.Suggestion{{Name: []string{`2015`}}, {Name: []string{`2018`}}, {Name: []string{`2021`}}},
			}},
		}, {
			Name:        []string{"--emit"},
			Description: `Specify the types of output files to generate`,
			Args: []model.Arg{{
				Name: "type",
				Suggestions: []model.Suggestion{{
					Name:        []string{`asm`},
					Description: `Generates a file with the crate's assembly code`,
				}, {
					Name:        []string{`llvm-bc`},
					Description: `Generates a binary file containing the LLVM bitcode`,
				}, {
					Name:        []string{`llvm-ir`},
					Description: `Generates a file containing LLVM IR`,
				}, {
					Name:        []string{`obj`},
					Description: `Generates a native object file`,
				}, {
					Name:        []string{`metadata`},
					Description: `Generates a file containing metadata about the crate`,
				}, {
					Name:        []string{`link`},
					Description: `Generates the crates specified by --crate-type`,
				}, {
					Name:        []string{`dep-info`},
					Description: `Generates a file with Makefile syntax that indicates all the source files that were loaded to generate the crate`,
				}, {
					Name:        []string{`mir`},
					Description: `Generates a file containing rustc's mid-level intermediate representation`,
				}},
			}},
		}, {
			Name:        []string{"--print"},
			Description: `Prints compiler info`,
			Args: []model.Arg{{
				Name: "type",
				Suggestions: []model.Suggestion{{
					Name:        []string{`crate-name`},
					Description: `The name of the crate`,
				}, {
					Name:        []string{`file-names`},
					Description: `The names of the files created by the link emit kind`,
				}, {
					Name:        []string{`sysroot`},
					Description: `Path to the sysroot`,
				}, {
					Name:        []string{`target-libdir`},
					Description: `Path to the target libdir`,
				}, {
					Name:        []string{`cfg`},
					Description: `List of cfg values`,
				}, {
					Name:        []string{`target-list`},
					Description: `List of known targets. The target may be selected with the --target flag`,
				}, {
					Name:        []string{`target-cpus`},
					Description: `List of available CPU values for the current target`,
				}, {
					Name:        []string{`target-features`},
					Description: `List of available target features for the current target`,
				}, {
					Name:        []string{`relocation-models`},
					Description: `List of relocation models. Relocation models may be selected with the -C relocation-model=val flag`,
				}, {
					Name:        []string{`code-models`},
					Description: `List of code models`,
				}, {
					Name:        []string{`tls-models`},
					Description: `List of Thread Local Storage models supported`,
				}, {
					Name: []string{`target-spec-json`},
				}, {
					Name:        []string{`native-static-libs`},
					Description: `This may be used when creating a staticlib crate type`,
				}},
			}},
		}, {
			Name:        []string{"-g"},
			Description: `Synonym for -C debuginfo=2`,
		}, {
			Name:        []string{"-O"},
			Description: `Synonym for -C opt-level=2`,
		}, {
			Name:        []string{"-o"},
			Description: `Specify the filename to write output`,
			Args: []model.Arg{{
				Name: "filename",
			}},
		}, {
			Name:        []string{"--out-dir"},
			Description: `Specify directory to write output`,
			Args: []model.Arg{{
				Name: "dir",
			}},
		}, {
			Name:        []string{"--explain"},
			Description: `Provides a detailed explanation of an error message`,
			Args: []model.Arg{{
				Name: "Error Code",
			}},
		}, {
			Name:        []string{"--test"},
			Description: `Builds a test harness`,
		}, {
			Name:        []string{"--target"},
			Description: `Selects a target triple to build`,
			Args: []model.Arg{{
				Name: "Target",
			}},
		}, {
			Name:        []string{"-W", "--warn"},
			Description: `Sets lint warnings`,
			Args: []model.Arg{{
				Name: "OPT",
			}},
		}, {
			Name:        []string{"-A", "--allow"},
			Description: `Set lint allowed`,
			Args: []model.Arg{{
				Name: "OPT",
			}},
		}, {
			Name:        []string{"-D", "--deny"},
			Description: `Set lint denied`,
			Args: []model.Arg{{
				Name: "OPT",
			}},
		}, {
			Name:        []string{"-F", "--forbid"},
			Description: `Set lint forbid`,
			Args: []model.Arg{{
				Name: "Opt",
			}},
		}, {
			Name:        []string{"--cap-lints"},
			Description: `Set the most restrictive lint level`,
			Args: []model.Arg{{
				Name: "Level",
			}},
		}, {
			Name:        []string{"-C", "--codegen"},
			Description: `Set a codegen option`,
			Args: []model.Arg{{
				Name: "option",
			}},
		}, {
			Name:        []string{"-Z"},
			Description: `Set unstable options`,
			Args: []model.Arg{{
				Name:        "option",
				Description: `Unstable options to pass to rustc`,
			}},
		}, {
			Name:        []string{"-V", "--version"},
			Description: `Prints version`,
		}, {
			Name:        []string{"-v", "--verbose"},
			Description: `Use verbose output`,
		}, {
			Name:        []string{"--extern"},
			Description: `Specify where an external library is located`,
			Args: []model.Arg{{
				Templates:   []model.Template{model.TemplateFolders},
				Name:        "Path",
				Description: `Path where crate(s) can be found`,
			}},
		}, {
			Name:        []string{"--sysroot"},
			Description: `Overrides the system root`,
			Args: []model.Arg{{
				Name: "directory",
			}},
		}, {
			Name:        []string{"--error-format"},
			Description: `Controls how errors are produced`,
			Args: []model.Arg{{
				Name:        "format",
				Suggestions: []model.Suggestion{{Name: []string{`human`}}, {Name: []string{`json`}}, {Name: []string{`short`}}},
			}},
		}, {
			Name:        []string{"--color"},
			Description: `Configures coloring of output`,
			Args: []model.Arg{{
				Name:        "color",
				Suggestions: []model.Suggestion{{Name: []string{`auto`}}, {Name: []string{`always`}}, {Name: []string{`never`}}},
			}},
		}},
	}
}
