// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.
//
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

package specs

import (
	"github.com/microsoft/clac/autocomplete/model"
)

func init() {
	Specs["man"] = model.Subcommand{
		Name:        []string{"man"},
		Description: `Format and display the on-line manual pages`,
		Args: []model.Arg{{
			Generator:  nil, // TODO: port over generator
			IsOptional: true,
			IsVariadic: true,
		}},
		Options: []model.Option{{
			Name:        []string{"-C"},
			Description: `Specify the configuration file to use`,
			Args: []model.Arg{{
				Name: "config_file",
			}},
		}, {
			Name:        []string{"-M"},
			Description: `Specify the list of directories to search (colon separated)`,
			Args: []model.Arg{{
				Name:      "path",
				Generator: nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"-P"},
			Description: `Specify the pager program`,
			Args: []model.Arg{{
				Name: "pager",
			}},
		}, {
			Name:        []string{"-B"},
			Description: `Specify which browser to use for HTML files`,
			Args: []model.Arg{{
				Name: "browser",
			}},
		}, {
			Name:        []string{"-H"},
			Description: `Specify a command that renders HTML files as text`,
			Args: []model.Arg{{
				Name: "command",
			}},
		}, {
			Name:        []string{"-S"},
			Description: `Specify a colon-separated list of manual sections to search`,
			Args: []model.Arg{{
				Name:      "sections",
				Generator: nil, // TODO: port over generator
			}},
		}, {
			Name:        []string{"-a"},
			Description: `Open every matching page instead of just the first`,
		}, {
			Name:        []string{"-c"},
			Description: `Reformat the source page, even when an up-to-date cat-page exists`,
		}, {
			Name:        []string{"-d"},
			Description: `Don't actually display the pages (dry run)`,
		}, {
			Name:        []string{"-D"},
			Description: `Both display and print debugging info`,
		}, {
			Name:        []string{"-f"},
			Description: `Equivalent to "whatis"`,
		}, {
			Name:        []string{"-F", "--preformat"},
			Description: `Format only, do not display`,
		}, {
			Name:        []string{"-h"},
			Description: `Print a help message and exit`,
		}, {
			Name:        []string{"-k"},
			Description: `Equivalent to apropos`,
		}, {
			Name:        []string{"-K"},
			Description: `Search for a given string in all pages`,
		}, {
			Name:        []string{"-m"},
			Description: `Specify an alternate set of pages to search based on the system name given`,
			Args: []model.Arg{{
				Name: "system",
			}},
		}, {
			Name:        []string{"-p"},
			Description: `Specify the sequence of preprocessors to run before nroff or troff`,
			Args: []model.Arg{{
				Name: "preprocessors",
			}},
		}, {
			Name:        []string{"-t"},
			Description: `Use "/usr/bin/groff -Tps -mandoc -c" to format the page`,
		}, {
			Name:        []string{"-w", "--path"},
			Description: `Print the location of files that would be displayed`,
		}, {
			Name:        []string{"-W"},
			Description: `Print file locations, one per line`,
		}},
	}
}
