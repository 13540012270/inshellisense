// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["kool"] = model.Subcommand{
		Name:        []string{"kool"},
		Description: `Cloud and docker environments made easy`,
		Options: []model.Option{{
			Name:        []string{"--verbose"},
			Description: `Increases output verbosity`,
		}, {
			Name:        []string{"--help", "-h"},
			Description: `Help for kool`,
		}},
		Subcommands: []model.Subcommand{{
			Name:        []string{"create"},
			Description: `Create a new project using a preset`,
			Args: []model.Arg{{
				Name:        "preset",
				Description: `Preset that will be used to create the project`,
			}, {
				Templates:   []model.Template{model.TemplateFolders},
				Name:        "folder",
				Description: `Folder where the project will be created`,
			}},
			Options: []model.Option{{
				Name:        []string{"--verbose"},
				Description: `Increases output verbosity`,
			}, {
				Name:        []string{"--help", "-h"},
				Description: `Help for create`,
			}},
		}, {
			Name:        []string{"deploy"},
			Description: `Deploy a local application to a Kool Cloud environment`,
			Options: []model.Option{{
				Name:        []string{"--verbose"},
				Description: `Increases output verbosity`,
			}, {
				Name:        []string{"--help", "-h"},
				Description: `Help for deploy`,
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"destroy"},
				Description: `Destroy an environment deployed to Kool Cloud`,
				Options: []model.Option{{
					Name:        []string{"--verbose"},
					Description: `Increases output verbosity`,
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for destroy`,
				}},
			}, {
				Name:        []string{"exec"},
				Description: `Execute a command inside a running service container deployed to Kool Cloud`,
				Options: []model.Option{{
					Name:        []string{"--verbose"},
					Description: `Increases output verbosity`,
				}, {
					Name:        []string{"--container", "-c"},
					Description: `Container target`,
					Args: []model.Arg{{
						Name: "container",
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for exec`,
				}},
			}, {
				Name:        []string{"logs"},
				Description: `See the logs of running service container deployed to Kool Cloud`,
				Options: []model.Option{{
					Name:        []string{"--verbose"},
					Description: `Increases output verbosity`,
				}, {
					Name:        []string{"--container", "-c"},
					Description: `Container target`,
					Args: []model.Arg{{
						Name: "container",
					}},
				}, {
					Name:        []string{"--follow", "-f"},
					Description: `Follow log output`,
				}, {
					Name:        []string{"--tail", "-t"},
					Description: `Number of lines to show from the end of the logs for each container. A value equal to 0 will show all lines`,
					Args: []model.Arg{{
						Name: "tail",
					}},
				}, {
					Name:        []string{"--help", "-h"},
					Description: `Help for logs`,
				}},
			}},
		}, {
			Name:        []string{"docker"},
			Description: `Create a new container (a powered up 'docker run')`,
			Args: []model.Arg{{
				Name:        "image",
				Description: `Docker image`,
			}, {
				Name:        "command",
				Description: `Command to execute inside the container`,
				IsOptional:  true,
				IsVariadic:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"--verbose"},
				Description: `Increases output verbosity`,
			}, {
				Name:        []string{"--env", "-e"},
				Description: `Environment variables`,
				Args: []model.Arg{{
					Name: "env",
				}},
			}, {
				Name:        []string{"--network", "-n"},
				Description: `Connect a container to a network`,
				Args: []model.Arg{{
					Name: "network",
				}},
			}, {
				Name:        []string{"--publish", "-p"},
				Description: `Publish a container's port(s) to the host`,
				Args: []model.Arg{{
					Name: "publish",
				}},
			}, {
				Name:        []string{"--volume", "-v"},
				Description: `Bind mount a volume`,
				Args: []model.Arg{{
					Name: "volume",
				}},
			}, {
				Name:        []string{"--help", "-h"},
				Description: `Help for docker`,
			}},
		}, {
			Name:        []string{"exec"},
			Description: `Execute a command inside a running service container`,
			Args: []model.Arg{{
				Name:        "service",
				Description: `Service you want to execute a command`,
			}, {
				Name:        "command",
				Description: `Command to execute inside the container`,
				IsVariadic:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"--verbose"},
				Description: `Increases output verbosity`,
			}, {
				Name:        []string{"--detach", "-d"},
				Description: `Detached mode: Run command in the background`,
			}, {
				Name:        []string{"--env", "-e"},
				Description: `Environment variables`,
				Args: []model.Arg{{
					Name: "env",
				}},
			}, {
				Name:        []string{"--help", "-h"},
				Description: `Help for exec`,
			}},
		}, {
			Name:        []string{"info"},
			Description: `Print out information about the local environment`,
			Options: []model.Option{{
				Name:        []string{"--verbose"},
				Description: `Increases output verbosity`,
			}, {
				Name:        []string{"--help", "-h"},
				Description: `Help for info`,
			}},
		}, {
			Name:        []string{"logs"},
			Description: `Display log output from running service containers`,
			Args: []model.Arg{{
				Name:        "service",
				Description: `Service to get logs from`,
				IsOptional:  true,
				IsVariadic:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"--verbose"},
				Description: `Increases output verbosity`,
			}, {
				Name:        []string{"--follow", "-f"},
				Description: `Follow log output`,
			}, {
				Name:        []string{"--tail", "-t"},
				Description: `Number of lines to show from the end of the logs for each container. A value equal to 0 will show all lines`,
				Args: []model.Arg{{
					Name: "tail",
				}},
			}, {
				Name:        []string{"--help", "-h"},
				Description: `Help for logs`,
			}},
		}, {
			Name:        []string{"preset"},
			Description: `Install configuration files customized for Kool in the current directory`,
			Args: []model.Arg{{
				Name:        "preset",
				Description: `Preset that will be used to configure the project`,
			}},
			Options: []model.Option{{
				Name:        []string{"--verbose"},
				Description: `Increases output verbosity`,
			}, {
				Name:        []string{"--help", "-h"},
				Description: `Help for preset`,
			}},
		}, {
			Name:        []string{"recipe"},
			Description: `Adds configuration for some recipe in the current work directory`,
			Args: []model.Arg{{
				Name:        "recipe",
				Description: `Recipe that will be used to add configuration`,
			}},
			Options: []model.Option{{
				Name:        []string{"--verbose"},
				Description: `Increases output verbosity`,
			}, {
				Name:        []string{"--help", "-h"},
				Description: `Help for recipe`,
			}},
		}, {
			Name:        []string{"restart"},
			Description: `Restart running service containers (the same as 'kool stop' followed by 'kool start')`,
			Args: []model.Arg{{
				Name:        "service",
				Description: `Service you want to restart`,
				Generator:   nil, // TODO: port over generator
				IsOptional:  true,
				IsVariadic:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"--verbose"},
				Description: `Increases output verbosity`,
			}, {
				Name:        []string{"--purge"},
				Description: `Remove all persistent data from volume mounts on containers`,
			}, {
				Name:        []string{"--rebuild"},
				Description: `Updates and builds service's images`,
			}, {
				Name:        []string{"--help", "-h"},
				Description: `Help for restart`,
			}},
		}, {
			Name:        []string{"run"},
			Description: `Execute a script defined in kool.yml`,
			Args: []model.Arg{{
				Name:        "script",
				Description: `Script to be executed`,
				Generator:   nil, // TODO: port over generator
			}},
			Options: []model.Option{{
				Name:        []string{"--verbose"},
				Description: `Increases output verbosity`,
			}, {
				Name:        []string{"--env", "-e"},
				Description: `Environment variables`,
				Args: []model.Arg{{
					Name: "env",
				}},
			}, {
				Name:        []string{"--help", "-h"},
				Description: `Help for run`,
			}},
		}, {
			Name:        []string{"self-update"},
			Description: `Update kool to the latest version`,
			Options: []model.Option{{
				Name:        []string{"--verbose"},
				Description: `Increases output verbosity`,
			}, {
				Name:        []string{"--help", "-h"},
				Description: `Help for self-update`,
			}},
		}, {
			Name:        []string{"share"},
			Description: `Live share your local environment on the Internet using an HTTP tunnel`,
			Options: []model.Option{{
				Name:        []string{"--verbose"},
				Description: `Increases output verbosity`,
			}, {
				Name:        []string{"--port"},
				Description: `The port from the target service that should be shared. If not provided, it will default to port 80`,
				Args: []model.Arg{{
					Name: "port",
				}},
			}, {
				Name:        []string{"--service"},
				Description: `The name of the local service container you want to share`,
				Args: []model.Arg{{
					Name: "service",
				}},
			}, {
				Name:        []string{"--subdomain"},
				Description: `The subdomain used to generate your public https://subdomain.kool.live URL`,
				Args: []model.Arg{{
					Name: "subdomain",
				}},
			}, {
				Name:        []string{"--help", "-h"},
				Description: `Help for share`,
			}},
		}, {
			Name:        []string{"start"},
			Description: `Start service containers defined in docker-compose.yml`,
			Args: []model.Arg{{
				Name:        "service",
				Description: `Service you want to start`,
				Generator:   nil, // TODO: port over generator
				IsOptional:  true,
				IsVariadic:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"--verbose"},
				Description: `Increases output verbosity`,
			}, {
				Name:        []string{"--foreground", "-f"},
				Description: `Start containers in foreground mode`,
			}, {
				Name:        []string{"--profile"},
				Description: `Specify a profile to enable`,
				Args: []model.Arg{{
					Name: "profile",
				}},
			}, {
				Name:        []string{"--rebuild", "-b"},
				Description: `Updates and builds service's images`,
			}, {
				Name:        []string{"--help", "-h"},
				Description: `Help for start`,
			}},
		}, {
			Name:        []string{"status"},
			Description: `Show the status of all service containers`,
			Options: []model.Option{{
				Name:        []string{"--verbose"},
				Description: `Increases output verbosity`,
			}, {
				Name:        []string{"--help", "-h"},
				Description: `Help for status`,
			}},
		}, {
			Name:        []string{"stop"},
			Description: `Stop and destroy running service containers`,
			Args: []model.Arg{{
				Name:        "service",
				Description: `Service you want to stop`,
				Generator:   nil, // TODO: port over generator
				IsOptional:  true,
				IsVariadic:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"--verbose"},
				Description: `Increases output verbosity`,
			}, {
				Name:        []string{"--purge"},
				Description: `Remove all persistent data from volume mounts on containers`,
			}, {
				Name:        []string{"--help", "-h"},
				Description: `Help for stop`,
			}},
		}},
	}
}
