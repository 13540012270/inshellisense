// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.
//
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

package specs

import (
	"github.com/microsoft/clac/autocomplete/model"
)

func init() {
	Specs["taplo"] = model.Subcommand{
		Name:        []string{"taplo"},
		Description: `Tool for validation, formatting, and querying TOML documents with a jq-like fashion`,
		Options: []model.Option{{
			Name:        []string{"--help", "-h"},
			Description: `Print help information for taplo`,
		}, {
			Name:        []string{"--version", "-V"},
			Description: `Print version information for taplo`,
		}, {
			Name:        []string{"--verbose"},
			Description: `Enable verbose logging format`,
		}, {
			Name: []string{"--colors"},
			Args: []model.Arg{{
				Suggestions: []model.Suggestion{{Name: []string{`auto`}}, {Name: []string{`always`}}, {Name: []string{`never`}}},
			}},
		}, {
			Name:        []string{"--log-spans"},
			Description: `Enable logging spans`,
		}},
		Subcommands: []model.Subcommand{{
			Name:        []string{"config", "cfg"},
			Description: `Operations with the Taplo config file`,
			Options: []model.Option{{
				Name:        []string{"--help", "-h"},
				Description: `Print help information for config`,
			}, {
				Name:        []string{"--log-spans"},
				Description: `Enable logging spans`,
			}, {
				Name:        []string{"--verbose"},
				Description: `Enable verbose logging format`,
			}, {
				Name:        []string{"--colors"},
				Description: `Set color values for the output`,
				Args: []model.Arg{{
					Name:        "COLORS",
					Suggestions: []model.Suggestion{{Name: []string{`auto`}}, {Name: []string{`always`}}, {Name: []string{`never`}}},
				}},
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"default"},
				Description: `Print the default ".taplo.toml" configuration file`,
			}, {
				Name:        []string{"help"},
				Description: `Print this message or the help of the given subcommand(s)`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateHelp},
				}},
			}, {
				Name:        []string{"schema"},
				Description: `Print the JSON schema of the ".taplo.toml" configuration file`,
			}},
		}, {
			Name:        []string{"format", "fmt"},
			Description: `Format TOML documents`,
			Args: []model.Arg{{
				Templates:   []model.Template{model.TemplateFilepaths},
				Name:        "FILES ...",
				Description: `Paths or glob patterns to TOML documents`,
				IsOptional:  true,
				IsVariadic:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"--config", "-c"},
				Description: `Path to the Taplo configuration file`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "CONFIG",
				}},
			}, {
				Name:        []string{"--cache-path"},
				Description: `Set a cache path`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "CACHE_PATH",
				}},
			}, {
				Name:        []string{"--check"},
				Description: `Report any files that are not correctly formatted`,
				Args: []model.Arg{{
					Templates:  []model.Template{model.TemplateFilepaths},
					Name:       "CACHE_PATH",
					IsOptional: true,
				}},
			}, {
				Name:        []string{"--colors"},
				Description: `Set color values for the output`,
				Args: []model.Arg{{
					Name:        "COLORS",
					Suggestions: []model.Suggestion{{Name: []string{`auto`}}, {Name: []string{`always`}}, {Name: []string{`never`}}},
				}},
			}, {
				Name:        []string{"--diff"},
				Description: `Print the differences in patch formatting to "stdout"`,
			}, {
				Name:        []string{"f", "--force"},
				Description: `Force formatting of files`,
				Args: []model.Arg{{
					Templates:  []model.Template{model.TemplateFilepaths},
					Name:       "FILES ...",
					IsOptional: true,
					IsVariadic: true,
				}},
			}, {
				Name:        []string{"--help", "-h"},
				Description: `Print help information for format`,
			}, {
				Name:        []string{"--log-spans"},
				Description: `Enable logging spans`,
			}, {
				Name:        []string{"--no-auto-config"},
				Description: `Do not search for a configuration file`,
			}, {
				Name:        []string{"--option", "-o"},
				Description: `A formatter option given as a 'key=value', can be set multiple times`,
				Args: []model.Arg{{
					Name:        "OPTIONS",
					Suggestions: []model.Suggestion{{Name: []string{`indent_tables=true`}}, {Name: []string{`indent_tables=false`}}},
				}},
			}, {
				Name:        []string{"--stdin-filepath"},
				Description: `A path to the file that the taplo will treat like stdin`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "STDIN_FILEPATH",
				}},
			}, {
				Name:        []string{"--verbose"},
				Description: `Enable verbose logging format`,
			}},
		}, {
			Name:        []string{"get"},
			Description: `Extract a value from the given TOML document`,
			Options: []model.Option{{
				Name:        []string{"--file-path", "-f"},
				Description: `Path to the TOML document`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "FILE_PATH",
				}},
			}, {
				Name:        []string{"--colors"},
				Description: `Set color values for the output`,
				Args: []model.Arg{{
					Name:        "COLORS",
					Suggestions: []model.Suggestion{{Name: []string{`auto`}}, {Name: []string{`always`}}, {Name: []string{`never`}}},
				}},
			}, {
				Name:        []string{"--help", "-h"},
				Description: `Print help information for get`,
			}, {
				Name:        []string{"--log-spans"},
				Description: `Enable logging spans`,
			}, {
				Name:        []string{"-o", "--output-format"},
				Description: `The format specifying how the output is printed`,
				Args: []model.Arg{{
					Name:        "OUTPUT_FORMAT",
					Suggestions: []model.Suggestion{{Name: []string{`value`}}, {Name: []string{`json`}}, {Name: []string{`toml`}}},
				}},
			}, {
				Name:        []string{"--strip-newline", "-s"},
				Description: `Strip the trailing newline from the output`,
			}, {
				Name:        []string{"--verbose"},
				Description: `Enable verbose logging format`,
			}},
		}, {
			Name:        []string{"help"},
			Description: `Print help information for taplo`,
		}, {
			Name:        []string{"lint", "check", "validate"},
			Description: `Lint a TOML documents`,
			Args: []model.Arg{{
				Templates:  []model.Template{model.TemplateFilepaths},
				Name:       "FILES ...",
				IsOptional: true,
				IsVariadic: true,
			}},
			Options: []model.Option{{
				Name:        []string{"--config", "-c"},
				Description: `Path to the Taplo configuration file`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "CONFIG",
				}},
			}, {
				Name:        []string{"--cache-path"},
				Description: `Set a cache path`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateFilepaths},
					Name:      "CACHE_PATH",
				}},
			}, {
				Name:        []string{"--colors"},
				Description: `Set color values for the output`,
				Args: []model.Arg{{
					Name:        "COLORS",
					Suggestions: []model.Suggestion{{Name: []string{`auto`}}, {Name: []string{`always`}}, {Name: []string{`never`}}},
				}},
			}, {
				Name:        []string{"--default-schema-catalogs"},
				Description: `Use the default online catalogs for schemas`,
			}, {
				Name:        []string{"--help", "-h"},
				Description: `Print help information for lint`,
			}, {
				Name:        []string{"--log-spans"},
				Description: `Enable logging spans`,
			}, {
				Name:        []string{"--no-schema"},
				Description: `Disable all schema validation`,
			}, {
				Name:        []string{"--schema"},
				Description: `URL to the schema to be used for validation`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateHistory},
					Name:      "SCHEMA",
				}},
			}, {
				Name:        []string{"--schema-catalog"},
				Description: `URL to the schema catalog to be used for validation`,
				Args: []model.Arg{{
					Templates: []model.Template{model.TemplateHistory},
					Name:      "SCHEMA_CATALOG",
				}},
			}, {
				Name:        []string{"--verbose"},
				Description: `Enable verbose logging format`,
			}},
		}, {
			Name:        []string{"lsp"},
			Description: `Language server operations`,
			Options: []model.Option{{
				Name:        []string{"--colors"},
				Description: `Set color values for the output`,
				Args: []model.Arg{{
					Name:        "COLORS",
					Suggestions: []model.Suggestion{{Name: []string{`auto`}}, {Name: []string{`always`}}, {Name: []string{`never`}}},
				}},
			}, {
				Name:        []string{"--help", "-h"},
				Description: `Print help information for lsp`,
			}, {
				Name:        []string{"--log-spans"},
				Description: `Enable logging spans`,
			}, {
				Name:        []string{"--verbose"},
				Description: `Enable verbose logging format`,
			}},
			Subcommands: []model.Subcommand{{
				Name:        []string{"help"},
				Description: `Print help information for lsp`,
			}, {
				Name:        []string{"stdio"},
				Description: `Run the language server over the standard input and output`,
			}, {
				Name:        []string{"tcp"},
				Description: `Run the language server and listen on a TCP address`,
			}},
		}},
	}
}
