// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["ansible-config"] = model.Subcommand{
		Name:        []string{"ansible-config"},
		Description: `View ansible configuration`,
		Options: []model.Option{{
			Name:        []string{"--version"},
			Description: `Shows version number, config file location, module search path, module location, executable location and exit`,
		}, {
			Name:        []string{"--help", "-h"},
			Description: `Show help and exit`,
		}},
		Subcommands: []model.Subcommand{{
			Name:        []string{"list"},
			Description: `List and output available configs`,
			Args: []model.Arg{{
				Name:        "args",
				Description: `Specific plugin to target, requires type of plugin to be set`,
				IsOptional:  true,
				IsVariadic:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"--help", "-h"},
				Description: `Show help and exit`,
			}, {
				Name:        []string{"--verbose"},
				Description: `Verbose mode (-vvv for more, -vvvv to enable connection debugging)`,
				ExclusiveOn: []string{"-v"},
			}, {
				Name:        []string{"-v"},
				Description: `Verbose mode (-vvv for more, -vvvv to enable connection debugging)`,
				ExclusiveOn: []string{"--verbose"},
			}, {
				Name:        []string{"--config", "-c"},
				Description: `Path to configuration file, defaults to first file found in precedence`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFilepaths},
					Name:        "CONFIG_FILE",
					Description: `Path to configuration file`,
				}},
			}, {
				Name:        []string{"--type", "-t"},
				Description: `Filter down to a specific plugin type`,
				Args: []model.Arg{{
					Name:        "TYPE",
					Description: `Plugin type`,
					Suggestions: []model.Suggestion{{Name: []string{`all`}}, {Name: []string{`base`}}, {Name: []string{`become`}}, {Name: []string{`cache`}}, {Name: []string{`callback`}}, {Name: []string{`cliconf`}}, {Name: []string{`connection`}}, {Name: []string{`httpapi`}}, {Name: []string{`inventory`}}, {Name: []string{`lookup`}}, {Name: []string{`netconf`}}, {Name: []string{`shell`}}, {Name: []string{`vars`}}},
				}},
			}},
		}, {
			Name:        []string{"dump"},
			Description: `Shows the current settings, merges ansible.cfg if specified`,
			Args: []model.Arg{{
				Name:        "args",
				Description: `Specific plugin to target, requires type of plugin to be set`,
				IsOptional:  true,
				IsVariadic:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"--help", "-h"},
				Description: `Show help and exit`,
			}, {
				Name:        []string{"--verbose"},
				Description: `Verbose mode (-vvv for more, -vvvv to enable connection debugging)`,
				ExclusiveOn: []string{"-v"},
			}, {
				Name:        []string{"-v"},
				Description: `Verbose mode (-vvv for more, -vvvv to enable connection debugging)`,
				ExclusiveOn: []string{"--verbose"},
			}, {
				Name:        []string{"--only-changed", "--changed-only"},
				Description: `Only show configurations that have changed from the default`,
			}, {
				Name:        []string{"--config", "-c"},
				Description: `Path to configuration file, defaults to first file found in precedence`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFilepaths},
					Name:        "CONFIG_FILE",
					Description: `Path to configuration file`,
				}},
			}, {
				Name:        []string{"--type", "-t"},
				Description: `Filter down to a specific plugin type`,
				Args: []model.Arg{{
					Name:        "TYPE",
					Description: `Plugin type`,
					Suggestions: []model.Suggestion{{Name: []string{`all`}}, {Name: []string{`base`}}, {Name: []string{`become`}}, {Name: []string{`cache`}}, {Name: []string{`callback`}}, {Name: []string{`cliconf`}}, {Name: []string{`connection`}}, {Name: []string{`httpapi`}}, {Name: []string{`inventory`}}, {Name: []string{`lookup`}}, {Name: []string{`netconf`}}, {Name: []string{`shell`}}, {Name: []string{`vars`}}},
				}},
			}},
		}, {
			Name:        []string{"view"},
			Description: `Displays the current config file`,
			Args: []model.Arg{{
				Name:        "args",
				Description: `Specific plugin to target, requires type of plugin to be set`,
				IsOptional:  true,
				IsVariadic:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"--help", "-h"},
				Description: `Show help and exit`,
			}, {
				Name:        []string{"--verbose"},
				Description: `Verbose mode (-vvv for more, -vvvv to enable connection debugging)`,
				ExclusiveOn: []string{"-v"},
			}, {
				Name:        []string{"-v"},
				Description: `Verbose mode (-vvv for more, -vvvv to enable connection debugging)`,
				ExclusiveOn: []string{"--verbose"},
			}, {
				Name:        []string{"--config", "-c"},
				Description: `Path to configuration file, defaults to first file found in precedence`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFilepaths},
					Name:        "CONFIG_FILE",
					Description: `Path to configuration file`,
				}},
			}, {
				Name:        []string{"--type", "-t"},
				Description: `Filter down to a specific plugin type`,
				Args: []model.Arg{{
					Name:        "TYPE",
					Description: `Plugin type`,
					Suggestions: []model.Suggestion{{Name: []string{`all`}}, {Name: []string{`base`}}, {Name: []string{`become`}}, {Name: []string{`cache`}}, {Name: []string{`callback`}}, {Name: []string{`cliconf`}}, {Name: []string{`connection`}}, {Name: []string{`httpapi`}}, {Name: []string{`inventory`}}, {Name: []string{`lookup`}}, {Name: []string{`netconf`}}, {Name: []string{`shell`}}, {Name: []string{`vars`}}},
				}},
			}},
		}, {
			Name:        []string{"init"},
			Description: `Initializes a new config file (to stdout)`,
			Args: []model.Arg{{
				Name:        "args",
				Description: `Specific plugin to target, requires type of plugin to be set`,
				IsOptional:  true,
				IsVariadic:  true,
			}},
			Options: []model.Option{{
				Name:        []string{"--help", "-h"},
				Description: `Show help and exit`,
			}, {
				Name:        []string{"--verbose"},
				Description: `Verbose mode (-vvv for more, -vvvv to enable connection debugging)`,
				ExclusiveOn: []string{"-v"},
			}, {
				Name:        []string{"-v"},
				Description: `Verbose mode (-vvv for more, -vvvv to enable connection debugging)`,
				ExclusiveOn: []string{"--verbose"},
			}, {
				Name:        []string{"--disabled"},
				Description: `Prefixes all entries with a comment character to disable them`,
			}, {
				Name:        []string{"--format", "-f"},
				Description: `Output format for init`,
				Args: []model.Arg{{
					Name:        "FORMAT",
					Description: `Output format`,
					Suggestions: []model.Suggestion{{Name: []string{`ini`}}, {Name: []string{`env`}}, {Name: []string{`vars`}}},
					IsOptional:  true,
				}},
			}, {
				Name:        []string{"--config", "-c"},
				Description: `Path to configuration file, defaults to first file found in precedence`,
				Args: []model.Arg{{
					Templates:   []model.Template{model.TemplateFilepaths},
					Name:        "CONFIG_FILE",
					Description: `Path to configuration file`,
				}},
			}, {
				Name:        []string{"--type", "-t"},
				Description: `Filter down to a specific plugin type`,
				Args: []model.Arg{{
					Name:        "TYPE",
					Description: `Plugin type`,
					Suggestions: []model.Suggestion{{Name: []string{`all`}}, {Name: []string{`base`}}, {Name: []string{`become`}}, {Name: []string{`cache`}}, {Name: []string{`callback`}}, {Name: []string{`cliconf`}}, {Name: []string{`connection`}}, {Name: []string{`httpapi`}}, {Name: []string{`inventory`}}, {Name: []string{`lookup`}}, {Name: []string{`netconf`}}, {Name: []string{`shell`}}, {Name: []string{`vars`}}},
				}},
			}},
		}},
	}
}
