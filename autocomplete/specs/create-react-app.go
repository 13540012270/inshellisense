// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.

package specs

import (
	"github.com/cpendery/clac/autocomplete/model"
)

func init() {
	Specs["create-react-app"] = model.Subcommand{
		Name:        []string{"create-react-app"},
		Description: `Creates a new React project`,
		Args: []model.Arg{{
			Templates: []model.Template{model.TemplateFolders},
			Name:      "name",
		}},
		Options: []model.Option{{
			Name:        []string{"--template"},
			Description: `Specify a template for the created project (a custom template on npm (search for "cra-template-*"), a relative path, or an archive (.tgz or .tar.gz))`,
			Args: []model.Arg{{
				Name: "name or url",
			}},
		}, {
			Name:        []string{"--use-npm"},
			Description: `Use npm to install dependencies (default when Yarn is not installed)`,
			Args: []model.Arg{{
				Name: "boolean",
				Suggestions: []model.Suggestion{{
					Name: []string{`true`},
				}, {
					Name: []string{`false`},
				}},
				IsOptional: true,
			}},
		}, {
			Name:        []string{"--use-pnp"},
			Description: `Use Yarn Plug'n'Play to create the app`,
			Args: []model.Arg{{
				Name: "boolean",
				Suggestions: []model.Suggestion{{
					Name: []string{`true`},
				}, {
					Name: []string{`false`},
				}},
				IsOptional: true,
			}},
		}, {
			Name:        []string{"--scripts-version"},
			Description: `Use a non-standard version of react-scripts (a specific npm version or npm tag, a custom fork published on npm, a relative path, or an archive (.tgz or .tar.gz))`,
			Args: []model.Arg{{
				Name: "alternative package",
			}},
		}, {
			Name:        []string{"--verbose"},
			Description: `Print additional logs`,
		}, {
			Name:        []string{"-h", "--help"},
			Description: `Output usage information`,
		}, {
			Name:        []string{"-V", "--version"},
			Description: `Output the version number`,
		}},
	}
}
