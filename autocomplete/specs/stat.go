// Code generated by autocomplete/extract/extract.ts. DO NOT EDIT.
//
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

package specs

import (
	"github.com/microsoft/clac/autocomplete/model"
)

func init() {
	Specs["stat"] = model.Subcommand{
		Name:        []string{"stat"},
		Description: `Display file status`,
		Args: []model.Arg{{
			Templates:   []model.Template{model.TemplateFilepaths},
			Name:        "file",
			Description: `File(s) to stat`,
			IsVariadic:  true,
		}},
		Options: []model.Option{{
			Name:        []string{"-F"},
			Description: `As in ls(1), display a slash ('/') immediately after each pathname that is a directory, an asterisk ('*') after each that is executable, an at sign ('@') after each symbolic link, a percent sign ('%') after each whiteout, an equal sign ('=') after each socket, and a vertical bar ('|') after each that is a FIFO.  The use of -F implies -l`,
		}, {
			Name:        []string{"-L"},
			Description: `Use stat(2) instead of lstat(2). The information reported by stat will refer to the target of file, if file is a symbolic link, and not to file itself.  If the link is broken or the target does not exist, fall back on lstat(2) and report information about the link`,
		}, {
			Name:        []string{"-f"},
			Description: `Display information using the specified format; similar to printf(3) formats in that they start with %, are then followed by a sequence of formatting characters, and end in a character that selects the field of the struct stat which is to be formatted`,
			Args: []model.Arg{{
				Name: "format",
			}},
			ExclusiveOn: []string{"-l", "-r", "-s", "-x"},
		}, {
			Name:        []string{"-l"},
			Description: `Display output in 'ls -lT' format`,
			ExclusiveOn: []string{"-f", "-r", "-s", "-x"},
		}, {
			Name:        []string{"-n"},
			Description: `Do not force a newline to appear at the end of each piece of output`,
		}, {
			Name:        []string{"-q"},
			Description: `Suppress failure messages if calls to stat(2) or lstat(2) fail. When run as 'readlink', error messages are automatically suppressed`,
		}, {
			Name:        []string{"-r"},
			Description: `Display raw information. That is, for all the fields in the stat structure, display the raw, numerical value (for example, times in seconds since the epoch, etc.)`,
			ExclusiveOn: []string{"-f", "-l", "-s", "-x"},
		}, {
			Name:        []string{"-s"},
			Description: `Display information in 'shell output' format, suitable for initializing variables`,
			ExclusiveOn: []string{"-f", "-l", "-r", "-x"},
		}, {
			Name:        []string{"-t"},
			Description: `Display timestamps using the specified format. This format is passed directly to strftime(3)`,
			Args: []model.Arg{{
				Name: "timefmt",
			}},
		}, {
			Name:        []string{"-x"},
			Description: `Display information in a more verbose way as known from some Linux distributions`,
		}},
	}
}
